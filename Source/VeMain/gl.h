////////////////////////////////////////////////////////////////////////////
//
//  Venus Engine Header File.
//  Copyright (C), Venus Interactive Entertainment.2012
// -------------------------------------------------------------------------
//  File name:   gl.h
//  Version:     v1.00
//  Created:     by GlSpecLoader
//  Compilers:   Visual Studio.NET
//  Description: 
// -------------------------------------------------------------------------
//  History:
//  http://www.venusie.com
////////////////////////////////////////////////////////////////////////////

#pragma once

#ifdef VE_GL

extern "C"
{

#ifndef GL_VERSION_1_1
#define GL_VERSION_1_1 1
#endif

#ifndef GL_VERSION_1_2
#define GL_VERSION_1_2 1
#endif

#ifndef GL_VERSION_1_3
#define GL_VERSION_1_3 1
#endif

#ifndef GL_VERSION_1_4
#define GL_VERSION_1_4 1
#endif

#ifndef GL_VERSION_1_5
#define GL_VERSION_1_5 1
#endif

#ifndef GL_VERSION_2_0
#define GL_VERSION_2_0 1
#endif

#ifndef GL_VERSION_2_1
#define GL_VERSION_2_1 1
#endif

#ifndef GL_VERSION_3_0
#define GL_VERSION_3_0 1
#endif

#ifndef GL_VERSION_3_1
#define GL_VERSION_3_1 1
#endif

#ifndef GL_VERSION_3_2
#define GL_VERSION_3_2 1
#endif

#ifndef GL_ARB_imaging
#define GL_ARB_imaging 1
#endif

#ifndef GL_EXT_abgr
#define GL_EXT_abgr 1
#endif

#ifndef GL_EXT_blend_color
#define GL_EXT_blend_color 1
#endif

#ifndef GL_EXT_blend_logic_op
#define GL_EXT_blend_logic_op 1
#endif

#ifndef GL_EXT_blend_minmax
#define GL_EXT_blend_minmax 1
#endif

#ifndef GL_EXT_blend_subtract
#define GL_EXT_blend_subtract 1
#endif

#ifndef GL_EXT_cmyka
#define GL_EXT_cmyka 1
#endif

#ifndef GL_EXT_convolution
#define GL_EXT_convolution 1
#endif

#ifndef GL_EXT_copy_texture
#define GL_EXT_copy_texture 1
#endif

#ifndef GL_EXT_histogram
#define GL_EXT_histogram 1
#endif

#ifndef GL_EXT_packed_pixels
#define GL_EXT_packed_pixels 1
#endif

#ifndef GL_EXT_point_parameters
#define GL_EXT_point_parameters 1
#endif

#ifndef GL_EXT_polygon_offset
#define GL_EXT_polygon_offset 1
#endif

#ifndef GL_EXT_rescale_normal
#define GL_EXT_rescale_normal 1
#endif

#ifndef GL_EXT_shared_texture_palette
#define GL_EXT_shared_texture_palette 1
#endif

#ifndef GL_EXT_subtexture
#define GL_EXT_subtexture 1
#endif

#ifndef GL_EXT_texture
#define GL_EXT_texture 1
#endif

#ifndef GL_EXT_texture3D
#define GL_EXT_texture3D 1
#endif

#ifndef GL_EXT_texture_object
#define GL_EXT_texture_object 1
#endif

#ifndef GL_EXT_vertex_array
#define GL_EXT_vertex_array 1
#endif

#ifndef GL_SGIS_detail_texture
#define GL_SGIS_detail_texture 1
#endif

#ifndef GL_SGIS_fog_function
#define GL_SGIS_fog_function 1
#endif

#ifndef GL_SGIS_generate_mipmap
#define GL_SGIS_generate_mipmap 1
#endif

#ifndef GL_SGIS_multisample
#define GL_SGIS_multisample 1
#endif

#ifndef GL_SGIS_pixel_texture
#define GL_SGIS_pixel_texture 1
#endif

#ifndef GL_SGIS_point_line_texgen
#define GL_SGIS_point_line_texgen 1
#endif

#ifndef GL_SGIS_point_parameters
#define GL_SGIS_point_parameters 1
#endif

#ifndef GL_SGIS_sharpen_texture
#define GL_SGIS_sharpen_texture 1
#endif

#ifndef GL_SGIS_texture4D
#define GL_SGIS_texture4D 1
#endif

#ifndef GL_SGIS_texture_border_clamp
#define GL_SGIS_texture_border_clamp 1
#endif

#ifndef GL_SGIS_texture_edge_clamp
#define GL_SGIS_texture_edge_clamp 1
#endif

#ifndef GL_SGIS_texture_filter4
#define GL_SGIS_texture_filter4 1
#endif

#ifndef GL_SGIS_texture_lod
#define GL_SGIS_texture_lod 1
#endif

#ifndef GL_SGIS_texture_select
#define GL_SGIS_texture_select 1
#endif

#ifndef GL_SGIX_async
#define GL_SGIX_async 1
#endif

#ifndef GL_SGIX_async_histogram
#define GL_SGIX_async_histogram 1
#endif

#ifndef GL_SGIX_async_pixel
#define GL_SGIX_async_pixel 1
#endif

#ifndef GL_SGIX_blend_alpha_minmax
#define GL_SGIX_blend_alpha_minmax 1
#endif

#ifndef GL_SGIX_calligraphic_fragment
#define GL_SGIX_calligraphic_fragment 1
#endif

#ifndef GL_SGIX_clipmap
#define GL_SGIX_clipmap 1
#endif

#ifndef GL_SGIX_convolution_accuracy
#define GL_SGIX_convolution_accuracy 1
#endif

#ifndef GL_SGIX_depth_texture
#define GL_SGIX_depth_texture 1
#endif

#ifndef GL_SGIX_flush_raster
#define GL_SGIX_flush_raster 1
#endif

#ifndef GL_SGIX_fog_offset
#define GL_SGIX_fog_offset 1
#endif

#ifndef GL_SGIX_fragment_lighting
#define GL_SGIX_fragment_lighting 1
#endif

#ifndef GL_SGIX_framezoom
#define GL_SGIX_framezoom 1
#endif

#ifndef GL_SGIX_icc_texture
#define GL_SGIX_icc_texture 1
#endif

#ifndef GL_SGIX_impact_pixel_texture
#define GL_SGIX_impact_pixel_texture 1
#endif

#ifndef GL_SGIX_instruments
#define GL_SGIX_instruments 1
#endif

#ifndef GL_SGIX_interlace
#define GL_SGIX_interlace 1
#endif

#ifndef GL_SGIX_ir_instrument1
#define GL_SGIX_ir_instrument1 1
#endif

#ifndef GL_SGIX_list_priority
#define GL_SGIX_list_priority 1
#endif

#ifndef GL_SGIX_pixel_texture
#define GL_SGIX_pixel_texture 1
#endif

#ifndef GL_SGIX_pixel_tiles
#define GL_SGIX_pixel_tiles 1
#endif

#ifndef GL_SGIX_polynomial_ffd
#define GL_SGIX_polynomial_ffd 1
#endif

#ifndef GL_SGIX_reference_plane
#define GL_SGIX_reference_plane 1
#endif

#ifndef GL_SGIX_resample
#define GL_SGIX_resample 1
#endif

#ifndef GL_SGIX_scalebias_hint
#define GL_SGIX_scalebias_hint 1
#endif

#ifndef GL_SGIX_shadow
#define GL_SGIX_shadow 1
#endif

#ifndef GL_SGIX_shadow_ambient
#define GL_SGIX_shadow_ambient 1
#endif

#ifndef GL_SGIX_sprite
#define GL_SGIX_sprite 1
#endif

#ifndef GL_SGIX_subsample
#define GL_SGIX_subsample 1
#endif

#ifndef GL_SGIX_tag_sample_buffer
#define GL_SGIX_tag_sample_buffer 1
#endif

#ifndef GL_SGIX_texture_add_env
#define GL_SGIX_texture_add_env 1
#endif

#ifndef GL_SGIX_texture_coordinate_clamp
#define GL_SGIX_texture_coordinate_clamp 1
#endif

#ifndef GL_SGIX_texture_lod_bias
#define GL_SGIX_texture_lod_bias 1
#endif

#ifndef GL_SGIX_texture_multi_buffer
#define GL_SGIX_texture_multi_buffer 1
#endif

#ifndef GL_SGIX_texture_scale_bias
#define GL_SGIX_texture_scale_bias 1
#endif

#ifndef GL_SGIX_vertex_preclip
#define GL_SGIX_vertex_preclip 1
#endif

#ifndef GL_SGIX_ycrcb
#define GL_SGIX_ycrcb 1
#endif

#ifndef GL_SGI_color_matrix
#define GL_SGI_color_matrix 1
#endif

#ifndef GL_SGI_color_table
#define GL_SGI_color_table 1
#endif

#ifndef GL_SGI_texture_color_table
#define GL_SGI_texture_color_table 1
#endif

#ifndef GL_CURRENT_BIT
#define GL_CURRENT_BIT 0x00000001
#endif

#ifndef GL_POINT_BIT
#define GL_POINT_BIT 0x00000002
#endif

#ifndef GL_LINE_BIT
#define GL_LINE_BIT 0x00000004
#endif

#ifndef GL_POLYGON_BIT
#define GL_POLYGON_BIT 0x00000008
#endif

#ifndef GL_POLYGON_STIPPLE_BIT
#define GL_POLYGON_STIPPLE_BIT 0x00000010
#endif

#ifndef GL_PIXEL_MODE_BIT
#define GL_PIXEL_MODE_BIT 0x00000020
#endif

#ifndef GL_LIGHTING_BIT
#define GL_LIGHTING_BIT 0x00000040
#endif

#ifndef GL_FOG_BIT
#define GL_FOG_BIT 0x00000080
#endif

#ifndef GL_DEPTH_BUFFER_BIT
#define GL_DEPTH_BUFFER_BIT 0x00000100
#endif

#ifndef GL_ACCUM_BUFFER_BIT
#define GL_ACCUM_BUFFER_BIT 0x00000200
#endif

#ifndef GL_STENCIL_BUFFER_BIT
#define GL_STENCIL_BUFFER_BIT 0x00000400
#endif

#ifndef GL_VIEWPORT_BIT
#define GL_VIEWPORT_BIT 0x00000800
#endif

#ifndef GL_TRANSFORM_BIT
#define GL_TRANSFORM_BIT 0x00001000
#endif

#ifndef GL_ENABLE_BIT
#define GL_ENABLE_BIT 0x00002000
#endif

#ifndef GL_COLOR_BUFFER_BIT
#define GL_COLOR_BUFFER_BIT 0x00004000
#endif

#ifndef GL_HINT_BIT
#define GL_HINT_BIT 0x00008000
#endif

#ifndef GL_EVAL_BIT
#define GL_EVAL_BIT 0x00010000
#endif

#ifndef GL_LIST_BIT
#define GL_LIST_BIT 0x00020000
#endif

#ifndef GL_TEXTURE_BIT
#define GL_TEXTURE_BIT 0x00040000
#endif

#ifndef GL_SCISSOR_BIT
#define GL_SCISSOR_BIT 0x00080000
#endif

#ifndef GL_ALL_ATTRIB_BITS
#define GL_ALL_ATTRIB_BITS 0xFFFFFFFF
#endif

#ifndef GL_MULTISAMPLE_BIT
#define GL_MULTISAMPLE_BIT 0x20000000
#endif

#ifndef GL_MULTISAMPLE_BIT_ARB
#define GL_MULTISAMPLE_BIT_ARB 0x20000000
#endif

#ifndef GL_MULTISAMPLE_BIT_EXT
#define GL_MULTISAMPLE_BIT_EXT 0x20000000
#endif

#ifndef GL_MULTISAMPLE_BIT_3DFX
#define GL_MULTISAMPLE_BIT_3DFX 0x20000000
#endif

#ifndef GL_CLIENT_PIXEL_STORE_BIT
#define GL_CLIENT_PIXEL_STORE_BIT 0x00000001
#endif

#ifndef GL_CLIENT_VERTEX_ARRAY_BIT
#define GL_CLIENT_VERTEX_ARRAY_BIT 0x00000002
#endif

#ifndef GL_CLIENT_ALL_ATTRIB_BITS
#define GL_CLIENT_ALL_ATTRIB_BITS 0xFFFFFFFF
#endif

#ifndef GL_MAP_READ_BIT
#define GL_MAP_READ_BIT 0x0001
#endif

#ifndef GL_MAP_WRITE_BIT
#define GL_MAP_WRITE_BIT 0x0002
#endif

#ifndef GL_MAP_INVALIDATE_RANGE_BIT
#define GL_MAP_INVALIDATE_RANGE_BIT 0x0004
#endif

#ifndef GL_MAP_INVALIDATE_BUFFER_BIT
#define GL_MAP_INVALIDATE_BUFFER_BIT 0x0008
#endif

#ifndef GL_MAP_FLUSH_EXPLICIT_BIT
#define GL_MAP_FLUSH_EXPLICIT_BIT 0x0010
#endif

#ifndef GL_MAP_UNSYNCHRONIZED_BIT
#define GL_MAP_UNSYNCHRONIZED_BIT 0x0020
#endif

#ifndef GL_MAP_READ_BIT_EXT
#define GL_MAP_READ_BIT_EXT 0x0001
#endif

#ifndef GL_MAP_WRITE_BIT_EXT
#define GL_MAP_WRITE_BIT_EXT 0x0002
#endif

#ifndef GL_MAP_INVALIDATE_RANGE_BIT_EXT
#define GL_MAP_INVALIDATE_RANGE_BIT_EXT 0x0004
#endif

#ifndef GL_MAP_INVALIDATE_BUFFER_BIT_EXT
#define GL_MAP_INVALIDATE_BUFFER_BIT_EXT 0x0008
#endif

#ifndef GL_MAP_FLUSH_EXPLICIT_BIT_EXT
#define GL_MAP_FLUSH_EXPLICIT_BIT_EXT 0x0010
#endif

#ifndef GL_MAP_UNSYNCHRONIZED_BIT_EXT
#define GL_MAP_UNSYNCHRONIZED_BIT_EXT 0x0020
#endif

#ifndef GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT
#define GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT 0x00000001
#endif

#ifndef GL_CONTEXT_FLAG_DEBUG_BIT
#define GL_CONTEXT_FLAG_DEBUG_BIT 0x00000002
#endif

#ifndef GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB
#define GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB 0x00000004
#endif

#ifndef GL_VERTEX_SHADER_BIT
#define GL_VERTEX_SHADER_BIT 0x00000001
#endif

#ifndef GL_FRAGMENT_SHADER_BIT
#define GL_FRAGMENT_SHADER_BIT 0x00000002
#endif

#ifndef GL_GEOMETRY_SHADER_BIT
#define GL_GEOMETRY_SHADER_BIT 0x00000004
#endif

#ifndef GL_TESS_CONTROL_SHADER_BIT
#define GL_TESS_CONTROL_SHADER_BIT 0x00000008
#endif

#ifndef GL_TESS_EVALUATION_SHADER_BIT
#define GL_TESS_EVALUATION_SHADER_BIT 0x00000010
#endif

#ifndef GL_ALL_SHADER_BITS
#define GL_ALL_SHADER_BITS 0xFFFFFFFF
#endif

#ifndef GL_COMPUTE_SHADER_BIT
#define GL_COMPUTE_SHADER_BIT 0x00000020
#endif

#ifndef GL_VERTEX_SHADER_BIT_EXT
#define GL_VERTEX_SHADER_BIT_EXT 0x00000001
#endif

#ifndef GL_FRAGMENT_SHADER_BIT_EXT
#define GL_FRAGMENT_SHADER_BIT_EXT 0x00000002
#endif

#ifndef GL_ALL_SHADER_BITS_EXT
#define GL_ALL_SHADER_BITS_EXT 0xFFFFFFFF
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT_EXT
#define GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT_EXT 0x00000001
#endif

#ifndef GL_ELEMENT_ARRAY_BARRIER_BIT_EXT
#define GL_ELEMENT_ARRAY_BARRIER_BIT_EXT 0x00000002
#endif

#ifndef GL_UNIFORM_BARRIER_BIT_EXT
#define GL_UNIFORM_BARRIER_BIT_EXT 0x00000004
#endif

#ifndef GL_TEXTURE_FETCH_BARRIER_BIT_EXT
#define GL_TEXTURE_FETCH_BARRIER_BIT_EXT 0x00000008
#endif

#ifndef GL_SHADER_IMAGE_ACCESS_BARRIER_BIT_EXT
#define GL_SHADER_IMAGE_ACCESS_BARRIER_BIT_EXT 0x00000020
#endif

#ifndef GL_COMMAND_BARRIER_BIT_EXT
#define GL_COMMAND_BARRIER_BIT_EXT 0x00000040
#endif

#ifndef GL_PIXEL_BUFFER_BARRIER_BIT_EXT
#define GL_PIXEL_BUFFER_BARRIER_BIT_EXT 0x00000080
#endif

#ifndef GL_TEXTURE_UPDATE_BARRIER_BIT_EXT
#define GL_TEXTURE_UPDATE_BARRIER_BIT_EXT 0x00000100
#endif

#ifndef GL_BUFFER_UPDATE_BARRIER_BIT_EXT
#define GL_BUFFER_UPDATE_BARRIER_BIT_EXT 0x00000200
#endif

#ifndef GL_FRAMEBUFFER_BARRIER_BIT_EXT
#define GL_FRAMEBUFFER_BARRIER_BIT_EXT 0x00000400
#endif

#ifndef GL_TRANSFORM_FEEDBACK_BARRIER_BIT_EXT
#define GL_TRANSFORM_FEEDBACK_BARRIER_BIT_EXT 0x00000800
#endif

#ifndef GL_ATOMIC_COUNTER_BARRIER_BIT_EXT
#define GL_ATOMIC_COUNTER_BARRIER_BIT_EXT 0x00001000
#endif

#ifndef GL_ALL_BARRIER_BITS_EXT
#define GL_ALL_BARRIER_BITS_EXT 0xFFFFFFFF
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT
#define GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT 0x00000001
#endif

#ifndef GL_ELEMENT_ARRAY_BARRIER_BIT
#define GL_ELEMENT_ARRAY_BARRIER_BIT 0x00000002
#endif

#ifndef GL_UNIFORM_BARRIER_BIT
#define GL_UNIFORM_BARRIER_BIT 0x00000004
#endif

#ifndef GL_TEXTURE_FETCH_BARRIER_BIT
#define GL_TEXTURE_FETCH_BARRIER_BIT 0x00000008
#endif

#ifndef GL_SHADER_IMAGE_ACCESS_BARRIER_BIT
#define GL_SHADER_IMAGE_ACCESS_BARRIER_BIT 0x00000020
#endif

#ifndef GL_COMMAND_BARRIER_BIT
#define GL_COMMAND_BARRIER_BIT 0x00000040
#endif

#ifndef GL_PIXEL_BUFFER_BARRIER_BIT
#define GL_PIXEL_BUFFER_BARRIER_BIT 0x00000080
#endif

#ifndef GL_TEXTURE_UPDATE_BARRIER_BIT
#define GL_TEXTURE_UPDATE_BARRIER_BIT 0x00000100
#endif

#ifndef GL_BUFFER_UPDATE_BARRIER_BIT
#define GL_BUFFER_UPDATE_BARRIER_BIT 0x00000200
#endif

#ifndef GL_FRAMEBUFFER_BARRIER_BIT
#define GL_FRAMEBUFFER_BARRIER_BIT 0x00000400
#endif

#ifndef GL_TRANSFORM_FEEDBACK_BARRIER_BIT
#define GL_TRANSFORM_FEEDBACK_BARRIER_BIT 0x00000800
#endif

#ifndef GL_ATOMIC_COUNTER_BARRIER_BIT
#define GL_ATOMIC_COUNTER_BARRIER_BIT 0x00001000
#endif

#ifndef GL_ALL_BARRIER_BITS
#define GL_ALL_BARRIER_BITS 0xFFFFFFFF
#endif

#ifndef GL_SHADER_STORAGE_BARRIER_BIT
#define GL_SHADER_STORAGE_BARRIER_BIT 0x00002000
#endif

#ifndef GL_FALSE
#define GL_FALSE 0
#endif

#ifndef GL_TRUE
#define GL_TRUE 1
#endif

#ifndef GL_POINTS
#define GL_POINTS 0x0000
#endif

#ifndef GL_LINES
#define GL_LINES 0x0001
#endif

#ifndef GL_LINE_LOOP
#define GL_LINE_LOOP 0x0002
#endif

#ifndef GL_LINE_STRIP
#define GL_LINE_STRIP 0x0003
#endif

#ifndef GL_TRIANGLES
#define GL_TRIANGLES 0x0004
#endif

#ifndef GL_TRIANGLE_STRIP
#define GL_TRIANGLE_STRIP 0x0005
#endif

#ifndef GL_TRIANGLE_FAN
#define GL_TRIANGLE_FAN 0x0006
#endif

#ifndef GL_QUADS
#define GL_QUADS 0x0007
#endif

#ifndef GL_QUAD_STRIP
#define GL_QUAD_STRIP 0x0008
#endif

#ifndef GL_POLYGON
#define GL_POLYGON 0x0009
#endif

#ifndef GL_LINES_ADJACENCY
#define GL_LINES_ADJACENCY 0x000A
#endif

#ifndef GL_LINE_STRIP_ADJACENCY
#define GL_LINE_STRIP_ADJACENCY 0x000B
#endif

#ifndef GL_TRIANGLES_ADJACENCY
#define GL_TRIANGLES_ADJACENCY 0x000C
#endif

#ifndef GL_TRIANGLE_STRIP_ADJACENCY
#define GL_TRIANGLE_STRIP_ADJACENCY 0x000D
#endif

#ifndef GL_LINES_ADJACENCY_ARB
#define GL_LINES_ADJACENCY_ARB 0x000A
#endif

#ifndef GL_LINE_STRIP_ADJACENCY_ARB
#define GL_LINE_STRIP_ADJACENCY_ARB 0x000B
#endif

#ifndef GL_TRIANGLES_ADJACENCY_ARB
#define GL_TRIANGLES_ADJACENCY_ARB 0x000C
#endif

#ifndef GL_TRIANGLE_STRIP_ADJACENCY_ARB
#define GL_TRIANGLE_STRIP_ADJACENCY_ARB 0x000D
#endif

#ifndef GL_LINES_ADJACENCY_EXT
#define GL_LINES_ADJACENCY_EXT 0x000A
#endif

#ifndef GL_LINE_STRIP_ADJACENCY_EXT
#define GL_LINE_STRIP_ADJACENCY_EXT 0x000B
#endif

#ifndef GL_TRIANGLES_ADJACENCY_EXT
#define GL_TRIANGLES_ADJACENCY_EXT 0x000C
#endif

#ifndef GL_TRIANGLE_STRIP_ADJACENCY_EXT
#define GL_TRIANGLE_STRIP_ADJACENCY_EXT 0x000D
#endif

#ifndef GL_PATCHES
#define GL_PATCHES 0x000E
#endif

#ifndef GL_ACCUM
#define GL_ACCUM 0x0100
#endif

#ifndef GL_LOAD
#define GL_LOAD 0x0101
#endif

#ifndef GL_RETURN
#define GL_RETURN 0x0102
#endif

#ifndef GL_MULT
#define GL_MULT 0x0103
#endif

#ifndef GL_ADD
#define GL_ADD 0x0104
#endif

#ifndef GL_NEVER
#define GL_NEVER 0x0200
#endif

#ifndef GL_LESS
#define GL_LESS 0x0201
#endif

#ifndef GL_EQUAL
#define GL_EQUAL 0x0202
#endif

#ifndef GL_LEQUAL
#define GL_LEQUAL 0x0203
#endif

#ifndef GL_GREATER
#define GL_GREATER 0x0204
#endif

#ifndef GL_NOTEQUAL
#define GL_NOTEQUAL 0x0205
#endif

#ifndef GL_GEQUAL
#define GL_GEQUAL 0x0206
#endif

#ifndef GL_ALWAYS
#define GL_ALWAYS 0x0207
#endif

#ifndef GL_ZERO
#define GL_ZERO 0
#endif

#ifndef GL_ONE
#define GL_ONE 1
#endif

#ifndef GL_SRC_COLOR
#define GL_SRC_COLOR 0x0300
#endif

#ifndef GL_ONE_MINUS_SRC_COLOR
#define GL_ONE_MINUS_SRC_COLOR 0x0301
#endif

#ifndef GL_SRC_ALPHA
#define GL_SRC_ALPHA 0x0302
#endif

#ifndef GL_ONE_MINUS_SRC_ALPHA
#define GL_ONE_MINUS_SRC_ALPHA 0x0303
#endif

#ifndef GL_DST_ALPHA
#define GL_DST_ALPHA 0x0304
#endif

#ifndef GL_ONE_MINUS_DST_ALPHA
#define GL_ONE_MINUS_DST_ALPHA 0x0305
#endif

#ifndef GL_DST_COLOR
#define GL_DST_COLOR 0x0306
#endif

#ifndef GL_ONE_MINUS_DST_COLOR
#define GL_ONE_MINUS_DST_COLOR 0x0307
#endif

#ifndef GL_SRC_ALPHA_SATURATE
#define GL_SRC_ALPHA_SATURATE 0x0308
#endif

#ifndef GL_NONE
#define GL_NONE 0
#endif

#ifndef GL_FRONT_LEFT
#define GL_FRONT_LEFT 0x0400
#endif

#ifndef GL_FRONT_RIGHT
#define GL_FRONT_RIGHT 0x0401
#endif

#ifndef GL_BACK_LEFT
#define GL_BACK_LEFT 0x0402
#endif

#ifndef GL_BACK_RIGHT
#define GL_BACK_RIGHT 0x0403
#endif

#ifndef GL_FRONT
#define GL_FRONT 0x0404
#endif

#ifndef GL_BACK
#define GL_BACK 0x0405
#endif

#ifndef GL_LEFT
#define GL_LEFT 0x0406
#endif

#ifndef GL_RIGHT
#define GL_RIGHT 0x0407
#endif

#ifndef GL_FRONT_AND_BACK
#define GL_FRONT_AND_BACK 0x0408
#endif

#ifndef GL_AUX0
#define GL_AUX0 0x0409
#endif

#ifndef GL_AUX1
#define GL_AUX1 0x040A
#endif

#ifndef GL_AUX2
#define GL_AUX2 0x040B
#endif

#ifndef GL_AUX3
#define GL_AUX3 0x040C
#endif

#ifndef GL_NO_ERROR
#define GL_NO_ERROR 0
#endif

#ifndef GL_INVALID_ENUM
#define GL_INVALID_ENUM 0x0500
#endif

#ifndef GL_INVALID_VALUE
#define GL_INVALID_VALUE 0x0501
#endif

#ifndef GL_INVALID_OPERATION
#define GL_INVALID_OPERATION 0x0502
#endif

#ifndef GL_STACK_OVERFLOW
#define GL_STACK_OVERFLOW 0x0503
#endif

#ifndef GL_STACK_UNDERFLOW
#define GL_STACK_UNDERFLOW 0x0504
#endif

#ifndef GL_OUT_OF_MEMORY
#define GL_OUT_OF_MEMORY 0x0505
#endif

#ifndef GL_INVALID_FRAMEBUFFER_OPERATION
#define GL_INVALID_FRAMEBUFFER_OPERATION 0x0506
#endif

#ifndef GL_INVALID_FRAMEBUFFER_OPERATION_EXT
#define GL_INVALID_FRAMEBUFFER_OPERATION_EXT 0x0506
#endif

#ifndef GL_INVALID_FRAMEBUFFER_OPERATION_OES
#define GL_INVALID_FRAMEBUFFER_OPERATION_OES 0x0506
#endif

#ifndef GL_2D
#define GL_2D 0x0600
#endif

#ifndef GL_3D
#define GL_3D 0x0601
#endif

#ifndef GL_3D_COLOR
#define GL_3D_COLOR 0x0602
#endif

#ifndef GL_3D_COLOR_TEXTURE
#define GL_3D_COLOR_TEXTURE 0x0603
#endif

#ifndef GL_4D_COLOR_TEXTURE
#define GL_4D_COLOR_TEXTURE 0x0604
#endif

#ifndef GL_PASS_THROUGH_TOKEN
#define GL_PASS_THROUGH_TOKEN 0x0700
#endif

#ifndef GL_POINT_TOKEN
#define GL_POINT_TOKEN 0x0701
#endif

#ifndef GL_LINE_TOKEN
#define GL_LINE_TOKEN 0x0702
#endif

#ifndef GL_POLYGON_TOKEN
#define GL_POLYGON_TOKEN 0x0703
#endif

#ifndef GL_BITMAP_TOKEN
#define GL_BITMAP_TOKEN 0x0704
#endif

#ifndef GL_DRAW_PIXEL_TOKEN
#define GL_DRAW_PIXEL_TOKEN 0x0705
#endif

#ifndef GL_COPY_PIXEL_TOKEN
#define GL_COPY_PIXEL_TOKEN 0x0706
#endif

#ifndef GL_LINE_RESET_TOKEN
#define GL_LINE_RESET_TOKEN 0x0707
#endif

#ifndef GL_TEXTURE_DEFORMATION_BIT_SGIX
#define GL_TEXTURE_DEFORMATION_BIT_SGIX 0x00000001
#endif

#ifndef GL_GEOMETRY_DEFORMATION_BIT_SGIX
#define GL_GEOMETRY_DEFORMATION_BIT_SGIX 0x00000002
#endif

#ifndef GL_EXP
#define GL_EXP 0x0800
#endif

#ifndef GL_EXP2
#define GL_EXP2 0x0801
#endif

#ifndef GL_CW
#define GL_CW 0x0900
#endif

#ifndef GL_CCW
#define GL_CCW 0x0901
#endif

#ifndef GL_COEFF
#define GL_COEFF 0x0A00
#endif

#ifndef GL_ORDER
#define GL_ORDER 0x0A01
#endif

#ifndef GL_DOMAIN
#define GL_DOMAIN 0x0A02
#endif

#ifndef GL_PIXEL_MAP_I_TO_I
#define GL_PIXEL_MAP_I_TO_I 0x0C70
#endif

#ifndef GL_PIXEL_MAP_S_TO_S
#define GL_PIXEL_MAP_S_TO_S 0x0C71
#endif

#ifndef GL_PIXEL_MAP_I_TO_R
#define GL_PIXEL_MAP_I_TO_R 0x0C72
#endif

#ifndef GL_PIXEL_MAP_I_TO_G
#define GL_PIXEL_MAP_I_TO_G 0x0C73
#endif

#ifndef GL_PIXEL_MAP_I_TO_B
#define GL_PIXEL_MAP_I_TO_B 0x0C74
#endif

#ifndef GL_PIXEL_MAP_I_TO_A
#define GL_PIXEL_MAP_I_TO_A 0x0C75
#endif

#ifndef GL_PIXEL_MAP_R_TO_R
#define GL_PIXEL_MAP_R_TO_R 0x0C76
#endif

#ifndef GL_PIXEL_MAP_G_TO_G
#define GL_PIXEL_MAP_G_TO_G 0x0C77
#endif

#ifndef GL_PIXEL_MAP_B_TO_B
#define GL_PIXEL_MAP_B_TO_B 0x0C78
#endif

#ifndef GL_PIXEL_MAP_A_TO_A
#define GL_PIXEL_MAP_A_TO_A 0x0C79
#endif

#ifndef GL_VERTEX_ARRAY_POINTER
#define GL_VERTEX_ARRAY_POINTER 0x808E
#endif

#ifndef GL_NORMAL_ARRAY_POINTER
#define GL_NORMAL_ARRAY_POINTER 0x808F
#endif

#ifndef GL_COLOR_ARRAY_POINTER
#define GL_COLOR_ARRAY_POINTER 0x8090
#endif

#ifndef GL_INDEX_ARRAY_POINTER
#define GL_INDEX_ARRAY_POINTER 0x8091
#endif

#ifndef GL_TEXTURE_COORD_ARRAY_POINTER
#define GL_TEXTURE_COORD_ARRAY_POINTER 0x8092
#endif

#ifndef GL_EDGE_FLAG_ARRAY_POINTER
#define GL_EDGE_FLAG_ARRAY_POINTER 0x8093
#endif

#ifndef GL_FEEDBACK_BUFFER_POINTER
#define GL_FEEDBACK_BUFFER_POINTER 0x0DF0
#endif

#ifndef GL_SELECTION_BUFFER_POINTER
#define GL_SELECTION_BUFFER_POINTER 0x0DF3
#endif

#ifndef GL_CURRENT_COLOR
#define GL_CURRENT_COLOR 0x0B00
#endif

#ifndef GL_CURRENT_INDEX
#define GL_CURRENT_INDEX 0x0B01
#endif

#ifndef GL_CURRENT_NORMAL
#define GL_CURRENT_NORMAL 0x0B02
#endif

#ifndef GL_CURRENT_TEXTURE_COORDS
#define GL_CURRENT_TEXTURE_COORDS 0x0B03
#endif

#ifndef GL_CURRENT_RASTER_COLOR
#define GL_CURRENT_RASTER_COLOR 0x0B04
#endif

#ifndef GL_CURRENT_RASTER_INDEX
#define GL_CURRENT_RASTER_INDEX 0x0B05
#endif

#ifndef GL_CURRENT_RASTER_TEXTURE_COORDS
#define GL_CURRENT_RASTER_TEXTURE_COORDS 0x0B06
#endif

#ifndef GL_CURRENT_RASTER_POSITION
#define GL_CURRENT_RASTER_POSITION 0x0B07
#endif

#ifndef GL_CURRENT_RASTER_POSITION_VALID
#define GL_CURRENT_RASTER_POSITION_VALID 0x0B08
#endif

#ifndef GL_CURRENT_RASTER_DISTANCE
#define GL_CURRENT_RASTER_DISTANCE 0x0B09
#endif

#ifndef GL_ALPHA_TEST_QCOM
#define GL_ALPHA_TEST_QCOM 0x0BC0
#endif

#ifndef GL_ALPHA_TEST_FUNC_QCOM
#define GL_ALPHA_TEST_FUNC_QCOM 0x0BC1
#endif

#ifndef GL_ALPHA_TEST_REF_QCOM
#define GL_ALPHA_TEST_REF_QCOM 0x0BC2
#endif

#ifndef GL_DRAW_BUFFER_EXT
#define GL_DRAW_BUFFER_EXT 0x0C01
#endif

#ifndef GL_READ_BUFFER_EXT
#define GL_READ_BUFFER_EXT 0x0C02
#endif

#ifndef GL_READ_BUFFER_NV
#define GL_READ_BUFFER_NV 0x0C02
#endif

#ifndef GL_TEXTURE_WIDTH
#define GL_TEXTURE_WIDTH 0x1000
#endif

#ifndef GL_TEXTURE_HEIGHT
#define GL_TEXTURE_HEIGHT 0x1001
#endif

#ifndef GL_TEXTURE_INTERNAL_FORMAT
#define GL_TEXTURE_INTERNAL_FORMAT 0x1003
#endif

#ifndef GL_TEXTURE_COMPONENTS
#define GL_TEXTURE_COMPONENTS 0x1003
#endif

#ifndef GL_TEXTURE_BORDER_COLOR
#define GL_TEXTURE_BORDER_COLOR 0x1004
#endif

#ifndef GL_TEXTURE_BORDER
#define GL_TEXTURE_BORDER 0x1005
#endif

#ifndef GL_TEXTURE_RED_SIZE
#define GL_TEXTURE_RED_SIZE 0x805C
#endif

#ifndef GL_TEXTURE_GREEN_SIZE
#define GL_TEXTURE_GREEN_SIZE 0x805D
#endif

#ifndef GL_TEXTURE_BLUE_SIZE
#define GL_TEXTURE_BLUE_SIZE 0x805E
#endif

#ifndef GL_TEXTURE_ALPHA_SIZE
#define GL_TEXTURE_ALPHA_SIZE 0x805F
#endif

#ifndef GL_TEXTURE_LUMINANCE_SIZE
#define GL_TEXTURE_LUMINANCE_SIZE 0x8060
#endif

#ifndef GL_TEXTURE_INTENSITY_SIZE
#define GL_TEXTURE_INTENSITY_SIZE 0x8061
#endif

#ifndef GL_TEXTURE_PRIORITY
#define GL_TEXTURE_PRIORITY 0x8066
#endif

#ifndef GL_TEXTURE_RESIDENT
#define GL_TEXTURE_RESIDENT 0x8067
#endif

#ifndef GL_DONT_CARE
#define GL_DONT_CARE 0x1100
#endif

#ifndef GL_FASTEST
#define GL_FASTEST 0x1101
#endif

#ifndef GL_NICEST
#define GL_NICEST 0x1102
#endif

#ifndef GL_AMBIENT
#define GL_AMBIENT 0x1200
#endif

#ifndef GL_DIFFUSE
#define GL_DIFFUSE 0x1201
#endif

#ifndef GL_SPECULAR
#define GL_SPECULAR 0x1202
#endif

#ifndef GL_POSITION
#define GL_POSITION 0x1203
#endif

#ifndef GL_SPOT_DIRECTION
#define GL_SPOT_DIRECTION 0x1204
#endif

#ifndef GL_SPOT_EXPONENT
#define GL_SPOT_EXPONENT 0x1205
#endif

#ifndef GL_SPOT_CUTOFF
#define GL_SPOT_CUTOFF 0x1206
#endif

#ifndef GL_CONSTANT_ATTENUATION
#define GL_CONSTANT_ATTENUATION 0x1207
#endif

#ifndef GL_LINEAR_ATTENUATION
#define GL_LINEAR_ATTENUATION 0x1208
#endif

#ifndef GL_QUADRATIC_ATTENUATION
#define GL_QUADRATIC_ATTENUATION 0x1209
#endif

#ifndef GL_COMPILE
#define GL_COMPILE 0x1300
#endif

#ifndef GL_COMPILE_AND_EXECUTE
#define GL_COMPILE_AND_EXECUTE 0x1301
#endif

#ifndef GL_BYTE
#define GL_BYTE 0x1400
#endif

#ifndef GL_UNSIGNED_BYTE
#define GL_UNSIGNED_BYTE 0x1401
#endif

#ifndef GL_SHORT
#define GL_SHORT 0x1402
#endif

#ifndef GL_UNSIGNED_SHORT
#define GL_UNSIGNED_SHORT 0x1403
#endif

#ifndef GL_INT
#define GL_INT 0x1404
#endif

#ifndef GL_UNSIGNED_INT
#define GL_UNSIGNED_INT 0x1405
#endif

#ifndef GL_FLOAT
#define GL_FLOAT 0x1406
#endif

#ifndef GL_2_BYTES
#define GL_2_BYTES 0x1407
#endif

#ifndef GL_3_BYTES
#define GL_3_BYTES 0x1408
#endif

#ifndef GL_4_BYTES
#define GL_4_BYTES 0x1409
#endif

#ifndef GL_DOUBLE
#define GL_DOUBLE 0x140A
#endif

#ifndef GL_DOUBLE_EXT
#define GL_DOUBLE_EXT 0x140A
#endif

#ifndef GL_HALF_FLOAT
#define GL_HALF_FLOAT 0x140B
#endif

#ifndef GL_HALF_FLOAT_ARB
#define GL_HALF_FLOAT_ARB 0x140B
#endif

#ifndef GL_HALF_FLOAT_NV
#define GL_HALF_FLOAT_NV 0x140B
#endif

#ifndef GL_HALF_APPLE
#define GL_HALF_APPLE 0x140B
#endif

#ifndef GL_FIXED
#define GL_FIXED 0x140C
#endif

#ifndef GL_FIXED_OES
#define GL_FIXED_OES 0x140C
#endif

#ifndef GL_INT64_NV
#define GL_INT64_NV 0x140E
#endif

#ifndef GL_UNSIGNED_INT64_NV
#define GL_UNSIGNED_INT64_NV 0x140F
#endif

#ifndef GL_CLEAR
#define GL_CLEAR 0x1500
#endif

#ifndef GL_AND
#define GL_AND 0x1501
#endif

#ifndef GL_AND_REVERSE
#define GL_AND_REVERSE 0x1502
#endif

#ifndef GL_COPY
#define GL_COPY 0x1503
#endif

#ifndef GL_AND_INVERTED
#define GL_AND_INVERTED 0x1504
#endif

#ifndef GL_NOOP
#define GL_NOOP 0x1505
#endif

#ifndef GL_XOR
#define GL_XOR 0x1506
#endif

#ifndef GL_OR
#define GL_OR 0x1507
#endif

#ifndef GL_NOR
#define GL_NOR 0x1508
#endif

#ifndef GL_EQUIV
#define GL_EQUIV 0x1509
#endif

#ifndef GL_INVERT
#define GL_INVERT 0x150A
#endif

#ifndef GL_OR_REVERSE
#define GL_OR_REVERSE 0x150B
#endif

#ifndef GL_COPY_INVERTED
#define GL_COPY_INVERTED 0x150C
#endif

#ifndef GL_OR_INVERTED
#define GL_OR_INVERTED 0x150D
#endif

#ifndef GL_NAND
#define GL_NAND 0x150E
#endif

#ifndef GL_SET
#define GL_SET 0x150F
#endif

#ifndef GL_EMISSION
#define GL_EMISSION 0x1600
#endif

#ifndef GL_SHININESS
#define GL_SHININESS 0x1601
#endif

#ifndef GL_AMBIENT_AND_DIFFUSE
#define GL_AMBIENT_AND_DIFFUSE 0x1602
#endif

#ifndef GL_COLOR_INDEXES
#define GL_COLOR_INDEXES 0x1603
#endif

#ifndef GL_MODELVIEW
#define GL_MODELVIEW 0x1700
#endif

#ifndef GL_PROJECTION
#define GL_PROJECTION 0x1701
#endif

#ifndef GL_TEXTURE
#define GL_TEXTURE 0x1702
#endif

#ifndef GL_COLOR
#define GL_COLOR 0x1800
#endif

#ifndef GL_DEPTH
#define GL_DEPTH 0x1801
#endif

#ifndef GL_STENCIL
#define GL_STENCIL 0x1802
#endif

#ifndef GL_COLOR_EXT
#define GL_COLOR_EXT 0x1800
#endif

#ifndef GL_DEPTH_EXT
#define GL_DEPTH_EXT 0x1801
#endif

#ifndef GL_STENCIL_EXT
#define GL_STENCIL_EXT 0x1802
#endif

#ifndef GL_COLOR_INDEX
#define GL_COLOR_INDEX 0x1900
#endif

#ifndef GL_STENCIL_INDEX
#define GL_STENCIL_INDEX 0x1901
#endif

#ifndef GL_DEPTH_COMPONENT
#define GL_DEPTH_COMPONENT 0x1902
#endif

#ifndef GL_RED
#define GL_RED 0x1903
#endif

#ifndef GL_GREEN
#define GL_GREEN 0x1904
#endif

#ifndef GL_BLUE
#define GL_BLUE 0x1905
#endif

#ifndef GL_ALPHA
#define GL_ALPHA 0x1906
#endif

#ifndef GL_RGB
#define GL_RGB 0x1907
#endif

#ifndef GL_RGBA
#define GL_RGBA 0x1908
#endif

#ifndef GL_LUMINANCE
#define GL_LUMINANCE 0x1909
#endif

#ifndef GL_LUMINANCE_ALPHA
#define GL_LUMINANCE_ALPHA 0x190A
#endif

#ifndef GL_RED_EXT
#define GL_RED_EXT 0x1903
#endif

#ifndef GL_BITMAP
#define GL_BITMAP 0x1A00
#endif

#ifndef GL_POINT
#define GL_POINT 0x1B00
#endif

#ifndef GL_LINE
#define GL_LINE 0x1B01
#endif

#ifndef GL_FILL
#define GL_FILL 0x1B02
#endif

#ifndef GL_RENDER
#define GL_RENDER 0x1C00
#endif

#ifndef GL_FEEDBACK
#define GL_FEEDBACK 0x1C01
#endif

#ifndef GL_SELECT
#define GL_SELECT 0x1C02
#endif

#ifndef GL_FLAT
#define GL_FLAT 0x1D00
#endif

#ifndef GL_SMOOTH
#define GL_SMOOTH 0x1D01
#endif

#ifndef GL_KEEP
#define GL_KEEP 0x1E00
#endif

#ifndef GL_REPLACE
#define GL_REPLACE 0x1E01
#endif

#ifndef GL_INCR
#define GL_INCR 0x1E02
#endif

#ifndef GL_DECR
#define GL_DECR 0x1E03
#endif

#ifndef GL_VENDOR
#define GL_VENDOR 0x1F00
#endif

#ifndef GL_RENDERER
#define GL_RENDERER 0x1F01
#endif

#ifndef GL_VERSION
#define GL_VERSION 0x1F02
#endif

#ifndef GL_EXTENSIONS
#define GL_EXTENSIONS 0x1F03
#endif

#ifndef GL_S
#define GL_S 0x2000
#endif

#ifndef GL_T
#define GL_T 0x2001
#endif

#ifndef GL_R
#define GL_R 0x2002
#endif

#ifndef GL_Q
#define GL_Q 0x2003
#endif

#ifndef GL_MODULATE
#define GL_MODULATE 0x2100
#endif

#ifndef GL_DECAL
#define GL_DECAL 0x2101
#endif

#ifndef GL_TEXTURE_ENV_MODE
#define GL_TEXTURE_ENV_MODE 0x2200
#endif

#ifndef GL_TEXTURE_ENV_COLOR
#define GL_TEXTURE_ENV_COLOR 0x2201
#endif

#ifndef GL_TEXTURE_ENV
#define GL_TEXTURE_ENV 0x2300
#endif

#ifndef GL_EYE_LINEAR
#define GL_EYE_LINEAR 0x2400
#endif

#ifndef GL_OBJECT_LINEAR
#define GL_OBJECT_LINEAR 0x2401
#endif

#ifndef GL_SPHERE_MAP
#define GL_SPHERE_MAP 0x2402
#endif

#ifndef GL_TEXTURE_GEN_MODE
#define GL_TEXTURE_GEN_MODE 0x2500
#endif

#ifndef GL_OBJECT_PLANE
#define GL_OBJECT_PLANE 0x2501
#endif

#ifndef GL_EYE_PLANE
#define GL_EYE_PLANE 0x2502
#endif

#ifndef GL_TEXTURE_GEN_MODE
#define GL_TEXTURE_GEN_MODE 0x2500
#endif

#ifndef GL_NEAREST
#define GL_NEAREST 0x2600
#endif

#ifndef GL_LINEAR
#define GL_LINEAR 0x2601
#endif

#ifndef GL_NEAREST_MIPMAP_NEAREST
#define GL_NEAREST_MIPMAP_NEAREST 0x2700
#endif

#ifndef GL_LINEAR_MIPMAP_NEAREST
#define GL_LINEAR_MIPMAP_NEAREST 0x2701
#endif

#ifndef GL_NEAREST_MIPMAP_LINEAR
#define GL_NEAREST_MIPMAP_LINEAR 0x2702
#endif

#ifndef GL_LINEAR_MIPMAP_LINEAR
#define GL_LINEAR_MIPMAP_LINEAR 0x2703
#endif

#ifndef GL_TEXTURE_MAG_FILTER
#define GL_TEXTURE_MAG_FILTER 0x2800
#endif

#ifndef GL_TEXTURE_MIN_FILTER
#define GL_TEXTURE_MIN_FILTER 0x2801
#endif

#ifndef GL_TEXTURE_WRAP_S
#define GL_TEXTURE_WRAP_S 0x2802
#endif

#ifndef GL_TEXTURE_WRAP_T
#define GL_TEXTURE_WRAP_T 0x2803
#endif

#ifndef GL_PROXY_TEXTURE_1D
#define GL_PROXY_TEXTURE_1D 0x8063
#endif

#ifndef GL_PROXY_TEXTURE_2D
#define GL_PROXY_TEXTURE_2D 0x8064
#endif

#ifndef GL_CLAMP
#define GL_CLAMP 0x2900
#endif

#ifndef GL_REPEAT
#define GL_REPEAT 0x2901
#endif

#ifndef GL_R3_G3_B2
#define GL_R3_G3_B2 0x2A10
#endif

#ifndef GL_ALPHA4
#define GL_ALPHA4 0x803B
#endif

#ifndef GL_ALPHA8
#define GL_ALPHA8 0x803C
#endif

#ifndef GL_ALPHA12
#define GL_ALPHA12 0x803D
#endif

#ifndef GL_ALPHA16
#define GL_ALPHA16 0x803E
#endif

#ifndef GL_LUMINANCE4
#define GL_LUMINANCE4 0x803F
#endif

#ifndef GL_LUMINANCE8
#define GL_LUMINANCE8 0x8040
#endif

#ifndef GL_LUMINANCE12
#define GL_LUMINANCE12 0x8041
#endif

#ifndef GL_LUMINANCE16
#define GL_LUMINANCE16 0x8042
#endif

#ifndef GL_LUMINANCE4_ALPHA4
#define GL_LUMINANCE4_ALPHA4 0x8043
#endif

#ifndef GL_LUMINANCE6_ALPHA2
#define GL_LUMINANCE6_ALPHA2 0x8044
#endif

#ifndef GL_LUMINANCE8_ALPHA8
#define GL_LUMINANCE8_ALPHA8 0x8045
#endif

#ifndef GL_LUMINANCE12_ALPHA4
#define GL_LUMINANCE12_ALPHA4 0x8046
#endif

#ifndef GL_LUMINANCE12_ALPHA12
#define GL_LUMINANCE12_ALPHA12 0x8047
#endif

#ifndef GL_LUMINANCE16_ALPHA16
#define GL_LUMINANCE16_ALPHA16 0x8048
#endif

#ifndef GL_INTENSITY
#define GL_INTENSITY 0x8049
#endif

#ifndef GL_INTENSITY4
#define GL_INTENSITY4 0x804A
#endif

#ifndef GL_INTENSITY8
#define GL_INTENSITY8 0x804B
#endif

#ifndef GL_INTENSITY12
#define GL_INTENSITY12 0x804C
#endif

#ifndef GL_INTENSITY16
#define GL_INTENSITY16 0x804D
#endif

#ifndef GL_RGB4
#define GL_RGB4 0x804F
#endif

#ifndef GL_RGB5
#define GL_RGB5 0x8050
#endif

#ifndef GL_RGB8
#define GL_RGB8 0x8051
#endif

#ifndef GL_RGB10
#define GL_RGB10 0x8052
#endif

#ifndef GL_RGB12
#define GL_RGB12 0x8053
#endif

#ifndef GL_RGB16
#define GL_RGB16 0x8054
#endif

#ifndef GL_RGBA2
#define GL_RGBA2 0x8055
#endif

#ifndef GL_RGBA4
#define GL_RGBA4 0x8056
#endif

#ifndef GL_RGB5_A1
#define GL_RGB5_A1 0x8057
#endif

#ifndef GL_RGBA8
#define GL_RGBA8 0x8058
#endif

#ifndef GL_RGB10_A2
#define GL_RGB10_A2 0x8059
#endif

#ifndef GL_RGBA12
#define GL_RGBA12 0x805A
#endif

#ifndef GL_RGBA16
#define GL_RGBA16 0x805B
#endif

#ifndef GL_RGB8
#define GL_RGB8 0x8051
#endif

#ifndef GL_RGBA8
#define GL_RGBA8 0x8058
#endif

#ifndef GL_V2F
#define GL_V2F 0x2A20
#endif

#ifndef GL_V3F
#define GL_V3F 0x2A21
#endif

#ifndef GL_C4UB_V2F
#define GL_C4UB_V2F 0x2A22
#endif

#ifndef GL_C4UB_V3F
#define GL_C4UB_V3F 0x2A23
#endif

#ifndef GL_C3F_V3F
#define GL_C3F_V3F 0x2A24
#endif

#ifndef GL_N3F_V3F
#define GL_N3F_V3F 0x2A25
#endif

#ifndef GL_C4F_N3F_V3F
#define GL_C4F_N3F_V3F 0x2A26
#endif

#ifndef GL_T2F_V3F
#define GL_T2F_V3F 0x2A27
#endif

#ifndef GL_T4F_V4F
#define GL_T4F_V4F 0x2A28
#endif

#ifndef GL_T2F_C4UB_V3F
#define GL_T2F_C4UB_V3F 0x2A29
#endif

#ifndef GL_T2F_C3F_V3F
#define GL_T2F_C3F_V3F 0x2A2A
#endif

#ifndef GL_T2F_N3F_V3F
#define GL_T2F_N3F_V3F 0x2A2B
#endif

#ifndef GL_T2F_C4F_N3F_V3F
#define GL_T2F_C4F_N3F_V3F 0x2A2C
#endif

#ifndef GL_T4F_C4F_N3F_V4F
#define GL_T4F_C4F_N3F_V4F 0x2A2D
#endif

#ifndef GL_CLIP_PLANE0
#define GL_CLIP_PLANE0 0x3000
#endif

#ifndef GL_CLIP_PLANE1
#define GL_CLIP_PLANE1 0x3001
#endif

#ifndef GL_CLIP_PLANE2
#define GL_CLIP_PLANE2 0x3002
#endif

#ifndef GL_CLIP_PLANE3
#define GL_CLIP_PLANE3 0x3003
#endif

#ifndef GL_CLIP_PLANE4
#define GL_CLIP_PLANE4 0x3004
#endif

#ifndef GL_CLIP_PLANE5
#define GL_CLIP_PLANE5 0x3005
#endif

#ifndef GL_CLIP_DISTANCE0
#define GL_CLIP_DISTANCE0 0x3000
#endif

#ifndef GL_CLIP_DISTANCE1
#define GL_CLIP_DISTANCE1 0x3001
#endif

#ifndef GL_CLIP_DISTANCE2
#define GL_CLIP_DISTANCE2 0x3002
#endif

#ifndef GL_CLIP_DISTANCE3
#define GL_CLIP_DISTANCE3 0x3003
#endif

#ifndef GL_CLIP_DISTANCE4
#define GL_CLIP_DISTANCE4 0x3004
#endif

#ifndef GL_CLIP_DISTANCE5
#define GL_CLIP_DISTANCE5 0x3005
#endif

#ifndef GL_CLIP_DISTANCE6
#define GL_CLIP_DISTANCE6 0x3006
#endif

#ifndef GL_CLIP_DISTANCE7
#define GL_CLIP_DISTANCE7 0x3007
#endif

#ifndef GL_LIGHT0
#define GL_LIGHT0 0x4000
#endif

#ifndef GL_LIGHT1
#define GL_LIGHT1 0x4001
#endif

#ifndef GL_LIGHT2
#define GL_LIGHT2 0x4002
#endif

#ifndef GL_LIGHT3
#define GL_LIGHT3 0x4003
#endif

#ifndef GL_LIGHT4
#define GL_LIGHT4 0x4004
#endif

#ifndef GL_LIGHT5
#define GL_LIGHT5 0x4005
#endif

#ifndef GL_LIGHT6
#define GL_LIGHT6 0x4006
#endif

#ifndef GL_LIGHT7
#define GL_LIGHT7 0x4007
#endif

#ifndef GL_ABGR_EXT
#define GL_ABGR_EXT 0x8000
#endif

#ifndef GL_CONSTANT_COLOR
#define GL_CONSTANT_COLOR 0x8001
#endif

#ifndef GL_ONE_MINUS_CONSTANT_COLOR
#define GL_ONE_MINUS_CONSTANT_COLOR 0x8002
#endif

#ifndef GL_CONSTANT_ALPHA
#define GL_CONSTANT_ALPHA 0x8003
#endif

#ifndef GL_ONE_MINUS_CONSTANT_ALPHA
#define GL_ONE_MINUS_CONSTANT_ALPHA 0x8004
#endif

#ifndef GL_BLEND_COLOR
#define GL_BLEND_COLOR 0x8005
#endif

#ifndef GL_CONSTANT_COLOR_EXT
#define GL_CONSTANT_COLOR_EXT 0x8001
#endif

#ifndef GL_ONE_MINUS_CONSTANT_COLOR_EXT
#define GL_ONE_MINUS_CONSTANT_COLOR_EXT 0x8002
#endif

#ifndef GL_CONSTANT_ALPHA_EXT
#define GL_CONSTANT_ALPHA_EXT 0x8003
#endif

#ifndef GL_ONE_MINUS_CONSTANT_ALPHA_EXT
#define GL_ONE_MINUS_CONSTANT_ALPHA_EXT 0x8004
#endif

#ifndef GL_BLEND_COLOR_EXT
#define GL_BLEND_COLOR_EXT 0x8005
#endif

#ifndef GL_FUNC_ADD
#define GL_FUNC_ADD 0x8006
#endif

#ifndef GL_FUNC_ADD_EXT
#define GL_FUNC_ADD_EXT 0x8006
#endif

#ifndef GL_MIN
#define GL_MIN 0x8007
#endif

#ifndef GL_MIN_EXT
#define GL_MIN_EXT 0x8007
#endif

#ifndef GL_MAX
#define GL_MAX 0x8008
#endif

#ifndef GL_MAX_EXT
#define GL_MAX_EXT 0x8008
#endif

#ifndef GL_BLEND_EQUATION
#define GL_BLEND_EQUATION 0x8009
#endif

#ifndef GL_BLEND_EQUATION_EXT
#define GL_BLEND_EQUATION_EXT 0x8009
#endif

#ifndef GL_BLEND_EQUATION_RGB
#define GL_BLEND_EQUATION_RGB 0x8009
#endif

#ifndef GL_BLEND_EQUATION_RGB_EXT
#define GL_BLEND_EQUATION_RGB_EXT 0x8009
#endif

#ifndef GL_BLEND_EQUATION_RGB_OES
#define GL_BLEND_EQUATION_RGB_OES 0x8009
#endif

#ifndef GL_FUNC_SUBTRACT
#define GL_FUNC_SUBTRACT 0x800A
#endif

#ifndef GL_FUNC_SUBTRACT_EXT
#define GL_FUNC_SUBTRACT_EXT 0x800A
#endif

#ifndef GL_FUNC_REVERSE_SUBTRACT
#define GL_FUNC_REVERSE_SUBTRACT 0x800B
#endif

#ifndef GL_FUNC_REVERSE_SUBTRACT_EXT
#define GL_FUNC_REVERSE_SUBTRACT_EXT 0x800B
#endif

#ifndef GL_FUNC_ADD_OES
#define GL_FUNC_ADD_OES 0x8006
#endif

#ifndef GL_BLEND_EQUATION_OES
#define GL_BLEND_EQUATION_OES 0x8009
#endif

#ifndef GL_FUNC_SUBTRACT_OES
#define GL_FUNC_SUBTRACT_OES 0x800A
#endif

#ifndef GL_FUNC_REVERSE_SUBTRACT_OES
#define GL_FUNC_REVERSE_SUBTRACT_OES 0x800B
#endif

#ifndef GL_CMYK_EXT
#define GL_CMYK_EXT 0x800C
#endif

#ifndef GL_CMYKA_EXT
#define GL_CMYKA_EXT 0x800D
#endif

#ifndef GL_PACK_CMYK_HINT_EXT
#define GL_PACK_CMYK_HINT_EXT 0x800E
#endif

#ifndef GL_UNPACK_CMYK_HINT_EXT
#define GL_UNPACK_CMYK_HINT_EXT 0x800F
#endif

#ifndef GL_CONVOLUTION_1D
#define GL_CONVOLUTION_1D 0x8010
#endif

#ifndef GL_CONVOLUTION_2D
#define GL_CONVOLUTION_2D 0x8011
#endif

#ifndef GL_SEPARABLE_2D
#define GL_SEPARABLE_2D 0x8012
#endif

#ifndef GL_CONVOLUTION_BORDER_MODE
#define GL_CONVOLUTION_BORDER_MODE 0x8013
#endif

#ifndef GL_CONVOLUTION_FILTER_SCALE
#define GL_CONVOLUTION_FILTER_SCALE 0x8014
#endif

#ifndef GL_CONVOLUTION_FILTER_BIAS
#define GL_CONVOLUTION_FILTER_BIAS 0x8015
#endif

#ifndef GL_REDUCE
#define GL_REDUCE 0x8016
#endif

#ifndef GL_CONVOLUTION_FORMAT
#define GL_CONVOLUTION_FORMAT 0x8017
#endif

#ifndef GL_CONVOLUTION_WIDTH
#define GL_CONVOLUTION_WIDTH 0x8018
#endif

#ifndef GL_CONVOLUTION_HEIGHT
#define GL_CONVOLUTION_HEIGHT 0x8019
#endif

#ifndef GL_MAX_CONVOLUTION_WIDTH
#define GL_MAX_CONVOLUTION_WIDTH 0x801A
#endif

#ifndef GL_MAX_CONVOLUTION_HEIGHT
#define GL_MAX_CONVOLUTION_HEIGHT 0x801B
#endif

#ifndef GL_POST_CONVOLUTION_RED_SCALE
#define GL_POST_CONVOLUTION_RED_SCALE 0x801C
#endif

#ifndef GL_POST_CONVOLUTION_GREEN_SCALE
#define GL_POST_CONVOLUTION_GREEN_SCALE 0x801D
#endif

#ifndef GL_POST_CONVOLUTION_BLUE_SCALE
#define GL_POST_CONVOLUTION_BLUE_SCALE 0x801E
#endif

#ifndef GL_POST_CONVOLUTION_ALPHA_SCALE
#define GL_POST_CONVOLUTION_ALPHA_SCALE 0x801F
#endif

#ifndef GL_POST_CONVOLUTION_RED_BIAS
#define GL_POST_CONVOLUTION_RED_BIAS 0x8020
#endif

#ifndef GL_POST_CONVOLUTION_GREEN_BIAS
#define GL_POST_CONVOLUTION_GREEN_BIAS 0x8021
#endif

#ifndef GL_POST_CONVOLUTION_BLUE_BIAS
#define GL_POST_CONVOLUTION_BLUE_BIAS 0x8022
#endif

#ifndef GL_POST_CONVOLUTION_ALPHA_BIAS
#define GL_POST_CONVOLUTION_ALPHA_BIAS 0x8023
#endif

#ifndef GL_CONVOLUTION_1D_EXT
#define GL_CONVOLUTION_1D_EXT 0x8010
#endif

#ifndef GL_CONVOLUTION_2D_EXT
#define GL_CONVOLUTION_2D_EXT 0x8011
#endif

#ifndef GL_SEPARABLE_2D_EXT
#define GL_SEPARABLE_2D_EXT 0x8012
#endif

#ifndef GL_CONVOLUTION_BORDER_MODE_EXT
#define GL_CONVOLUTION_BORDER_MODE_EXT 0x8013
#endif

#ifndef GL_CONVOLUTION_FILTER_SCALE_EXT
#define GL_CONVOLUTION_FILTER_SCALE_EXT 0x8014
#endif

#ifndef GL_CONVOLUTION_FILTER_BIAS_EXT
#define GL_CONVOLUTION_FILTER_BIAS_EXT 0x8015
#endif

#ifndef GL_REDUCE_EXT
#define GL_REDUCE_EXT 0x8016
#endif

#ifndef GL_CONVOLUTION_FORMAT_EXT
#define GL_CONVOLUTION_FORMAT_EXT 0x8017
#endif

#ifndef GL_CONVOLUTION_WIDTH_EXT
#define GL_CONVOLUTION_WIDTH_EXT 0x8018
#endif

#ifndef GL_CONVOLUTION_HEIGHT_EXT
#define GL_CONVOLUTION_HEIGHT_EXT 0x8019
#endif

#ifndef GL_MAX_CONVOLUTION_WIDTH_EXT
#define GL_MAX_CONVOLUTION_WIDTH_EXT 0x801A
#endif

#ifndef GL_MAX_CONVOLUTION_HEIGHT_EXT
#define GL_MAX_CONVOLUTION_HEIGHT_EXT 0x801B
#endif

#ifndef GL_POST_CONVOLUTION_RED_SCALE_EXT
#define GL_POST_CONVOLUTION_RED_SCALE_EXT 0x801C
#endif

#ifndef GL_POST_CONVOLUTION_GREEN_SCALE_EXT
#define GL_POST_CONVOLUTION_GREEN_SCALE_EXT 0x801D
#endif

#ifndef GL_POST_CONVOLUTION_BLUE_SCALE_EXT
#define GL_POST_CONVOLUTION_BLUE_SCALE_EXT 0x801E
#endif

#ifndef GL_POST_CONVOLUTION_ALPHA_SCALE_EXT
#define GL_POST_CONVOLUTION_ALPHA_SCALE_EXT 0x801F
#endif

#ifndef GL_POST_CONVOLUTION_RED_BIAS_EXT
#define GL_POST_CONVOLUTION_RED_BIAS_EXT 0x8020
#endif

#ifndef GL_POST_CONVOLUTION_GREEN_BIAS_EXT
#define GL_POST_CONVOLUTION_GREEN_BIAS_EXT 0x8021
#endif

#ifndef GL_POST_CONVOLUTION_BLUE_BIAS_EXT
#define GL_POST_CONVOLUTION_BLUE_BIAS_EXT 0x8022
#endif

#ifndef GL_POST_CONVOLUTION_ALPHA_BIAS_EXT
#define GL_POST_CONVOLUTION_ALPHA_BIAS_EXT 0x8023
#endif

#ifndef GL_HISTOGRAM
#define GL_HISTOGRAM 0x8024
#endif

#ifndef GL_PROXY_HISTOGRAM
#define GL_PROXY_HISTOGRAM 0x8025
#endif

#ifndef GL_HISTOGRAM_WIDTH
#define GL_HISTOGRAM_WIDTH 0x8026
#endif

#ifndef GL_HISTOGRAM_FORMAT
#define GL_HISTOGRAM_FORMAT 0x8027
#endif

#ifndef GL_HISTOGRAM_RED_SIZE
#define GL_HISTOGRAM_RED_SIZE 0x8028
#endif

#ifndef GL_HISTOGRAM_GREEN_SIZE
#define GL_HISTOGRAM_GREEN_SIZE 0x8029
#endif

#ifndef GL_HISTOGRAM_BLUE_SIZE
#define GL_HISTOGRAM_BLUE_SIZE 0x802A
#endif

#ifndef GL_HISTOGRAM_ALPHA_SIZE
#define GL_HISTOGRAM_ALPHA_SIZE 0x802B
#endif

#ifndef GL_HISTOGRAM_SINK
#define GL_HISTOGRAM_SINK 0x802D
#endif

#ifndef GL_MINMAX
#define GL_MINMAX 0x802E
#endif

#ifndef GL_MINMAX_FORMAT
#define GL_MINMAX_FORMAT 0x802F
#endif

#ifndef GL_MINMAX_SINK
#define GL_MINMAX_SINK 0x8030
#endif

#ifndef GL_TABLE_TOO_LARGE
#define GL_TABLE_TOO_LARGE 0x8031
#endif

#ifndef GL_HISTOGRAM_EXT
#define GL_HISTOGRAM_EXT 0x8024
#endif

#ifndef GL_PROXY_HISTOGRAM_EXT
#define GL_PROXY_HISTOGRAM_EXT 0x8025
#endif

#ifndef GL_HISTOGRAM_WIDTH_EXT
#define GL_HISTOGRAM_WIDTH_EXT 0x8026
#endif

#ifndef GL_HISTOGRAM_FORMAT_EXT
#define GL_HISTOGRAM_FORMAT_EXT 0x8027
#endif

#ifndef GL_HISTOGRAM_RED_SIZE_EXT
#define GL_HISTOGRAM_RED_SIZE_EXT 0x8028
#endif

#ifndef GL_HISTOGRAM_GREEN_SIZE_EXT
#define GL_HISTOGRAM_GREEN_SIZE_EXT 0x8029
#endif

#ifndef GL_HISTOGRAM_BLUE_SIZE_EXT
#define GL_HISTOGRAM_BLUE_SIZE_EXT 0x802A
#endif

#ifndef GL_HISTOGRAM_ALPHA_SIZE_EXT
#define GL_HISTOGRAM_ALPHA_SIZE_EXT 0x802B
#endif

#ifndef GL_HISTOGRAM_LUMINANCE_SIZE
#define GL_HISTOGRAM_LUMINANCE_SIZE 0x802C
#endif

#ifndef GL_HISTOGRAM_LUMINANCE_SIZE_EXT
#define GL_HISTOGRAM_LUMINANCE_SIZE_EXT 0x802C
#endif

#ifndef GL_HISTOGRAM_SINK_EXT
#define GL_HISTOGRAM_SINK_EXT 0x802D
#endif

#ifndef GL_MINMAX_EXT
#define GL_MINMAX_EXT 0x802E
#endif

#ifndef GL_MINMAX_FORMAT_EXT
#define GL_MINMAX_FORMAT_EXT 0x802F
#endif

#ifndef GL_MINMAX_SINK_EXT
#define GL_MINMAX_SINK_EXT 0x8030
#endif

#ifndef GL_TABLE_TOO_LARGE_EXT
#define GL_TABLE_TOO_LARGE_EXT 0x8031
#endif

#ifndef GL_UNSIGNED_BYTE_3_3_2
#define GL_UNSIGNED_BYTE_3_3_2 0x8032
#endif

#ifndef GL_UNSIGNED_SHORT_4_4_4_4
#define GL_UNSIGNED_SHORT_4_4_4_4 0x8033
#endif

#ifndef GL_UNSIGNED_SHORT_5_5_5_1
#define GL_UNSIGNED_SHORT_5_5_5_1 0x8034
#endif

#ifndef GL_UNSIGNED_INT_8_8_8_8
#define GL_UNSIGNED_INT_8_8_8_8 0x8035
#endif

#ifndef GL_UNSIGNED_INT_10_10_10_2
#define GL_UNSIGNED_INT_10_10_10_2 0x8036
#endif

#ifndef GL_UNSIGNED_BYTE_2_3_3_REV
#define GL_UNSIGNED_BYTE_2_3_3_REV 0x8362
#endif

#ifndef GL_UNSIGNED_SHORT_5_6_5
#define GL_UNSIGNED_SHORT_5_6_5 0x8363
#endif

#ifndef GL_UNSIGNED_SHORT_5_6_5_REV
#define GL_UNSIGNED_SHORT_5_6_5_REV 0x8364
#endif

#ifndef GL_UNSIGNED_SHORT_4_4_4_4_REV
#define GL_UNSIGNED_SHORT_4_4_4_4_REV 0x8365
#endif

#ifndef GL_UNSIGNED_SHORT_1_5_5_5_REV
#define GL_UNSIGNED_SHORT_1_5_5_5_REV 0x8366
#endif

#ifndef GL_UNSIGNED_INT_8_8_8_8_REV
#define GL_UNSIGNED_INT_8_8_8_8_REV 0x8367
#endif

#ifndef GL_UNSIGNED_INT_2_10_10_10_REV
#define GL_UNSIGNED_INT_2_10_10_10_REV 0x8368
#endif

#ifndef GL_UNSIGNED_BYTE_3_3_2_EXT
#define GL_UNSIGNED_BYTE_3_3_2_EXT 0x8032
#endif

#ifndef GL_UNSIGNED_SHORT_4_4_4_4_EXT
#define GL_UNSIGNED_SHORT_4_4_4_4_EXT 0x8033
#endif

#ifndef GL_UNSIGNED_SHORT_5_5_5_1_EXT
#define GL_UNSIGNED_SHORT_5_5_5_1_EXT 0x8034
#endif

#ifndef GL_UNSIGNED_INT_8_8_8_8_EXT
#define GL_UNSIGNED_INT_8_8_8_8_EXT 0x8035
#endif

#ifndef GL_UNSIGNED_INT_10_10_10_2_EXT
#define GL_UNSIGNED_INT_10_10_10_2_EXT 0x8036
#endif

#ifndef GL_UNSIGNED_BYTE_2_3_3_REV_EXT
#define GL_UNSIGNED_BYTE_2_3_3_REV_EXT 0x8362
#endif

#ifndef GL_UNSIGNED_SHORT_5_6_5_EXT
#define GL_UNSIGNED_SHORT_5_6_5_EXT 0x8363
#endif

#ifndef GL_UNSIGNED_SHORT_5_6_5_REV_EXT
#define GL_UNSIGNED_SHORT_5_6_5_REV_EXT 0x8364
#endif

#ifndef GL_UNSIGNED_SHORT_4_4_4_4_REV_EXT
#define GL_UNSIGNED_SHORT_4_4_4_4_REV_EXT 0x8365
#endif

#ifndef GL_UNSIGNED_SHORT_1_5_5_5_REV_EXT
#define GL_UNSIGNED_SHORT_1_5_5_5_REV_EXT 0x8366
#endif

#ifndef GL_UNSIGNED_INT_8_8_8_8_REV_EXT
#define GL_UNSIGNED_INT_8_8_8_8_REV_EXT 0x8367
#endif

#ifndef GL_UNSIGNED_INT_2_10_10_10_REV_EXT
#define GL_UNSIGNED_INT_2_10_10_10_REV_EXT 0x8368
#endif

#ifndef GL_POLYGON_OFFSET_EXT
#define GL_POLYGON_OFFSET_EXT 0x8037
#endif

#ifndef GL_POLYGON_OFFSET_FACTOR_EXT
#define GL_POLYGON_OFFSET_FACTOR_EXT 0x8038
#endif

#ifndef GL_POLYGON_OFFSET_BIAS_EXT
#define GL_POLYGON_OFFSET_BIAS_EXT 0x8039
#endif

#ifndef GL_RESCALE_NORMAL
#define GL_RESCALE_NORMAL 0x803A
#endif

#ifndef GL_RESCALE_NORMAL_EXT
#define GL_RESCALE_NORMAL_EXT 0x803A
#endif

#ifndef GL_ALPHA4_EXT
#define GL_ALPHA4_EXT 0x803B
#endif

#ifndef GL_ALPHA8_EXT
#define GL_ALPHA8_EXT 0x803C
#endif

#ifndef GL_ALPHA12_EXT
#define GL_ALPHA12_EXT 0x803D
#endif

#ifndef GL_ALPHA16_EXT
#define GL_ALPHA16_EXT 0x803E
#endif

#ifndef GL_LUMINANCE4_EXT
#define GL_LUMINANCE4_EXT 0x803F
#endif

#ifndef GL_LUMINANCE8_EXT
#define GL_LUMINANCE8_EXT 0x8040
#endif

#ifndef GL_LUMINANCE12_EXT
#define GL_LUMINANCE12_EXT 0x8041
#endif

#ifndef GL_LUMINANCE16_EXT
#define GL_LUMINANCE16_EXT 0x8042
#endif

#ifndef GL_LUMINANCE4_ALPHA4_EXT
#define GL_LUMINANCE4_ALPHA4_EXT 0x8043
#endif

#ifndef GL_LUMINANCE6_ALPHA2_EXT
#define GL_LUMINANCE6_ALPHA2_EXT 0x8044
#endif

#ifndef GL_LUMINANCE8_ALPHA8_EXT
#define GL_LUMINANCE8_ALPHA8_EXT 0x8045
#endif

#ifndef GL_LUMINANCE12_ALPHA4_EXT
#define GL_LUMINANCE12_ALPHA4_EXT 0x8046
#endif

#ifndef GL_LUMINANCE12_ALPHA12_EXT
#define GL_LUMINANCE12_ALPHA12_EXT 0x8047
#endif

#ifndef GL_LUMINANCE16_ALPHA16_EXT
#define GL_LUMINANCE16_ALPHA16_EXT 0x8048
#endif

#ifndef GL_INTENSITY_EXT
#define GL_INTENSITY_EXT 0x8049
#endif

#ifndef GL_INTENSITY4_EXT
#define GL_INTENSITY4_EXT 0x804A
#endif

#ifndef GL_INTENSITY8_EXT
#define GL_INTENSITY8_EXT 0x804B
#endif

#ifndef GL_INTENSITY12_EXT
#define GL_INTENSITY12_EXT 0x804C
#endif

#ifndef GL_INTENSITY16_EXT
#define GL_INTENSITY16_EXT 0x804D
#endif

#ifndef GL_RGB2_EXT
#define GL_RGB2_EXT 0x804E
#endif

#ifndef GL_RGB4_EXT
#define GL_RGB4_EXT 0x804F
#endif

#ifndef GL_RGB5_EXT
#define GL_RGB5_EXT 0x8050
#endif

#ifndef GL_RGB8_EXT
#define GL_RGB8_EXT 0x8051
#endif

#ifndef GL_RGB10_EXT
#define GL_RGB10_EXT 0x8052
#endif

#ifndef GL_RGB12_EXT
#define GL_RGB12_EXT 0x8053
#endif

#ifndef GL_RGB16_EXT
#define GL_RGB16_EXT 0x8054
#endif

#ifndef GL_RGBA2_EXT
#define GL_RGBA2_EXT 0x8055
#endif

#ifndef GL_RGBA4_EXT
#define GL_RGBA4_EXT 0x8056
#endif

#ifndef GL_RGB5_A1_EXT
#define GL_RGB5_A1_EXT 0x8057
#endif

#ifndef GL_RGBA8_EXT
#define GL_RGBA8_EXT 0x8058
#endif

#ifndef GL_RGB10_A2_EXT
#define GL_RGB10_A2_EXT 0x8059
#endif

#ifndef GL_RGBA12_EXT
#define GL_RGBA12_EXT 0x805A
#endif

#ifndef GL_RGBA16_EXT
#define GL_RGBA16_EXT 0x805B
#endif

#ifndef GL_TEXTURE_RED_SIZE_EXT
#define GL_TEXTURE_RED_SIZE_EXT 0x805C
#endif

#ifndef GL_TEXTURE_GREEN_SIZE_EXT
#define GL_TEXTURE_GREEN_SIZE_EXT 0x805D
#endif

#ifndef GL_TEXTURE_BLUE_SIZE_EXT
#define GL_TEXTURE_BLUE_SIZE_EXT 0x805E
#endif

#ifndef GL_TEXTURE_ALPHA_SIZE_EXT
#define GL_TEXTURE_ALPHA_SIZE_EXT 0x805F
#endif

#ifndef GL_TEXTURE_LUMINANCE_SIZE_EXT
#define GL_TEXTURE_LUMINANCE_SIZE_EXT 0x8060
#endif

#ifndef GL_TEXTURE_INTENSITY_SIZE_EXT
#define GL_TEXTURE_INTENSITY_SIZE_EXT 0x8061
#endif

#ifndef GL_REPLACE_EXT
#define GL_REPLACE_EXT 0x8062
#endif

#ifndef GL_PROXY_TEXTURE_1D_EXT
#define GL_PROXY_TEXTURE_1D_EXT 0x8063
#endif

#ifndef GL_PROXY_TEXTURE_2D_EXT
#define GL_PROXY_TEXTURE_2D_EXT 0x8064
#endif

#ifndef GL_TEXTURE_TOO_LARGE_EXT
#define GL_TEXTURE_TOO_LARGE_EXT 0x8065
#endif

#ifndef GL_RGBA4_OES
#define GL_RGBA4_OES 0x8056
#endif

#ifndef GL_RGB5_A1_OES
#define GL_RGB5_A1_OES 0x8057
#endif

#ifndef GL_TEXTURE_PRIORITY_EXT
#define GL_TEXTURE_PRIORITY_EXT 0x8066
#endif

#ifndef GL_TEXTURE_RESIDENT_EXT
#define GL_TEXTURE_RESIDENT_EXT 0x8067
#endif

#ifndef GL_TEXTURE_1D_BINDING_EXT
#define GL_TEXTURE_1D_BINDING_EXT 0x8068
#endif

#ifndef GL_TEXTURE_2D_BINDING_EXT
#define GL_TEXTURE_2D_BINDING_EXT 0x8069
#endif

#ifndef GL_TEXTURE_3D_BINDING_EXT
#define GL_TEXTURE_3D_BINDING_EXT 0x806A
#endif

#ifndef GL_PACK_SKIP_IMAGES
#define GL_PACK_SKIP_IMAGES 0x806B
#endif

#ifndef GL_PACK_IMAGE_HEIGHT
#define GL_PACK_IMAGE_HEIGHT 0x806C
#endif

#ifndef GL_UNPACK_SKIP_IMAGES
#define GL_UNPACK_SKIP_IMAGES 0x806D
#endif

#ifndef GL_UNPACK_IMAGE_HEIGHT
#define GL_UNPACK_IMAGE_HEIGHT 0x806E
#endif

#ifndef GL_TEXTURE_3D
#define GL_TEXTURE_3D 0x806F
#endif

#ifndef GL_PROXY_TEXTURE_3D
#define GL_PROXY_TEXTURE_3D 0x8070
#endif

#ifndef GL_TEXTURE_DEPTH
#define GL_TEXTURE_DEPTH 0x8071
#endif

#ifndef GL_TEXTURE_WRAP_R
#define GL_TEXTURE_WRAP_R 0x8072
#endif

#ifndef GL_MAX_3D_TEXTURE_SIZE
#define GL_MAX_3D_TEXTURE_SIZE 0x8073
#endif

#ifndef GL_PACK_SKIP_IMAGES_EXT
#define GL_PACK_SKIP_IMAGES_EXT 0x806B
#endif

#ifndef GL_PACK_IMAGE_HEIGHT_EXT
#define GL_PACK_IMAGE_HEIGHT_EXT 0x806C
#endif

#ifndef GL_UNPACK_SKIP_IMAGES_EXT
#define GL_UNPACK_SKIP_IMAGES_EXT 0x806D
#endif

#ifndef GL_UNPACK_IMAGE_HEIGHT_EXT
#define GL_UNPACK_IMAGE_HEIGHT_EXT 0x806E
#endif

#ifndef GL_TEXTURE_3D_EXT
#define GL_TEXTURE_3D_EXT 0x806F
#endif

#ifndef GL_PROXY_TEXTURE_3D_EXT
#define GL_PROXY_TEXTURE_3D_EXT 0x8070
#endif

#ifndef GL_TEXTURE_DEPTH_EXT
#define GL_TEXTURE_DEPTH_EXT 0x8071
#endif

#ifndef GL_TEXTURE_WRAP_R_EXT
#define GL_TEXTURE_WRAP_R_EXT 0x8072
#endif

#ifndef GL_MAX_3D_TEXTURE_SIZE_EXT
#define GL_MAX_3D_TEXTURE_SIZE_EXT 0x8073
#endif

#ifndef GL_TEXTURE_3D_BINDING_OES
#define GL_TEXTURE_3D_BINDING_OES 0x806A
#endif

#ifndef GL_TEXTURE_3D_OES
#define GL_TEXTURE_3D_OES 0x806F
#endif

#ifndef GL_TEXTURE_WRAP_R_OES
#define GL_TEXTURE_WRAP_R_OES 0x8072
#endif

#ifndef GL_MAX_3D_TEXTURE_SIZE_OES
#define GL_MAX_3D_TEXTURE_SIZE_OES 0x8073
#endif

#ifndef GL_VERTEX_ARRAY_EXT
#define GL_VERTEX_ARRAY_EXT 0x8074
#endif

#ifndef GL_NORMAL_ARRAY_EXT
#define GL_NORMAL_ARRAY_EXT 0x8075
#endif

#ifndef GL_COLOR_ARRAY_EXT
#define GL_COLOR_ARRAY_EXT 0x8076
#endif

#ifndef GL_INDEX_ARRAY_EXT
#define GL_INDEX_ARRAY_EXT 0x8077
#endif

#ifndef GL_TEXTURE_COORD_ARRAY_EXT
#define GL_TEXTURE_COORD_ARRAY_EXT 0x8078
#endif

#ifndef GL_EDGE_FLAG_ARRAY_EXT
#define GL_EDGE_FLAG_ARRAY_EXT 0x8079
#endif

#ifndef GL_VERTEX_ARRAY_SIZE_EXT
#define GL_VERTEX_ARRAY_SIZE_EXT 0x807A
#endif

#ifndef GL_VERTEX_ARRAY_TYPE_EXT
#define GL_VERTEX_ARRAY_TYPE_EXT 0x807B
#endif

#ifndef GL_VERTEX_ARRAY_STRIDE_EXT
#define GL_VERTEX_ARRAY_STRIDE_EXT 0x807C
#endif

#ifndef GL_VERTEX_ARRAY_COUNT_EXT
#define GL_VERTEX_ARRAY_COUNT_EXT 0x807D
#endif

#ifndef GL_NORMAL_ARRAY_TYPE_EXT
#define GL_NORMAL_ARRAY_TYPE_EXT 0x807E
#endif

#ifndef GL_NORMAL_ARRAY_STRIDE_EXT
#define GL_NORMAL_ARRAY_STRIDE_EXT 0x807F
#endif

#ifndef GL_NORMAL_ARRAY_COUNT_EXT
#define GL_NORMAL_ARRAY_COUNT_EXT 0x8080
#endif

#ifndef GL_COLOR_ARRAY_SIZE_EXT
#define GL_COLOR_ARRAY_SIZE_EXT 0x8081
#endif

#ifndef GL_COLOR_ARRAY_TYPE_EXT
#define GL_COLOR_ARRAY_TYPE_EXT 0x8082
#endif

#ifndef GL_COLOR_ARRAY_STRIDE_EXT
#define GL_COLOR_ARRAY_STRIDE_EXT 0x8083
#endif

#ifndef GL_COLOR_ARRAY_COUNT_EXT
#define GL_COLOR_ARRAY_COUNT_EXT 0x8084
#endif

#ifndef GL_INDEX_ARRAY_TYPE_EXT
#define GL_INDEX_ARRAY_TYPE_EXT 0x8085
#endif

#ifndef GL_INDEX_ARRAY_STRIDE_EXT
#define GL_INDEX_ARRAY_STRIDE_EXT 0x8086
#endif

#ifndef GL_INDEX_ARRAY_COUNT_EXT
#define GL_INDEX_ARRAY_COUNT_EXT 0x8087
#endif

#ifndef GL_TEXTURE_COORD_ARRAY_SIZE_EXT
#define GL_TEXTURE_COORD_ARRAY_SIZE_EXT 0x8088
#endif

#ifndef GL_TEXTURE_COORD_ARRAY_TYPE_EXT
#define GL_TEXTURE_COORD_ARRAY_TYPE_EXT 0x8089
#endif

#ifndef GL_TEXTURE_COORD_ARRAY_STRIDE_EXT
#define GL_TEXTURE_COORD_ARRAY_STRIDE_EXT 0x808A
#endif

#ifndef GL_TEXTURE_COORD_ARRAY_COUNT_EXT
#define GL_TEXTURE_COORD_ARRAY_COUNT_EXT 0x808B
#endif

#ifndef GL_EDGE_FLAG_ARRAY_STRIDE_EXT
#define GL_EDGE_FLAG_ARRAY_STRIDE_EXT 0x808C
#endif

#ifndef GL_EDGE_FLAG_ARRAY_COUNT_EXT
#define GL_EDGE_FLAG_ARRAY_COUNT_EXT 0x808D
#endif

#ifndef GL_VERTEX_ARRAY_POINTER_EXT
#define GL_VERTEX_ARRAY_POINTER_EXT 0x808E
#endif

#ifndef GL_NORMAL_ARRAY_POINTER_EXT
#define GL_NORMAL_ARRAY_POINTER_EXT 0x808F
#endif

#ifndef GL_COLOR_ARRAY_POINTER_EXT
#define GL_COLOR_ARRAY_POINTER_EXT 0x8090
#endif

#ifndef GL_INDEX_ARRAY_POINTER_EXT
#define GL_INDEX_ARRAY_POINTER_EXT 0x8091
#endif

#ifndef GL_TEXTURE_COORD_ARRAY_POINTER_EXT
#define GL_TEXTURE_COORD_ARRAY_POINTER_EXT 0x8092
#endif

#ifndef GL_EDGE_FLAG_ARRAY_POINTER_EXT
#define GL_EDGE_FLAG_ARRAY_POINTER_EXT 0x8093
#endif

#ifndef GL_INTERLACE_SGIX
#define GL_INTERLACE_SGIX 0x8094
#endif

#ifndef GL_DETAIL_TEXTURE_2D_SGIS
#define GL_DETAIL_TEXTURE_2D_SGIS 0x8095
#endif

#ifndef GL_DETAIL_TEXTURE_2D_BINDING_SGIS
#define GL_DETAIL_TEXTURE_2D_BINDING_SGIS 0x8096
#endif

#ifndef GL_LINEAR_DETAIL_SGIS
#define GL_LINEAR_DETAIL_SGIS 0x8097
#endif

#ifndef GL_LINEAR_DETAIL_ALPHA_SGIS
#define GL_LINEAR_DETAIL_ALPHA_SGIS 0x8098
#endif

#ifndef GL_LINEAR_DETAIL_COLOR_SGIS
#define GL_LINEAR_DETAIL_COLOR_SGIS 0x8099
#endif

#ifndef GL_DETAIL_TEXTURE_LEVEL_SGIS
#define GL_DETAIL_TEXTURE_LEVEL_SGIS 0x809A
#endif

#ifndef GL_DETAIL_TEXTURE_MODE_SGIS
#define GL_DETAIL_TEXTURE_MODE_SGIS 0x809B
#endif

#ifndef GL_DETAIL_TEXTURE_FUNC_POINTS_SGIS
#define GL_DETAIL_TEXTURE_FUNC_POINTS_SGIS 0x809C
#endif

#ifndef GL_MULTISAMPLE
#define GL_MULTISAMPLE 0x809D
#endif

#ifndef GL_SAMPLE_ALPHA_TO_COVERAGE
#define GL_SAMPLE_ALPHA_TO_COVERAGE 0x809E
#endif

#ifndef GL_SAMPLE_ALPHA_TO_ONE
#define GL_SAMPLE_ALPHA_TO_ONE 0x809F
#endif

#ifndef GL_SAMPLE_COVERAGE
#define GL_SAMPLE_COVERAGE 0x80A0
#endif

#ifndef GL_SAMPLE_BUFFERS
#define GL_SAMPLE_BUFFERS 0x80A8
#endif

#ifndef GL_SAMPLES
#define GL_SAMPLES 0x80A9
#endif

#ifndef GL_SAMPLE_COVERAGE_VALUE
#define GL_SAMPLE_COVERAGE_VALUE 0x80AA
#endif

#ifndef GL_SAMPLE_COVERAGE_INVERT
#define GL_SAMPLE_COVERAGE_INVERT 0x80AB
#endif

#ifndef GL_MULTISAMPLE_ARB
#define GL_MULTISAMPLE_ARB 0x809D
#endif

#ifndef GL_SAMPLE_ALPHA_TO_COVERAGE_ARB
#define GL_SAMPLE_ALPHA_TO_COVERAGE_ARB 0x809E
#endif

#ifndef GL_SAMPLE_ALPHA_TO_ONE_ARB
#define GL_SAMPLE_ALPHA_TO_ONE_ARB 0x809F
#endif

#ifndef GL_SAMPLE_COVERAGE_ARB
#define GL_SAMPLE_COVERAGE_ARB 0x80A0
#endif

#ifndef GL_SAMPLE_BUFFERS_ARB
#define GL_SAMPLE_BUFFERS_ARB 0x80A8
#endif

#ifndef GL_SAMPLES_ARB
#define GL_SAMPLES_ARB 0x80A9
#endif

#ifndef GL_SAMPLE_COVERAGE_VALUE_ARB
#define GL_SAMPLE_COVERAGE_VALUE_ARB 0x80AA
#endif

#ifndef GL_SAMPLE_COVERAGE_INVERT_ARB
#define GL_SAMPLE_COVERAGE_INVERT_ARB 0x80AB
#endif

#ifndef GL_MULTISAMPLE_SGIS
#define GL_MULTISAMPLE_SGIS 0x809D
#endif

#ifndef GL_SAMPLE_ALPHA_TO_MASK_SGIS
#define GL_SAMPLE_ALPHA_TO_MASK_SGIS 0x809E
#endif

#ifndef GL_SAMPLE_ALPHA_TO_ONE_SGIS
#define GL_SAMPLE_ALPHA_TO_ONE_SGIS 0x809F
#endif

#ifndef GL_SAMPLE_MASK_SGIS
#define GL_SAMPLE_MASK_SGIS 0x80A0
#endif

#ifndef GL_1PASS_SGIS
#define GL_1PASS_SGIS 0x80A1
#endif

#ifndef GL_2PASS_0_SGIS
#define GL_2PASS_0_SGIS 0x80A2
#endif

#ifndef GL_2PASS_1_SGIS
#define GL_2PASS_1_SGIS 0x80A3
#endif

#ifndef GL_4PASS_0_SGIS
#define GL_4PASS_0_SGIS 0x80A4
#endif

#ifndef GL_4PASS_1_SGIS
#define GL_4PASS_1_SGIS 0x80A5
#endif

#ifndef GL_4PASS_2_SGIS
#define GL_4PASS_2_SGIS 0x80A6
#endif

#ifndef GL_4PASS_3_SGIS
#define GL_4PASS_3_SGIS 0x80A7
#endif

#ifndef GL_SAMPLE_BUFFERS_SGIS
#define GL_SAMPLE_BUFFERS_SGIS 0x80A8
#endif

#ifndef GL_SAMPLES_SGIS
#define GL_SAMPLES_SGIS 0x80A9
#endif

#ifndef GL_SAMPLE_MASK_VALUE_SGIS
#define GL_SAMPLE_MASK_VALUE_SGIS 0x80AA
#endif

#ifndef GL_SAMPLE_MASK_INVERT_SGIS
#define GL_SAMPLE_MASK_INVERT_SGIS 0x80AB
#endif

#ifndef GL_SAMPLE_PATTERN_SGIS
#define GL_SAMPLE_PATTERN_SGIS 0x80AC
#endif

#ifndef GL_MULTISAMPLE_EXT
#define GL_MULTISAMPLE_EXT 0x809D
#endif

#ifndef GL_SAMPLE_ALPHA_TO_MASK_EXT
#define GL_SAMPLE_ALPHA_TO_MASK_EXT 0x809E
#endif

#ifndef GL_SAMPLE_ALPHA_TO_ONE_EXT
#define GL_SAMPLE_ALPHA_TO_ONE_EXT 0x809F
#endif

#ifndef GL_SAMPLE_MASK_EXT
#define GL_SAMPLE_MASK_EXT 0x80A0
#endif

#ifndef GL_1PASS_EXT
#define GL_1PASS_EXT 0x80A1
#endif

#ifndef GL_2PASS_0_EXT
#define GL_2PASS_0_EXT 0x80A2
#endif

#ifndef GL_2PASS_1_EXT
#define GL_2PASS_1_EXT 0x80A3
#endif

#ifndef GL_4PASS_0_EXT
#define GL_4PASS_0_EXT 0x80A4
#endif

#ifndef GL_4PASS_1_EXT
#define GL_4PASS_1_EXT 0x80A5
#endif

#ifndef GL_4PASS_2_EXT
#define GL_4PASS_2_EXT 0x80A6
#endif

#ifndef GL_4PASS_3_EXT
#define GL_4PASS_3_EXT 0x80A7
#endif

#ifndef GL_SAMPLE_BUFFERS_EXT
#define GL_SAMPLE_BUFFERS_EXT 0x80A8
#endif

#ifndef GL_SAMPLES_EXT
#define GL_SAMPLES_EXT 0x80A9
#endif

#ifndef GL_SAMPLE_MASK_VALUE_EXT
#define GL_SAMPLE_MASK_VALUE_EXT 0x80AA
#endif

#ifndef GL_SAMPLE_MASK_INVERT_EXT
#define GL_SAMPLE_MASK_INVERT_EXT 0x80AB
#endif

#ifndef GL_SAMPLE_PATTERN_EXT
#define GL_SAMPLE_PATTERN_EXT 0x80AC
#endif

#ifndef GL_MULTISAMPLE_BIT_EXT
#define GL_MULTISAMPLE_BIT_EXT 0x20000000
#endif

#ifndef GL_COVERAGE_SAMPLES_NV
#define GL_COVERAGE_SAMPLES_NV 0x80A9
#endif

#ifndef GL_LINEAR_SHARPEN_SGIS
#define GL_LINEAR_SHARPEN_SGIS 0x80AD
#endif

#ifndef GL_LINEAR_SHARPEN_ALPHA_SGIS
#define GL_LINEAR_SHARPEN_ALPHA_SGIS 0x80AE
#endif

#ifndef GL_LINEAR_SHARPEN_COLOR_SGIS
#define GL_LINEAR_SHARPEN_COLOR_SGIS 0x80AF
#endif

#ifndef GL_SHARPEN_TEXTURE_FUNC_POINTS_SGIS
#define GL_SHARPEN_TEXTURE_FUNC_POINTS_SGIS 0x80B0
#endif

#ifndef GL_COLOR_MATRIX
#define GL_COLOR_MATRIX 0x80B1
#endif

#ifndef GL_COLOR_MATRIX_STACK_DEPTH
#define GL_COLOR_MATRIX_STACK_DEPTH 0x80B2
#endif

#ifndef GL_MAX_COLOR_MATRIX_STACK_DEPTH
#define GL_MAX_COLOR_MATRIX_STACK_DEPTH 0x80B3
#endif

#ifndef GL_POST_COLOR_MATRIX_RED_SCALE
#define GL_POST_COLOR_MATRIX_RED_SCALE 0x80B4
#endif

#ifndef GL_POST_COLOR_MATRIX_GREEN_SCALE
#define GL_POST_COLOR_MATRIX_GREEN_SCALE 0x80B5
#endif

#ifndef GL_POST_COLOR_MATRIX_BLUE_SCALE
#define GL_POST_COLOR_MATRIX_BLUE_SCALE 0x80B6
#endif

#ifndef GL_POST_COLOR_MATRIX_ALPHA_SCALE
#define GL_POST_COLOR_MATRIX_ALPHA_SCALE 0x80B7
#endif

#ifndef GL_POST_COLOR_MATRIX_RED_BIAS
#define GL_POST_COLOR_MATRIX_RED_BIAS 0x80B8
#endif

#ifndef GL_POST_COLOR_MATRIX_GREEN_BIAS
#define GL_POST_COLOR_MATRIX_GREEN_BIAS 0x80B9
#endif

#ifndef GL_POST_COLOR_MATRIX_BLUE_BIAS
#define GL_POST_COLOR_MATRIX_BLUE_BIAS 0x80BA
#endif

#ifndef GL_POST_COLOR_MATRIX_ALPHA_BIAS
#define GL_POST_COLOR_MATRIX_ALPHA_BIAS 0x80BB
#endif

#ifndef GL_COLOR_MATRIX_SGI
#define GL_COLOR_MATRIX_SGI 0x80B1
#endif

#ifndef GL_COLOR_MATRIX_STACK_DEPTH_SGI
#define GL_COLOR_MATRIX_STACK_DEPTH_SGI 0x80B2
#endif

#ifndef GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI
#define GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI 0x80B3
#endif

#ifndef GL_POST_COLOR_MATRIX_RED_SCALE_SGI
#define GL_POST_COLOR_MATRIX_RED_SCALE_SGI 0x80B4
#endif

#ifndef GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI
#define GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI 0x80B5
#endif

#ifndef GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI
#define GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI 0x80B6
#endif

#ifndef GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI
#define GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI 0x80B7
#endif

#ifndef GL_POST_COLOR_MATRIX_RED_BIAS_SGI
#define GL_POST_COLOR_MATRIX_RED_BIAS_SGI 0x80B8
#endif

#ifndef GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI
#define GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI 0x80B9
#endif

#ifndef GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI
#define GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI 0x80BA
#endif

#ifndef GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI
#define GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI 0x80BB
#endif

#ifndef GL_TEXTURE_COLOR_TABLE_SGI
#define GL_TEXTURE_COLOR_TABLE_SGI 0x80BC
#endif

#ifndef GL_PROXY_TEXTURE_COLOR_TABLE_SGI
#define GL_PROXY_TEXTURE_COLOR_TABLE_SGI 0x80BD
#endif

#ifndef GL_TEXTURE_ENV_BIAS_SGIX
#define GL_TEXTURE_ENV_BIAS_SGIX 0x80BE
#endif

#ifndef GL_SHADOW_AMBIENT_SGIX
#define GL_SHADOW_AMBIENT_SGIX 0x80BF
#endif

#ifndef GL_BLEND_DST_RGB
#define GL_BLEND_DST_RGB 0x80C8
#endif

#ifndef GL_BLEND_SRC_RGB
#define GL_BLEND_SRC_RGB 0x80C9
#endif

#ifndef GL_BLEND_DST_ALPHA
#define GL_BLEND_DST_ALPHA 0x80CA
#endif

#ifndef GL_BLEND_SRC_ALPHA
#define GL_BLEND_SRC_ALPHA 0x80CB
#endif

#ifndef GL_BLEND_DST_RGB_EXT
#define GL_BLEND_DST_RGB_EXT 0x80C8
#endif

#ifndef GL_BLEND_SRC_RGB_EXT
#define GL_BLEND_SRC_RGB_EXT 0x80C9
#endif

#ifndef GL_BLEND_DST_ALPHA_EXT
#define GL_BLEND_DST_ALPHA_EXT 0x80CA
#endif

#ifndef GL_BLEND_SRC_ALPHA_EXT
#define GL_BLEND_SRC_ALPHA_EXT 0x80CB
#endif

#ifndef GL_BLEND_DST_RGB_OES
#define GL_BLEND_DST_RGB_OES 0x80C8
#endif

#ifndef GL_BLEND_SRC_RGB_OES
#define GL_BLEND_SRC_RGB_OES 0x80C9
#endif

#ifndef GL_BLEND_DST_ALPHA_OES
#define GL_BLEND_DST_ALPHA_OES 0x80CA
#endif

#ifndef GL_BLEND_SRC_ALPHA_OES
#define GL_BLEND_SRC_ALPHA_OES 0x80CB
#endif

#ifndef GL_422_EXT
#define GL_422_EXT 0x80CC
#endif

#ifndef GL_422_REV_EXT
#define GL_422_REV_EXT 0x80CD
#endif

#ifndef GL_422_AVERAGE_EXT
#define GL_422_AVERAGE_EXT 0x80CE
#endif

#ifndef GL_422_REV_AVERAGE_EXT
#define GL_422_REV_AVERAGE_EXT 0x80CF
#endif

#ifndef GL_COLOR_TABLE
#define GL_COLOR_TABLE 0x80D0
#endif

#ifndef GL_POST_CONVOLUTION_COLOR_TABLE
#define GL_POST_CONVOLUTION_COLOR_TABLE 0x80D1
#endif

#ifndef GL_POST_COLOR_MATRIX_COLOR_TABLE
#define GL_POST_COLOR_MATRIX_COLOR_TABLE 0x80D2
#endif

#ifndef GL_PROXY_COLOR_TABLE
#define GL_PROXY_COLOR_TABLE 0x80D3
#endif

#ifndef GL_PROXY_POST_CONVOLUTION_COLOR_TABLE
#define GL_PROXY_POST_CONVOLUTION_COLOR_TABLE 0x80D4
#endif

#ifndef GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE
#define GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE 0x80D5
#endif

#ifndef GL_COLOR_TABLE_SCALE
#define GL_COLOR_TABLE_SCALE 0x80D6
#endif

#ifndef GL_COLOR_TABLE_BIAS
#define GL_COLOR_TABLE_BIAS 0x80D7
#endif

#ifndef GL_COLOR_TABLE_FORMAT
#define GL_COLOR_TABLE_FORMAT 0x80D8
#endif

#ifndef GL_COLOR_TABLE_WIDTH
#define GL_COLOR_TABLE_WIDTH 0x80D9
#endif

#ifndef GL_COLOR_TABLE_RED_SIZE
#define GL_COLOR_TABLE_RED_SIZE 0x80DA
#endif

#ifndef GL_COLOR_TABLE_GREEN_SIZE
#define GL_COLOR_TABLE_GREEN_SIZE 0x80DB
#endif

#ifndef GL_COLOR_TABLE_BLUE_SIZE
#define GL_COLOR_TABLE_BLUE_SIZE 0x80DC
#endif

#ifndef GL_COLOR_TABLE_ALPHA_SIZE
#define GL_COLOR_TABLE_ALPHA_SIZE 0x80DD
#endif

#ifndef GL_COLOR_TABLE_LUMINANCE_SIZE
#define GL_COLOR_TABLE_LUMINANCE_SIZE 0x80DE
#endif

#ifndef GL_COLOR_TABLE_INTENSITY_SIZE
#define GL_COLOR_TABLE_INTENSITY_SIZE 0x80DF
#endif

#ifndef GL_COLOR_TABLE_SGI
#define GL_COLOR_TABLE_SGI 0x80D0
#endif

#ifndef GL_POST_CONVOLUTION_COLOR_TABLE_SGI
#define GL_POST_CONVOLUTION_COLOR_TABLE_SGI 0x80D1
#endif

#ifndef GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI
#define GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI 0x80D2
#endif

#ifndef GL_PROXY_COLOR_TABLE_SGI
#define GL_PROXY_COLOR_TABLE_SGI 0x80D3
#endif

#ifndef GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI
#define GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI 0x80D4
#endif

#ifndef GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI
#define GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI 0x80D5
#endif

#ifndef GL_COLOR_TABLE_SCALE_SGI
#define GL_COLOR_TABLE_SCALE_SGI 0x80D6
#endif

#ifndef GL_COLOR_TABLE_BIAS_SGI
#define GL_COLOR_TABLE_BIAS_SGI 0x80D7
#endif

#ifndef GL_COLOR_TABLE_FORMAT_SGI
#define GL_COLOR_TABLE_FORMAT_SGI 0x80D8
#endif

#ifndef GL_COLOR_TABLE_WIDTH_SGI
#define GL_COLOR_TABLE_WIDTH_SGI 0x80D9
#endif

#ifndef GL_COLOR_TABLE_RED_SIZE_SGI
#define GL_COLOR_TABLE_RED_SIZE_SGI 0x80DA
#endif

#ifndef GL_COLOR_TABLE_GREEN_SIZE_SGI
#define GL_COLOR_TABLE_GREEN_SIZE_SGI 0x80DB
#endif

#ifndef GL_COLOR_TABLE_BLUE_SIZE_SGI
#define GL_COLOR_TABLE_BLUE_SIZE_SGI 0x80DC
#endif

#ifndef GL_COLOR_TABLE_ALPHA_SIZE_SGI
#define GL_COLOR_TABLE_ALPHA_SIZE_SGI 0x80DD
#endif

#ifndef GL_COLOR_TABLE_LUMINANCE_SIZE_SGI
#define GL_COLOR_TABLE_LUMINANCE_SIZE_SGI 0x80DE
#endif

#ifndef GL_COLOR_TABLE_INTENSITY_SIZE_SGI
#define GL_COLOR_TABLE_INTENSITY_SIZE_SGI 0x80DF
#endif

#ifndef GL_BGR
#define GL_BGR 0x80E0
#endif

#ifndef GL_BGRA
#define GL_BGRA 0x80E1
#endif

#ifndef GL_BGR_EXT
#define GL_BGR_EXT 0x80E0
#endif

#ifndef GL_BGRA_EXT
#define GL_BGRA_EXT 0x80E1
#endif

#ifndef GL_MAX_ELEMENTS_VERTICES
#define GL_MAX_ELEMENTS_VERTICES 0x80E8
#endif

#ifndef GL_MAX_ELEMENTS_INDICES
#define GL_MAX_ELEMENTS_INDICES 0x80E9
#endif

#ifndef GL_DUAL_ALPHA4_SGIS
#define GL_DUAL_ALPHA4_SGIS 0x8110
#endif

#ifndef GL_DUAL_ALPHA8_SGIS
#define GL_DUAL_ALPHA8_SGIS 0x8111
#endif

#ifndef GL_DUAL_ALPHA12_SGIS
#define GL_DUAL_ALPHA12_SGIS 0x8112
#endif

#ifndef GL_DUAL_ALPHA16_SGIS
#define GL_DUAL_ALPHA16_SGIS 0x8113
#endif

#ifndef GL_DUAL_LUMINANCE4_SGIS
#define GL_DUAL_LUMINANCE4_SGIS 0x8114
#endif

#ifndef GL_DUAL_LUMINANCE8_SGIS
#define GL_DUAL_LUMINANCE8_SGIS 0x8115
#endif

#ifndef GL_DUAL_LUMINANCE12_SGIS
#define GL_DUAL_LUMINANCE12_SGIS 0x8116
#endif

#ifndef GL_DUAL_LUMINANCE16_SGIS
#define GL_DUAL_LUMINANCE16_SGIS 0x8117
#endif

#ifndef GL_DUAL_INTENSITY4_SGIS
#define GL_DUAL_INTENSITY4_SGIS 0x8118
#endif

#ifndef GL_DUAL_INTENSITY8_SGIS
#define GL_DUAL_INTENSITY8_SGIS 0x8119
#endif

#ifndef GL_DUAL_INTENSITY12_SGIS
#define GL_DUAL_INTENSITY12_SGIS 0x811A
#endif

#ifndef GL_DUAL_INTENSITY16_SGIS
#define GL_DUAL_INTENSITY16_SGIS 0x811B
#endif

#ifndef GL_DUAL_LUMINANCE_ALPHA4_SGIS
#define GL_DUAL_LUMINANCE_ALPHA4_SGIS 0x811C
#endif

#ifndef GL_DUAL_LUMINANCE_ALPHA8_SGIS
#define GL_DUAL_LUMINANCE_ALPHA8_SGIS 0x811D
#endif

#ifndef GL_QUAD_ALPHA4_SGIS
#define GL_QUAD_ALPHA4_SGIS 0x811E
#endif

#ifndef GL_QUAD_ALPHA8_SGIS
#define GL_QUAD_ALPHA8_SGIS 0x811F
#endif

#ifndef GL_QUAD_LUMINANCE4_SGIS
#define GL_QUAD_LUMINANCE4_SGIS 0x8120
#endif

#ifndef GL_QUAD_LUMINANCE8_SGIS
#define GL_QUAD_LUMINANCE8_SGIS 0x8121
#endif

#ifndef GL_QUAD_INTENSITY4_SGIS
#define GL_QUAD_INTENSITY4_SGIS 0x8122
#endif

#ifndef GL_QUAD_INTENSITY8_SGIS
#define GL_QUAD_INTENSITY8_SGIS 0x8123
#endif

#ifndef GL_DUAL_TEXTURE_SELECT_SGIS
#define GL_DUAL_TEXTURE_SELECT_SGIS 0x8124
#endif

#ifndef GL_QUAD_TEXTURE_SELECT_SGIS
#define GL_QUAD_TEXTURE_SELECT_SGIS 0x8125
#endif

#ifndef GL_POINT_SIZE_MIN
#define GL_POINT_SIZE_MIN 0x8126
#endif

#ifndef GL_POINT_SIZE_MAX
#define GL_POINT_SIZE_MAX 0x8127
#endif

#ifndef GL_POINT_FADE_THRESHOLD_SIZE
#define GL_POINT_FADE_THRESHOLD_SIZE 0x8128
#endif

#ifndef GL_POINT_DISTANCE_ATTENUATION
#define GL_POINT_DISTANCE_ATTENUATION 0x8129
#endif

#ifndef GL_POINT_SIZE_MIN_ARB
#define GL_POINT_SIZE_MIN_ARB 0x8126
#endif

#ifndef GL_POINT_SIZE_MAX_ARB
#define GL_POINT_SIZE_MAX_ARB 0x8127
#endif

#ifndef GL_POINT_FADE_THRESHOLD_SIZE_ARB
#define GL_POINT_FADE_THRESHOLD_SIZE_ARB 0x8128
#endif

#ifndef GL_POINT_DISTANCE_ATTENUATION_ARB
#define GL_POINT_DISTANCE_ATTENUATION_ARB 0x8129
#endif

#ifndef GL_POINT_SIZE_MIN_EXT
#define GL_POINT_SIZE_MIN_EXT 0x8126
#endif

#ifndef GL_POINT_SIZE_MAX_EXT
#define GL_POINT_SIZE_MAX_EXT 0x8127
#endif

#ifndef GL_POINT_FADE_THRESHOLD_SIZE_EXT
#define GL_POINT_FADE_THRESHOLD_SIZE_EXT 0x8128
#endif

#ifndef GL_DISTANCE_ATTENUATION_EXT
#define GL_DISTANCE_ATTENUATION_EXT 0x8129
#endif

#ifndef GL_POINT_SIZE_MIN_SGIS
#define GL_POINT_SIZE_MIN_SGIS 0x8126
#endif

#ifndef GL_POINT_SIZE_MAX_SGIS
#define GL_POINT_SIZE_MAX_SGIS 0x8127
#endif

#ifndef GL_POINT_FADE_THRESHOLD_SIZE_SGIS
#define GL_POINT_FADE_THRESHOLD_SIZE_SGIS 0x8128
#endif

#ifndef GL_DISTANCE_ATTENUATION_SGIS
#define GL_DISTANCE_ATTENUATION_SGIS 0x8129
#endif

#ifndef GL_FOG_FUNC_SGIS
#define GL_FOG_FUNC_SGIS 0x812A
#endif

#ifndef GL_FOG_FUNC_POINTS_SGIS
#define GL_FOG_FUNC_POINTS_SGIS 0x812B
#endif

#ifndef GL_MAX_FOG_FUNC_POINTS_SGIS
#define GL_MAX_FOG_FUNC_POINTS_SGIS 0x812C
#endif

#ifndef GL_CLAMP_TO_BORDER
#define GL_CLAMP_TO_BORDER 0x812D
#endif

#ifndef GL_CLAMP_TO_BORDER_ARB
#define GL_CLAMP_TO_BORDER_ARB 0x812D
#endif

#ifndef GL_CLAMP_TO_BORDER_SGIS
#define GL_CLAMP_TO_BORDER_SGIS 0x812D
#endif

#ifndef GL_TEXTURE_MULTI_BUFFER_HINT_SGIX
#define GL_TEXTURE_MULTI_BUFFER_HINT_SGIX 0x812E
#endif

#ifndef GL_CLAMP_TO_EDGE
#define GL_CLAMP_TO_EDGE 0x812F
#endif

#ifndef GL_CLAMP_TO_EDGE_SGIS
#define GL_CLAMP_TO_EDGE_SGIS 0x812F
#endif

#ifndef GL_PACK_SKIP_VOLUMES_SGIS
#define GL_PACK_SKIP_VOLUMES_SGIS 0x8130
#endif

#ifndef GL_PACK_IMAGE_DEPTH_SGIS
#define GL_PACK_IMAGE_DEPTH_SGIS 0x8131
#endif

#ifndef GL_UNPACK_SKIP_VOLUMES_SGIS
#define GL_UNPACK_SKIP_VOLUMES_SGIS 0x8132
#endif

#ifndef GL_UNPACK_IMAGE_DEPTH_SGIS
#define GL_UNPACK_IMAGE_DEPTH_SGIS 0x8133
#endif

#ifndef GL_TEXTURE_4D_SGIS
#define GL_TEXTURE_4D_SGIS 0x8134
#endif

#ifndef GL_PROXY_TEXTURE_4D_SGIS
#define GL_PROXY_TEXTURE_4D_SGIS 0x8135
#endif

#ifndef GL_TEXTURE_4DSIZE_SGIS
#define GL_TEXTURE_4DSIZE_SGIS 0x8136
#endif

#ifndef GL_TEXTURE_WRAP_Q_SGIS
#define GL_TEXTURE_WRAP_Q_SGIS 0x8137
#endif

#ifndef GL_MAX_4D_TEXTURE_SIZE_SGIS
#define GL_MAX_4D_TEXTURE_SIZE_SGIS 0x8138
#endif

#ifndef GL_TEXTURE_4D_BINDING_SGIS
#define GL_TEXTURE_4D_BINDING_SGIS 0x814F
#endif

#ifndef GL_PIXEL_TEX_GEN_SGIX
#define GL_PIXEL_TEX_GEN_SGIX 0x8139
#endif

#ifndef GL_PIXEL_TEX_GEN_MODE_SGIX
#define GL_PIXEL_TEX_GEN_MODE_SGIX 0x832B
#endif

#ifndef GL_TEXTURE_MIN_LOD
#define GL_TEXTURE_MIN_LOD 0x813A
#endif

#ifndef GL_TEXTURE_MAX_LOD
#define GL_TEXTURE_MAX_LOD 0x813B
#endif

#ifndef GL_TEXTURE_BASE_LEVEL
#define GL_TEXTURE_BASE_LEVEL 0x813C
#endif

#ifndef GL_TEXTURE_MAX_LEVEL
#define GL_TEXTURE_MAX_LEVEL 0x813D
#endif

#ifndef GL_TEXTURE_MIN_LOD_SGIS
#define GL_TEXTURE_MIN_LOD_SGIS 0x813A
#endif

#ifndef GL_TEXTURE_MAX_LOD_SGIS
#define GL_TEXTURE_MAX_LOD_SGIS 0x813B
#endif

#ifndef GL_TEXTURE_BASE_LEVEL_SGIS
#define GL_TEXTURE_BASE_LEVEL_SGIS 0x813C
#endif

#ifndef GL_TEXTURE_MAX_LEVEL_SGIS
#define GL_TEXTURE_MAX_LEVEL_SGIS 0x813D
#endif

#ifndef GL_PIXEL_TILE_BEST_ALIGNMENT_SGIX
#define GL_PIXEL_TILE_BEST_ALIGNMENT_SGIX 0x813E
#endif

#ifndef GL_PIXEL_TILE_CACHE_INCREMENT_SGIX
#define GL_PIXEL_TILE_CACHE_INCREMENT_SGIX 0x813F
#endif

#ifndef GL_PIXEL_TILE_WIDTH_SGIX
#define GL_PIXEL_TILE_WIDTH_SGIX 0x8140
#endif

#ifndef GL_PIXEL_TILE_HEIGHT_SGIX
#define GL_PIXEL_TILE_HEIGHT_SGIX 0x8141
#endif

#ifndef GL_PIXEL_TILE_GRID_WIDTH_SGIX
#define GL_PIXEL_TILE_GRID_WIDTH_SGIX 0x8142
#endif

#ifndef GL_PIXEL_TILE_GRID_HEIGHT_SGIX
#define GL_PIXEL_TILE_GRID_HEIGHT_SGIX 0x8143
#endif

#ifndef GL_PIXEL_TILE_GRID_DEPTH_SGIX
#define GL_PIXEL_TILE_GRID_DEPTH_SGIX 0x8144
#endif

#ifndef GL_PIXEL_TILE_CACHE_SIZE_SGIX
#define GL_PIXEL_TILE_CACHE_SIZE_SGIX 0x8145
#endif

#ifndef GL_FILTER4_SGIS
#define GL_FILTER4_SGIS 0x8146
#endif

#ifndef GL_TEXTURE_FILTER4_SIZE_SGIS
#define GL_TEXTURE_FILTER4_SIZE_SGIS 0x8147
#endif

#ifndef GL_SPRITE_SGIX
#define GL_SPRITE_SGIX 0x8148
#endif

#ifndef GL_SPRITE_MODE_SGIX
#define GL_SPRITE_MODE_SGIX 0x8149
#endif

#ifndef GL_SPRITE_AXIS_SGIX
#define GL_SPRITE_AXIS_SGIX 0x814A
#endif

#ifndef GL_SPRITE_TRANSLATION_SGIX
#define GL_SPRITE_TRANSLATION_SGIX 0x814B
#endif

#ifndef GL_SPRITE_AXIAL_SGIX
#define GL_SPRITE_AXIAL_SGIX 0x814C
#endif

#ifndef GL_SPRITE_OBJECT_ALIGNED_SGIX
#define GL_SPRITE_OBJECT_ALIGNED_SGIX 0x814D
#endif

#ifndef GL_SPRITE_EYE_ALIGNED_SGIX
#define GL_SPRITE_EYE_ALIGNED_SGIX 0x814E
#endif

#ifndef GL_CONSTANT_BORDER
#define GL_CONSTANT_BORDER 0x8151
#endif

#ifndef GL_IGNORE_BORDER_HP
#define GL_IGNORE_BORDER_HP 0x8150
#endif

#ifndef GL_CONSTANT_BORDER_HP
#define GL_CONSTANT_BORDER_HP 0x8151
#endif

#ifndef GL_REPLICATE_BORDER_HP
#define GL_REPLICATE_BORDER_HP 0x8153
#endif

#ifndef GL_CONVOLUTION_BORDER_COLOR_HP
#define GL_CONVOLUTION_BORDER_COLOR_HP 0x8154
#endif

#ifndef GL_LINEAR_CLIPMAP_LINEAR_SGIX
#define GL_LINEAR_CLIPMAP_LINEAR_SGIX 0x8170
#endif

#ifndef GL_TEXTURE_CLIPMAP_CENTER_SGIX
#define GL_TEXTURE_CLIPMAP_CENTER_SGIX 0x8171
#endif

#ifndef GL_TEXTURE_CLIPMAP_FRAME_SGIX
#define GL_TEXTURE_CLIPMAP_FRAME_SGIX 0x8172
#endif

#ifndef GL_TEXTURE_CLIPMAP_OFFSET_SGIX
#define GL_TEXTURE_CLIPMAP_OFFSET_SGIX 0x8173
#endif

#ifndef GL_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX
#define GL_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX 0x8174
#endif

#ifndef GL_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX
#define GL_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX 0x8175
#endif

#ifndef GL_TEXTURE_CLIPMAP_DEPTH_SGIX
#define GL_TEXTURE_CLIPMAP_DEPTH_SGIX 0x8176
#endif

#ifndef GL_MAX_CLIPMAP_DEPTH_SGIX
#define GL_MAX_CLIPMAP_DEPTH_SGIX 0x8177
#endif

#ifndef GL_MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX
#define GL_MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX 0x8178
#endif

#ifndef GL_NEAREST_CLIPMAP_NEAREST_SGIX
#define GL_NEAREST_CLIPMAP_NEAREST_SGIX 0x844D
#endif

#ifndef GL_NEAREST_CLIPMAP_LINEAR_SGIX
#define GL_NEAREST_CLIPMAP_LINEAR_SGIX 0x844E
#endif

#ifndef GL_LINEAR_CLIPMAP_NEAREST_SGIX
#define GL_LINEAR_CLIPMAP_NEAREST_SGIX 0x844F
#endif

#ifndef GL_POST_TEXTURE_FILTER_BIAS_SGIX
#define GL_POST_TEXTURE_FILTER_BIAS_SGIX 0x8179
#endif

#ifndef GL_POST_TEXTURE_FILTER_SCALE_SGIX
#define GL_POST_TEXTURE_FILTER_SCALE_SGIX 0x817A
#endif

#ifndef GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX
#define GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX 0x817B
#endif

#ifndef GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX
#define GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX 0x817C
#endif

#ifndef GL_REFERENCE_PLANE_SGIX
#define GL_REFERENCE_PLANE_SGIX 0x817D
#endif

#ifndef GL_REFERENCE_PLANE_EQUATION_SGIX
#define GL_REFERENCE_PLANE_EQUATION_SGIX 0x817E
#endif

#ifndef GL_IR_INSTRUMENT1_SGIX
#define GL_IR_INSTRUMENT1_SGIX 0x817F
#endif

#ifndef GL_INSTRUMENT_BUFFER_POINTER_SGIX
#define GL_INSTRUMENT_BUFFER_POINTER_SGIX 0x8180
#endif

#ifndef GL_INSTRUMENT_MEASUREMENTS_SGIX
#define GL_INSTRUMENT_MEASUREMENTS_SGIX 0x8181
#endif

#ifndef GL_LIST_PRIORITY_SGIX
#define GL_LIST_PRIORITY_SGIX 0x8182
#endif

#ifndef GL_CALLIGRAPHIC_FRAGMENT_SGIX
#define GL_CALLIGRAPHIC_FRAGMENT_SGIX 0x8183
#endif

#ifndef GL_PIXEL_TEX_GEN_Q_CEILING_SGIX
#define GL_PIXEL_TEX_GEN_Q_CEILING_SGIX 0x8184
#endif

#ifndef GL_PIXEL_TEX_GEN_Q_ROUND_SGIX
#define GL_PIXEL_TEX_GEN_Q_ROUND_SGIX 0x8185
#endif

#ifndef GL_PIXEL_TEX_GEN_Q_FLOOR_SGIX
#define GL_PIXEL_TEX_GEN_Q_FLOOR_SGIX 0x8186
#endif

#ifndef GL_PIXEL_TEX_GEN_ALPHA_REPLACE_SGIX
#define GL_PIXEL_TEX_GEN_ALPHA_REPLACE_SGIX 0x8187
#endif

#ifndef GL_PIXEL_TEX_GEN_ALPHA_NO_REPLACE_SGIX
#define GL_PIXEL_TEX_GEN_ALPHA_NO_REPLACE_SGIX 0x8188
#endif

#ifndef GL_PIXEL_TEX_GEN_ALPHA_LS_SGIX
#define GL_PIXEL_TEX_GEN_ALPHA_LS_SGIX 0x8189
#endif

#ifndef GL_PIXEL_TEX_GEN_ALPHA_MS_SGIX
#define GL_PIXEL_TEX_GEN_ALPHA_MS_SGIX 0x818A
#endif

#ifndef GL_FRAMEZOOM_SGIX
#define GL_FRAMEZOOM_SGIX 0x818B
#endif

#ifndef GL_FRAMEZOOM_FACTOR_SGIX
#define GL_FRAMEZOOM_FACTOR_SGIX 0x818C
#endif

#ifndef GL_MAX_FRAMEZOOM_FACTOR_SGIX
#define GL_MAX_FRAMEZOOM_FACTOR_SGIX 0x818D
#endif

#ifndef GL_TEXTURE_LOD_BIAS_S_SGIX
#define GL_TEXTURE_LOD_BIAS_S_SGIX 0x818E
#endif

#ifndef GL_TEXTURE_LOD_BIAS_T_SGIX
#define GL_TEXTURE_LOD_BIAS_T_SGIX 0x818F
#endif

#ifndef GL_TEXTURE_LOD_BIAS_R_SGIX
#define GL_TEXTURE_LOD_BIAS_R_SGIX 0x8190
#endif

#ifndef GL_GENERATE_MIPMAP
#define GL_GENERATE_MIPMAP 0x8191
#endif

#ifndef GL_GENERATE_MIPMAP_HINT
#define GL_GENERATE_MIPMAP_HINT 0x8192
#endif

#ifndef GL_GENERATE_MIPMAP_SGIS
#define GL_GENERATE_MIPMAP_SGIS 0x8191
#endif

#ifndef GL_GENERATE_MIPMAP_HINT_SGIS
#define GL_GENERATE_MIPMAP_HINT_SGIS 0x8192
#endif

#ifndef GL_GEOMETRY_DEFORMATION_SGIX
#define GL_GEOMETRY_DEFORMATION_SGIX 0x8194
#endif

#ifndef GL_TEXTURE_DEFORMATION_SGIX
#define GL_TEXTURE_DEFORMATION_SGIX 0x8195
#endif

#ifndef GL_DEFORMATIONS_MASK_SGIX
#define GL_DEFORMATIONS_MASK_SGIX 0x8196
#endif

#ifndef GL_MAX_DEFORMATION_ORDER_SGIX
#define GL_MAX_DEFORMATION_ORDER_SGIX 0x8197
#endif

#ifndef GL_FOG_OFFSET_SGIX
#define GL_FOG_OFFSET_SGIX 0x8198
#endif

#ifndef GL_FOG_OFFSET_VALUE_SGIX
#define GL_FOG_OFFSET_VALUE_SGIX 0x8199
#endif

#ifndef GL_TEXTURE_COMPARE_SGIX
#define GL_TEXTURE_COMPARE_SGIX 0x819A
#endif

#ifndef GL_TEXTURE_COMPARE_OPERATOR_SGIX
#define GL_TEXTURE_COMPARE_OPERATOR_SGIX 0x819B
#endif

#ifndef GL_TEXTURE_LEQUAL_R_SGIX
#define GL_TEXTURE_LEQUAL_R_SGIX 0x819C
#endif

#ifndef GL_TEXTURE_GEQUAL_R_SGIX
#define GL_TEXTURE_GEQUAL_R_SGIX 0x819D
#endif

#ifndef GL_DEPTH_COMPONENT16
#define GL_DEPTH_COMPONENT16 0x81A5
#endif

#ifndef GL_DEPTH_COMPONENT24
#define GL_DEPTH_COMPONENT24 0x81A6
#endif

#ifndef GL_DEPTH_COMPONENT32
#define GL_DEPTH_COMPONENT32 0x81A7
#endif

#ifndef GL_DEPTH_COMPONENT16_ARB
#define GL_DEPTH_COMPONENT16_ARB 0x81A5
#endif

#ifndef GL_DEPTH_COMPONENT24_ARB
#define GL_DEPTH_COMPONENT24_ARB 0x81A6
#endif

#ifndef GL_DEPTH_COMPONENT32_ARB
#define GL_DEPTH_COMPONENT32_ARB 0x81A7
#endif

#ifndef GL_DEPTH_COMPONENT16_SGIX
#define GL_DEPTH_COMPONENT16_SGIX 0x81A5
#endif

#ifndef GL_DEPTH_COMPONENT24_SGIX
#define GL_DEPTH_COMPONENT24_SGIX 0x81A6
#endif

#ifndef GL_DEPTH_COMPONENT32_SGIX
#define GL_DEPTH_COMPONENT32_SGIX 0x81A7
#endif

#ifndef GL_DEPTH_COMPONENT16_OES
#define GL_DEPTH_COMPONENT16_OES 0x81A5
#endif

#ifndef GL_DEPTH_COMPONENT24_OES
#define GL_DEPTH_COMPONENT24_OES 0x81A6
#endif

#ifndef GL_DEPTH_COMPONENT32_OES
#define GL_DEPTH_COMPONENT32_OES 0x81A7
#endif

#ifndef GL_ARRAY_ELEMENT_LOCK_FIRST_EXT
#define GL_ARRAY_ELEMENT_LOCK_FIRST_EXT 0x81A8
#endif

#ifndef GL_ARRAY_ELEMENT_LOCK_COUNT_EXT
#define GL_ARRAY_ELEMENT_LOCK_COUNT_EXT 0x81A9
#endif

#ifndef GL_CULL_VERTEX_EXT
#define GL_CULL_VERTEX_EXT 0x81AA
#endif

#ifndef GL_CULL_VERTEX_EYE_POSITION_EXT
#define GL_CULL_VERTEX_EYE_POSITION_EXT 0x81AB
#endif

#ifndef GL_CULL_VERTEX_OBJECT_POSITION_EXT
#define GL_CULL_VERTEX_OBJECT_POSITION_EXT 0x81AC
#endif

#ifndef GL_IUI_V2F_EXT
#define GL_IUI_V2F_EXT 0x81AD
#endif

#ifndef GL_IUI_V3F_EXT
#define GL_IUI_V3F_EXT 0x81AE
#endif

#ifndef GL_IUI_N3F_V2F_EXT
#define GL_IUI_N3F_V2F_EXT 0x81AF
#endif

#ifndef GL_IUI_N3F_V3F_EXT
#define GL_IUI_N3F_V3F_EXT 0x81B0
#endif

#ifndef GL_T2F_IUI_V2F_EXT
#define GL_T2F_IUI_V2F_EXT 0x81B1
#endif

#ifndef GL_T2F_IUI_V3F_EXT
#define GL_T2F_IUI_V3F_EXT 0x81B2
#endif

#ifndef GL_T2F_IUI_N3F_V2F_EXT
#define GL_T2F_IUI_N3F_V2F_EXT 0x81B3
#endif

#ifndef GL_T2F_IUI_N3F_V3F_EXT
#define GL_T2F_IUI_N3F_V3F_EXT 0x81B4
#endif

#ifndef GL_INDEX_TEST_EXT
#define GL_INDEX_TEST_EXT 0x81B5
#endif

#ifndef GL_INDEX_TEST_FUNC_EXT
#define GL_INDEX_TEST_FUNC_EXT 0x81B6
#endif

#ifndef GL_INDEX_TEST_REF_EXT
#define GL_INDEX_TEST_REF_EXT 0x81B7
#endif

#ifndef GL_INDEX_MATERIAL_EXT
#define GL_INDEX_MATERIAL_EXT 0x81B8
#endif

#ifndef GL_INDEX_MATERIAL_PARAMETER_EXT
#define GL_INDEX_MATERIAL_PARAMETER_EXT 0x81B9
#endif

#ifndef GL_INDEX_MATERIAL_FACE_EXT
#define GL_INDEX_MATERIAL_FACE_EXT 0x81BA
#endif

#ifndef GL_YCRCB_422_SGIX
#define GL_YCRCB_422_SGIX 0x81BB
#endif

#ifndef GL_YCRCB_444_SGIX
#define GL_YCRCB_444_SGIX 0x81BC
#endif

#ifndef GL_RESTART_SUN
#define GL_RESTART_SUN 0x0001
#endif

#ifndef GL_REPLACE_MIDDLE_SUN
#define GL_REPLACE_MIDDLE_SUN 0x0002
#endif

#ifndef GL_REPLACE_OLDEST_SUN
#define GL_REPLACE_OLDEST_SUN 0x0003
#endif

#ifndef GL_WRAP_BORDER_SUN
#define GL_WRAP_BORDER_SUN 0x81D4
#endif

#ifndef GL_TRIANGLE_LIST_SUN
#define GL_TRIANGLE_LIST_SUN 0x81D7
#endif

#ifndef GL_REPLACEMENT_CODE_SUN
#define GL_REPLACEMENT_CODE_SUN 0x81D8
#endif

#ifndef GL_UNPACK_CONSTANT_DATA_SUNX
#define GL_UNPACK_CONSTANT_DATA_SUNX 0x81D5
#endif

#ifndef GL_TEXTURE_CONSTANT_DATA_SUNX
#define GL_TEXTURE_CONSTANT_DATA_SUNX 0x81D6
#endif

#ifndef GL_GLOBAL_ALPHA_SUN
#define GL_GLOBAL_ALPHA_SUN 0x81D9
#endif

#ifndef GL_GLOBAL_ALPHA_FACTOR_SUN
#define GL_GLOBAL_ALPHA_FACTOR_SUN 0x81DA
#endif

#ifndef GL_TEXTURE_COLOR_WRITEMASK_SGIS
#define GL_TEXTURE_COLOR_WRITEMASK_SGIS 0x81EF
#endif

#ifndef GL_EYE_DISTANCE_TO_POINT_SGIS
#define GL_EYE_DISTANCE_TO_POINT_SGIS 0x81F0
#endif

#ifndef GL_OBJECT_DISTANCE_TO_POINT_SGIS
#define GL_OBJECT_DISTANCE_TO_POINT_SGIS 0x81F1
#endif

#ifndef GL_EYE_DISTANCE_TO_LINE_SGIS
#define GL_EYE_DISTANCE_TO_LINE_SGIS 0x81F2
#endif

#ifndef GL_OBJECT_DISTANCE_TO_LINE_SGIS
#define GL_OBJECT_DISTANCE_TO_LINE_SGIS 0x81F3
#endif

#ifndef GL_EYE_POINT_SGIS
#define GL_EYE_POINT_SGIS 0x81F4
#endif

#ifndef GL_OBJECT_POINT_SGIS
#define GL_OBJECT_POINT_SGIS 0x81F5
#endif

#ifndef GL_EYE_LINE_SGIS
#define GL_EYE_LINE_SGIS 0x81F6
#endif

#ifndef GL_OBJECT_LINE_SGIS
#define GL_OBJECT_LINE_SGIS 0x81F7
#endif

#ifndef GL_LIGHT_MODEL_COLOR_CONTROL
#define GL_LIGHT_MODEL_COLOR_CONTROL 0x81F8
#endif

#ifndef GL_SINGLE_COLOR
#define GL_SINGLE_COLOR 0x81F9
#endif

#ifndef GL_SEPARATE_SPECULAR_COLOR
#define GL_SEPARATE_SPECULAR_COLOR 0x81FA
#endif

#ifndef GL_LIGHT_MODEL_COLOR_CONTROL_EXT
#define GL_LIGHT_MODEL_COLOR_CONTROL_EXT 0x81F8
#endif

#ifndef GL_SINGLE_COLOR_EXT
#define GL_SINGLE_COLOR_EXT 0x81F9
#endif

#ifndef GL_SEPARATE_SPECULAR_COLOR_EXT
#define GL_SEPARATE_SPECULAR_COLOR_EXT 0x81FA
#endif

#ifndef GL_SHARED_TEXTURE_PALETTE_EXT
#define GL_SHARED_TEXTURE_PALETTE_EXT 0x81FB
#endif

#ifndef GL_TEXT_FRAGMENT_SHADER_ATI
#define GL_TEXT_FRAGMENT_SHADER_ATI 0x8200
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING
#define GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING 0x8210
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE
#define GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE 0x8211
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE
#define GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE 0x8212
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE
#define GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE 0x8213
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE
#define GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE 0x8214
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE
#define GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE 0x8215
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE
#define GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE 0x8216
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE
#define GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE 0x8217
#endif

#ifndef GL_FRAMEBUFFER_DEFAULT
#define GL_FRAMEBUFFER_DEFAULT 0x8218
#endif

#ifndef GL_FRAMEBUFFER_UNDEFINED
#define GL_FRAMEBUFFER_UNDEFINED 0x8219
#endif

#ifndef GL_DEPTH_STENCIL_ATTACHMENT
#define GL_DEPTH_STENCIL_ATTACHMENT 0x821A
#endif

#ifndef GL_MAJOR_VERSION
#define GL_MAJOR_VERSION 0x821B
#endif

#ifndef GL_MINOR_VERSION
#define GL_MINOR_VERSION 0x821C
#endif

#ifndef GL_NUM_EXTENSIONS
#define GL_NUM_EXTENSIONS 0x821D
#endif

#ifndef GL_CONTEXT_FLAGS
#define GL_CONTEXT_FLAGS 0x821E
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT
#define GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT 0x8211
#endif

#ifndef GL_FRAMEBUFFER_UNDEFINED_OES
#define GL_FRAMEBUFFER_UNDEFINED_OES 0x8219
#endif

#ifndef GL_INDEX
#define GL_INDEX 0x8222
#endif

#ifndef GL_COMPRESSED_RED
#define GL_COMPRESSED_RED 0x8225
#endif

#ifndef GL_COMPRESSED_RG
#define GL_COMPRESSED_RG 0x8226
#endif

#ifndef GL_RG
#define GL_RG 0x8227
#endif

#ifndef GL_RG_INTEGER
#define GL_RG_INTEGER 0x8228
#endif

#ifndef GL_R8
#define GL_R8 0x8229
#endif

#ifndef GL_R16
#define GL_R16 0x822A
#endif

#ifndef GL_RG8
#define GL_RG8 0x822B
#endif

#ifndef GL_RG16
#define GL_RG16 0x822C
#endif

#ifndef GL_R16F
#define GL_R16F 0x822D
#endif

#ifndef GL_R32F
#define GL_R32F 0x822E
#endif

#ifndef GL_RG16F
#define GL_RG16F 0x822F
#endif

#ifndef GL_RG32F
#define GL_RG32F 0x8230
#endif

#ifndef GL_R8I
#define GL_R8I 0x8231
#endif

#ifndef GL_R8UI
#define GL_R8UI 0x8232
#endif

#ifndef GL_R16I
#define GL_R16I 0x8233
#endif

#ifndef GL_R16UI
#define GL_R16UI 0x8234
#endif

#ifndef GL_R32I
#define GL_R32I 0x8235
#endif

#ifndef GL_R32UI
#define GL_R32UI 0x8236
#endif

#ifndef GL_RG8I
#define GL_RG8I 0x8237
#endif

#ifndef GL_RG8UI
#define GL_RG8UI 0x8238
#endif

#ifndef GL_RG16I
#define GL_RG16I 0x8239
#endif

#ifndef GL_RG16UI
#define GL_RG16UI 0x823A
#endif

#ifndef GL_RG32I
#define GL_RG32I 0x823B
#endif

#ifndef GL_RG32UI
#define GL_RG32UI 0x823C
#endif

#ifndef GL_R16F_EXT
#define GL_R16F_EXT 0x822D
#endif

#ifndef GL_RG16F_EXT
#define GL_RG16F_EXT 0x822F
#endif

#ifndef GL_RG_EXT
#define GL_RG_EXT 0x8227
#endif

#ifndef GL_R8_EXT
#define GL_R8_EXT 0x8229
#endif

#ifndef GL_RG8_EXT
#define GL_RG8_EXT 0x822B
#endif

#ifndef GL_SYNC_CL_EVENT_ARB
#define GL_SYNC_CL_EVENT_ARB 0x8240
#endif

#ifndef GL_SYNC_CL_EVENT_COMPLETE_ARB
#define GL_SYNC_CL_EVENT_COMPLETE_ARB 0x8241
#endif

#ifndef GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB
#define GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB 0x8242
#endif

#ifndef GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB
#define GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB 0x8243
#endif

#ifndef GL_DEBUG_CALLBACK_FUNCTION_ARB
#define GL_DEBUG_CALLBACK_FUNCTION_ARB 0x8244
#endif

#ifndef GL_DEBUG_CALLBACK_USER_PARAM_ARB
#define GL_DEBUG_CALLBACK_USER_PARAM_ARB 0x8245
#endif

#ifndef GL_DEBUG_SOURCE_API_ARB
#define GL_DEBUG_SOURCE_API_ARB 0x8246
#endif

#ifndef GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB
#define GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB 0x8247
#endif

#ifndef GL_DEBUG_SOURCE_SHADER_COMPILER_ARB
#define GL_DEBUG_SOURCE_SHADER_COMPILER_ARB 0x8248
#endif

#ifndef GL_DEBUG_SOURCE_THIRD_PARTY_ARB
#define GL_DEBUG_SOURCE_THIRD_PARTY_ARB 0x8249
#endif

#ifndef GL_DEBUG_SOURCE_APPLICATION_ARB
#define GL_DEBUG_SOURCE_APPLICATION_ARB 0x824A
#endif

#ifndef GL_DEBUG_SOURCE_OTHER_ARB
#define GL_DEBUG_SOURCE_OTHER_ARB 0x824B
#endif

#ifndef GL_DEBUG_TYPE_ERROR_ARB
#define GL_DEBUG_TYPE_ERROR_ARB 0x824C
#endif

#ifndef GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB
#define GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB 0x824D
#endif

#ifndef GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB
#define GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB 0x824E
#endif

#ifndef GL_DEBUG_TYPE_PORTABILITY_ARB
#define GL_DEBUG_TYPE_PORTABILITY_ARB 0x824F
#endif

#ifndef GL_DEBUG_TYPE_PERFORMANCE_ARB
#define GL_DEBUG_TYPE_PERFORMANCE_ARB 0x8250
#endif

#ifndef GL_DEBUG_TYPE_OTHER_ARB
#define GL_DEBUG_TYPE_OTHER_ARB 0x8251
#endif

#ifndef GL_DEBUG_OUTPUT_SYNCHRONOUS
#define GL_DEBUG_OUTPUT_SYNCHRONOUS 0x8242
#endif

#ifndef GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH
#define GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH 0x8243
#endif

#ifndef GL_DEBUG_CALLBACK_FUNCTION
#define GL_DEBUG_CALLBACK_FUNCTION 0x8244
#endif

#ifndef GL_DEBUG_CALLBACK_USER_PARAM
#define GL_DEBUG_CALLBACK_USER_PARAM 0x8245
#endif

#ifndef GL_DEBUG_SOURCE_API
#define GL_DEBUG_SOURCE_API 0x8246
#endif

#ifndef GL_DEBUG_SOURCE_WINDOW_SYSTEM
#define GL_DEBUG_SOURCE_WINDOW_SYSTEM 0x8247
#endif

#ifndef GL_DEBUG_SOURCE_SHADER_COMPILER
#define GL_DEBUG_SOURCE_SHADER_COMPILER 0x8248
#endif

#ifndef GL_DEBUG_SOURCE_THIRD_PARTY
#define GL_DEBUG_SOURCE_THIRD_PARTY 0x8249
#endif

#ifndef GL_DEBUG_SOURCE_APPLICATION
#define GL_DEBUG_SOURCE_APPLICATION 0x824A
#endif

#ifndef GL_DEBUG_SOURCE_OTHER
#define GL_DEBUG_SOURCE_OTHER 0x824B
#endif

#ifndef GL_DEBUG_TYPE_ERROR
#define GL_DEBUG_TYPE_ERROR 0x824C
#endif

#ifndef GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR
#define GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR 0x824D
#endif

#ifndef GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR
#define GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR 0x824E
#endif

#ifndef GL_DEBUG_TYPE_PORTABILITY
#define GL_DEBUG_TYPE_PORTABILITY 0x824F
#endif

#ifndef GL_DEBUG_TYPE_PERFORMANCE
#define GL_DEBUG_TYPE_PERFORMANCE 0x8250
#endif

#ifndef GL_DEBUG_TYPE_OTHER
#define GL_DEBUG_TYPE_OTHER 0x8251
#endif

#ifndef GL_LOSE_CONTEXT_ON_RESET_ARB
#define GL_LOSE_CONTEXT_ON_RESET_ARB 0x8252
#endif

#ifndef GL_GUILTY_CONTEXT_RESET_ARB
#define GL_GUILTY_CONTEXT_RESET_ARB 0x8253
#endif

#ifndef GL_INNOCENT_CONTEXT_RESET_ARB
#define GL_INNOCENT_CONTEXT_RESET_ARB 0x8254
#endif

#ifndef GL_UNKNOWN_CONTEXT_RESET_ARB
#define GL_UNKNOWN_CONTEXT_RESET_ARB 0x8255
#endif

#ifndef GL_RESET_NOTIFICATION_STRATEGY_ARB
#define GL_RESET_NOTIFICATION_STRATEGY_ARB 0x8256
#endif

#ifndef GL_PROGRAM_BINARY_RETRIEVABLE_HINT
#define GL_PROGRAM_BINARY_RETRIEVABLE_HINT 0x8257
#endif

#ifndef GL_PROGRAM_SEPARABLE
#define GL_PROGRAM_SEPARABLE 0x8258
#endif

#ifndef GL_ACTIVE_PROGRAM
#define GL_ACTIVE_PROGRAM 0x8259
#endif

#ifndef GL_PROGRAM_PIPELINE_BINDING
#define GL_PROGRAM_PIPELINE_BINDING 0x825A
#endif

#ifndef GL_PROGRAM_SEPARABLE_EXT
#define GL_PROGRAM_SEPARABLE_EXT 0x8258
#endif

#ifndef GL_ACTIVE_PROGRAM_EXT
#define GL_ACTIVE_PROGRAM_EXT 0x8259
#endif

#ifndef GL_PROGRAM_PIPELINE_BINDING_EXT
#define GL_PROGRAM_PIPELINE_BINDING_EXT 0x825A
#endif

#ifndef GL_MAX_VIEWPORTS
#define GL_MAX_VIEWPORTS 0x825B
#endif

#ifndef GL_VIEWPORT_SUBPIXEL_BITS
#define GL_VIEWPORT_SUBPIXEL_BITS 0x825C
#endif

#ifndef GL_VIEWPORT_BOUNDS_RANGE
#define GL_VIEWPORT_BOUNDS_RANGE 0x825D
#endif

#ifndef GL_LAYER_PROVOKING_VERTEX
#define GL_LAYER_PROVOKING_VERTEX 0x825E
#endif

#ifndef GL_VIEWPORT_INDEX_PROVOKING_VERTEX
#define GL_VIEWPORT_INDEX_PROVOKING_VERTEX 0x825F
#endif

#ifndef GL_UNDEFINED_VERTEX
#define GL_UNDEFINED_VERTEX 0x8260
#endif

#ifndef GL_NO_RESET_NOTIFICATION_ARB
#define GL_NO_RESET_NOTIFICATION_ARB 0x8261
#endif

#ifndef GL_MAX_COMPUTE_SHARED_MEMORY_SIZE
#define GL_MAX_COMPUTE_SHARED_MEMORY_SIZE 0x8262
#endif

#ifndef GL_MAX_COMPUTE_UNIFORM_COMPONENTS
#define GL_MAX_COMPUTE_UNIFORM_COMPONENTS 0x8263
#endif

#ifndef GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS
#define GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS 0x8264
#endif

#ifndef GL_MAX_COMPUTE_ATOMIC_COUNTERS
#define GL_MAX_COMPUTE_ATOMIC_COUNTERS 0x8265
#endif

#ifndef GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS
#define GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS 0x8266
#endif

#ifndef GL_COMPUTE_LOCAL_WORK_SIZE
#define GL_COMPUTE_LOCAL_WORK_SIZE 0x8267
#endif

#ifndef GL_DEBUG_TYPE_MARKER
#define GL_DEBUG_TYPE_MARKER 0x8268
#endif

#ifndef GL_DEBUG_TYPE_PUSH_GROUP
#define GL_DEBUG_TYPE_PUSH_GROUP 0x8269
#endif

#ifndef GL_DEBUG_TYPE_POP_GROUP
#define GL_DEBUG_TYPE_POP_GROUP 0x826A
#endif

#ifndef GL_DEBUG_SEVERITY_NOTIFICATION
#define GL_DEBUG_SEVERITY_NOTIFICATION 0x826B
#endif

#ifndef GL_MAX_DEBUG_GROUP_STACK_DEPTH
#define GL_MAX_DEBUG_GROUP_STACK_DEPTH 0x826C
#endif

#ifndef GL_DEBUG_GROUP_STACK_DEPTH
#define GL_DEBUG_GROUP_STACK_DEPTH 0x826D
#endif

#ifndef GL_MAX_UNIFORM_LOCATIONS
#define GL_MAX_UNIFORM_LOCATIONS 0x826E
#endif

#ifndef GL_INTERNALFORMAT_SUPPORTED
#define GL_INTERNALFORMAT_SUPPORTED 0x826F
#endif

#ifndef GL_INTERNALFORMAT_PREFERRED
#define GL_INTERNALFORMAT_PREFERRED 0x8270
#endif

#ifndef GL_INTERNALFORMAT_RED_SIZE
#define GL_INTERNALFORMAT_RED_SIZE 0x8271
#endif

#ifndef GL_INTERNALFORMAT_GREEN_SIZE
#define GL_INTERNALFORMAT_GREEN_SIZE 0x8272
#endif

#ifndef GL_INTERNALFORMAT_BLUE_SIZE
#define GL_INTERNALFORMAT_BLUE_SIZE 0x8273
#endif

#ifndef GL_INTERNALFORMAT_ALPHA_SIZE
#define GL_INTERNALFORMAT_ALPHA_SIZE 0x8274
#endif

#ifndef GL_INTERNALFORMAT_DEPTH_SIZE
#define GL_INTERNALFORMAT_DEPTH_SIZE 0x8275
#endif

#ifndef GL_INTERNALFORMAT_STENCIL_SIZE
#define GL_INTERNALFORMAT_STENCIL_SIZE 0x8276
#endif

#ifndef GL_INTERNALFORMAT_SHARED_SIZE
#define GL_INTERNALFORMAT_SHARED_SIZE 0x8277
#endif

#ifndef GL_INTERNALFORMAT_RED_TYPE
#define GL_INTERNALFORMAT_RED_TYPE 0x8278
#endif

#ifndef GL_INTERNALFORMAT_GREEN_TYPE
#define GL_INTERNALFORMAT_GREEN_TYPE 0x8279
#endif

#ifndef GL_INTERNALFORMAT_BLUE_TYPE
#define GL_INTERNALFORMAT_BLUE_TYPE 0x827A
#endif

#ifndef GL_INTERNALFORMAT_ALPHA_TYPE
#define GL_INTERNALFORMAT_ALPHA_TYPE 0x827B
#endif

#ifndef GL_INTERNALFORMAT_DEPTH_TYPE
#define GL_INTERNALFORMAT_DEPTH_TYPE 0x827C
#endif

#ifndef GL_INTERNALFORMAT_STENCIL_TYPE
#define GL_INTERNALFORMAT_STENCIL_TYPE 0x827D
#endif

#ifndef GL_MAX_WIDTH
#define GL_MAX_WIDTH 0x827E
#endif

#ifndef GL_MAX_HEIGHT
#define GL_MAX_HEIGHT 0x827F
#endif

#ifndef GL_MAX_DEPTH
#define GL_MAX_DEPTH 0x8280
#endif

#ifndef GL_MAX_LAYERS
#define GL_MAX_LAYERS 0x8281
#endif

#ifndef GL_MAX_COMBINED_DIMENSIONS
#define GL_MAX_COMBINED_DIMENSIONS 0x8282
#endif

#ifndef GL_COLOR_COMPONENTS
#define GL_COLOR_COMPONENTS 0x8283
#endif

#ifndef GL_DEPTH_COMPONENTS
#define GL_DEPTH_COMPONENTS 0x8284
#endif

#ifndef GL_STENCIL_COMPONENTS
#define GL_STENCIL_COMPONENTS 0x8285
#endif

#ifndef GL_COLOR_RENDERABLE
#define GL_COLOR_RENDERABLE 0x8286
#endif

#ifndef GL_DEPTH_RENDERABLE
#define GL_DEPTH_RENDERABLE 0x8287
#endif

#ifndef GL_STENCIL_RENDERABLE
#define GL_STENCIL_RENDERABLE 0x8288
#endif

#ifndef GL_FRAMEBUFFER_RENDERABLE
#define GL_FRAMEBUFFER_RENDERABLE 0x8289
#endif

#ifndef GL_FRAMEBUFFER_RENDERABLE_LAYERED
#define GL_FRAMEBUFFER_RENDERABLE_LAYERED 0x828A
#endif

#ifndef GL_FRAMEBUFFER_BLEND
#define GL_FRAMEBUFFER_BLEND 0x828B
#endif

#ifndef GL_READ_PIXELS
#define GL_READ_PIXELS 0x828C
#endif

#ifndef GL_READ_PIXELS_FORMAT
#define GL_READ_PIXELS_FORMAT 0x828D
#endif

#ifndef GL_READ_PIXELS_TYPE
#define GL_READ_PIXELS_TYPE 0x828E
#endif

#ifndef GL_TEXTURE_IMAGE_FORMAT
#define GL_TEXTURE_IMAGE_FORMAT 0x828F
#endif

#ifndef GL_TEXTURE_IMAGE_TYPE
#define GL_TEXTURE_IMAGE_TYPE 0x8290
#endif

#ifndef GL_GET_TEXTURE_IMAGE_FORMAT
#define GL_GET_TEXTURE_IMAGE_FORMAT 0x8291
#endif

#ifndef GL_GET_TEXTURE_IMAGE_TYPE
#define GL_GET_TEXTURE_IMAGE_TYPE 0x8292
#endif

#ifndef GL_MIPMAP
#define GL_MIPMAP 0x8293
#endif

#ifndef GL_MANUAL_GENERATE_MIPMAP
#define GL_MANUAL_GENERATE_MIPMAP 0x8294
#endif

#ifndef GL_VERTEX_ATTRIB_BINDING
#define GL_VERTEX_ATTRIB_BINDING 0x82D4
#endif

#ifndef GL_VERTEX_ATTRIB_RELATIVE_OFFSET
#define GL_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D5
#endif

#ifndef GL_VERTEX_BINDING_DIVISOR
#define GL_VERTEX_BINDING_DIVISOR 0x82D6
#endif

#ifndef GL_VERTEX_BINDING_OFFSET
#define GL_VERTEX_BINDING_OFFSET 0x82D7
#endif

#ifndef GL_VERTEX_BINDING_STRIDE
#define GL_VERTEX_BINDING_STRIDE 0x82D8
#endif

#ifndef GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET
#define GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D9
#endif

#ifndef GL_MAX_VERTEX_ATTRIB_BINDINGS
#define GL_MAX_VERTEX_ATTRIB_BINDINGS 0x82DA
#endif

#ifndef GL_TEXTURE_VIEW_MIN_LEVEL
#define GL_TEXTURE_VIEW_MIN_LEVEL 0x82DB
#endif

#ifndef GL_TEXTURE_VIEW_NUM_LEVELS
#define GL_TEXTURE_VIEW_NUM_LEVELS 0x82DC
#endif

#ifndef GL_TEXTURE_VIEW_MIN_LAYER
#define GL_TEXTURE_VIEW_MIN_LAYER 0x82DD
#endif

#ifndef GL_TEXTURE_VIEW_NUM_LAYERS
#define GL_TEXTURE_VIEW_NUM_LAYERS 0x82DE
#endif

#ifndef GL_TEXTURE_IMMUTABLE_LEVELS
#define GL_TEXTURE_IMMUTABLE_LEVELS 0x82DF
#endif

#ifndef GL_BUFFER
#define GL_BUFFER 0x82E0
#endif

#ifndef GL_SHADER
#define GL_SHADER 0x82E1
#endif

#ifndef GL_PROGRAM
#define GL_PROGRAM 0x82E2
#endif

#ifndef GL_QUERY
#define GL_QUERY 0x82E3
#endif

#ifndef GL_PROGRAM_PIPELINE
#define GL_PROGRAM_PIPELINE 0x82E4
#endif

#ifndef GL_SAMPLER
#define GL_SAMPLER 0x82E6
#endif

#ifndef GL_DISPLAY_LIST
#define GL_DISPLAY_LIST 0x82E7
#endif

#ifndef GL_MAX_LABEL_LENGTH
#define GL_MAX_LABEL_LENGTH 0x82E8
#endif

#ifndef GL_NUM_SHADING_LANGUAGE_VERSIONS
#define GL_NUM_SHADING_LANGUAGE_VERSIONS 0x82E9
#endif

#ifndef GL_DEPTH_PASS_INSTRUMENT_SGIX
#define GL_DEPTH_PASS_INSTRUMENT_SGIX 0x8310
#endif

#ifndef GL_DEPTH_PASS_INSTRUMENT_COUNTERS_SGIX
#define GL_DEPTH_PASS_INSTRUMENT_COUNTERS_SGIX 0x8311
#endif

#ifndef GL_DEPTH_PASS_INSTRUMENT_MAX_SGIX
#define GL_DEPTH_PASS_INSTRUMENT_MAX_SGIX 0x8312
#endif

#ifndef GL_FRAGMENTS_INSTRUMENT_SGIX
#define GL_FRAGMENTS_INSTRUMENT_SGIX 0x8313
#endif

#ifndef GL_FRAGMENTS_INSTRUMENT_COUNTERS_SGIX
#define GL_FRAGMENTS_INSTRUMENT_COUNTERS_SGIX 0x8314
#endif

#ifndef GL_FRAGMENTS_INSTRUMENT_MAX_SGIX
#define GL_FRAGMENTS_INSTRUMENT_MAX_SGIX 0x8315
#endif

#ifndef GL_CONVOLUTION_HINT_SGIX
#define GL_CONVOLUTION_HINT_SGIX 0x8316
#endif

#ifndef GL_YCRCB_SGIX
#define GL_YCRCB_SGIX 0x8318
#endif

#ifndef GL_YCRCBA_SGIX
#define GL_YCRCBA_SGIX 0x8319
#endif

#ifndef GL_UNPACK_COMPRESSED_SIZE_SGIX
#define GL_UNPACK_COMPRESSED_SIZE_SGIX 0x831A
#endif

#ifndef GL_PACK_MAX_COMPRESSED_SIZE_SGIX
#define GL_PACK_MAX_COMPRESSED_SIZE_SGIX 0x831B
#endif

#ifndef GL_PACK_COMPRESSED_SIZE_SGIX
#define GL_PACK_COMPRESSED_SIZE_SGIX 0x831C
#endif

#ifndef GL_SLIM8U_SGIX
#define GL_SLIM8U_SGIX 0x831D
#endif

#ifndef GL_SLIM10U_SGIX
#define GL_SLIM10U_SGIX 0x831E
#endif

#ifndef GL_SLIM12S_SGIX
#define GL_SLIM12S_SGIX 0x831F
#endif

#ifndef GL_ALPHA_MIN_SGIX
#define GL_ALPHA_MIN_SGIX 0x8320
#endif

#ifndef GL_ALPHA_MAX_SGIX
#define GL_ALPHA_MAX_SGIX 0x8321
#endif

#ifndef GL_SCALEBIAS_HINT_SGIX
#define GL_SCALEBIAS_HINT_SGIX 0x8322
#endif

#ifndef GL_ASYNC_MARKER_SGIX
#define GL_ASYNC_MARKER_SGIX 0x8329
#endif

#ifndef GL_ASYNC_HISTOGRAM_SGIX
#define GL_ASYNC_HISTOGRAM_SGIX 0x832C
#endif

#ifndef GL_MAX_ASYNC_HISTOGRAM_SGIX
#define GL_MAX_ASYNC_HISTOGRAM_SGIX 0x832D
#endif

#ifndef GL_PIXEL_TRANSFORM_2D_EXT
#define GL_PIXEL_TRANSFORM_2D_EXT 0x8330
#endif

#ifndef GL_PIXEL_MAG_FILTER_EXT
#define GL_PIXEL_MAG_FILTER_EXT 0x8331
#endif

#ifndef GL_PIXEL_MIN_FILTER_EXT
#define GL_PIXEL_MIN_FILTER_EXT 0x8332
#endif

#ifndef GL_PIXEL_CUBIC_WEIGHT_EXT
#define GL_PIXEL_CUBIC_WEIGHT_EXT 0x8333
#endif

#ifndef GL_CUBIC_EXT
#define GL_CUBIC_EXT 0x8334
#endif

#ifndef GL_AVERAGE_EXT
#define GL_AVERAGE_EXT 0x8335
#endif

#ifndef GL_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT
#define GL_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT 0x8336
#endif

#ifndef GL_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT
#define GL_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT 0x8337
#endif

#ifndef GL_PIXEL_TRANSFORM_2D_MATRIX_EXT
#define GL_PIXEL_TRANSFORM_2D_MATRIX_EXT 0x8338
#endif

#ifndef GL_FRAGMENT_MATERIAL_EXT
#define GL_FRAGMENT_MATERIAL_EXT 0x8349
#endif

#ifndef GL_FRAGMENT_NORMAL_EXT
#define GL_FRAGMENT_NORMAL_EXT 0x834A
#endif

#ifndef GL_FRAGMENT_COLOR_EXT
#define GL_FRAGMENT_COLOR_EXT 0x834C
#endif

#ifndef GL_ATTENUATION_EXT
#define GL_ATTENUATION_EXT 0x834D
#endif

#ifndef GL_SHADOW_ATTENUATION_EXT
#define GL_SHADOW_ATTENUATION_EXT 0x834E
#endif

#ifndef GL_TEXTURE_APPLICATION_MODE_EXT
#define GL_TEXTURE_APPLICATION_MODE_EXT 0x834F
#endif

#ifndef GL_TEXTURE_LIGHT_EXT
#define GL_TEXTURE_LIGHT_EXT 0x8350
#endif

#ifndef GL_TEXTURE_MATERIAL_FACE_EXT
#define GL_TEXTURE_MATERIAL_FACE_EXT 0x8351
#endif

#ifndef GL_TEXTURE_MATERIAL_PARAMETER_EXT
#define GL_TEXTURE_MATERIAL_PARAMETER_EXT 0x8352
#endif

#ifndef GL_PIXEL_TEXTURE_SGIS
#define GL_PIXEL_TEXTURE_SGIS 0x8353
#endif

#ifndef GL_PIXEL_FRAGMENT_RGB_SOURCE_SGIS
#define GL_PIXEL_FRAGMENT_RGB_SOURCE_SGIS 0x8354
#endif

#ifndef GL_PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS
#define GL_PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS 0x8355
#endif

#ifndef GL_PIXEL_GROUP_COLOR_SGIS
#define GL_PIXEL_GROUP_COLOR_SGIS 0x8356
#endif

#ifndef GL_LINE_QUALITY_HINT_SGIX
#define GL_LINE_QUALITY_HINT_SGIX 0x835B
#endif

#ifndef GL_ASYNC_TEX_IMAGE_SGIX
#define GL_ASYNC_TEX_IMAGE_SGIX 0x835C
#endif

#ifndef GL_ASYNC_DRAW_PIXELS_SGIX
#define GL_ASYNC_DRAW_PIXELS_SGIX 0x835D
#endif

#ifndef GL_ASYNC_READ_PIXELS_SGIX
#define GL_ASYNC_READ_PIXELS_SGIX 0x835E
#endif

#ifndef GL_MAX_ASYNC_TEX_IMAGE_SGIX
#define GL_MAX_ASYNC_TEX_IMAGE_SGIX 0x835F
#endif

#ifndef GL_MAX_ASYNC_DRAW_PIXELS_SGIX
#define GL_MAX_ASYNC_DRAW_PIXELS_SGIX 0x8360
#endif

#ifndef GL_MAX_ASYNC_READ_PIXELS_SGIX
#define GL_MAX_ASYNC_READ_PIXELS_SGIX 0x8361
#endif

#ifndef GL_TEXTURE_MAX_CLAMP_S_SGIX
#define GL_TEXTURE_MAX_CLAMP_S_SGIX 0x8369
#endif

#ifndef GL_TEXTURE_MAX_CLAMP_T_SGIX
#define GL_TEXTURE_MAX_CLAMP_T_SGIX 0x836A
#endif

#ifndef GL_TEXTURE_MAX_CLAMP_R_SGIX
#define GL_TEXTURE_MAX_CLAMP_R_SGIX 0x836B
#endif

#ifndef GL_MIRRORED_REPEAT
#define GL_MIRRORED_REPEAT 0x8370
#endif

#ifndef GL_MIRRORED_REPEAT_ARB
#define GL_MIRRORED_REPEAT_ARB 0x8370
#endif

#ifndef GL_MIRRORED_REPEAT_IBM
#define GL_MIRRORED_REPEAT_IBM 0x8370
#endif

#ifndef GL_MIRRORED_REPEAT_OES
#define GL_MIRRORED_REPEAT_OES 0x8370
#endif

#ifndef GL_RGB_S3TC
#define GL_RGB_S3TC 0x83A0
#endif

#ifndef GL_RGB4_S3TC
#define GL_RGB4_S3TC 0x83A1
#endif

#ifndef GL_RGBA_S3TC
#define GL_RGBA_S3TC 0x83A2
#endif

#ifndef GL_RGBA4_S3TC
#define GL_RGBA4_S3TC 0x83A3
#endif

#ifndef GL_RGBA_DXT5_S3TC
#define GL_RGBA_DXT5_S3TC 0x83A4
#endif

#ifndef GL_RGBA4_DXT5_S3TC
#define GL_RGBA4_DXT5_S3TC 0x83A5
#endif

#ifndef GL_VERTEX_PRECLIP_SGIX
#define GL_VERTEX_PRECLIP_SGIX 0x83EE
#endif

#ifndef GL_VERTEX_PRECLIP_HINT_SGIX
#define GL_VERTEX_PRECLIP_HINT_SGIX 0x83EF
#endif

#ifndef GL_COMPRESSED_RGB_S3TC_DXT1_EXT
#define GL_COMPRESSED_RGB_S3TC_DXT1_EXT 0x83F0
#endif

#ifndef GL_COMPRESSED_RGBA_S3TC_DXT1_EXT
#define GL_COMPRESSED_RGBA_S3TC_DXT1_EXT 0x83F1
#endif

#ifndef GL_COMPRESSED_RGBA_S3TC_DXT3_EXT
#define GL_COMPRESSED_RGBA_S3TC_DXT3_EXT 0x83F2
#endif

#ifndef GL_COMPRESSED_RGBA_S3TC_DXT5_EXT
#define GL_COMPRESSED_RGBA_S3TC_DXT5_EXT 0x83F3
#endif

#ifndef GL_COMPRESSED_RGBA_S3TC_DXT3_ANGLE
#define GL_COMPRESSED_RGBA_S3TC_DXT3_ANGLE 0x83F2
#endif

#ifndef GL_COMPRESSED_RGBA_S3TC_DXT5_ANGLE
#define GL_COMPRESSED_RGBA_S3TC_DXT5_ANGLE 0x83F3
#endif

#ifndef GL_PARALLEL_ARRAYS_INTEL
#define GL_PARALLEL_ARRAYS_INTEL 0x83F4
#endif

#ifndef GL_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL
#define GL_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL 0x83F5
#endif

#ifndef GL_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL
#define GL_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL 0x83F6
#endif

#ifndef GL_COLOR_ARRAY_PARALLEL_POINTERS_INTEL
#define GL_COLOR_ARRAY_PARALLEL_POINTERS_INTEL 0x83F7
#endif

#ifndef GL_TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL
#define GL_TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL 0x83F8
#endif

#ifndef GL_FRAGMENT_LIGHTING_SGIX
#define GL_FRAGMENT_LIGHTING_SGIX 0x8400
#endif

#ifndef GL_FRAGMENT_COLOR_MATERIAL_SGIX
#define GL_FRAGMENT_COLOR_MATERIAL_SGIX 0x8401
#endif

#ifndef GL_FRAGMENT_COLOR_MATERIAL_FACE_SGIX
#define GL_FRAGMENT_COLOR_MATERIAL_FACE_SGIX 0x8402
#endif

#ifndef GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX
#define GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX 0x8403
#endif

#ifndef GL_MAX_FRAGMENT_LIGHTS_SGIX
#define GL_MAX_FRAGMENT_LIGHTS_SGIX 0x8404
#endif

#ifndef GL_MAX_ACTIVE_LIGHTS_SGIX
#define GL_MAX_ACTIVE_LIGHTS_SGIX 0x8405
#endif

#ifndef GL_CURRENT_RASTER_NORMAL_SGIX
#define GL_CURRENT_RASTER_NORMAL_SGIX 0x8406
#endif

#ifndef GL_LIGHT_ENV_MODE_SGIX
#define GL_LIGHT_ENV_MODE_SGIX 0x8407
#endif

#ifndef GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX
#define GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX 0x8408
#endif

#ifndef GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX
#define GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX 0x8409
#endif

#ifndef GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX
#define GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX 0x840A
#endif

#ifndef GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX
#define GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX 0x840B
#endif

#ifndef GL_FRAGMENT_LIGHT0_SGIX
#define GL_FRAGMENT_LIGHT0_SGIX 0x840C
#endif

#ifndef GL_FRAGMENT_LIGHT1_SGIX
#define GL_FRAGMENT_LIGHT1_SGIX 0x840D
#endif

#ifndef GL_FRAGMENT_LIGHT2_SGIX
#define GL_FRAGMENT_LIGHT2_SGIX 0x840E
#endif

#ifndef GL_FRAGMENT_LIGHT3_SGIX
#define GL_FRAGMENT_LIGHT3_SGIX 0x840F
#endif

#ifndef GL_FRAGMENT_LIGHT4_SGIX
#define GL_FRAGMENT_LIGHT4_SGIX 0x8410
#endif

#ifndef GL_FRAGMENT_LIGHT5_SGIX
#define GL_FRAGMENT_LIGHT5_SGIX 0x8411
#endif

#ifndef GL_FRAGMENT_LIGHT6_SGIX
#define GL_FRAGMENT_LIGHT6_SGIX 0x8412
#endif

#ifndef GL_FRAGMENT_LIGHT7_SGIX
#define GL_FRAGMENT_LIGHT7_SGIX 0x8413
#endif

#ifndef GL_PACK_RESAMPLE_SGIX
#define GL_PACK_RESAMPLE_SGIX 0x842C
#endif

#ifndef GL_UNPACK_RESAMPLE_SGIX
#define GL_UNPACK_RESAMPLE_SGIX 0x842D
#endif

#ifndef GL_RESAMPLE_REPLICATE_SGIX
#define GL_RESAMPLE_REPLICATE_SGIX 0x842E
#endif

#ifndef GL_RESAMPLE_ZERO_FILL_SGIX
#define GL_RESAMPLE_ZERO_FILL_SGIX 0x842F
#endif

#ifndef GL_RESAMPLE_DECIMATE_SGIX
#define GL_RESAMPLE_DECIMATE_SGIX 0x8430
#endif

#ifndef GL_FOG_COORD_SRC
#define GL_FOG_COORD_SRC 0x8450
#endif

#ifndef GL_FOG_COORD
#define GL_FOG_COORD 0x8451
#endif

#ifndef GL_CURRENT_FOG_COORD
#define GL_CURRENT_FOG_COORD 0x8453
#endif

#ifndef GL_FOG_COORD_ARRAY_TYPE
#define GL_FOG_COORD_ARRAY_TYPE 0x8454
#endif

#ifndef GL_FOG_COORD_ARRAY_STRIDE
#define GL_FOG_COORD_ARRAY_STRIDE 0x8455
#endif

#ifndef GL_FOG_COORD_ARRAY_POINTER
#define GL_FOG_COORD_ARRAY_POINTER 0x8456
#endif

#ifndef GL_FOG_COORD_ARRAY
#define GL_FOG_COORD_ARRAY 0x8457
#endif

#ifndef GL_FOG_COORDINATE_SOURCE
#define GL_FOG_COORDINATE_SOURCE 0x8450
#endif

#ifndef GL_FOG_COORDINATE
#define GL_FOG_COORDINATE 0x8451
#endif

#ifndef GL_FRAGMENT_DEPTH
#define GL_FRAGMENT_DEPTH 0x8452
#endif

#ifndef GL_CURRENT_FOG_COORDINATE
#define GL_CURRENT_FOG_COORDINATE 0x8453
#endif

#ifndef GL_FOG_COORDINATE_ARRAY_TYPE
#define GL_FOG_COORDINATE_ARRAY_TYPE 0x8454
#endif

#ifndef GL_FOG_COORDINATE_ARRAY_STRIDE
#define GL_FOG_COORDINATE_ARRAY_STRIDE 0x8455
#endif

#ifndef GL_FOG_COORDINATE_ARRAY_POINTER
#define GL_FOG_COORDINATE_ARRAY_POINTER 0x8456
#endif

#ifndef GL_FOG_COORDINATE_ARRAY
#define GL_FOG_COORDINATE_ARRAY 0x8457
#endif

#ifndef GL_FOG_COORDINATE_SOURCE_EXT
#define GL_FOG_COORDINATE_SOURCE_EXT 0x8450
#endif

#ifndef GL_FOG_COORDINATE_EXT
#define GL_FOG_COORDINATE_EXT 0x8451
#endif

#ifndef GL_FRAGMENT_DEPTH_EXT
#define GL_FRAGMENT_DEPTH_EXT 0x8452
#endif

#ifndef GL_CURRENT_FOG_COORDINATE_EXT
#define GL_CURRENT_FOG_COORDINATE_EXT 0x8453
#endif

#ifndef GL_FOG_COORDINATE_ARRAY_TYPE_EXT
#define GL_FOG_COORDINATE_ARRAY_TYPE_EXT 0x8454
#endif

#ifndef GL_FOG_COORDINATE_ARRAY_STRIDE_EXT
#define GL_FOG_COORDINATE_ARRAY_STRIDE_EXT 0x8455
#endif

#ifndef GL_FOG_COORDINATE_ARRAY_POINTER_EXT
#define GL_FOG_COORDINATE_ARRAY_POINTER_EXT 0x8456
#endif

#ifndef GL_FOG_COORDINATE_ARRAY_EXT
#define GL_FOG_COORDINATE_ARRAY_EXT 0x8457
#endif

#ifndef GL_COLOR_SUM
#define GL_COLOR_SUM 0x8458
#endif

#ifndef GL_CURRENT_SECONDARY_COLOR
#define GL_CURRENT_SECONDARY_COLOR 0x8459
#endif

#ifndef GL_SECONDARY_COLOR_ARRAY_SIZE
#define GL_SECONDARY_COLOR_ARRAY_SIZE 0x845A
#endif

#ifndef GL_SECONDARY_COLOR_ARRAY_TYPE
#define GL_SECONDARY_COLOR_ARRAY_TYPE 0x845B
#endif

#ifndef GL_SECONDARY_COLOR_ARRAY_STRIDE
#define GL_SECONDARY_COLOR_ARRAY_STRIDE 0x845C
#endif

#ifndef GL_SECONDARY_COLOR_ARRAY_POINTER
#define GL_SECONDARY_COLOR_ARRAY_POINTER 0x845D
#endif

#ifndef GL_SECONDARY_COLOR_ARRAY
#define GL_SECONDARY_COLOR_ARRAY 0x845E
#endif

#ifndef GL_COLOR_SUM_EXT
#define GL_COLOR_SUM_EXT 0x8458
#endif

#ifndef GL_CURRENT_SECONDARY_COLOR_EXT
#define GL_CURRENT_SECONDARY_COLOR_EXT 0x8459
#endif

#ifndef GL_SECONDARY_COLOR_ARRAY_SIZE_EXT
#define GL_SECONDARY_COLOR_ARRAY_SIZE_EXT 0x845A
#endif

#ifndef GL_SECONDARY_COLOR_ARRAY_TYPE_EXT
#define GL_SECONDARY_COLOR_ARRAY_TYPE_EXT 0x845B
#endif

#ifndef GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT
#define GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT 0x845C
#endif

#ifndef GL_SECONDARY_COLOR_ARRAY_POINTER_EXT
#define GL_SECONDARY_COLOR_ARRAY_POINTER_EXT 0x845D
#endif

#ifndef GL_SECONDARY_COLOR_ARRAY_EXT
#define GL_SECONDARY_COLOR_ARRAY_EXT 0x845E
#endif

#ifndef GL_COLOR_SUM_ARB
#define GL_COLOR_SUM_ARB 0x8458
#endif

#ifndef GL_CURRENT_RASTER_SECONDARY_COLOR
#define GL_CURRENT_RASTER_SECONDARY_COLOR 0x845F
#endif

#ifndef GL_SMOOTH_POINT_SIZE_RANGE
#define GL_SMOOTH_POINT_SIZE_RANGE 0x0B12
#endif

#ifndef GL_SMOOTH_POINT_SIZE_GRANULARITY
#define GL_SMOOTH_POINT_SIZE_GRANULARITY 0x0B13
#endif

#ifndef GL_SMOOTH_LINE_WIDTH_RANGE
#define GL_SMOOTH_LINE_WIDTH_RANGE 0x0B22
#endif

#ifndef GL_SMOOTH_LINE_WIDTH_GRANULARITY
#define GL_SMOOTH_LINE_WIDTH_GRANULARITY 0x0B23
#endif

#ifndef GL_ALIASED_POINT_SIZE_RANGE
#define GL_ALIASED_POINT_SIZE_RANGE 0x846D
#endif

#ifndef GL_ALIASED_LINE_WIDTH_RANGE
#define GL_ALIASED_LINE_WIDTH_RANGE 0x846E
#endif

#ifndef GL_SCREEN_COORDINATES_REND
#define GL_SCREEN_COORDINATES_REND 0x8490
#endif

#ifndef GL_INVERTED_SCREEN_W_REND
#define GL_INVERTED_SCREEN_W_REND 0x8491
#endif

#ifndef GL_TEXTURE0
#define GL_TEXTURE0 0x84C0
#endif

#ifndef GL_TEXTURE1
#define GL_TEXTURE1 0x84C1
#endif

#ifndef GL_TEXTURE2
#define GL_TEXTURE2 0x84C2
#endif

#ifndef GL_TEXTURE3
#define GL_TEXTURE3 0x84C3
#endif

#ifndef GL_TEXTURE4
#define GL_TEXTURE4 0x84C4
#endif

#ifndef GL_TEXTURE5
#define GL_TEXTURE5 0x84C5
#endif

#ifndef GL_TEXTURE6
#define GL_TEXTURE6 0x84C6
#endif

#ifndef GL_TEXTURE7
#define GL_TEXTURE7 0x84C7
#endif

#ifndef GL_TEXTURE8
#define GL_TEXTURE8 0x84C8
#endif

#ifndef GL_TEXTURE9
#define GL_TEXTURE9 0x84C9
#endif

#ifndef GL_TEXTURE10
#define GL_TEXTURE10 0x84CA
#endif

#ifndef GL_TEXTURE11
#define GL_TEXTURE11 0x84CB
#endif

#ifndef GL_TEXTURE12
#define GL_TEXTURE12 0x84CC
#endif

#ifndef GL_TEXTURE13
#define GL_TEXTURE13 0x84CD
#endif

#ifndef GL_TEXTURE14
#define GL_TEXTURE14 0x84CE
#endif

#ifndef GL_TEXTURE15
#define GL_TEXTURE15 0x84CF
#endif

#ifndef GL_TEXTURE16
#define GL_TEXTURE16 0x84D0
#endif

#ifndef GL_TEXTURE17
#define GL_TEXTURE17 0x84D1
#endif

#ifndef GL_TEXTURE18
#define GL_TEXTURE18 0x84D2
#endif

#ifndef GL_TEXTURE19
#define GL_TEXTURE19 0x84D3
#endif

#ifndef GL_TEXTURE20
#define GL_TEXTURE20 0x84D4
#endif

#ifndef GL_TEXTURE21
#define GL_TEXTURE21 0x84D5
#endif

#ifndef GL_TEXTURE22
#define GL_TEXTURE22 0x84D6
#endif

#ifndef GL_TEXTURE23
#define GL_TEXTURE23 0x84D7
#endif

#ifndef GL_TEXTURE24
#define GL_TEXTURE24 0x84D8
#endif

#ifndef GL_TEXTURE25
#define GL_TEXTURE25 0x84D9
#endif

#ifndef GL_TEXTURE26
#define GL_TEXTURE26 0x84DA
#endif

#ifndef GL_TEXTURE27
#define GL_TEXTURE27 0x84DB
#endif

#ifndef GL_TEXTURE28
#define GL_TEXTURE28 0x84DC
#endif

#ifndef GL_TEXTURE29
#define GL_TEXTURE29 0x84DD
#endif

#ifndef GL_TEXTURE30
#define GL_TEXTURE30 0x84DE
#endif

#ifndef GL_TEXTURE31
#define GL_TEXTURE31 0x84DF
#endif

#ifndef GL_ACTIVE_TEXTURE
#define GL_ACTIVE_TEXTURE 0x84E0
#endif

#ifndef GL_CLIENT_ACTIVE_TEXTURE
#define GL_CLIENT_ACTIVE_TEXTURE 0x84E1
#endif

#ifndef GL_MAX_TEXTURE_UNITS
#define GL_MAX_TEXTURE_UNITS 0x84E2
#endif

#ifndef GL_TEXTURE0_ARB
#define GL_TEXTURE0_ARB 0x84C0
#endif

#ifndef GL_TEXTURE1_ARB
#define GL_TEXTURE1_ARB 0x84C1
#endif

#ifndef GL_TEXTURE2_ARB
#define GL_TEXTURE2_ARB 0x84C2
#endif

#ifndef GL_TEXTURE3_ARB
#define GL_TEXTURE3_ARB 0x84C3
#endif

#ifndef GL_TEXTURE4_ARB
#define GL_TEXTURE4_ARB 0x84C4
#endif

#ifndef GL_TEXTURE5_ARB
#define GL_TEXTURE5_ARB 0x84C5
#endif

#ifndef GL_TEXTURE6_ARB
#define GL_TEXTURE6_ARB 0x84C6
#endif

#ifndef GL_TEXTURE7_ARB
#define GL_TEXTURE7_ARB 0x84C7
#endif

#ifndef GL_TEXTURE8_ARB
#define GL_TEXTURE8_ARB 0x84C8
#endif

#ifndef GL_TEXTURE9_ARB
#define GL_TEXTURE9_ARB 0x84C9
#endif

#ifndef GL_TEXTURE10_ARB
#define GL_TEXTURE10_ARB 0x84CA
#endif

#ifndef GL_TEXTURE11_ARB
#define GL_TEXTURE11_ARB 0x84CB
#endif

#ifndef GL_TEXTURE12_ARB
#define GL_TEXTURE12_ARB 0x84CC
#endif

#ifndef GL_TEXTURE13_ARB
#define GL_TEXTURE13_ARB 0x84CD
#endif

#ifndef GL_TEXTURE14_ARB
#define GL_TEXTURE14_ARB 0x84CE
#endif

#ifndef GL_TEXTURE15_ARB
#define GL_TEXTURE15_ARB 0x84CF
#endif

#ifndef GL_TEXTURE16_ARB
#define GL_TEXTURE16_ARB 0x84D0
#endif

#ifndef GL_TEXTURE17_ARB
#define GL_TEXTURE17_ARB 0x84D1
#endif

#ifndef GL_TEXTURE18_ARB
#define GL_TEXTURE18_ARB 0x84D2
#endif

#ifndef GL_TEXTURE19_ARB
#define GL_TEXTURE19_ARB 0x84D3
#endif

#ifndef GL_TEXTURE20_ARB
#define GL_TEXTURE20_ARB 0x84D4
#endif

#ifndef GL_TEXTURE21_ARB
#define GL_TEXTURE21_ARB 0x84D5
#endif

#ifndef GL_TEXTURE22_ARB
#define GL_TEXTURE22_ARB 0x84D6
#endif

#ifndef GL_TEXTURE23_ARB
#define GL_TEXTURE23_ARB 0x84D7
#endif

#ifndef GL_TEXTURE24_ARB
#define GL_TEXTURE24_ARB 0x84D8
#endif

#ifndef GL_TEXTURE25_ARB
#define GL_TEXTURE25_ARB 0x84D9
#endif

#ifndef GL_TEXTURE26_ARB
#define GL_TEXTURE26_ARB 0x84DA
#endif

#ifndef GL_TEXTURE27_ARB
#define GL_TEXTURE27_ARB 0x84DB
#endif

#ifndef GL_TEXTURE28_ARB
#define GL_TEXTURE28_ARB 0x84DC
#endif

#ifndef GL_TEXTURE29_ARB
#define GL_TEXTURE29_ARB 0x84DD
#endif

#ifndef GL_TEXTURE30_ARB
#define GL_TEXTURE30_ARB 0x84DE
#endif

#ifndef GL_TEXTURE31_ARB
#define GL_TEXTURE31_ARB 0x84DF
#endif

#ifndef GL_ACTIVE_TEXTURE_ARB
#define GL_ACTIVE_TEXTURE_ARB 0x84E0
#endif

#ifndef GL_CLIENT_ACTIVE_TEXTURE_ARB
#define GL_CLIENT_ACTIVE_TEXTURE_ARB 0x84E1
#endif

#ifndef GL_MAX_TEXTURE_UNITS_ARB
#define GL_MAX_TEXTURE_UNITS_ARB 0x84E2
#endif

#ifndef GL_TRANSPOSE_MODELVIEW_MATRIX
#define GL_TRANSPOSE_MODELVIEW_MATRIX 0x84E3
#endif

#ifndef GL_TRANSPOSE_PROJECTION_MATRIX
#define GL_TRANSPOSE_PROJECTION_MATRIX 0x84E4
#endif

#ifndef GL_TRANSPOSE_TEXTURE_MATRIX
#define GL_TRANSPOSE_TEXTURE_MATRIX 0x84E5
#endif

#ifndef GL_TRANSPOSE_COLOR_MATRIX
#define GL_TRANSPOSE_COLOR_MATRIX 0x84E6
#endif

#ifndef GL_TRANSPOSE_MODELVIEW_MATRIX_ARB
#define GL_TRANSPOSE_MODELVIEW_MATRIX_ARB 0x84E3
#endif

#ifndef GL_TRANSPOSE_PROJECTION_MATRIX_ARB
#define GL_TRANSPOSE_PROJECTION_MATRIX_ARB 0x84E4
#endif

#ifndef GL_TRANSPOSE_TEXTURE_MATRIX_ARB
#define GL_TRANSPOSE_TEXTURE_MATRIX_ARB 0x84E5
#endif

#ifndef GL_TRANSPOSE_COLOR_MATRIX_ARB
#define GL_TRANSPOSE_COLOR_MATRIX_ARB 0x84E6
#endif

#ifndef GL_SUBTRACT
#define GL_SUBTRACT 0x84E7
#endif

#ifndef GL_SUBTRACT_ARB
#define GL_SUBTRACT_ARB 0x84E7
#endif

#ifndef GL_MAX_RENDERBUFFER_SIZE
#define GL_MAX_RENDERBUFFER_SIZE 0x84E8
#endif

#ifndef GL_MAX_RENDERBUFFER_SIZE_EXT
#define GL_MAX_RENDERBUFFER_SIZE_EXT 0x84E8
#endif

#ifndef GL_MAX_RENDERBUFFER_SIZE_OES
#define GL_MAX_RENDERBUFFER_SIZE_OES 0x84E8
#endif

#ifndef GL_COMPRESSED_ALPHA
#define GL_COMPRESSED_ALPHA 0x84E9
#endif

#ifndef GL_COMPRESSED_LUMINANCE
#define GL_COMPRESSED_LUMINANCE 0x84EA
#endif

#ifndef GL_COMPRESSED_LUMINANCE_ALPHA
#define GL_COMPRESSED_LUMINANCE_ALPHA 0x84EB
#endif

#ifndef GL_COMPRESSED_INTENSITY
#define GL_COMPRESSED_INTENSITY 0x84EC
#endif

#ifndef GL_COMPRESSED_RGB
#define GL_COMPRESSED_RGB 0x84ED
#endif

#ifndef GL_COMPRESSED_RGBA
#define GL_COMPRESSED_RGBA 0x84EE
#endif

#ifndef GL_TEXTURE_COMPRESSION_HINT
#define GL_TEXTURE_COMPRESSION_HINT 0x84EF
#endif

#ifndef GL_TEXTURE_COMPRESSED_IMAGE_SIZE
#define GL_TEXTURE_COMPRESSED_IMAGE_SIZE 0x86A0
#endif

#ifndef GL_TEXTURE_COMPRESSED
#define GL_TEXTURE_COMPRESSED 0x86A1
#endif

#ifndef GL_NUM_COMPRESSED_TEXTURE_FORMATS
#define GL_NUM_COMPRESSED_TEXTURE_FORMATS 0x86A2
#endif

#ifndef GL_COMPRESSED_TEXTURE_FORMATS
#define GL_COMPRESSED_TEXTURE_FORMATS 0x86A3
#endif

#ifndef GL_COMPRESSED_ALPHA_ARB
#define GL_COMPRESSED_ALPHA_ARB 0x84E9
#endif

#ifndef GL_COMPRESSED_LUMINANCE_ARB
#define GL_COMPRESSED_LUMINANCE_ARB 0x84EA
#endif

#ifndef GL_COMPRESSED_LUMINANCE_ALPHA_ARB
#define GL_COMPRESSED_LUMINANCE_ALPHA_ARB 0x84EB
#endif

#ifndef GL_COMPRESSED_INTENSITY_ARB
#define GL_COMPRESSED_INTENSITY_ARB 0x84EC
#endif

#ifndef GL_COMPRESSED_RGB_ARB
#define GL_COMPRESSED_RGB_ARB 0x84ED
#endif

#ifndef GL_COMPRESSED_RGBA_ARB
#define GL_COMPRESSED_RGBA_ARB 0x84EE
#endif

#ifndef GL_TEXTURE_COMPRESSION_HINT_ARB
#define GL_TEXTURE_COMPRESSION_HINT_ARB 0x84EF
#endif

#ifndef GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB
#define GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB 0x86A0
#endif

#ifndef GL_TEXTURE_COMPRESSED_ARB
#define GL_TEXTURE_COMPRESSED_ARB 0x86A1
#endif

#ifndef GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB
#define GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB 0x86A2
#endif

#ifndef GL_COMPRESSED_TEXTURE_FORMATS_ARB
#define GL_COMPRESSED_TEXTURE_FORMATS_ARB 0x86A3
#endif

#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER
#define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER 0x84F0
#endif

#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER
#define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER 0x84F1
#endif

#ifndef GL_ALL_COMPLETED_NV
#define GL_ALL_COMPLETED_NV 0x84F2
#endif

#ifndef GL_FENCE_STATUS_NV
#define GL_FENCE_STATUS_NV 0x84F3
#endif

#ifndef GL_FENCE_CONDITION_NV
#define GL_FENCE_CONDITION_NV 0x84F4
#endif

#ifndef GL_TEXTURE_RECTANGLE
#define GL_TEXTURE_RECTANGLE 0x84F5
#endif

#ifndef GL_TEXTURE_BINDING_RECTANGLE
#define GL_TEXTURE_BINDING_RECTANGLE 0x84F6
#endif

#ifndef GL_PROXY_TEXTURE_RECTANGLE
#define GL_PROXY_TEXTURE_RECTANGLE 0x84F7
#endif

#ifndef GL_MAX_RECTANGLE_TEXTURE_SIZE
#define GL_MAX_RECTANGLE_TEXTURE_SIZE 0x84F8
#endif

#ifndef GL_TEXTURE_RECTANGLE_ARB
#define GL_TEXTURE_RECTANGLE_ARB 0x84F5
#endif

#ifndef GL_TEXTURE_BINDING_RECTANGLE_ARB
#define GL_TEXTURE_BINDING_RECTANGLE_ARB 0x84F6
#endif

#ifndef GL_PROXY_TEXTURE_RECTANGLE_ARB
#define GL_PROXY_TEXTURE_RECTANGLE_ARB 0x84F7
#endif

#ifndef GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB
#define GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB 0x84F8
#endif

#ifndef GL_TEXTURE_RECTANGLE_NV
#define GL_TEXTURE_RECTANGLE_NV 0x84F5
#endif

#ifndef GL_TEXTURE_BINDING_RECTANGLE_NV
#define GL_TEXTURE_BINDING_RECTANGLE_NV 0x84F6
#endif

#ifndef GL_PROXY_TEXTURE_RECTANGLE_NV
#define GL_PROXY_TEXTURE_RECTANGLE_NV 0x84F7
#endif

#ifndef GL_MAX_RECTANGLE_TEXTURE_SIZE_NV
#define GL_MAX_RECTANGLE_TEXTURE_SIZE_NV 0x84F8
#endif

#ifndef GL_DEPTH_STENCIL
#define GL_DEPTH_STENCIL 0x84F9
#endif

#ifndef GL_UNSIGNED_INT_24_8
#define GL_UNSIGNED_INT_24_8 0x84FA
#endif

#ifndef GL_DEPTH_STENCIL_EXT
#define GL_DEPTH_STENCIL_EXT 0x84F9
#endif

#ifndef GL_UNSIGNED_INT_24_8_EXT
#define GL_UNSIGNED_INT_24_8_EXT 0x84FA
#endif

#ifndef GL_DEPTH_STENCIL_NV
#define GL_DEPTH_STENCIL_NV 0x84F9
#endif

#ifndef GL_UNSIGNED_INT_24_8_NV
#define GL_UNSIGNED_INT_24_8_NV 0x84FA
#endif

#ifndef GL_DEPTH_STENCIL_OES
#define GL_DEPTH_STENCIL_OES 0x84F9
#endif

#ifndef GL_UNSIGNED_INT_24_8_OES
#define GL_UNSIGNED_INT_24_8_OES 0x84FA
#endif

#ifndef GL_MAX_TEXTURE_LOD_BIAS
#define GL_MAX_TEXTURE_LOD_BIAS 0x84FD
#endif

#ifndef GL_MAX_TEXTURE_LOD_BIAS_EXT
#define GL_MAX_TEXTURE_LOD_BIAS_EXT 0x84FD
#endif

#ifndef GL_TEXTURE_MAX_ANISOTROPY_EXT
#define GL_TEXTURE_MAX_ANISOTROPY_EXT 0x84FE
#endif

#ifndef GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT
#define GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT 0x84FF
#endif

#ifndef GL_TEXTURE_FILTER_CONTROL
#define GL_TEXTURE_FILTER_CONTROL 0x8500
#endif

#ifndef GL_TEXTURE_LOD_BIAS
#define GL_TEXTURE_LOD_BIAS 0x8501
#endif

#ifndef GL_TEXTURE_FILTER_CONTROL_EXT
#define GL_TEXTURE_FILTER_CONTROL_EXT 0x8500
#endif

#ifndef GL_TEXTURE_LOD_BIAS_EXT
#define GL_TEXTURE_LOD_BIAS_EXT 0x8501
#endif

#ifndef GL_MODELVIEW1_STACK_DEPTH_EXT
#define GL_MODELVIEW1_STACK_DEPTH_EXT 0x8502
#endif

#ifndef GL_MAX_SHININESS_NV
#define GL_MAX_SHININESS_NV 0x8504
#endif

#ifndef GL_MAX_SPOT_EXPONENT_NV
#define GL_MAX_SPOT_EXPONENT_NV 0x8505
#endif

#ifndef GL_MODELVIEW_MATRIX1_EXT
#define GL_MODELVIEW_MATRIX1_EXT 0x8506
#endif

#ifndef GL_INCR_WRAP
#define GL_INCR_WRAP 0x8507
#endif

#ifndef GL_DECR_WRAP
#define GL_DECR_WRAP 0x8508
#endif

#ifndef GL_INCR_WRAP_EXT
#define GL_INCR_WRAP_EXT 0x8507
#endif

#ifndef GL_DECR_WRAP_EXT
#define GL_DECR_WRAP_EXT 0x8508
#endif

#ifndef GL_INCR_WRAP_OES
#define GL_INCR_WRAP_OES 0x8507
#endif

#ifndef GL_DECR_WRAP_OES
#define GL_DECR_WRAP_OES 0x8508
#endif

#ifndef GL_VERTEX_WEIGHTING_EXT
#define GL_VERTEX_WEIGHTING_EXT 0x8509
#endif

#ifndef GL_MODELVIEW1_EXT
#define GL_MODELVIEW1_EXT 0x850A
#endif

#ifndef GL_CURRENT_VERTEX_WEIGHT_EXT
#define GL_CURRENT_VERTEX_WEIGHT_EXT 0x850B
#endif

#ifndef GL_VERTEX_WEIGHT_ARRAY_EXT
#define GL_VERTEX_WEIGHT_ARRAY_EXT 0x850C
#endif

#ifndef GL_VERTEX_WEIGHT_ARRAY_SIZE_EXT
#define GL_VERTEX_WEIGHT_ARRAY_SIZE_EXT 0x850D
#endif

#ifndef GL_VERTEX_WEIGHT_ARRAY_TYPE_EXT
#define GL_VERTEX_WEIGHT_ARRAY_TYPE_EXT 0x850E
#endif

#ifndef GL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT
#define GL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT 0x850F
#endif

#ifndef GL_VERTEX_WEIGHT_ARRAY_POINTER_EXT
#define GL_VERTEX_WEIGHT_ARRAY_POINTER_EXT 0x8510
#endif

#ifndef GL_NORMAL_MAP
#define GL_NORMAL_MAP 0x8511
#endif

#ifndef GL_REFLECTION_MAP
#define GL_REFLECTION_MAP 0x8512
#endif

#ifndef GL_TEXTURE_CUBE_MAP
#define GL_TEXTURE_CUBE_MAP 0x8513
#endif

#ifndef GL_TEXTURE_BINDING_CUBE_MAP
#define GL_TEXTURE_BINDING_CUBE_MAP 0x8514
#endif

#ifndef GL_TEXTURE_CUBE_MAP_POSITIVE_X
#define GL_TEXTURE_CUBE_MAP_POSITIVE_X 0x8515
#endif

#ifndef GL_TEXTURE_CUBE_MAP_NEGATIVE_X
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X 0x8516
#endif

#ifndef GL_TEXTURE_CUBE_MAP_POSITIVE_Y
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y 0x8517
#endif

#ifndef GL_TEXTURE_CUBE_MAP_NEGATIVE_Y
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y 0x8518
#endif

#ifndef GL_TEXTURE_CUBE_MAP_POSITIVE_Z
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z 0x8519
#endif

#ifndef GL_TEXTURE_CUBE_MAP_NEGATIVE_Z
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z 0x851A
#endif

#ifndef GL_PROXY_TEXTURE_CUBE_MAP
#define GL_PROXY_TEXTURE_CUBE_MAP 0x851B
#endif

#ifndef GL_MAX_CUBE_MAP_TEXTURE_SIZE
#define GL_MAX_CUBE_MAP_TEXTURE_SIZE 0x851C
#endif

#ifndef GL_NORMAL_MAP_EXT
#define GL_NORMAL_MAP_EXT 0x8511
#endif

#ifndef GL_REFLECTION_MAP_EXT
#define GL_REFLECTION_MAP_EXT 0x8512
#endif

#ifndef GL_TEXTURE_CUBE_MAP_EXT
#define GL_TEXTURE_CUBE_MAP_EXT 0x8513
#endif

#ifndef GL_TEXTURE_BINDING_CUBE_MAP_EXT
#define GL_TEXTURE_BINDING_CUBE_MAP_EXT 0x8514
#endif

#ifndef GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT
#define GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT 0x8515
#endif

#ifndef GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT 0x8516
#endif

#ifndef GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT 0x8517
#endif

#ifndef GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT 0x8518
#endif

#ifndef GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT 0x8519
#endif

#ifndef GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT 0x851A
#endif

#ifndef GL_PROXY_TEXTURE_CUBE_MAP_EXT
#define GL_PROXY_TEXTURE_CUBE_MAP_EXT 0x851B
#endif

#ifndef GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT
#define GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT 0x851C
#endif

#ifndef GL_NORMAL_MAP
#define GL_NORMAL_MAP 0x8511
#endif

#ifndef GL_REFLECTION_MAP
#define GL_REFLECTION_MAP 0x8512
#endif

#ifndef GL_NORMAL_MAP_ARB
#define GL_NORMAL_MAP_ARB 0x8511
#endif

#ifndef GL_REFLECTION_MAP_ARB
#define GL_REFLECTION_MAP_ARB 0x8512
#endif

#ifndef GL_TEXTURE_CUBE_MAP_ARB
#define GL_TEXTURE_CUBE_MAP_ARB 0x8513
#endif

#ifndef GL_TEXTURE_BINDING_CUBE_MAP_ARB
#define GL_TEXTURE_BINDING_CUBE_MAP_ARB 0x8514
#endif

#ifndef GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB
#define GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB 0x8515
#endif

#ifndef GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB 0x8516
#endif

#ifndef GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB 0x8517
#endif

#ifndef GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB 0x8518
#endif

#ifndef GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB 0x8519
#endif

#ifndef GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB 0x851A
#endif

#ifndef GL_PROXY_TEXTURE_CUBE_MAP_ARB
#define GL_PROXY_TEXTURE_CUBE_MAP_ARB 0x851B
#endif

#ifndef GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB
#define GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB 0x851C
#endif

#ifndef GL_NORMAL_MAP_OES
#define GL_NORMAL_MAP_OES 0x8511
#endif

#ifndef GL_REFLECTION_MAP_OES
#define GL_REFLECTION_MAP_OES 0x8512
#endif

#ifndef GL_TEXTURE_CUBE_MAP_OES
#define GL_TEXTURE_CUBE_MAP_OES 0x8513
#endif

#ifndef GL_TEXTURE_BINDING_CUBE_MAP_OES
#define GL_TEXTURE_BINDING_CUBE_MAP_OES 0x8514
#endif

#ifndef GL_TEXTURE_CUBE_MAP_POSITIVE_X_OES
#define GL_TEXTURE_CUBE_MAP_POSITIVE_X_OES 0x8515
#endif

#ifndef GL_TEXTURE_CUBE_MAP_NEGATIVE_X_OES
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X_OES 0x8516
#endif

#ifndef GL_TEXTURE_CUBE_MAP_POSITIVE_Y_OES
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y_OES 0x8517
#endif

#ifndef GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_OES
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_OES 0x8518
#endif

#ifndef GL_TEXTURE_CUBE_MAP_POSITIVE_Z_OES
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z_OES 0x8519
#endif

#ifndef GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_OES
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_OES 0x851A
#endif

#ifndef GL_MAX_CUBE_MAP_TEXTURE_SIZE_OES
#define GL_MAX_CUBE_MAP_TEXTURE_SIZE_OES 0x851C
#endif

#ifndef GL_VERTEX_ARRAY_RANGE_NV
#define GL_VERTEX_ARRAY_RANGE_NV 0x851D
#endif

#ifndef GL_VERTEX_ARRAY_RANGE_LENGTH_NV
#define GL_VERTEX_ARRAY_RANGE_LENGTH_NV 0x851E
#endif

#ifndef GL_VERTEX_ARRAY_RANGE_VALID_NV
#define GL_VERTEX_ARRAY_RANGE_VALID_NV 0x851F
#endif

#ifndef GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV
#define GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV 0x8520
#endif

#ifndef GL_VERTEX_ARRAY_RANGE_POINTER_NV
#define GL_VERTEX_ARRAY_RANGE_POINTER_NV 0x8521
#endif

#ifndef GL_VERTEX_ARRAY_RANGE_APPLE
#define GL_VERTEX_ARRAY_RANGE_APPLE 0x851D
#endif

#ifndef GL_VERTEX_ARRAY_RANGE_LENGTH_APPLE
#define GL_VERTEX_ARRAY_RANGE_LENGTH_APPLE 0x851E
#endif

#ifndef GL_VERTEX_ARRAY_STORAGE_HINT_APPLE
#define GL_VERTEX_ARRAY_STORAGE_HINT_APPLE 0x851F
#endif

#ifndef GL_VERTEX_ARRAY_RANGE_POINTER_APPLE
#define GL_VERTEX_ARRAY_RANGE_POINTER_APPLE 0x8521
#endif

#ifndef GL_REGISTER_COMBINERS_NV
#define GL_REGISTER_COMBINERS_NV 0x8522
#endif

#ifndef GL_VARIABLE_A_NV
#define GL_VARIABLE_A_NV 0x8523
#endif

#ifndef GL_VARIABLE_B_NV
#define GL_VARIABLE_B_NV 0x8524
#endif

#ifndef GL_VARIABLE_C_NV
#define GL_VARIABLE_C_NV 0x8525
#endif

#ifndef GL_VARIABLE_D_NV
#define GL_VARIABLE_D_NV 0x8526
#endif

#ifndef GL_VARIABLE_E_NV
#define GL_VARIABLE_E_NV 0x8527
#endif

#ifndef GL_VARIABLE_F_NV
#define GL_VARIABLE_F_NV 0x8528
#endif

#ifndef GL_VARIABLE_G_NV
#define GL_VARIABLE_G_NV 0x8529
#endif

#ifndef GL_CONSTANT_COLOR0_NV
#define GL_CONSTANT_COLOR0_NV 0x852A
#endif

#ifndef GL_CONSTANT_COLOR1_NV
#define GL_CONSTANT_COLOR1_NV 0x852B
#endif

#ifndef GL_PRIMARY_COLOR_NV
#define GL_PRIMARY_COLOR_NV 0x852C
#endif

#ifndef GL_SECONDARY_COLOR_NV
#define GL_SECONDARY_COLOR_NV 0x852D
#endif

#ifndef GL_SPARE0_NV
#define GL_SPARE0_NV 0x852E
#endif

#ifndef GL_SPARE1_NV
#define GL_SPARE1_NV 0x852F
#endif

#ifndef GL_DISCARD_NV
#define GL_DISCARD_NV 0x8530
#endif

#ifndef GL_E_TIMES_F_NV
#define GL_E_TIMES_F_NV 0x8531
#endif

#ifndef GL_SPARE0_PLUS_SECONDARY_COLOR_NV
#define GL_SPARE0_PLUS_SECONDARY_COLOR_NV 0x8532
#endif

#ifndef GL_PER_STAGE_CONSTANTS_NV
#define GL_PER_STAGE_CONSTANTS_NV 0x8535
#endif

#ifndef GL_UNSIGNED_IDENTITY_NV
#define GL_UNSIGNED_IDENTITY_NV 0x8536
#endif

#ifndef GL_UNSIGNED_INVERT_NV
#define GL_UNSIGNED_INVERT_NV 0x8537
#endif

#ifndef GL_EXPAND_NORMAL_NV
#define GL_EXPAND_NORMAL_NV 0x8538
#endif

#ifndef GL_EXPAND_NEGATE_NV
#define GL_EXPAND_NEGATE_NV 0x8539
#endif

#ifndef GL_HALF_BIAS_NORMAL_NV
#define GL_HALF_BIAS_NORMAL_NV 0x853A
#endif

#ifndef GL_HALF_BIAS_NEGATE_NV
#define GL_HALF_BIAS_NEGATE_NV 0x853B
#endif

#ifndef GL_SIGNED_IDENTITY_NV
#define GL_SIGNED_IDENTITY_NV 0x853C
#endif

#ifndef GL_UNSIGNED_NEGATE_NV
#define GL_UNSIGNED_NEGATE_NV 0x853D
#endif

#ifndef GL_SCALE_BY_TWO_NV
#define GL_SCALE_BY_TWO_NV 0x853E
#endif

#ifndef GL_SCALE_BY_FOUR_NV
#define GL_SCALE_BY_FOUR_NV 0x853F
#endif

#ifndef GL_SCALE_BY_ONE_HALF_NV
#define GL_SCALE_BY_ONE_HALF_NV 0x8540
#endif

#ifndef GL_BIAS_BY_NEGATIVE_ONE_HALF_NV
#define GL_BIAS_BY_NEGATIVE_ONE_HALF_NV 0x8541
#endif

#ifndef GL_COMBINER_INPUT_NV
#define GL_COMBINER_INPUT_NV 0x8542
#endif

#ifndef GL_COMBINER_MAPPING_NV
#define GL_COMBINER_MAPPING_NV 0x8543
#endif

#ifndef GL_COMBINER_COMPONENT_USAGE_NV
#define GL_COMBINER_COMPONENT_USAGE_NV 0x8544
#endif

#ifndef GL_COMBINER_AB_DOT_PRODUCT_NV
#define GL_COMBINER_AB_DOT_PRODUCT_NV 0x8545
#endif

#ifndef GL_COMBINER_CD_DOT_PRODUCT_NV
#define GL_COMBINER_CD_DOT_PRODUCT_NV 0x8546
#endif

#ifndef GL_COMBINER_MUX_SUM_NV
#define GL_COMBINER_MUX_SUM_NV 0x8547
#endif

#ifndef GL_COMBINER_SCALE_NV
#define GL_COMBINER_SCALE_NV 0x8548
#endif

#ifndef GL_COMBINER_BIAS_NV
#define GL_COMBINER_BIAS_NV 0x8549
#endif

#ifndef GL_COMBINER_AB_OUTPUT_NV
#define GL_COMBINER_AB_OUTPUT_NV 0x854A
#endif

#ifndef GL_COMBINER_CD_OUTPUT_NV
#define GL_COMBINER_CD_OUTPUT_NV 0x854B
#endif

#ifndef GL_COMBINER_SUM_OUTPUT_NV
#define GL_COMBINER_SUM_OUTPUT_NV 0x854C
#endif

#ifndef GL_MAX_GENERAL_COMBINERS_NV
#define GL_MAX_GENERAL_COMBINERS_NV 0x854D
#endif

#ifndef GL_NUM_GENERAL_COMBINERS_NV
#define GL_NUM_GENERAL_COMBINERS_NV 0x854E
#endif

#ifndef GL_COLOR_SUM_CLAMP_NV
#define GL_COLOR_SUM_CLAMP_NV 0x854F
#endif

#ifndef GL_COMBINER0_NV
#define GL_COMBINER0_NV 0x8550
#endif

#ifndef GL_COMBINER1_NV
#define GL_COMBINER1_NV 0x8551
#endif

#ifndef GL_COMBINER2_NV
#define GL_COMBINER2_NV 0x8552
#endif

#ifndef GL_COMBINER3_NV
#define GL_COMBINER3_NV 0x8553
#endif

#ifndef GL_COMBINER4_NV
#define GL_COMBINER4_NV 0x8554
#endif

#ifndef GL_COMBINER5_NV
#define GL_COMBINER5_NV 0x8555
#endif

#ifndef GL_COMBINER6_NV
#define GL_COMBINER6_NV 0x8556
#endif

#ifndef GL_COMBINER7_NV
#define GL_COMBINER7_NV 0x8557
#endif

#ifndef GL_PRIMITIVE_RESTART_NV
#define GL_PRIMITIVE_RESTART_NV 0x8558
#endif

#ifndef GL_PRIMITIVE_RESTART_INDEX_NV
#define GL_PRIMITIVE_RESTART_INDEX_NV 0x8559
#endif

#ifndef GL_FOG_GEN_MODE_NV
#define GL_FOG_GEN_MODE_NV 0x855A
#endif

#ifndef GL_EYE_RADIAL_NV
#define GL_EYE_RADIAL_NV 0x855B
#endif

#ifndef GL_EYE_PLANE_ABSOLUTE_NV
#define GL_EYE_PLANE_ABSOLUTE_NV 0x855C
#endif

#ifndef GL_EMBOSS_LIGHT_NV
#define GL_EMBOSS_LIGHT_NV 0x855D
#endif

#ifndef GL_EMBOSS_CONSTANT_NV
#define GL_EMBOSS_CONSTANT_NV 0x855E
#endif

#ifndef GL_EMBOSS_MAP_NV
#define GL_EMBOSS_MAP_NV 0x855F
#endif

#ifndef GL_RED_MIN_CLAMP_INGR
#define GL_RED_MIN_CLAMP_INGR 0x8560
#endif

#ifndef GL_GREEN_MIN_CLAMP_INGR
#define GL_GREEN_MIN_CLAMP_INGR 0x8561
#endif

#ifndef GL_BLUE_MIN_CLAMP_INGR
#define GL_BLUE_MIN_CLAMP_INGR 0x8562
#endif

#ifndef GL_ALPHA_MIN_CLAMP_INGR
#define GL_ALPHA_MIN_CLAMP_INGR 0x8563
#endif

#ifndef GL_RED_MAX_CLAMP_INGR
#define GL_RED_MAX_CLAMP_INGR 0x8564
#endif

#ifndef GL_GREEN_MAX_CLAMP_INGR
#define GL_GREEN_MAX_CLAMP_INGR 0x8565
#endif

#ifndef GL_BLUE_MAX_CLAMP_INGR
#define GL_BLUE_MAX_CLAMP_INGR 0x8566
#endif

#ifndef GL_ALPHA_MAX_CLAMP_INGR
#define GL_ALPHA_MAX_CLAMP_INGR 0x8567
#endif

#ifndef GL_INTERLACE_READ_INGR
#define GL_INTERLACE_READ_INGR 0x8568
#endif

#ifndef GL_SRC0_RGB
#define GL_SRC0_RGB 0x8580
#endif

#ifndef GL_SRC1_RGB
#define GL_SRC1_RGB 0x8581
#endif

#ifndef GL_SRC2_RGB
#define GL_SRC2_RGB 0x8582
#endif

#ifndef GL_SRC0_ALPHA
#define GL_SRC0_ALPHA 0x8588
#endif

#ifndef GL_SRC1_ALPHA
#define GL_SRC1_ALPHA 0x8589
#endif

#ifndef GL_SRC2_ALPHA
#define GL_SRC2_ALPHA 0x858A
#endif

#ifndef GL_COMBINE
#define GL_COMBINE 0x8570
#endif

#ifndef GL_COMBINE_RGB
#define GL_COMBINE_RGB 0x8571
#endif

#ifndef GL_COMBINE_ALPHA
#define GL_COMBINE_ALPHA 0x8572
#endif

#ifndef GL_RGB_SCALE
#define GL_RGB_SCALE 0x8573
#endif

#ifndef GL_ADD_SIGNED
#define GL_ADD_SIGNED 0x8574
#endif

#ifndef GL_INTERPOLATE
#define GL_INTERPOLATE 0x8575
#endif

#ifndef GL_CONSTANT
#define GL_CONSTANT 0x8576
#endif

#ifndef GL_PRIMARY_COLOR
#define GL_PRIMARY_COLOR 0x8577
#endif

#ifndef GL_PREVIOUS
#define GL_PREVIOUS 0x8578
#endif

#ifndef GL_SOURCE0_RGB
#define GL_SOURCE0_RGB 0x8580
#endif

#ifndef GL_SOURCE1_RGB
#define GL_SOURCE1_RGB 0x8581
#endif

#ifndef GL_SOURCE2_RGB
#define GL_SOURCE2_RGB 0x8582
#endif

#ifndef GL_SOURCE0_ALPHA
#define GL_SOURCE0_ALPHA 0x8588
#endif

#ifndef GL_SOURCE1_ALPHA
#define GL_SOURCE1_ALPHA 0x8589
#endif

#ifndef GL_SOURCE2_ALPHA
#define GL_SOURCE2_ALPHA 0x858A
#endif

#ifndef GL_OPERAND0_RGB
#define GL_OPERAND0_RGB 0x8590
#endif

#ifndef GL_OPERAND1_RGB
#define GL_OPERAND1_RGB 0x8591
#endif

#ifndef GL_OPERAND2_RGB
#define GL_OPERAND2_RGB 0x8592
#endif

#ifndef GL_OPERAND0_ALPHA
#define GL_OPERAND0_ALPHA 0x8598
#endif

#ifndef GL_OPERAND1_ALPHA
#define GL_OPERAND1_ALPHA 0x8599
#endif

#ifndef GL_OPERAND2_ALPHA
#define GL_OPERAND2_ALPHA 0x859A
#endif

#ifndef GL_COMBINE_EXT
#define GL_COMBINE_EXT 0x8570
#endif

#ifndef GL_COMBINE_RGB_EXT
#define GL_COMBINE_RGB_EXT 0x8571
#endif

#ifndef GL_COMBINE_ALPHA_EXT
#define GL_COMBINE_ALPHA_EXT 0x8572
#endif

#ifndef GL_RGB_SCALE_EXT
#define GL_RGB_SCALE_EXT 0x8573
#endif

#ifndef GL_ADD_SIGNED_EXT
#define GL_ADD_SIGNED_EXT 0x8574
#endif

#ifndef GL_INTERPOLATE_EXT
#define GL_INTERPOLATE_EXT 0x8575
#endif

#ifndef GL_CONSTANT_EXT
#define GL_CONSTANT_EXT 0x8576
#endif

#ifndef GL_PRIMARY_COLOR_EXT
#define GL_PRIMARY_COLOR_EXT 0x8577
#endif

#ifndef GL_PREVIOUS_EXT
#define GL_PREVIOUS_EXT 0x8578
#endif

#ifndef GL_SOURCE0_RGB_EXT
#define GL_SOURCE0_RGB_EXT 0x8580
#endif

#ifndef GL_SOURCE1_RGB_EXT
#define GL_SOURCE1_RGB_EXT 0x8581
#endif

#ifndef GL_SOURCE2_RGB_EXT
#define GL_SOURCE2_RGB_EXT 0x8582
#endif

#ifndef GL_SOURCE0_ALPHA_EXT
#define GL_SOURCE0_ALPHA_EXT 0x8588
#endif

#ifndef GL_SOURCE1_ALPHA_EXT
#define GL_SOURCE1_ALPHA_EXT 0x8589
#endif

#ifndef GL_SOURCE2_ALPHA_EXT
#define GL_SOURCE2_ALPHA_EXT 0x858A
#endif

#ifndef GL_OPERAND0_RGB_EXT
#define GL_OPERAND0_RGB_EXT 0x8590
#endif

#ifndef GL_OPERAND1_RGB_EXT
#define GL_OPERAND1_RGB_EXT 0x8591
#endif

#ifndef GL_OPERAND2_RGB_EXT
#define GL_OPERAND2_RGB_EXT 0x8592
#endif

#ifndef GL_OPERAND0_ALPHA_EXT
#define GL_OPERAND0_ALPHA_EXT 0x8598
#endif

#ifndef GL_OPERAND1_ALPHA_EXT
#define GL_OPERAND1_ALPHA_EXT 0x8599
#endif

#ifndef GL_OPERAND2_ALPHA_EXT
#define GL_OPERAND2_ALPHA_EXT 0x859A
#endif

#ifndef GL_COMBINE4_NV
#define GL_COMBINE4_NV 0x8503
#endif

#ifndef GL_SOURCE3_RGB_NV
#define GL_SOURCE3_RGB_NV 0x8583
#endif

#ifndef GL_SOURCE3_ALPHA_NV
#define GL_SOURCE3_ALPHA_NV 0x858B
#endif

#ifndef GL_OPERAND3_RGB_NV
#define GL_OPERAND3_RGB_NV 0x8593
#endif

#ifndef GL_OPERAND3_ALPHA_NV
#define GL_OPERAND3_ALPHA_NV 0x859B
#endif

#ifndef GL_PACK_SUBSAMPLE_RATE_SGIX
#define GL_PACK_SUBSAMPLE_RATE_SGIX 0x85A0
#endif

#ifndef GL_UNPACK_SUBSAMPLE_RATE_SGIX
#define GL_UNPACK_SUBSAMPLE_RATE_SGIX 0x85A1
#endif

#ifndef GL_PIXEL_SUBSAMPLE_4444_SGIX
#define GL_PIXEL_SUBSAMPLE_4444_SGIX 0x85A2
#endif

#ifndef GL_PIXEL_SUBSAMPLE_2424_SGIX
#define GL_PIXEL_SUBSAMPLE_2424_SGIX 0x85A3
#endif

#ifndef GL_PIXEL_SUBSAMPLE_4242_SGIX
#define GL_PIXEL_SUBSAMPLE_4242_SGIX 0x85A4
#endif

#ifndef GL_PERTURB_EXT
#define GL_PERTURB_EXT 0x85AE
#endif

#ifndef GL_TEXTURE_NORMAL_EXT
#define GL_TEXTURE_NORMAL_EXT 0x85AF
#endif

#ifndef GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE
#define GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE 0x85B0
#endif

#ifndef GL_TRANSFORM_HINT_APPLE
#define GL_TRANSFORM_HINT_APPLE 0x85B1
#endif

#ifndef GL_UNPACK_CLIENT_STORAGE_APPLE
#define GL_UNPACK_CLIENT_STORAGE_APPLE 0x85B2
#endif

#ifndef GL_BUFFER_OBJECT_APPLE
#define GL_BUFFER_OBJECT_APPLE 0x85B3
#endif

#ifndef GL_STORAGE_CLIENT_APPLE
#define GL_STORAGE_CLIENT_APPLE 0x85B4
#endif

#ifndef GL_VERTEX_ARRAY_BINDING
#define GL_VERTEX_ARRAY_BINDING 0x85B5
#endif

#ifndef GL_VERTEX_ARRAY_BINDING_APPLE
#define GL_VERTEX_ARRAY_BINDING_APPLE 0x85B5
#endif

#ifndef GL_TEXTURE_RANGE_LENGTH_APPLE
#define GL_TEXTURE_RANGE_LENGTH_APPLE 0x85B7
#endif

#ifndef GL_TEXTURE_RANGE_POINTER_APPLE
#define GL_TEXTURE_RANGE_POINTER_APPLE 0x85B8
#endif

#ifndef GL_YCBCR_422_APPLE
#define GL_YCBCR_422_APPLE 0x85B9
#endif

#ifndef GL_UNSIGNED_SHORT_8_8_APPLE
#define GL_UNSIGNED_SHORT_8_8_APPLE 0x85BA
#endif

#ifndef GL_UNSIGNED_SHORT_8_8_REV_APPLE
#define GL_UNSIGNED_SHORT_8_8_REV_APPLE 0x85BB
#endif

#ifndef GL_UNSIGNED_SHORT_8_8_MESA
#define GL_UNSIGNED_SHORT_8_8_MESA 0x85BA
#endif

#ifndef GL_UNSIGNED_SHORT_8_8_REV_MESA
#define GL_UNSIGNED_SHORT_8_8_REV_MESA 0x85BB
#endif

#ifndef GL_TEXTURE_STORAGE_HINT_APPLE
#define GL_TEXTURE_STORAGE_HINT_APPLE 0x85BC
#endif

#ifndef GL_STORAGE_PRIVATE_APPLE
#define GL_STORAGE_PRIVATE_APPLE 0x85BD
#endif

#ifndef GL_STORAGE_CACHED_APPLE
#define GL_STORAGE_CACHED_APPLE 0x85BE
#endif

#ifndef GL_STORAGE_SHARED_APPLE
#define GL_STORAGE_SHARED_APPLE 0x85BF
#endif

#ifndef GL_REPLACEMENT_CODE_ARRAY_SUN
#define GL_REPLACEMENT_CODE_ARRAY_SUN 0x85C0
#endif

#ifndef GL_REPLACEMENT_CODE_ARRAY_TYPE_SUN
#define GL_REPLACEMENT_CODE_ARRAY_TYPE_SUN 0x85C1
#endif

#ifndef GL_REPLACEMENT_CODE_ARRAY_STRIDE_SUN
#define GL_REPLACEMENT_CODE_ARRAY_STRIDE_SUN 0x85C2
#endif

#ifndef GL_REPLACEMENT_CODE_ARRAY_POINTER_SUN
#define GL_REPLACEMENT_CODE_ARRAY_POINTER_SUN 0x85C3
#endif

#ifndef GL_R1UI_V3F_SUN
#define GL_R1UI_V3F_SUN 0x85C4
#endif

#ifndef GL_R1UI_C4UB_V3F_SUN
#define GL_R1UI_C4UB_V3F_SUN 0x85C5
#endif

#ifndef GL_R1UI_C3F_V3F_SUN
#define GL_R1UI_C3F_V3F_SUN 0x85C6
#endif

#ifndef GL_R1UI_N3F_V3F_SUN
#define GL_R1UI_N3F_V3F_SUN 0x85C7
#endif

#ifndef GL_R1UI_C4F_N3F_V3F_SUN
#define GL_R1UI_C4F_N3F_V3F_SUN 0x85C8
#endif

#ifndef GL_R1UI_T2F_V3F_SUN
#define GL_R1UI_T2F_V3F_SUN 0x85C9
#endif

#ifndef GL_R1UI_T2F_N3F_V3F_SUN
#define GL_R1UI_T2F_N3F_V3F_SUN 0x85CA
#endif

#ifndef GL_R1UI_T2F_C4F_N3F_V3F_SUN
#define GL_R1UI_T2F_C4F_N3F_V3F_SUN 0x85CB
#endif

#ifndef GL_SLICE_ACCUM_SUN
#define GL_SLICE_ACCUM_SUN 0x85CC
#endif

#ifndef GL_QUAD_MESH_SUN
#define GL_QUAD_MESH_SUN 0x8614
#endif

#ifndef GL_TRIANGLE_MESH_SUN
#define GL_TRIANGLE_MESH_SUN 0x8615
#endif

#ifndef GL_VERTEX_PROGRAM_NV
#define GL_VERTEX_PROGRAM_NV 0x8620
#endif

#ifndef GL_VERTEX_STATE_PROGRAM_NV
#define GL_VERTEX_STATE_PROGRAM_NV 0x8621
#endif

#ifndef GL_ATTRIB_ARRAY_SIZE_NV
#define GL_ATTRIB_ARRAY_SIZE_NV 0x8623
#endif

#ifndef GL_ATTRIB_ARRAY_STRIDE_NV
#define GL_ATTRIB_ARRAY_STRIDE_NV 0x8624
#endif

#ifndef GL_ATTRIB_ARRAY_TYPE_NV
#define GL_ATTRIB_ARRAY_TYPE_NV 0x8625
#endif

#ifndef GL_CURRENT_ATTRIB_NV
#define GL_CURRENT_ATTRIB_NV 0x8626
#endif

#ifndef GL_PROGRAM_LENGTH_NV
#define GL_PROGRAM_LENGTH_NV 0x8627
#endif

#ifndef GL_PROGRAM_STRING_NV
#define GL_PROGRAM_STRING_NV 0x8628
#endif

#ifndef GL_MODELVIEW_PROJECTION_NV
#define GL_MODELVIEW_PROJECTION_NV 0x8629
#endif

#ifndef GL_IDENTITY_NV
#define GL_IDENTITY_NV 0x862A
#endif

#ifndef GL_INVERSE_NV
#define GL_INVERSE_NV 0x862B
#endif

#ifndef GL_TRANSPOSE_NV
#define GL_TRANSPOSE_NV 0x862C
#endif

#ifndef GL_INVERSE_TRANSPOSE_NV
#define GL_INVERSE_TRANSPOSE_NV 0x862D
#endif

#ifndef GL_MAX_TRACK_MATRIX_STACK_DEPTH_NV
#define GL_MAX_TRACK_MATRIX_STACK_DEPTH_NV 0x862E
#endif

#ifndef GL_MAX_TRACK_MATRICES_NV
#define GL_MAX_TRACK_MATRICES_NV 0x862F
#endif

#ifndef GL_MATRIX0_NV
#define GL_MATRIX0_NV 0x8630
#endif

#ifndef GL_MATRIX1_NV
#define GL_MATRIX1_NV 0x8631
#endif

#ifndef GL_MATRIX2_NV
#define GL_MATRIX2_NV 0x8632
#endif

#ifndef GL_MATRIX3_NV
#define GL_MATRIX3_NV 0x8633
#endif

#ifndef GL_MATRIX4_NV
#define GL_MATRIX4_NV 0x8634
#endif

#ifndef GL_MATRIX5_NV
#define GL_MATRIX5_NV 0x8635
#endif

#ifndef GL_MATRIX6_NV
#define GL_MATRIX6_NV 0x8636
#endif

#ifndef GL_MATRIX7_NV
#define GL_MATRIX7_NV 0x8637
#endif

#ifndef GL_PROGRAM_POINT_SIZE
#define GL_PROGRAM_POINT_SIZE 0x8642
#endif

#ifndef GL_PROGRAM_POINT_SIZE_ARB
#define GL_PROGRAM_POINT_SIZE_ARB 0x8642
#endif

#ifndef GL_PROGRAM_POINT_SIZE_EXT
#define GL_PROGRAM_POINT_SIZE_EXT 0x8642
#endif

#ifndef GL_DEPTH_CLAMP
#define GL_DEPTH_CLAMP 0x864F
#endif

#ifndef GL_DEPTH_CLAMP_NV
#define GL_DEPTH_CLAMP_NV 0x864F
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY_ENABLED
#define GL_VERTEX_ATTRIB_ARRAY_ENABLED 0x8622
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY_SIZE
#define GL_VERTEX_ATTRIB_ARRAY_SIZE 0x8623
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY_STRIDE
#define GL_VERTEX_ATTRIB_ARRAY_STRIDE 0x8624
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY_TYPE
#define GL_VERTEX_ATTRIB_ARRAY_TYPE 0x8625
#endif

#ifndef GL_CURRENT_VERTEX_ATTRIB
#define GL_CURRENT_VERTEX_ATTRIB 0x8626
#endif

#ifndef GL_VERTEX_PROGRAM_POINT_SIZE
#define GL_VERTEX_PROGRAM_POINT_SIZE 0x8642
#endif

#ifndef GL_VERTEX_PROGRAM_TWO_SIDE
#define GL_VERTEX_PROGRAM_TWO_SIDE 0x8643
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY_POINTER
#define GL_VERTEX_ATTRIB_ARRAY_POINTER 0x8645
#endif

#ifndef GL_MAX_VERTEX_UNITS_ARB
#define GL_MAX_VERTEX_UNITS_ARB 0x86A4
#endif

#ifndef GL_ACTIVE_VERTEX_UNITS_ARB
#define GL_ACTIVE_VERTEX_UNITS_ARB 0x86A5
#endif

#ifndef GL_WEIGHT_SUM_UNITY_ARB
#define GL_WEIGHT_SUM_UNITY_ARB 0x86A6
#endif

#ifndef GL_VERTEX_BLEND_ARB
#define GL_VERTEX_BLEND_ARB 0x86A7
#endif

#ifndef GL_CURRENT_WEIGHT_ARB
#define GL_CURRENT_WEIGHT_ARB 0x86A8
#endif

#ifndef GL_WEIGHT_ARRAY_TYPE_ARB
#define GL_WEIGHT_ARRAY_TYPE_ARB 0x86A9
#endif

#ifndef GL_WEIGHT_ARRAY_STRIDE_ARB
#define GL_WEIGHT_ARRAY_STRIDE_ARB 0x86AA
#endif

#ifndef GL_WEIGHT_ARRAY_SIZE_ARB
#define GL_WEIGHT_ARRAY_SIZE_ARB 0x86AB
#endif

#ifndef GL_WEIGHT_ARRAY_POINTER_ARB
#define GL_WEIGHT_ARRAY_POINTER_ARB 0x86AC
#endif

#ifndef GL_WEIGHT_ARRAY_ARB
#define GL_WEIGHT_ARRAY_ARB 0x86AD
#endif

#ifndef GL_MAX_VERTEX_UNITS_OES
#define GL_MAX_VERTEX_UNITS_OES 0x86A4
#endif

#ifndef GL_WEIGHT_ARRAY_OES
#define GL_WEIGHT_ARRAY_OES 0x86AD
#endif

#ifndef GL_WEIGHT_ARRAY_TYPE_OES
#define GL_WEIGHT_ARRAY_TYPE_OES 0x86A9
#endif

#ifndef GL_WEIGHT_ARRAY_STRIDE_OES
#define GL_WEIGHT_ARRAY_STRIDE_OES 0x86AA
#endif

#ifndef GL_WEIGHT_ARRAY_SIZE_OES
#define GL_WEIGHT_ARRAY_SIZE_OES 0x86AB
#endif

#ifndef GL_WEIGHT_ARRAY_POINTER_OES
#define GL_WEIGHT_ARRAY_POINTER_OES 0x86AC
#endif

#ifndef GL_DOT3_RGB
#define GL_DOT3_RGB 0x86AE
#endif

#ifndef GL_DOT3_RGBA
#define GL_DOT3_RGBA 0x86AF
#endif

#ifndef GL_DOT3_RGB_ARB
#define GL_DOT3_RGB_ARB 0x86AE
#endif

#ifndef GL_DOT3_RGBA_ARB
#define GL_DOT3_RGBA_ARB 0x86AF
#endif

#ifndef GL_DOT3_RGBA_IMG
#define GL_DOT3_RGBA_IMG 0x86AF
#endif

#ifndef GL_COMPRESSED_RGB_FXT1_3DFX
#define GL_COMPRESSED_RGB_FXT1_3DFX 0x86B0
#endif

#ifndef GL_COMPRESSED_RGBA_FXT1_3DFX
#define GL_COMPRESSED_RGBA_FXT1_3DFX 0x86B1
#endif

#ifndef GL_MULTISAMPLE_3DFX
#define GL_MULTISAMPLE_3DFX 0x86B2
#endif

#ifndef GL_SAMPLE_BUFFERS_3DFX
#define GL_SAMPLE_BUFFERS_3DFX 0x86B3
#endif

#ifndef GL_SAMPLES_3DFX
#define GL_SAMPLES_3DFX 0x86B4
#endif

#ifndef GL_MULTISAMPLE_BIT_3DFX
#define GL_MULTISAMPLE_BIT_3DFX 0x20000000
#endif

#ifndef GL_EVAL_2D_NV
#define GL_EVAL_2D_NV 0x86C0
#endif

#ifndef GL_EVAL_TRIANGULAR_2D_NV
#define GL_EVAL_TRIANGULAR_2D_NV 0x86C1
#endif

#ifndef GL_MAP_TESSELLATION_NV
#define GL_MAP_TESSELLATION_NV 0x86C2
#endif

#ifndef GL_MAP_ATTRIB_U_ORDER_NV
#define GL_MAP_ATTRIB_U_ORDER_NV 0x86C3
#endif

#ifndef GL_MAP_ATTRIB_V_ORDER_NV
#define GL_MAP_ATTRIB_V_ORDER_NV 0x86C4
#endif

#ifndef GL_EVAL_FRACTIONAL_TESSELLATION_NV
#define GL_EVAL_FRACTIONAL_TESSELLATION_NV 0x86C5
#endif

#ifndef GL_EVAL_VERTEX_ATRRIB0_NV
#define GL_EVAL_VERTEX_ATRRIB0_NV 0x86C6
#endif

#ifndef GL_EVAL_VERTEX_ATRRIB1_NV
#define GL_EVAL_VERTEX_ATRRIB1_NV 0x86C7
#endif

#ifndef GL_EVAL_VERTEX_ATRRIB2_NV
#define GL_EVAL_VERTEX_ATRRIB2_NV 0x86C8
#endif

#ifndef GL_EVAL_VERTEX_ATRRIB3_NV
#define GL_EVAL_VERTEX_ATRRIB3_NV 0x86C9
#endif

#ifndef GL_EVAL_VERTEX_ATRRIB4_NV
#define GL_EVAL_VERTEX_ATRRIB4_NV 0x86CA
#endif

#ifndef GL_EVAL_VERTEX_ATRRIB5_NV
#define GL_EVAL_VERTEX_ATRRIB5_NV 0x86CB
#endif

#ifndef GL_EVAL_VERTEX_ATRRIB6_NV
#define GL_EVAL_VERTEX_ATRRIB6_NV 0x86CC
#endif

#ifndef GL_EVAL_VERTEX_ATRRIB7_NV
#define GL_EVAL_VERTEX_ATRRIB7_NV 0x86CD
#endif

#ifndef GL_EVAL_VERTEX_ATRRIB8_NV
#define GL_EVAL_VERTEX_ATRRIB8_NV 0x86CE
#endif

#ifndef GL_EVAL_VERTEX_ATRRIB9_NV
#define GL_EVAL_VERTEX_ATRRIB9_NV 0x86CF
#endif

#ifndef GL_EVAL_VERTEX_ATRRIB10_NV
#define GL_EVAL_VERTEX_ATRRIB10_NV 0x86D0
#endif

#ifndef GL_EVAL_VERTEX_ATRRIB11_NV
#define GL_EVAL_VERTEX_ATRRIB11_NV 0x86D1
#endif

#ifndef GL_EVAL_VERTEX_ATRRIB12_NV
#define GL_EVAL_VERTEX_ATRRIB12_NV 0x86D2
#endif

#ifndef GL_EVAL_VERTEX_ATRRIB13_NV
#define GL_EVAL_VERTEX_ATRRIB13_NV 0x86D3
#endif

#ifndef GL_EVAL_VERTEX_ATRRIB14_NV
#define GL_EVAL_VERTEX_ATRRIB14_NV 0x86D4
#endif

#ifndef GL_EVAL_VERTEX_ATRRIB15_NV
#define GL_EVAL_VERTEX_ATRRIB15_NV 0x86D5
#endif

#ifndef GL_MAX_MAP_TESSELLATION_NV
#define GL_MAX_MAP_TESSELLATION_NV 0x86D6
#endif

#ifndef GL_MAX_RATIONAL_EVAL_ORDER_NV
#define GL_MAX_RATIONAL_EVAL_ORDER_NV 0x86D7
#endif

#ifndef GL_MAX_PROGRAM_PATCH_ATTRIBS_NV
#define GL_MAX_PROGRAM_PATCH_ATTRIBS_NV 0x86D8
#endif

#ifndef GL_OFFSET_TEXTURE_RECTANGLE_NV
#define GL_OFFSET_TEXTURE_RECTANGLE_NV 0x864C
#endif

#ifndef GL_OFFSET_TEXTURE_RECTANGLE_SCALE_NV
#define GL_OFFSET_TEXTURE_RECTANGLE_SCALE_NV 0x864D
#endif

#ifndef GL_DOT_PRODUCT_TEXTURE_RECTANGLE_NV
#define GL_DOT_PRODUCT_TEXTURE_RECTANGLE_NV 0x864E
#endif

#ifndef GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV
#define GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV 0x86D9
#endif

#ifndef GL_UNSIGNED_INT_S8_S8_8_8_NV
#define GL_UNSIGNED_INT_S8_S8_8_8_NV 0x86DA
#endif

#ifndef GL_UNSIGNED_INT_8_8_S8_S8_REV_NV
#define GL_UNSIGNED_INT_8_8_S8_S8_REV_NV 0x86DB
#endif

#ifndef GL_DSDT_MAG_INTENSITY_NV
#define GL_DSDT_MAG_INTENSITY_NV 0x86DC
#endif

#ifndef GL_SHADER_CONSISTENT_NV
#define GL_SHADER_CONSISTENT_NV 0x86DD
#endif

#ifndef GL_TEXTURE_SHADER_NV
#define GL_TEXTURE_SHADER_NV 0x86DE
#endif

#ifndef GL_SHADER_OPERATION_NV
#define GL_SHADER_OPERATION_NV 0x86DF
#endif

#ifndef GL_CULL_MODES_NV
#define GL_CULL_MODES_NV 0x86E0
#endif

#ifndef GL_OFFSET_TEXTURE_MATRIX_NV
#define GL_OFFSET_TEXTURE_MATRIX_NV 0x86E1
#endif

#ifndef GL_OFFSET_TEXTURE_SCALE_NV
#define GL_OFFSET_TEXTURE_SCALE_NV 0x86E2
#endif

#ifndef GL_OFFSET_TEXTURE_BIAS_NV
#define GL_OFFSET_TEXTURE_BIAS_NV 0x86E3
#endif

#ifndef GL_OFFSET_TEXTURE_2D_MATRIX_NV
#define GL_OFFSET_TEXTURE_2D_MATRIX_NV GL_OFFSET_TEXTURE_MATRIX_NV
#endif

#ifndef GL_OFFSET_TEXTURE_2D_SCALE_NV
#define GL_OFFSET_TEXTURE_2D_SCALE_NV GL_OFFSET_TEXTURE_SCALE_NV
#endif

#ifndef GL_OFFSET_TEXTURE_2D_BIAS_NV
#define GL_OFFSET_TEXTURE_2D_BIAS_NV GL_OFFSET_TEXTURE_BIAS_NV
#endif

#ifndef GL_PREVIOUS_TEXTURE_INPUT_NV
#define GL_PREVIOUS_TEXTURE_INPUT_NV 0x86E4
#endif

#ifndef GL_CONST_EYE_NV
#define GL_CONST_EYE_NV 0x86E5
#endif

#ifndef GL_PASS_THROUGH_NV
#define GL_PASS_THROUGH_NV 0x86E6
#endif

#ifndef GL_CULL_FRAGMENT_NV
#define GL_CULL_FRAGMENT_NV 0x86E7
#endif

#ifndef GL_OFFSET_TEXTURE_2D_NV
#define GL_OFFSET_TEXTURE_2D_NV 0x86E8
#endif

#ifndef GL_DEPENDENT_AR_TEXTURE_2D_NV
#define GL_DEPENDENT_AR_TEXTURE_2D_NV 0x86E9
#endif

#ifndef GL_DEPENDENT_GB_TEXTURE_2D_NV
#define GL_DEPENDENT_GB_TEXTURE_2D_NV 0x86EA
#endif

#ifndef GL_DOT_PRODUCT_NV
#define GL_DOT_PRODUCT_NV 0x86EC
#endif

#ifndef GL_DOT_PRODUCT_DEPTH_REPLACE_NV
#define GL_DOT_PRODUCT_DEPTH_REPLACE_NV 0x86ED
#endif

#ifndef GL_DOT_PRODUCT_TEXTURE_2D_NV
#define GL_DOT_PRODUCT_TEXTURE_2D_NV 0x86EE
#endif

#ifndef GL_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV
#define GL_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV 0x86F0
#endif

#ifndef GL_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV
#define GL_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV 0x86F1
#endif

#ifndef GL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV
#define GL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV 0x86F2
#endif

#ifndef GL_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV
#define GL_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV 0x86F3
#endif

#ifndef GL_HILO_NV
#define GL_HILO_NV 0x86F4
#endif

#ifndef GL_DSDT_NV
#define GL_DSDT_NV 0x86F5
#endif

#ifndef GL_DSDT_MAG_NV
#define GL_DSDT_MAG_NV 0x86F6
#endif

#ifndef GL_DSDT_MAG_VIB_NV
#define GL_DSDT_MAG_VIB_NV 0x86F7
#endif

#ifndef GL_HILO16_NV
#define GL_HILO16_NV 0x86F8
#endif

#ifndef GL_SIGNED_HILO_NV
#define GL_SIGNED_HILO_NV 0x86F9
#endif

#ifndef GL_SIGNED_HILO16_NV
#define GL_SIGNED_HILO16_NV 0x86FA
#endif

#ifndef GL_SIGNED_RGBA_NV
#define GL_SIGNED_RGBA_NV 0x86FB
#endif

#ifndef GL_SIGNED_RGBA8_NV
#define GL_SIGNED_RGBA8_NV 0x86FC
#endif

#ifndef GL_SIGNED_RGB_NV
#define GL_SIGNED_RGB_NV 0x86FE
#endif

#ifndef GL_SIGNED_RGB8_NV
#define GL_SIGNED_RGB8_NV 0x86FF
#endif

#ifndef GL_SIGNED_LUMINANCE_NV
#define GL_SIGNED_LUMINANCE_NV 0x8701
#endif

#ifndef GL_SIGNED_LUMINANCE8_NV
#define GL_SIGNED_LUMINANCE8_NV 0x8702
#endif

#ifndef GL_SIGNED_LUMINANCE_ALPHA_NV
#define GL_SIGNED_LUMINANCE_ALPHA_NV 0x8703
#endif

#ifndef GL_SIGNED_LUMINANCE8_ALPHA8_NV
#define GL_SIGNED_LUMINANCE8_ALPHA8_NV 0x8704
#endif

#ifndef GL_SIGNED_ALPHA_NV
#define GL_SIGNED_ALPHA_NV 0x8705
#endif

#ifndef GL_SIGNED_ALPHA8_NV
#define GL_SIGNED_ALPHA8_NV 0x8706
#endif

#ifndef GL_SIGNED_INTENSITY_NV
#define GL_SIGNED_INTENSITY_NV 0x8707
#endif

#ifndef GL_SIGNED_INTENSITY8_NV
#define GL_SIGNED_INTENSITY8_NV 0x8708
#endif

#ifndef GL_DSDT8_NV
#define GL_DSDT8_NV 0x8709
#endif

#ifndef GL_DSDT8_MAG8_NV
#define GL_DSDT8_MAG8_NV 0x870A
#endif

#ifndef GL_DSDT8_MAG8_INTENSITY8_NV
#define GL_DSDT8_MAG8_INTENSITY8_NV 0x870B
#endif

#ifndef GL_SIGNED_RGB_UNSIGNED_ALPHA_NV
#define GL_SIGNED_RGB_UNSIGNED_ALPHA_NV 0x870C
#endif

#ifndef GL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV
#define GL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV 0x870D
#endif

#ifndef GL_HI_SCALE_NV
#define GL_HI_SCALE_NV 0x870E
#endif

#ifndef GL_LO_SCALE_NV
#define GL_LO_SCALE_NV 0x870F
#endif

#ifndef GL_DS_SCALE_NV
#define GL_DS_SCALE_NV 0x8710
#endif

#ifndef GL_DT_SCALE_NV
#define GL_DT_SCALE_NV 0x8711
#endif

#ifndef GL_MAGNITUDE_SCALE_NV
#define GL_MAGNITUDE_SCALE_NV 0x8712
#endif

#ifndef GL_VIBRANCE_SCALE_NV
#define GL_VIBRANCE_SCALE_NV 0x8713
#endif

#ifndef GL_HI_BIAS_NV
#define GL_HI_BIAS_NV 0x8714
#endif

#ifndef GL_LO_BIAS_NV
#define GL_LO_BIAS_NV 0x8715
#endif

#ifndef GL_DS_BIAS_NV
#define GL_DS_BIAS_NV 0x8716
#endif

#ifndef GL_DT_BIAS_NV
#define GL_DT_BIAS_NV 0x8717
#endif

#ifndef GL_MAGNITUDE_BIAS_NV
#define GL_MAGNITUDE_BIAS_NV 0x8718
#endif

#ifndef GL_VIBRANCE_BIAS_NV
#define GL_VIBRANCE_BIAS_NV 0x8719
#endif

#ifndef GL_TEXTURE_BORDER_VALUES_NV
#define GL_TEXTURE_BORDER_VALUES_NV 0x871A
#endif

#ifndef GL_TEXTURE_HI_SIZE_NV
#define GL_TEXTURE_HI_SIZE_NV 0x871B
#endif

#ifndef GL_TEXTURE_LO_SIZE_NV
#define GL_TEXTURE_LO_SIZE_NV 0x871C
#endif

#ifndef GL_TEXTURE_DS_SIZE_NV
#define GL_TEXTURE_DS_SIZE_NV 0x871D
#endif

#ifndef GL_TEXTURE_DT_SIZE_NV
#define GL_TEXTURE_DT_SIZE_NV 0x871E
#endif

#ifndef GL_TEXTURE_MAG_SIZE_NV
#define GL_TEXTURE_MAG_SIZE_NV 0x871F
#endif

#ifndef GL_SURFACE_STATE_NV
#define GL_SURFACE_STATE_NV 0x86EB
#endif

#ifndef GL_DOT_PRODUCT_TEXTURE_3D_NV
#define GL_DOT_PRODUCT_TEXTURE_3D_NV 0x86EF
#endif

#ifndef GL_SURFACE_REGISTERED_NV
#define GL_SURFACE_REGISTERED_NV 0x86FD
#endif

#ifndef GL_SURFACE_MAPPED_NV
#define GL_SURFACE_MAPPED_NV 0x8700
#endif

#ifndef GL_DOT3_RGB_EXT
#define GL_DOT3_RGB_EXT 0x8740
#endif

#ifndef GL_DOT3_RGBA_EXT
#define GL_DOT3_RGBA_EXT 0x8741
#endif

#ifndef GL_Z400_BINARY_AMD
#define GL_Z400_BINARY_AMD 0x8740
#endif

#ifndef GL_PROGRAM_BINARY_LENGTH_OES
#define GL_PROGRAM_BINARY_LENGTH_OES 0x8741
#endif

#ifndef GL_PROGRAM_BINARY_LENGTH
#define GL_PROGRAM_BINARY_LENGTH 0x8741
#endif

#ifndef GL_MIRROR_CLAMP_ATI
#define GL_MIRROR_CLAMP_ATI 0x8742
#endif

#ifndef GL_MIRROR_CLAMP_TO_EDGE_ATI
#define GL_MIRROR_CLAMP_TO_EDGE_ATI 0x8743
#endif

#ifndef GL_MIRROR_CLAMP_EXT
#define GL_MIRROR_CLAMP_EXT 0x8742
#endif

#ifndef GL_MIRROR_CLAMP_TO_EDGE_EXT
#define GL_MIRROR_CLAMP_TO_EDGE_EXT 0x8743
#endif

#ifndef GL_MODULATE_ADD_ATI
#define GL_MODULATE_ADD_ATI 0x8744
#endif

#ifndef GL_MODULATE_SIGNED_ADD_ATI
#define GL_MODULATE_SIGNED_ADD_ATI 0x8745
#endif

#ifndef GL_MODULATE_SUBTRACT_ATI
#define GL_MODULATE_SUBTRACT_ATI 0x8746
#endif

#ifndef GL_SET_AMD
#define GL_SET_AMD 0x874A
#endif

#ifndef GL_REPLACE_VALUE_AMD
#define GL_REPLACE_VALUE_AMD 0x874B
#endif

#ifndef GL_STENCIL_OP_VALUE_AMD
#define GL_STENCIL_OP_VALUE_AMD 0x874C
#endif

#ifndef GL_STENCIL_BACK_OP_VALUE_AMD
#define GL_STENCIL_BACK_OP_VALUE_AMD 0x874D
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY_LONG
#define GL_VERTEX_ATTRIB_ARRAY_LONG 0x874E
#endif

#ifndef GL_DEPTH_STENCIL_MESA
#define GL_DEPTH_STENCIL_MESA 0x8750
#endif

#ifndef GL_UNSIGNED_INT_24_8_MESA
#define GL_UNSIGNED_INT_24_8_MESA 0x8751
#endif

#ifndef GL_UNSIGNED_INT_8_24_REV_MESA
#define GL_UNSIGNED_INT_8_24_REV_MESA 0x8752
#endif

#ifndef GL_UNSIGNED_SHORT_15_1_MESA
#define GL_UNSIGNED_SHORT_15_1_MESA 0x8753
#endif

#ifndef GL_UNSIGNED_SHORT_1_15_REV_MESA
#define GL_UNSIGNED_SHORT_1_15_REV_MESA 0x8754
#endif

#ifndef GL_TRACE_ALL_BITS_MESA
#define GL_TRACE_ALL_BITS_MESA 0xFFFF
#endif

#ifndef GL_TRACE_OPERATIONS_BIT_MESA
#define GL_TRACE_OPERATIONS_BIT_MESA 0x0001
#endif

#ifndef GL_TRACE_PRIMITIVES_BIT_MESA
#define GL_TRACE_PRIMITIVES_BIT_MESA 0x0002
#endif

#ifndef GL_TRACE_ARRAYS_BIT_MESA
#define GL_TRACE_ARRAYS_BIT_MESA 0x0004
#endif

#ifndef GL_TRACE_TEXTURES_BIT_MESA
#define GL_TRACE_TEXTURES_BIT_MESA 0x0008
#endif

#ifndef GL_TRACE_PIXELS_BIT_MESA
#define GL_TRACE_PIXELS_BIT_MESA 0x0010
#endif

#ifndef GL_TRACE_ERRORS_BIT_MESA
#define GL_TRACE_ERRORS_BIT_MESA 0x0020
#endif

#ifndef GL_TRACE_MASK_MESA
#define GL_TRACE_MASK_MESA 0x8755
#endif

#ifndef GL_TRACE_NAME_MESA
#define GL_TRACE_NAME_MESA 0x8756
#endif

#ifndef GL_YCBCR_MESA
#define GL_YCBCR_MESA 0x8757
#endif

#ifndef GL_PACK_INVERT_MESA
#define GL_PACK_INVERT_MESA 0x8758
#endif

#ifndef GL_TEXTURE_1D_STACK_MESAX
#define GL_TEXTURE_1D_STACK_MESAX 0x8759
#endif

#ifndef GL_TEXTURE_2D_STACK_MESAX
#define GL_TEXTURE_2D_STACK_MESAX 0x875A
#endif

#ifndef GL_PROXY_TEXTURE_1D_STACK_MESAX
#define GL_PROXY_TEXTURE_1D_STACK_MESAX 0x875B
#endif

#ifndef GL_PROXY_TEXTURE_2D_STACK_MESAX
#define GL_PROXY_TEXTURE_2D_STACK_MESAX 0x875C
#endif

#ifndef GL_TEXTURE_1D_STACK_BINDING_MESAX
#define GL_TEXTURE_1D_STACK_BINDING_MESAX 0x875D
#endif

#ifndef GL_TEXTURE_2D_STACK_BINDING_MESAX
#define GL_TEXTURE_2D_STACK_BINDING_MESAX 0x875E
#endif

#ifndef GL_DEBUG_OBJECT_MESA
#define GL_DEBUG_OBJECT_MESA 0x8759
#endif

#ifndef GL_DEBUG_PRINT_MESA
#define GL_DEBUG_PRINT_MESA 0x875A
#endif

#ifndef GL_DEBUG_ASSERT_MESA
#define GL_DEBUG_ASSERT_MESA 0x875B
#endif

#ifndef GL_STATIC_ATI
#define GL_STATIC_ATI 0x8760
#endif

#ifndef GL_DYNAMIC_ATI
#define GL_DYNAMIC_ATI 0x8761
#endif

#ifndef GL_PRESERVE_ATI
#define GL_PRESERVE_ATI 0x8762
#endif

#ifndef GL_DISCARD_ATI
#define GL_DISCARD_ATI 0x8763
#endif

#ifndef GL_OBJECT_BUFFER_SIZE_ATI
#define GL_OBJECT_BUFFER_SIZE_ATI 0x8764
#endif

#ifndef GL_OBJECT_BUFFER_USAGE_ATI
#define GL_OBJECT_BUFFER_USAGE_ATI 0x8765
#endif

#ifndef GL_ARRAY_OBJECT_BUFFER_ATI
#define GL_ARRAY_OBJECT_BUFFER_ATI 0x8766
#endif

#ifndef GL_ARRAY_OBJECT_OFFSET_ATI
#define GL_ARRAY_OBJECT_OFFSET_ATI 0x8767
#endif

#ifndef GL_BUFFER_SIZE
#define GL_BUFFER_SIZE 0x8764
#endif

#ifndef GL_BUFFER_USAGE
#define GL_BUFFER_USAGE 0x8765
#endif

#ifndef GL_BUFFER_SIZE_ARB
#define GL_BUFFER_SIZE_ARB 0x8764
#endif

#ifndef GL_BUFFER_USAGE_ARB
#define GL_BUFFER_USAGE_ARB 0x8765
#endif

#ifndef GL_ELEMENT_ARRAY_ATI
#define GL_ELEMENT_ARRAY_ATI 0x8768
#endif

#ifndef GL_ELEMENT_ARRAY_TYPE_ATI
#define GL_ELEMENT_ARRAY_TYPE_ATI 0x8769
#endif

#ifndef GL_ELEMENT_ARRAY_POINTER_ATI
#define GL_ELEMENT_ARRAY_POINTER_ATI 0x876A
#endif

#ifndef GL_MAX_VERTEX_STREAMS_ATI
#define GL_MAX_VERTEX_STREAMS_ATI 0x876B
#endif

#ifndef GL_VERTEX_STREAM0_ATI
#define GL_VERTEX_STREAM0_ATI 0x876C
#endif

#ifndef GL_VERTEX_STREAM1_ATI
#define GL_VERTEX_STREAM1_ATI 0x876D
#endif

#ifndef GL_VERTEX_STREAM2_ATI
#define GL_VERTEX_STREAM2_ATI 0x876E
#endif

#ifndef GL_VERTEX_STREAM3_ATI
#define GL_VERTEX_STREAM3_ATI 0x876F
#endif

#ifndef GL_VERTEX_STREAM4_ATI
#define GL_VERTEX_STREAM4_ATI 0x8770
#endif

#ifndef GL_VERTEX_STREAM5_ATI
#define GL_VERTEX_STREAM5_ATI 0x8771
#endif

#ifndef GL_VERTEX_STREAM6_ATI
#define GL_VERTEX_STREAM6_ATI 0x8772
#endif

#ifndef GL_VERTEX_STREAM7_ATI
#define GL_VERTEX_STREAM7_ATI 0x8773
#endif

#ifndef GL_VERTEX_SOURCE_ATI
#define GL_VERTEX_SOURCE_ATI 0x8774
#endif

#ifndef GL_BUMP_ROT_MATRIX_ATI
#define GL_BUMP_ROT_MATRIX_ATI 0x8775
#endif

#ifndef GL_BUMP_ROT_MATRIX_SIZE_ATI
#define GL_BUMP_ROT_MATRIX_SIZE_ATI 0x8776
#endif

#ifndef GL_BUMP_NUM_TEX_UNITS_ATI
#define GL_BUMP_NUM_TEX_UNITS_ATI 0x8777
#endif

#ifndef GL_BUMP_TEX_UNITS_ATI
#define GL_BUMP_TEX_UNITS_ATI 0x8778
#endif

#ifndef GL_DUDV_ATI
#define GL_DUDV_ATI 0x8779
#endif

#ifndef GL_DU8DV8_ATI
#define GL_DU8DV8_ATI 0x877A
#endif

#ifndef GL_BUMP_ENVMAP_ATI
#define GL_BUMP_ENVMAP_ATI 0x877B
#endif

#ifndef GL_BUMP_TARGET_ATI
#define GL_BUMP_TARGET_ATI 0x877C
#endif

#ifndef GL_VERTEX_SHADER_EXT
#define GL_VERTEX_SHADER_EXT 0x8780
#endif

#ifndef GL_VERTEX_SHADER_BINDING_EXT
#define GL_VERTEX_SHADER_BINDING_EXT 0x8781
#endif

#ifndef GL_OP_INDEX_EXT
#define GL_OP_INDEX_EXT 0x8782
#endif

#ifndef GL_OP_NEGATE_EXT
#define GL_OP_NEGATE_EXT 0x8783
#endif

#ifndef GL_OP_DOT3_EXT
#define GL_OP_DOT3_EXT 0x8784
#endif

#ifndef GL_OP_DOT4_EXT
#define GL_OP_DOT4_EXT 0x8785
#endif

#ifndef GL_OP_MUL_EXT
#define GL_OP_MUL_EXT 0x8786
#endif

#ifndef GL_OP_ADD_EXT
#define GL_OP_ADD_EXT 0x8787
#endif

#ifndef GL_OP_MADD_EXT
#define GL_OP_MADD_EXT 0x8788
#endif

#ifndef GL_OP_FRAC_EXT
#define GL_OP_FRAC_EXT 0x8789
#endif

#ifndef GL_OP_MAX_EXT
#define GL_OP_MAX_EXT 0x878A
#endif

#ifndef GL_OP_MIN_EXT
#define GL_OP_MIN_EXT 0x878B
#endif

#ifndef GL_OP_SET_GE_EXT
#define GL_OP_SET_GE_EXT 0x878C
#endif

#ifndef GL_OP_SET_LT_EXT
#define GL_OP_SET_LT_EXT 0x878D
#endif

#ifndef GL_OP_CLAMP_EXT
#define GL_OP_CLAMP_EXT 0x878E
#endif

#ifndef GL_OP_FLOOR_EXT
#define GL_OP_FLOOR_EXT 0x878F
#endif

#ifndef GL_OP_ROUND_EXT
#define GL_OP_ROUND_EXT 0x8790
#endif

#ifndef GL_OP_EXP_BASE_2_EXT
#define GL_OP_EXP_BASE_2_EXT 0x8791
#endif

#ifndef GL_OP_LOG_BASE_2_EXT
#define GL_OP_LOG_BASE_2_EXT 0x8792
#endif

#ifndef GL_OP_POWER_EXT
#define GL_OP_POWER_EXT 0x8793
#endif

#ifndef GL_OP_RECIP_EXT
#define GL_OP_RECIP_EXT 0x8794
#endif

#ifndef GL_OP_RECIP_SQRT_EXT
#define GL_OP_RECIP_SQRT_EXT 0x8795
#endif

#ifndef GL_OP_SUB_EXT
#define GL_OP_SUB_EXT 0x8796
#endif

#ifndef GL_OP_CROSS_PRODUCT_EXT
#define GL_OP_CROSS_PRODUCT_EXT 0x8797
#endif

#ifndef GL_OP_MULTIPLY_MATRIX_EXT
#define GL_OP_MULTIPLY_MATRIX_EXT 0x8798
#endif

#ifndef GL_OP_MOV_EXT
#define GL_OP_MOV_EXT 0x8799
#endif

#ifndef GL_OUTPUT_VERTEX_EXT
#define GL_OUTPUT_VERTEX_EXT 0x879A
#endif

#ifndef GL_OUTPUT_COLOR0_EXT
#define GL_OUTPUT_COLOR0_EXT 0x879B
#endif

#ifndef GL_OUTPUT_COLOR1_EXT
#define GL_OUTPUT_COLOR1_EXT 0x879C
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD0_EXT
#define GL_OUTPUT_TEXTURE_COORD0_EXT 0x879D
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD1_EXT
#define GL_OUTPUT_TEXTURE_COORD1_EXT 0x879E
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD2_EXT
#define GL_OUTPUT_TEXTURE_COORD2_EXT 0x879F
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD3_EXT
#define GL_OUTPUT_TEXTURE_COORD3_EXT 0x87A0
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD4_EXT
#define GL_OUTPUT_TEXTURE_COORD4_EXT 0x87A1
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD5_EXT
#define GL_OUTPUT_TEXTURE_COORD5_EXT 0x87A2
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD6_EXT
#define GL_OUTPUT_TEXTURE_COORD6_EXT 0x87A3
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD7_EXT
#define GL_OUTPUT_TEXTURE_COORD7_EXT 0x87A4
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD8_EXT
#define GL_OUTPUT_TEXTURE_COORD8_EXT 0x87A5
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD9_EXT
#define GL_OUTPUT_TEXTURE_COORD9_EXT 0x87A6
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD10_EXT
#define GL_OUTPUT_TEXTURE_COORD10_EXT 0x87A7
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD11_EXT
#define GL_OUTPUT_TEXTURE_COORD11_EXT 0x87A8
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD12_EXT
#define GL_OUTPUT_TEXTURE_COORD12_EXT 0x87A9
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD13_EXT
#define GL_OUTPUT_TEXTURE_COORD13_EXT 0x87AA
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD14_EXT
#define GL_OUTPUT_TEXTURE_COORD14_EXT 0x87AB
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD15_EXT
#define GL_OUTPUT_TEXTURE_COORD15_EXT 0x87AC
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD16_EXT
#define GL_OUTPUT_TEXTURE_COORD16_EXT 0x87AD
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD17_EXT
#define GL_OUTPUT_TEXTURE_COORD17_EXT 0x87AE
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD18_EXT
#define GL_OUTPUT_TEXTURE_COORD18_EXT 0x87AF
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD19_EXT
#define GL_OUTPUT_TEXTURE_COORD19_EXT 0x87B0
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD20_EXT
#define GL_OUTPUT_TEXTURE_COORD20_EXT 0x87B1
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD21_EXT
#define GL_OUTPUT_TEXTURE_COORD21_EXT 0x87B2
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD22_EXT
#define GL_OUTPUT_TEXTURE_COORD22_EXT 0x87B3
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD23_EXT
#define GL_OUTPUT_TEXTURE_COORD23_EXT 0x87B4
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD24_EXT
#define GL_OUTPUT_TEXTURE_COORD24_EXT 0x87B5
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD25_EXT
#define GL_OUTPUT_TEXTURE_COORD25_EXT 0x87B6
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD26_EXT
#define GL_OUTPUT_TEXTURE_COORD26_EXT 0x87B7
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD27_EXT
#define GL_OUTPUT_TEXTURE_COORD27_EXT 0x87B8
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD28_EXT
#define GL_OUTPUT_TEXTURE_COORD28_EXT 0x87B9
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD29_EXT
#define GL_OUTPUT_TEXTURE_COORD29_EXT 0x87BA
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD30_EXT
#define GL_OUTPUT_TEXTURE_COORD30_EXT 0x87BB
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD31_EXT
#define GL_OUTPUT_TEXTURE_COORD31_EXT 0x87BC
#endif

#ifndef GL_OUTPUT_FOG_EXT
#define GL_OUTPUT_FOG_EXT 0x87BD
#endif

#ifndef GL_SCALAR_EXT
#define GL_SCALAR_EXT 0x87BE
#endif

#ifndef GL_VECTOR_EXT
#define GL_VECTOR_EXT 0x87BF
#endif

#ifndef GL_MATRIX_EXT
#define GL_MATRIX_EXT 0x87C0
#endif

#ifndef GL_VARIANT_EXT
#define GL_VARIANT_EXT 0x87C1
#endif

#ifndef GL_INVARIANT_EXT
#define GL_INVARIANT_EXT 0x87C2
#endif

#ifndef GL_LOCAL_CONSTANT_EXT
#define GL_LOCAL_CONSTANT_EXT 0x87C3
#endif

#ifndef GL_LOCAL_EXT
#define GL_LOCAL_EXT 0x87C4
#endif

#ifndef GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT
#define GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT 0x87C5
#endif

#ifndef GL_MAX_VERTEX_SHADER_VARIANTS_EXT
#define GL_MAX_VERTEX_SHADER_VARIANTS_EXT 0x87C6
#endif

#ifndef GL_MAX_VERTEX_SHADER_INVARIANTS_EXT
#define GL_MAX_VERTEX_SHADER_INVARIANTS_EXT 0x87C7
#endif

#ifndef GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT
#define GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT 0x87C8
#endif

#ifndef GL_MAX_VERTEX_SHADER_LOCALS_EXT
#define GL_MAX_VERTEX_SHADER_LOCALS_EXT 0x87C9
#endif

#ifndef GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT
#define GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT 0x87CA
#endif

#ifndef GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT
#define GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT 0x87CB
#endif

#ifndef GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT
#define GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT 0x87CC
#endif

#ifndef GL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT
#define GL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT 0x87CD
#endif

#ifndef GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT
#define GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT 0x87CE
#endif

#ifndef GL_VERTEX_SHADER_INSTRUCTIONS_EXT
#define GL_VERTEX_SHADER_INSTRUCTIONS_EXT 0x87CF
#endif

#ifndef GL_VERTEX_SHADER_VARIANTS_EXT
#define GL_VERTEX_SHADER_VARIANTS_EXT 0x87D0
#endif

#ifndef GL_VERTEX_SHADER_INVARIANTS_EXT
#define GL_VERTEX_SHADER_INVARIANTS_EXT 0x87D1
#endif

#ifndef GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT
#define GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT 0x87D2
#endif

#ifndef GL_VERTEX_SHADER_LOCALS_EXT
#define GL_VERTEX_SHADER_LOCALS_EXT 0x87D3
#endif

#ifndef GL_VERTEX_SHADER_OPTIMIZED_EXT
#define GL_VERTEX_SHADER_OPTIMIZED_EXT 0x87D4
#endif

#ifndef GL_X_EXT
#define GL_X_EXT 0x87D5
#endif

#ifndef GL_Y_EXT
#define GL_Y_EXT 0x87D6
#endif

#ifndef GL_Z_EXT
#define GL_Z_EXT 0x87D7
#endif

#ifndef GL_W_EXT
#define GL_W_EXT 0x87D8
#endif

#ifndef GL_NEGATIVE_X_EXT
#define GL_NEGATIVE_X_EXT 0x87D9
#endif

#ifndef GL_NEGATIVE_Y_EXT
#define GL_NEGATIVE_Y_EXT 0x87DA
#endif

#ifndef GL_NEGATIVE_Z_EXT
#define GL_NEGATIVE_Z_EXT 0x87DB
#endif

#ifndef GL_NEGATIVE_W_EXT
#define GL_NEGATIVE_W_EXT 0x87DC
#endif

#ifndef GL_ZERO_EXT
#define GL_ZERO_EXT 0x87DD
#endif

#ifndef GL_ONE_EXT
#define GL_ONE_EXT 0x87DE
#endif

#ifndef GL_NEGATIVE_ONE_EXT
#define GL_NEGATIVE_ONE_EXT 0x87DF
#endif

#ifndef GL_NORMALIZED_RANGE_EXT
#define GL_NORMALIZED_RANGE_EXT 0x87E0
#endif

#ifndef GL_FULL_RANGE_EXT
#define GL_FULL_RANGE_EXT 0x87E1
#endif

#ifndef GL_CURRENT_VERTEX_EXT
#define GL_CURRENT_VERTEX_EXT 0x87E2
#endif

#ifndef GL_MVP_MATRIX_EXT
#define GL_MVP_MATRIX_EXT 0x87E3
#endif

#ifndef GL_VARIANT_VALUE_EXT
#define GL_VARIANT_VALUE_EXT 0x87E4
#endif

#ifndef GL_VARIANT_DATATYPE_EXT
#define GL_VARIANT_DATATYPE_EXT 0x87E5
#endif

#ifndef GL_VARIANT_ARRAY_STRIDE_EXT
#define GL_VARIANT_ARRAY_STRIDE_EXT 0x87E6
#endif

#ifndef GL_VARIANT_ARRAY_TYPE_EXT
#define GL_VARIANT_ARRAY_TYPE_EXT 0x87E7
#endif

#ifndef GL_VARIANT_ARRAY_EXT
#define GL_VARIANT_ARRAY_EXT 0x87E8
#endif

#ifndef GL_VARIANT_ARRAY_POINTER_EXT
#define GL_VARIANT_ARRAY_POINTER_EXT 0x87E9
#endif

#ifndef GL_INVARIANT_VALUE_EXT
#define GL_INVARIANT_VALUE_EXT 0x87EA
#endif

#ifndef GL_INVARIANT_DATATYPE_EXT
#define GL_INVARIANT_DATATYPE_EXT 0x87EB
#endif

#ifndef GL_LOCAL_CONSTANT_VALUE_EXT
#define GL_LOCAL_CONSTANT_VALUE_EXT 0x87EC
#endif

#ifndef GL_LOCAL_CONSTANT_DATATYPE_EXT
#define GL_LOCAL_CONSTANT_DATATYPE_EXT 0x87ED
#endif

#ifndef GL_ATC_RGBA_INTERPOLATED_ALPHA_AMD
#define GL_ATC_RGBA_INTERPOLATED_ALPHA_AMD 0x87EE
#endif

#ifndef GL_PN_TRIANGLES_ATI
#define GL_PN_TRIANGLES_ATI 0x87F0
#endif

#ifndef GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI
#define GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI 0x87F1
#endif

#ifndef GL_PN_TRIANGLES_POINT_MODE_ATI
#define GL_PN_TRIANGLES_POINT_MODE_ATI 0x87F2
#endif

#ifndef GL_PN_TRIANGLES_NORMAL_MODE_ATI
#define GL_PN_TRIANGLES_NORMAL_MODE_ATI 0x87F3
#endif

#ifndef GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI
#define GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI 0x87F4
#endif

#ifndef GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI
#define GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI 0x87F5
#endif

#ifndef GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI
#define GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI 0x87F6
#endif

#ifndef GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI
#define GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI 0x87F7
#endif

#ifndef GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI
#define GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI 0x87F8
#endif

#ifndef GL_3DC_X_AMD
#define GL_3DC_X_AMD 0x87F9
#endif

#ifndef GL_3DC_XY_AMD
#define GL_3DC_XY_AMD 0x87FA
#endif

#ifndef GL_VBO_FREE_MEMORY_ATI
#define GL_VBO_FREE_MEMORY_ATI 0x87FB
#endif

#ifndef GL_TEXTURE_FREE_MEMORY_ATI
#define GL_TEXTURE_FREE_MEMORY_ATI 0x87FC
#endif

#ifndef GL_RENDERBUFFER_FREE_MEMORY_ATI
#define GL_RENDERBUFFER_FREE_MEMORY_ATI 0x87FD
#endif

#ifndef GL_NUM_PROGRAM_BINARY_FORMATS_OES
#define GL_NUM_PROGRAM_BINARY_FORMATS_OES 0x87FE
#endif

#ifndef GL_PROGRAM_BINARY_FORMATS_OES
#define GL_PROGRAM_BINARY_FORMATS_OES 0x87FF
#endif

#ifndef GL_NUM_PROGRAM_BINARY_FORMATS
#define GL_NUM_PROGRAM_BINARY_FORMATS 0x87FE
#endif

#ifndef GL_PROGRAM_BINARY_FORMATS
#define GL_PROGRAM_BINARY_FORMATS 0x87FF
#endif

#ifndef GL_STENCIL_BACK_FUNC
#define GL_STENCIL_BACK_FUNC 0x8800
#endif

#ifndef GL_STENCIL_BACK_FAIL
#define GL_STENCIL_BACK_FAIL 0x8801
#endif

#ifndef GL_STENCIL_BACK_PASS_DEPTH_FAIL
#define GL_STENCIL_BACK_PASS_DEPTH_FAIL 0x8802
#endif

#ifndef GL_STENCIL_BACK_PASS_DEPTH_PASS
#define GL_STENCIL_BACK_PASS_DEPTH_PASS 0x8803
#endif

#ifndef GL_STENCIL_BACK_FAIL_ATI
#define GL_STENCIL_BACK_FAIL_ATI 0x8801
#endif

#ifndef GL_STENCIL_BACK_FUNC_ATI
#define GL_STENCIL_BACK_FUNC_ATI 0x8800
#endif

#ifndef GL_STENCIL_BACK_PASS_DEPTH_FAIL_ATI
#define GL_STENCIL_BACK_PASS_DEPTH_FAIL_ATI 0x8802
#endif

#ifndef GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI
#define GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI 0x8803
#endif

#ifndef GL_FRAGMENT_PROGRAM_ARB
#define GL_FRAGMENT_PROGRAM_ARB 0x8804
#endif

#ifndef GL_PROGRAM_ALU_INSTRUCTIONS_ARB
#define GL_PROGRAM_ALU_INSTRUCTIONS_ARB 0x8805
#endif

#ifndef GL_PROGRAM_TEX_INSTRUCTIONS_ARB
#define GL_PROGRAM_TEX_INSTRUCTIONS_ARB 0x8806
#endif

#ifndef GL_PROGRAM_TEX_INDIRECTIONS_ARB
#define GL_PROGRAM_TEX_INDIRECTIONS_ARB 0x8807
#endif

#ifndef GL_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB
#define GL_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB 0x8808
#endif

#ifndef GL_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB
#define GL_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB 0x8809
#endif

#ifndef GL_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB
#define GL_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB 0x880A
#endif

#ifndef GL_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB
#define GL_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB 0x880B
#endif

#ifndef GL_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB
#define GL_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB 0x880C
#endif

#ifndef GL_MAX_PROGRAM_TEX_INDIRECTIONS_ARB
#define GL_MAX_PROGRAM_TEX_INDIRECTIONS_ARB 0x880D
#endif

#ifndef GL_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB
#define GL_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB 0x880E
#endif

#ifndef GL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB
#define GL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB 0x880F
#endif

#ifndef GL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB
#define GL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB 0x8810
#endif

#ifndef GL_RGBA32F
#define GL_RGBA32F 0x8814
#endif

#ifndef GL_RGB32F
#define GL_RGB32F 0x8815
#endif

#ifndef GL_RGBA16F
#define GL_RGBA16F 0x881A
#endif

#ifndef GL_RGB16F
#define GL_RGB16F 0x881B
#endif

#ifndef GL_RGBA32F_ARB
#define GL_RGBA32F_ARB 0x8814
#endif

#ifndef GL_RGB32F_ARB
#define GL_RGB32F_ARB 0x8815
#endif

#ifndef GL_ALPHA32F_ARB
#define GL_ALPHA32F_ARB 0x8816
#endif

#ifndef GL_INTENSITY32F_ARB
#define GL_INTENSITY32F_ARB 0x8817
#endif

#ifndef GL_LUMINANCE32F_ARB
#define GL_LUMINANCE32F_ARB 0x8818
#endif

#ifndef GL_LUMINANCE_ALPHA32F_ARB
#define GL_LUMINANCE_ALPHA32F_ARB 0x8819
#endif

#ifndef GL_RGBA16F_ARB
#define GL_RGBA16F_ARB 0x881A
#endif

#ifndef GL_RGB16F_ARB
#define GL_RGB16F_ARB 0x881B
#endif

#ifndef GL_ALPHA16F_ARB
#define GL_ALPHA16F_ARB 0x881C
#endif

#ifndef GL_INTENSITY16F_ARB
#define GL_INTENSITY16F_ARB 0x881D
#endif

#ifndef GL_LUMINANCE16F_ARB
#define GL_LUMINANCE16F_ARB 0x881E
#endif

#ifndef GL_LUMINANCE_ALPHA16F_ARB
#define GL_LUMINANCE_ALPHA16F_ARB 0x881F
#endif

#ifndef GL_RGBA_FLOAT32_ATI
#define GL_RGBA_FLOAT32_ATI 0x8814
#endif

#ifndef GL_RGB_FLOAT32_ATI
#define GL_RGB_FLOAT32_ATI 0x8815
#endif

#ifndef GL_ALPHA_FLOAT32_ATI
#define GL_ALPHA_FLOAT32_ATI 0x8816
#endif

#ifndef GL_INTENSITY_FLOAT32_ATI
#define GL_INTENSITY_FLOAT32_ATI 0x8817
#endif

#ifndef GL_LUMINANCE_FLOAT32_ATI
#define GL_LUMINANCE_FLOAT32_ATI 0x8818
#endif

#ifndef GL_LUMINANCE_ALPHA_FLOAT32_ATI
#define GL_LUMINANCE_ALPHA_FLOAT32_ATI 0x8819
#endif

#ifndef GL_RGBA_FLOAT16_ATI
#define GL_RGBA_FLOAT16_ATI 0x881A
#endif

#ifndef GL_RGB_FLOAT16_ATI
#define GL_RGB_FLOAT16_ATI 0x881B
#endif

#ifndef GL_ALPHA_FLOAT16_ATI
#define GL_ALPHA_FLOAT16_ATI 0x881C
#endif

#ifndef GL_INTENSITY_FLOAT16_ATI
#define GL_INTENSITY_FLOAT16_ATI 0x881D
#endif

#ifndef GL_LUMINANCE_FLOAT16_ATI
#define GL_LUMINANCE_FLOAT16_ATI 0x881E
#endif

#ifndef GL_LUMINANCE_ALPHA_FLOAT16_ATI
#define GL_LUMINANCE_ALPHA_FLOAT16_ATI 0x881F
#endif

#ifndef GL_RGBA_FLOAT32_APPLE
#define GL_RGBA_FLOAT32_APPLE 0x8814
#endif

#ifndef GL_RGB_FLOAT32_APPLE
#define GL_RGB_FLOAT32_APPLE 0x8815
#endif

#ifndef GL_ALPHA_FLOAT32_APPLE
#define GL_ALPHA_FLOAT32_APPLE 0x8816
#endif

#ifndef GL_INTENSITY_FLOAT32_APPLE
#define GL_INTENSITY_FLOAT32_APPLE 0x8817
#endif

#ifndef GL_LUMINANCE_FLOAT32_APPLE
#define GL_LUMINANCE_FLOAT32_APPLE 0x8818
#endif

#ifndef GL_LUMINANCE_ALPHA_FLOAT32_APPLE
#define GL_LUMINANCE_ALPHA_FLOAT32_APPLE 0x8819
#endif

#ifndef GL_RGBA_FLOAT16_APPLE
#define GL_RGBA_FLOAT16_APPLE 0x881A
#endif

#ifndef GL_RGB_FLOAT16_APPLE
#define GL_RGB_FLOAT16_APPLE 0x881B
#endif

#ifndef GL_ALPHA_FLOAT16_APPLE
#define GL_ALPHA_FLOAT16_APPLE 0x881C
#endif

#ifndef GL_INTENSITY_FLOAT16_APPLE
#define GL_INTENSITY_FLOAT16_APPLE 0x881D
#endif

#ifndef GL_LUMINANCE_FLOAT16_APPLE
#define GL_LUMINANCE_FLOAT16_APPLE 0x881E
#endif

#ifndef GL_LUMINANCE_ALPHA_FLOAT16_APPLE
#define GL_LUMINANCE_ALPHA_FLOAT16_APPLE 0x881F
#endif

#ifndef GL_RGBA16F_EXT
#define GL_RGBA16F_EXT 0x881A
#endif

#ifndef GL_RGB16F_EXT
#define GL_RGB16F_EXT 0x881B
#endif

#ifndef GL_RGBA_FLOAT_MODE_ARB
#define GL_RGBA_FLOAT_MODE_ARB 0x8820
#endif

#ifndef GL_TYPE_RGBA_FLOAT_ATI
#define GL_TYPE_RGBA_FLOAT_ATI 0x8820
#endif

#ifndef GL_WRITEONLY_RENDERING_QCOM
#define GL_WRITEONLY_RENDERING_QCOM 0x8823
#endif

#ifndef GL_MAX_DRAW_BUFFERS
#define GL_MAX_DRAW_BUFFERS 0x8824
#endif

#ifndef GL_DRAW_BUFFER0
#define GL_DRAW_BUFFER0 0x8825
#endif

#ifndef GL_DRAW_BUFFER1
#define GL_DRAW_BUFFER1 0x8826
#endif

#ifndef GL_DRAW_BUFFER2
#define GL_DRAW_BUFFER2 0x8827
#endif

#ifndef GL_DRAW_BUFFER3
#define GL_DRAW_BUFFER3 0x8828
#endif

#ifndef GL_DRAW_BUFFER4
#define GL_DRAW_BUFFER4 0x8829
#endif

#ifndef GL_DRAW_BUFFER5
#define GL_DRAW_BUFFER5 0x882A
#endif

#ifndef GL_DRAW_BUFFER6
#define GL_DRAW_BUFFER6 0x882B
#endif

#ifndef GL_DRAW_BUFFER7
#define GL_DRAW_BUFFER7 0x882C
#endif

#ifndef GL_DRAW_BUFFER8
#define GL_DRAW_BUFFER8 0x882D
#endif

#ifndef GL_DRAW_BUFFER9
#define GL_DRAW_BUFFER9 0x882E
#endif

#ifndef GL_DRAW_BUFFER10
#define GL_DRAW_BUFFER10 0x882F
#endif

#ifndef GL_DRAW_BUFFER11
#define GL_DRAW_BUFFER11 0x8830
#endif

#ifndef GL_DRAW_BUFFER12
#define GL_DRAW_BUFFER12 0x8831
#endif

#ifndef GL_DRAW_BUFFER13
#define GL_DRAW_BUFFER13 0x8832
#endif

#ifndef GL_DRAW_BUFFER14
#define GL_DRAW_BUFFER14 0x8833
#endif

#ifndef GL_DRAW_BUFFER15
#define GL_DRAW_BUFFER15 0x8834
#endif

#ifndef GL_MAX_DRAW_BUFFERS_ARB
#define GL_MAX_DRAW_BUFFERS_ARB 0x8824
#endif

#ifndef GL_DRAW_BUFFER0_ARB
#define GL_DRAW_BUFFER0_ARB 0x8825
#endif

#ifndef GL_DRAW_BUFFER1_ARB
#define GL_DRAW_BUFFER1_ARB 0x8826
#endif

#ifndef GL_DRAW_BUFFER2_ARB
#define GL_DRAW_BUFFER2_ARB 0x8827
#endif

#ifndef GL_DRAW_BUFFER3_ARB
#define GL_DRAW_BUFFER3_ARB 0x8828
#endif

#ifndef GL_DRAW_BUFFER4_ARB
#define GL_DRAW_BUFFER4_ARB 0x8829
#endif

#ifndef GL_DRAW_BUFFER5_ARB
#define GL_DRAW_BUFFER5_ARB 0x882A
#endif

#ifndef GL_DRAW_BUFFER6_ARB
#define GL_DRAW_BUFFER6_ARB 0x882B
#endif

#ifndef GL_DRAW_BUFFER7_ARB
#define GL_DRAW_BUFFER7_ARB 0x882C
#endif

#ifndef GL_DRAW_BUFFER8_ARB
#define GL_DRAW_BUFFER8_ARB 0x882D
#endif

#ifndef GL_DRAW_BUFFER9_ARB
#define GL_DRAW_BUFFER9_ARB 0x882E
#endif

#ifndef GL_DRAW_BUFFER10_ARB
#define GL_DRAW_BUFFER10_ARB 0x882F
#endif

#ifndef GL_DRAW_BUFFER11_ARB
#define GL_DRAW_BUFFER11_ARB 0x8830
#endif

#ifndef GL_DRAW_BUFFER12_ARB
#define GL_DRAW_BUFFER12_ARB 0x8831
#endif

#ifndef GL_DRAW_BUFFER13_ARB
#define GL_DRAW_BUFFER13_ARB 0x8832
#endif

#ifndef GL_DRAW_BUFFER14_ARB
#define GL_DRAW_BUFFER14_ARB 0x8833
#endif

#ifndef GL_DRAW_BUFFER15_ARB
#define GL_DRAW_BUFFER15_ARB 0x8834
#endif

#ifndef GL_MAX_DRAW_BUFFERS_ATI
#define GL_MAX_DRAW_BUFFERS_ATI 0x8824
#endif

#ifndef GL_DRAW_BUFFER0_ATI
#define GL_DRAW_BUFFER0_ATI 0x8825
#endif

#ifndef GL_DRAW_BUFFER1_ATI
#define GL_DRAW_BUFFER1_ATI 0x8826
#endif

#ifndef GL_DRAW_BUFFER2_ATI
#define GL_DRAW_BUFFER2_ATI 0x8827
#endif

#ifndef GL_DRAW_BUFFER3_ATI
#define GL_DRAW_BUFFER3_ATI 0x8828
#endif

#ifndef GL_DRAW_BUFFER4_ATI
#define GL_DRAW_BUFFER4_ATI 0x8829
#endif

#ifndef GL_DRAW_BUFFER5_ATI
#define GL_DRAW_BUFFER5_ATI 0x882A
#endif

#ifndef GL_DRAW_BUFFER6_ATI
#define GL_DRAW_BUFFER6_ATI 0x882B
#endif

#ifndef GL_DRAW_BUFFER7_ATI
#define GL_DRAW_BUFFER7_ATI 0x882C
#endif

#ifndef GL_DRAW_BUFFER8_ATI
#define GL_DRAW_BUFFER8_ATI 0x882D
#endif

#ifndef GL_DRAW_BUFFER9_ATI
#define GL_DRAW_BUFFER9_ATI 0x882E
#endif

#ifndef GL_DRAW_BUFFER10_ATI
#define GL_DRAW_BUFFER10_ATI 0x882F
#endif

#ifndef GL_DRAW_BUFFER11_ATI
#define GL_DRAW_BUFFER11_ATI 0x8830
#endif

#ifndef GL_DRAW_BUFFER12_ATI
#define GL_DRAW_BUFFER12_ATI 0x8831
#endif

#ifndef GL_DRAW_BUFFER13_ATI
#define GL_DRAW_BUFFER13_ATI 0x8832
#endif

#ifndef GL_DRAW_BUFFER14_ATI
#define GL_DRAW_BUFFER14_ATI 0x8833
#endif

#ifndef GL_DRAW_BUFFER15_ATI
#define GL_DRAW_BUFFER15_ATI 0x8834
#endif

#ifndef GL_MAX_DRAW_BUFFERS_NV
#define GL_MAX_DRAW_BUFFERS_NV 0x8824
#endif

#ifndef GL_DRAW_BUFFER0_NV
#define GL_DRAW_BUFFER0_NV 0x8825
#endif

#ifndef GL_DRAW_BUFFER1_NV
#define GL_DRAW_BUFFER1_NV 0x8826
#endif

#ifndef GL_DRAW_BUFFER2_NV
#define GL_DRAW_BUFFER2_NV 0x8827
#endif

#ifndef GL_DRAW_BUFFER3_NV
#define GL_DRAW_BUFFER3_NV 0x8828
#endif

#ifndef GL_DRAW_BUFFER4_NV
#define GL_DRAW_BUFFER4_NV 0x8829
#endif

#ifndef GL_DRAW_BUFFER5_NV
#define GL_DRAW_BUFFER5_NV 0x882A
#endif

#ifndef GL_DRAW_BUFFER6_NV
#define GL_DRAW_BUFFER6_NV 0x882B
#endif

#ifndef GL_DRAW_BUFFER7_NV
#define GL_DRAW_BUFFER7_NV 0x882C
#endif

#ifndef GL_DRAW_BUFFER8_NV
#define GL_DRAW_BUFFER8_NV 0x882D
#endif

#ifndef GL_DRAW_BUFFER9_NV
#define GL_DRAW_BUFFER9_NV 0x882E
#endif

#ifndef GL_DRAW_BUFFER10_NV
#define GL_DRAW_BUFFER10_NV 0x882F
#endif

#ifndef GL_DRAW_BUFFER11_NV
#define GL_DRAW_BUFFER11_NV 0x8830
#endif

#ifndef GL_DRAW_BUFFER12_NV
#define GL_DRAW_BUFFER12_NV 0x8831
#endif

#ifndef GL_DRAW_BUFFER13_NV
#define GL_DRAW_BUFFER13_NV 0x8832
#endif

#ifndef GL_DRAW_BUFFER14_NV
#define GL_DRAW_BUFFER14_NV 0x8833
#endif

#ifndef GL_DRAW_BUFFER15_NV
#define GL_DRAW_BUFFER15_NV 0x8834
#endif

#ifndef GL_COLOR_CLEAR_UNCLAMPED_VALUE_ATI
#define GL_COLOR_CLEAR_UNCLAMPED_VALUE_ATI 0x8835
#endif

#ifndef GL_BLEND_EQUATION_ALPHA
#define GL_BLEND_EQUATION_ALPHA 0x883D
#endif

#ifndef GL_BLEND_EQUATION_ALPHA_EXT
#define GL_BLEND_EQUATION_ALPHA_EXT 0x883D
#endif

#ifndef GL_BLEND_EQUATION_ALPHA_OES
#define GL_BLEND_EQUATION_ALPHA_OES 0x883D
#endif

#ifndef GL_SUBSAMPLE_DISTANCE_AMD
#define GL_SUBSAMPLE_DISTANCE_AMD 0x883F
#endif

#ifndef GL_MATRIX_PALETTE_ARB
#define GL_MATRIX_PALETTE_ARB 0x8840
#endif

#ifndef GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB
#define GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB 0x8841
#endif

#ifndef GL_MAX_PALETTE_MATRICES_ARB
#define GL_MAX_PALETTE_MATRICES_ARB 0x8842
#endif

#ifndef GL_CURRENT_PALETTE_MATRIX_ARB
#define GL_CURRENT_PALETTE_MATRIX_ARB 0x8843
#endif

#ifndef GL_MATRIX_INDEX_ARRAY_ARB
#define GL_MATRIX_INDEX_ARRAY_ARB 0x8844
#endif

#ifndef GL_CURRENT_MATRIX_INDEX_ARB
#define GL_CURRENT_MATRIX_INDEX_ARB 0x8845
#endif

#ifndef GL_MATRIX_INDEX_ARRAY_SIZE_ARB
#define GL_MATRIX_INDEX_ARRAY_SIZE_ARB 0x8846
#endif

#ifndef GL_MATRIX_INDEX_ARRAY_TYPE_ARB
#define GL_MATRIX_INDEX_ARRAY_TYPE_ARB 0x8847
#endif

#ifndef GL_MATRIX_INDEX_ARRAY_STRIDE_ARB
#define GL_MATRIX_INDEX_ARRAY_STRIDE_ARB 0x8848
#endif

#ifndef GL_MATRIX_INDEX_ARRAY_POINTER_ARB
#define GL_MATRIX_INDEX_ARRAY_POINTER_ARB 0x8849
#endif

#ifndef GL_MATRIX_PALETTE_OES
#define GL_MATRIX_PALETTE_OES 0x8840
#endif

#ifndef GL_MAX_PALETTE_MATRICES_OES
#define GL_MAX_PALETTE_MATRICES_OES 0x8842
#endif

#ifndef GL_CURRENT_PALETTE_MATRIX_OES
#define GL_CURRENT_PALETTE_MATRIX_OES 0x8843
#endif

#ifndef GL_MATRIX_INDEX_ARRAY_OES
#define GL_MATRIX_INDEX_ARRAY_OES 0x8844
#endif

#ifndef GL_MATRIX_INDEX_ARRAY_SIZE_OES
#define GL_MATRIX_INDEX_ARRAY_SIZE_OES 0x8846
#endif

#ifndef GL_MATRIX_INDEX_ARRAY_TYPE_OES
#define GL_MATRIX_INDEX_ARRAY_TYPE_OES 0x8847
#endif

#ifndef GL_MATRIX_INDEX_ARRAY_STRIDE_OES
#define GL_MATRIX_INDEX_ARRAY_STRIDE_OES 0x8848
#endif

#ifndef GL_MATRIX_INDEX_ARRAY_POINTER_OES
#define GL_MATRIX_INDEX_ARRAY_POINTER_OES 0x8849
#endif

#ifndef GL_TEXTURE_DEPTH_SIZE
#define GL_TEXTURE_DEPTH_SIZE 0x884A
#endif

#ifndef GL_DEPTH_TEXTURE_MODE
#define GL_DEPTH_TEXTURE_MODE 0x884B
#endif

#ifndef GL_TEXTURE_DEPTH_SIZE_ARB
#define GL_TEXTURE_DEPTH_SIZE_ARB 0x884A
#endif

#ifndef GL_DEPTH_TEXTURE_MODE_ARB
#define GL_DEPTH_TEXTURE_MODE_ARB 0x884B
#endif

#ifndef GL_COMPARE_REF_TO_TEXTURE
#define GL_COMPARE_REF_TO_TEXTURE 0x884E
#endif

#ifndef GL_TEXTURE_COMPARE_MODE
#define GL_TEXTURE_COMPARE_MODE 0x884C
#endif

#ifndef GL_TEXTURE_COMPARE_FUNC
#define GL_TEXTURE_COMPARE_FUNC 0x884D
#endif

#ifndef GL_COMPARE_R_TO_TEXTURE
#define GL_COMPARE_R_TO_TEXTURE 0x884E
#endif

#ifndef GL_TEXTURE_COMPARE_MODE_ARB
#define GL_TEXTURE_COMPARE_MODE_ARB 0x884C
#endif

#ifndef GL_TEXTURE_COMPARE_FUNC_ARB
#define GL_TEXTURE_COMPARE_FUNC_ARB 0x884D
#endif

#ifndef GL_COMPARE_R_TO_TEXTURE_ARB
#define GL_COMPARE_R_TO_TEXTURE_ARB 0x884E
#endif

#ifndef GL_TEXTURE_COMPARE_MODE_EXT
#define GL_TEXTURE_COMPARE_MODE_EXT 0x884C
#endif

#ifndef GL_TEXTURE_COMPARE_FUNC_EXT
#define GL_TEXTURE_COMPARE_FUNC_EXT 0x884D
#endif

#ifndef GL_COMPARE_REF_TO_TEXTURE_EXT
#define GL_COMPARE_REF_TO_TEXTURE_EXT 0x884E
#endif

#ifndef GL_COMPARE_REF_DEPTH_TO_TEXTURE_EXT
#define GL_COMPARE_REF_DEPTH_TO_TEXTURE_EXT 0x884E
#endif

#ifndef GL_TEXTURE_CUBE_MAP_SEAMLESS
#define GL_TEXTURE_CUBE_MAP_SEAMLESS 0x884F
#endif

#ifndef GL_OFFSET_PROJECTIVE_TEXTURE_2D_NV
#define GL_OFFSET_PROJECTIVE_TEXTURE_2D_NV 0x8850
#endif

#ifndef GL_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV
#define GL_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV 0x8851
#endif

#ifndef GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV
#define GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV 0x8852
#endif

#ifndef GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV
#define GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV 0x8853
#endif

#ifndef GL_OFFSET_HILO_TEXTURE_2D_NV
#define GL_OFFSET_HILO_TEXTURE_2D_NV 0x8854
#endif

#ifndef GL_OFFSET_HILO_TEXTURE_RECTANGLE_NV
#define GL_OFFSET_HILO_TEXTURE_RECTANGLE_NV 0x8855
#endif

#ifndef GL_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV
#define GL_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV 0x8856
#endif

#ifndef GL_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV
#define GL_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV 0x8857
#endif

#ifndef GL_DEPENDENT_HILO_TEXTURE_2D_NV
#define GL_DEPENDENT_HILO_TEXTURE_2D_NV 0x8858
#endif

#ifndef GL_DEPENDENT_RGB_TEXTURE_3D_NV
#define GL_DEPENDENT_RGB_TEXTURE_3D_NV 0x8859
#endif

#ifndef GL_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV
#define GL_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV 0x885A
#endif

#ifndef GL_DOT_PRODUCT_PASS_THROUGH_NV
#define GL_DOT_PRODUCT_PASS_THROUGH_NV 0x885B
#endif

#ifndef GL_DOT_PRODUCT_TEXTURE_1D_NV
#define GL_DOT_PRODUCT_TEXTURE_1D_NV 0x885C
#endif

#ifndef GL_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV
#define GL_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV 0x885D
#endif

#ifndef GL_HILO8_NV
#define GL_HILO8_NV 0x885E
#endif

#ifndef GL_SIGNED_HILO8_NV
#define GL_SIGNED_HILO8_NV 0x885F
#endif

#ifndef GL_FORCE_BLUE_TO_ONE_NV
#define GL_FORCE_BLUE_TO_ONE_NV 0x8860
#endif

#ifndef GL_POINT_SPRITE
#define GL_POINT_SPRITE 0x8861
#endif

#ifndef GL_COORD_REPLACE
#define GL_COORD_REPLACE 0x8862
#endif

#ifndef GL_POINT_SPRITE_ARB
#define GL_POINT_SPRITE_ARB 0x8861
#endif

#ifndef GL_COORD_REPLACE_ARB
#define GL_COORD_REPLACE_ARB 0x8862
#endif

#ifndef GL_POINT_SPRITE_NV
#define GL_POINT_SPRITE_NV 0x8861
#endif

#ifndef GL_COORD_REPLACE_NV
#define GL_COORD_REPLACE_NV 0x8862
#endif

#ifndef GL_POINT_SPRITE_ARB
#define GL_POINT_SPRITE_ARB 0x8861
#endif

#ifndef GL_COORD_REPLACE_ARB
#define GL_COORD_REPLACE_ARB 0x8862
#endif

#ifndef GL_POINT_SPRITE_R_MODE_NV
#define GL_POINT_SPRITE_R_MODE_NV 0x8863
#endif

#ifndef GL_QUERY_COUNTER_BITS
#define GL_QUERY_COUNTER_BITS 0x8864
#endif

#ifndef GL_CURRENT_QUERY
#define GL_CURRENT_QUERY 0x8865
#endif

#ifndef GL_QUERY_RESULT
#define GL_QUERY_RESULT 0x8866
#endif

#ifndef GL_QUERY_RESULT_AVAILABLE
#define GL_QUERY_RESULT_AVAILABLE 0x8867
#endif

#ifndef GL_QUERY_COUNTER_BITS_ARB
#define GL_QUERY_COUNTER_BITS_ARB 0x8864
#endif

#ifndef GL_CURRENT_QUERY_ARB
#define GL_CURRENT_QUERY_ARB 0x8865
#endif

#ifndef GL_QUERY_RESULT_ARB
#define GL_QUERY_RESULT_ARB 0x8866
#endif

#ifndef GL_QUERY_RESULT_AVAILABLE_ARB
#define GL_QUERY_RESULT_AVAILABLE_ARB 0x8867
#endif

#ifndef GL_PIXEL_COUNTER_BITS_NV
#define GL_PIXEL_COUNTER_BITS_NV 0x8864
#endif

#ifndef GL_CURRENT_OCCLUSION_QUERY_ID_NV
#define GL_CURRENT_OCCLUSION_QUERY_ID_NV 0x8865
#endif

#ifndef GL_PIXEL_COUNT_NV
#define GL_PIXEL_COUNT_NV 0x8866
#endif

#ifndef GL_PIXEL_COUNT_AVAILABLE_NV
#define GL_PIXEL_COUNT_AVAILABLE_NV 0x8867
#endif

#ifndef GL_CURRENT_QUERY_EXT
#define GL_CURRENT_QUERY_EXT 0x8865
#endif

#ifndef GL_QUERY_RESULT_EXT
#define GL_QUERY_RESULT_EXT 0x8866
#endif

#ifndef GL_QUERY_RESULT_AVAILABLE_EXT
#define GL_QUERY_RESULT_AVAILABLE_EXT 0x8867
#endif

#ifndef GL_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV
#define GL_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV 0x8868
#endif

#ifndef GL_MAX_VERTEX_ATTRIBS
#define GL_MAX_VERTEX_ATTRIBS 0x8869
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY_NORMALIZED
#define GL_VERTEX_ATTRIB_ARRAY_NORMALIZED 0x886A
#endif

#ifndef GL_MAX_VERTEX_ATTRIBS_ARB
#define GL_MAX_VERTEX_ATTRIBS_ARB 0x8869
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB
#define GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB 0x886A
#endif

#ifndef GL_MAX_TESS_CONTROL_INPUT_COMPONENTS
#define GL_MAX_TESS_CONTROL_INPUT_COMPONENTS 0x886C
#endif

#ifndef GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS
#define GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS 0x886D
#endif

#ifndef GL_DEPTH_STENCIL_TO_RGBA_NV
#define GL_DEPTH_STENCIL_TO_RGBA_NV 0x886E
#endif

#ifndef GL_DEPTH_STENCIL_TO_BGRA_NV
#define GL_DEPTH_STENCIL_TO_BGRA_NV 0x886F
#endif

#ifndef GL_FRAGMENT_PROGRAM_NV
#define GL_FRAGMENT_PROGRAM_NV 0x8870
#endif

#ifndef GL_MAX_TEXTURE_COORDS_NV
#define GL_MAX_TEXTURE_COORDS_NV 0x8871
#endif

#ifndef GL_MAX_TEXTURE_IMAGE_UNITS_NV
#define GL_MAX_TEXTURE_IMAGE_UNITS_NV 0x8872
#endif

#ifndef GL_FRAGMENT_PROGRAM_BINDING_NV
#define GL_FRAGMENT_PROGRAM_BINDING_NV 0x8873
#endif

#ifndef GL_PROGRAM_ERROR_STRING_NV
#define GL_PROGRAM_ERROR_STRING_NV 0x8874
#endif

#ifndef GL_MAX_TEXTURE_COORDS
#define GL_MAX_TEXTURE_COORDS 0x8871
#endif

#ifndef GL_MAX_TEXTURE_IMAGE_UNITS
#define GL_MAX_TEXTURE_IMAGE_UNITS 0x8872
#endif

#ifndef GL_MAX_TEXTURE_COORDS_ARB
#define GL_MAX_TEXTURE_COORDS_ARB 0x8871
#endif

#ifndef GL_MAX_TEXTURE_IMAGE_UNITS_ARB
#define GL_MAX_TEXTURE_IMAGE_UNITS_ARB 0x8872
#endif

#ifndef GL_PROGRAM_ERROR_STRING_ARB
#define GL_PROGRAM_ERROR_STRING_ARB 0x8874
#endif

#ifndef GL_PROGRAM_FORMAT_ASCII_ARB
#define GL_PROGRAM_FORMAT_ASCII_ARB 0x8875
#endif

#ifndef GL_PROGRAM_FORMAT_ARB
#define GL_PROGRAM_FORMAT_ARB 0x8876
#endif

#ifndef GL_WRITE_PIXEL_DATA_RANGE_NV
#define GL_WRITE_PIXEL_DATA_RANGE_NV 0x8878
#endif

#ifndef GL_READ_PIXEL_DATA_RANGE_NV
#define GL_READ_PIXEL_DATA_RANGE_NV 0x8879
#endif

#ifndef GL_WRITE_PIXEL_DATA_RANGE_LENGTH_NV
#define GL_WRITE_PIXEL_DATA_RANGE_LENGTH_NV 0x887A
#endif

#ifndef GL_READ_PIXEL_DATA_RANGE_LENGTH_NV
#define GL_READ_PIXEL_DATA_RANGE_LENGTH_NV 0x887B
#endif

#ifndef GL_WRITE_PIXEL_DATA_RANGE_POINTER_NV
#define GL_WRITE_PIXEL_DATA_RANGE_POINTER_NV 0x887C
#endif

#ifndef GL_READ_PIXEL_DATA_RANGE_POINTER_NV
#define GL_READ_PIXEL_DATA_RANGE_POINTER_NV 0x887D
#endif

#ifndef GL_GEOMETRY_SHADER_INVOCATIONS
#define GL_GEOMETRY_SHADER_INVOCATIONS 0x887F
#endif

#ifndef GL_FLOAT_R_NV
#define GL_FLOAT_R_NV 0x8880
#endif

#ifndef GL_FLOAT_RG_NV
#define GL_FLOAT_RG_NV 0x8881
#endif

#ifndef GL_FLOAT_RGB_NV
#define GL_FLOAT_RGB_NV 0x8882
#endif

#ifndef GL_FLOAT_RGBA_NV
#define GL_FLOAT_RGBA_NV 0x8883
#endif

#ifndef GL_FLOAT_R16_NV
#define GL_FLOAT_R16_NV 0x8884
#endif

#ifndef GL_FLOAT_R32_NV
#define GL_FLOAT_R32_NV 0x8885
#endif

#ifndef GL_FLOAT_RG16_NV
#define GL_FLOAT_RG16_NV 0x8886
#endif

#ifndef GL_FLOAT_RG32_NV
#define GL_FLOAT_RG32_NV 0x8887
#endif

#ifndef GL_FLOAT_RGB16_NV
#define GL_FLOAT_RGB16_NV 0x8888
#endif

#ifndef GL_FLOAT_RGB32_NV
#define GL_FLOAT_RGB32_NV 0x8889
#endif

#ifndef GL_FLOAT_RGBA16_NV
#define GL_FLOAT_RGBA16_NV 0x888A
#endif

#ifndef GL_FLOAT_RGBA32_NV
#define GL_FLOAT_RGBA32_NV 0x888B
#endif

#ifndef GL_TEXTURE_FLOAT_COMPONENTS_NV
#define GL_TEXTURE_FLOAT_COMPONENTS_NV 0x888C
#endif

#ifndef GL_FLOAT_CLEAR_COLOR_VALUE_NV
#define GL_FLOAT_CLEAR_COLOR_VALUE_NV 0x888D
#endif

#ifndef GL_FLOAT_RGBA_MODE_NV
#define GL_FLOAT_RGBA_MODE_NV 0x888E
#endif

#ifndef GL_TEXTURE_UNSIGNED_REMAP_MODE_NV
#define GL_TEXTURE_UNSIGNED_REMAP_MODE_NV 0x888F
#endif

#ifndef GL_DEPTH_BOUNDS_TEST_EXT
#define GL_DEPTH_BOUNDS_TEST_EXT 0x8890
#endif

#ifndef GL_DEPTH_BOUNDS_EXT
#define GL_DEPTH_BOUNDS_EXT 0x8891
#endif

#ifndef GL_ARRAY_BUFFER
#define GL_ARRAY_BUFFER 0x8892
#endif

#ifndef GL_ELEMENT_ARRAY_BUFFER
#define GL_ELEMENT_ARRAY_BUFFER 0x8893
#endif

#ifndef GL_ARRAY_BUFFER_BINDING
#define GL_ARRAY_BUFFER_BINDING 0x8894
#endif

#ifndef GL_ELEMENT_ARRAY_BUFFER_BINDING
#define GL_ELEMENT_ARRAY_BUFFER_BINDING 0x8895
#endif

#ifndef GL_VERTEX_ARRAY_BUFFER_BINDING
#define GL_VERTEX_ARRAY_BUFFER_BINDING 0x8896
#endif

#ifndef GL_NORMAL_ARRAY_BUFFER_BINDING
#define GL_NORMAL_ARRAY_BUFFER_BINDING 0x8897
#endif

#ifndef GL_COLOR_ARRAY_BUFFER_BINDING
#define GL_COLOR_ARRAY_BUFFER_BINDING 0x8898
#endif

#ifndef GL_INDEX_ARRAY_BUFFER_BINDING
#define GL_INDEX_ARRAY_BUFFER_BINDING 0x8899
#endif

#ifndef GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING
#define GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING 0x889A
#endif

#ifndef GL_EDGE_FLAG_ARRAY_BUFFER_BINDING
#define GL_EDGE_FLAG_ARRAY_BUFFER_BINDING 0x889B
#endif

#ifndef GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING
#define GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING 0x889C
#endif

#ifndef GL_FOG_COORD_ARRAY_BUFFER_BINDING
#define GL_FOG_COORD_ARRAY_BUFFER_BINDING 0x889D
#endif

#ifndef GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING
#define GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING 0x889D
#endif

#ifndef GL_WEIGHT_ARRAY_BUFFER_BINDING
#define GL_WEIGHT_ARRAY_BUFFER_BINDING 0x889E
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING
#define GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING 0x889F
#endif

#ifndef GL_ARRAY_BUFFER_ARB
#define GL_ARRAY_BUFFER_ARB 0x8892
#endif

#ifndef GL_ELEMENT_ARRAY_BUFFER_ARB
#define GL_ELEMENT_ARRAY_BUFFER_ARB 0x8893
#endif

#ifndef GL_ARRAY_BUFFER_BINDING_ARB
#define GL_ARRAY_BUFFER_BINDING_ARB 0x8894
#endif

#ifndef GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB
#define GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB 0x8895
#endif

#ifndef GL_VERTEX_ARRAY_BUFFER_BINDING_ARB
#define GL_VERTEX_ARRAY_BUFFER_BINDING_ARB 0x8896
#endif

#ifndef GL_NORMAL_ARRAY_BUFFER_BINDING_ARB
#define GL_NORMAL_ARRAY_BUFFER_BINDING_ARB 0x8897
#endif

#ifndef GL_COLOR_ARRAY_BUFFER_BINDING_ARB
#define GL_COLOR_ARRAY_BUFFER_BINDING_ARB 0x8898
#endif

#ifndef GL_INDEX_ARRAY_BUFFER_BINDING_ARB
#define GL_INDEX_ARRAY_BUFFER_BINDING_ARB 0x8899
#endif

#ifndef GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB
#define GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB 0x889A
#endif

#ifndef GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB
#define GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB 0x889B
#endif

#ifndef GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB
#define GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB 0x889C
#endif

#ifndef GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB
#define GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB 0x889D
#endif

#ifndef GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB
#define GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB 0x889E
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB
#define GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB 0x889F
#endif

#ifndef GL_WEIGHT_ARRAY_BUFFER_BINDING_OES
#define GL_WEIGHT_ARRAY_BUFFER_BINDING_OES 0x889E
#endif

#ifndef GL_PROGRAM_INSTRUCTIONS_ARB
#define GL_PROGRAM_INSTRUCTIONS_ARB 0x88A0
#endif

#ifndef GL_MAX_PROGRAM_INSTRUCTIONS_ARB
#define GL_MAX_PROGRAM_INSTRUCTIONS_ARB 0x88A1
#endif

#ifndef GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB
#define GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB 0x88A2
#endif

#ifndef GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB
#define GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB 0x88A3
#endif

#ifndef GL_PROGRAM_TEMPORARIES_ARB
#define GL_PROGRAM_TEMPORARIES_ARB 0x88A4
#endif

#ifndef GL_MAX_PROGRAM_TEMPORARIES_ARB
#define GL_MAX_PROGRAM_TEMPORARIES_ARB 0x88A5
#endif

#ifndef GL_PROGRAM_NATIVE_TEMPORARIES_ARB
#define GL_PROGRAM_NATIVE_TEMPORARIES_ARB 0x88A6
#endif

#ifndef GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB
#define GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB 0x88A7
#endif

#ifndef GL_PROGRAM_PARAMETERS_ARB
#define GL_PROGRAM_PARAMETERS_ARB 0x88A8
#endif

#ifndef GL_MAX_PROGRAM_PARAMETERS_ARB
#define GL_MAX_PROGRAM_PARAMETERS_ARB 0x88A9
#endif

#ifndef GL_PROGRAM_NATIVE_PARAMETERS_ARB
#define GL_PROGRAM_NATIVE_PARAMETERS_ARB 0x88AA
#endif

#ifndef GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB
#define GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB 0x88AB
#endif

#ifndef GL_PROGRAM_ATTRIBS_ARB
#define GL_PROGRAM_ATTRIBS_ARB 0x88AC
#endif

#ifndef GL_MAX_PROGRAM_ATTRIBS_ARB
#define GL_MAX_PROGRAM_ATTRIBS_ARB 0x88AD
#endif

#ifndef GL_PROGRAM_NATIVE_ATTRIBS_ARB
#define GL_PROGRAM_NATIVE_ATTRIBS_ARB 0x88AE
#endif

#ifndef GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB
#define GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB 0x88AF
#endif

#ifndef GL_PROGRAM_ADDRESS_REGISTERS_ARB
#define GL_PROGRAM_ADDRESS_REGISTERS_ARB 0x88B0
#endif

#ifndef GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB
#define GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB 0x88B1
#endif

#ifndef GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB
#define GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB 0x88B2
#endif

#ifndef GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB
#define GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB 0x88B3
#endif

#ifndef GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB
#define GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB 0x88B4
#endif

#ifndef GL_MAX_PROGRAM_ENV_PARAMETERS_ARB
#define GL_MAX_PROGRAM_ENV_PARAMETERS_ARB 0x88B5
#endif

#ifndef GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB
#define GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB 0x88B6
#endif

#ifndef GL_TRANSPOSE_CURRENT_MATRIX_ARB
#define GL_TRANSPOSE_CURRENT_MATRIX_ARB 0x88B7
#endif

#ifndef GL_READ_ONLY
#define GL_READ_ONLY 0x88B8
#endif

#ifndef GL_WRITE_ONLY
#define GL_WRITE_ONLY 0x88B9
#endif

#ifndef GL_READ_WRITE
#define GL_READ_WRITE 0x88BA
#endif

#ifndef GL_BUFFER_ACCESS
#define GL_BUFFER_ACCESS 0x88BB
#endif

#ifndef GL_BUFFER_MAPPED
#define GL_BUFFER_MAPPED 0x88BC
#endif

#ifndef GL_BUFFER_MAP_POINTER
#define GL_BUFFER_MAP_POINTER 0x88BD
#endif

#ifndef GL_READ_ONLY_ARB
#define GL_READ_ONLY_ARB 0x88B8
#endif

#ifndef GL_WRITE_ONLY_ARB
#define GL_WRITE_ONLY_ARB 0x88B9
#endif

#ifndef GL_READ_WRITE_ARB
#define GL_READ_WRITE_ARB 0x88BA
#endif

#ifndef GL_BUFFER_ACCESS_ARB
#define GL_BUFFER_ACCESS_ARB 0x88BB
#endif

#ifndef GL_BUFFER_MAPPED_ARB
#define GL_BUFFER_MAPPED_ARB 0x88BC
#endif

#ifndef GL_BUFFER_MAP_POINTER_ARB
#define GL_BUFFER_MAP_POINTER_ARB 0x88BD
#endif

#ifndef GL_WRITE_ONLY_OES
#define GL_WRITE_ONLY_OES 0x88B9
#endif

#ifndef GL_BUFFER_ACCESS_OES
#define GL_BUFFER_ACCESS_OES 0x88BB
#endif

#ifndef GL_BUFFER_MAPPED_OES
#define GL_BUFFER_MAPPED_OES 0x88BC
#endif

#ifndef GL_BUFFER_MAP_POINTER_OES
#define GL_BUFFER_MAP_POINTER_OES 0x88BD
#endif

#ifndef GL_WRITE_DISCARD_NV
#define GL_WRITE_DISCARD_NV 0x88BE
#endif

#ifndef GL_TIME_ELAPSED
#define GL_TIME_ELAPSED 0x88BF
#endif

#ifndef GL_TIME_ELAPSED_EXT
#define GL_TIME_ELAPSED_EXT 0x88BF
#endif

#ifndef GL_MATRIX0_ARB
#define GL_MATRIX0_ARB 0x88C0
#endif

#ifndef GL_MATRIX1_ARB
#define GL_MATRIX1_ARB 0x88C1
#endif

#ifndef GL_MATRIX2_ARB
#define GL_MATRIX2_ARB 0x88C2
#endif

#ifndef GL_MATRIX3_ARB
#define GL_MATRIX3_ARB 0x88C3
#endif

#ifndef GL_MATRIX4_ARB
#define GL_MATRIX4_ARB 0x88C4
#endif

#ifndef GL_MATRIX5_ARB
#define GL_MATRIX5_ARB 0x88C5
#endif

#ifndef GL_MATRIX6_ARB
#define GL_MATRIX6_ARB 0x88C6
#endif

#ifndef GL_MATRIX7_ARB
#define GL_MATRIX7_ARB 0x88C7
#endif

#ifndef GL_MATRIX8_ARB
#define GL_MATRIX8_ARB 0x88C8
#endif

#ifndef GL_MATRIX9_ARB
#define GL_MATRIX9_ARB 0x88C9
#endif

#ifndef GL_MATRIX10_ARB
#define GL_MATRIX10_ARB 0x88CA
#endif

#ifndef GL_MATRIX11_ARB
#define GL_MATRIX11_ARB 0x88CB
#endif

#ifndef GL_MATRIX12_ARB
#define GL_MATRIX12_ARB 0x88CC
#endif

#ifndef GL_MATRIX13_ARB
#define GL_MATRIX13_ARB 0x88CD
#endif

#ifndef GL_MATRIX14_ARB
#define GL_MATRIX14_ARB 0x88CE
#endif

#ifndef GL_MATRIX15_ARB
#define GL_MATRIX15_ARB 0x88CF
#endif

#ifndef GL_MATRIX16_ARB
#define GL_MATRIX16_ARB 0x88D0
#endif

#ifndef GL_MATRIX17_ARB
#define GL_MATRIX17_ARB 0x88D1
#endif

#ifndef GL_MATRIX18_ARB
#define GL_MATRIX18_ARB 0x88D2
#endif

#ifndef GL_MATRIX19_ARB
#define GL_MATRIX19_ARB 0x88D3
#endif

#ifndef GL_MATRIX20_ARB
#define GL_MATRIX20_ARB 0x88D4
#endif

#ifndef GL_MATRIX21_ARB
#define GL_MATRIX21_ARB 0x88D5
#endif

#ifndef GL_MATRIX22_ARB
#define GL_MATRIX22_ARB 0x88D6
#endif

#ifndef GL_MATRIX23_ARB
#define GL_MATRIX23_ARB 0x88D7
#endif

#ifndef GL_MATRIX24_ARB
#define GL_MATRIX24_ARB 0x88D8
#endif

#ifndef GL_MATRIX25_ARB
#define GL_MATRIX25_ARB 0x88D9
#endif

#ifndef GL_MATRIX26_ARB
#define GL_MATRIX26_ARB 0x88DA
#endif

#ifndef GL_MATRIX27_ARB
#define GL_MATRIX27_ARB 0x88DB
#endif

#ifndef GL_MATRIX28_ARB
#define GL_MATRIX28_ARB 0x88DC
#endif

#ifndef GL_MATRIX29_ARB
#define GL_MATRIX29_ARB 0x88DD
#endif

#ifndef GL_MATRIX30_ARB
#define GL_MATRIX30_ARB 0x88DE
#endif

#ifndef GL_MATRIX31_ARB
#define GL_MATRIX31_ARB 0x88DF
#endif

#ifndef GL_STREAM_DRAW
#define GL_STREAM_DRAW 0x88E0
#endif

#ifndef GL_STREAM_READ
#define GL_STREAM_READ 0x88E1
#endif

#ifndef GL_STREAM_COPY
#define GL_STREAM_COPY 0x88E2
#endif

#ifndef GL_STATIC_DRAW
#define GL_STATIC_DRAW 0x88E4
#endif

#ifndef GL_STATIC_READ
#define GL_STATIC_READ 0x88E5
#endif

#ifndef GL_STATIC_COPY
#define GL_STATIC_COPY 0x88E6
#endif

#ifndef GL_DYNAMIC_DRAW
#define GL_DYNAMIC_DRAW 0x88E8
#endif

#ifndef GL_DYNAMIC_READ
#define GL_DYNAMIC_READ 0x88E9
#endif

#ifndef GL_DYNAMIC_COPY
#define GL_DYNAMIC_COPY 0x88EA
#endif

#ifndef GL_STREAM_DRAW_ARB
#define GL_STREAM_DRAW_ARB 0x88E0
#endif

#ifndef GL_STREAM_READ_ARB
#define GL_STREAM_READ_ARB 0x88E1
#endif

#ifndef GL_STREAM_COPY_ARB
#define GL_STREAM_COPY_ARB 0x88E2
#endif

#ifndef GL_STATIC_DRAW_ARB
#define GL_STATIC_DRAW_ARB 0x88E4
#endif

#ifndef GL_STATIC_READ_ARB
#define GL_STATIC_READ_ARB 0x88E5
#endif

#ifndef GL_STATIC_COPY_ARB
#define GL_STATIC_COPY_ARB 0x88E6
#endif

#ifndef GL_DYNAMIC_DRAW_ARB
#define GL_DYNAMIC_DRAW_ARB 0x88E8
#endif

#ifndef GL_DYNAMIC_READ_ARB
#define GL_DYNAMIC_READ_ARB 0x88E9
#endif

#ifndef GL_DYNAMIC_COPY_ARB
#define GL_DYNAMIC_COPY_ARB 0x88EA
#endif

#ifndef GL_PIXEL_PACK_BUFFER
#define GL_PIXEL_PACK_BUFFER 0x88EB
#endif

#ifndef GL_PIXEL_UNPACK_BUFFER
#define GL_PIXEL_UNPACK_BUFFER 0x88EC
#endif

#ifndef GL_PIXEL_PACK_BUFFER_BINDING
#define GL_PIXEL_PACK_BUFFER_BINDING 0x88ED
#endif

#ifndef GL_PIXEL_UNPACK_BUFFER_BINDING
#define GL_PIXEL_UNPACK_BUFFER_BINDING 0x88EF
#endif

#ifndef GL_PIXEL_PACK_BUFFER_ARB
#define GL_PIXEL_PACK_BUFFER_ARB 0x88EB
#endif

#ifndef GL_PIXEL_UNPACK_BUFFER_ARB
#define GL_PIXEL_UNPACK_BUFFER_ARB 0x88EC
#endif

#ifndef GL_PIXEL_PACK_BUFFER_BINDING_ARB
#define GL_PIXEL_PACK_BUFFER_BINDING_ARB 0x88ED
#endif

#ifndef GL_PIXEL_UNPACK_BUFFER_BINDING_ARB
#define GL_PIXEL_UNPACK_BUFFER_BINDING_ARB 0x88EF
#endif

#ifndef GL_PIXEL_PACK_BUFFER_EXT
#define GL_PIXEL_PACK_BUFFER_EXT 0x88EB
#endif

#ifndef GL_PIXEL_UNPACK_BUFFER_EXT
#define GL_PIXEL_UNPACK_BUFFER_EXT 0x88EC
#endif

#ifndef GL_PIXEL_PACK_BUFFER_BINDING_EXT
#define GL_PIXEL_PACK_BUFFER_BINDING_EXT 0x88ED
#endif

#ifndef GL_PIXEL_UNPACK_BUFFER_BINDING_EXT
#define GL_PIXEL_UNPACK_BUFFER_BINDING_EXT 0x88EF
#endif

#ifndef GL_DEPTH24_STENCIL8
#define GL_DEPTH24_STENCIL8 0x88F0
#endif

#ifndef GL_TEXTURE_STENCIL_SIZE
#define GL_TEXTURE_STENCIL_SIZE 0x88F1
#endif

#ifndef GL_DEPTH24_STENCIL8_EXT
#define GL_DEPTH24_STENCIL8_EXT 0x88F0
#endif

#ifndef GL_TEXTURE_STENCIL_SIZE_EXT
#define GL_TEXTURE_STENCIL_SIZE_EXT 0x88F1
#endif

#ifndef GL_DEPTH24_STENCIL8_OES
#define GL_DEPTH24_STENCIL8_OES 0x88F0
#endif

#ifndef GL_STENCIL_TAG_BITS_EXT
#define GL_STENCIL_TAG_BITS_EXT 0x88F2
#endif

#ifndef GL_STENCIL_CLEAR_TAG_VALUE_EXT
#define GL_STENCIL_CLEAR_TAG_VALUE_EXT 0x88F3
#endif

#ifndef GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV
#define GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV 0x88F4
#endif

#ifndef GL_MAX_PROGRAM_CALL_DEPTH_NV
#define GL_MAX_PROGRAM_CALL_DEPTH_NV 0x88F5
#endif

#ifndef GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV
#define GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV 0x88F4
#endif

#ifndef GL_MAX_PROGRAM_CALL_DEPTH_NV
#define GL_MAX_PROGRAM_CALL_DEPTH_NV 0x88F5
#endif

#ifndef GL_MAX_PROGRAM_IF_DEPTH_NV
#define GL_MAX_PROGRAM_IF_DEPTH_NV 0x88F6
#endif

#ifndef GL_MAX_PROGRAM_LOOP_DEPTH_NV
#define GL_MAX_PROGRAM_LOOP_DEPTH_NV 0x88F7
#endif

#ifndef GL_MAX_PROGRAM_LOOP_COUNT_NV
#define GL_MAX_PROGRAM_LOOP_COUNT_NV 0x88F8
#endif

#ifndef GL_SRC1_COLOR
#define GL_SRC1_COLOR 0x88F9
#endif

#ifndef GL_ONE_MINUS_SRC1_COLOR
#define GL_ONE_MINUS_SRC1_COLOR 0x88FA
#endif

#ifndef GL_ONE_MINUS_SRC1_ALPHA
#define GL_ONE_MINUS_SRC1_ALPHA 0x88FB
#endif

#ifndef GL_MAX_DUAL_SOURCE_DRAW_BUFFERS
#define GL_MAX_DUAL_SOURCE_DRAW_BUFFERS 0x88FC
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY_INTEGER
#define GL_VERTEX_ATTRIB_ARRAY_INTEGER 0x88FD
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY_INTEGER_NV
#define GL_VERTEX_ATTRIB_ARRAY_INTEGER_NV 0x88FD
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY_DIVISOR
#define GL_VERTEX_ATTRIB_ARRAY_DIVISOR 0x88FE
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB
#define GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB 0x88FE
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE
#define GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE 0x88FE
#endif

#ifndef GL_MAX_ARRAY_TEXTURE_LAYERS
#define GL_MAX_ARRAY_TEXTURE_LAYERS 0x88FF
#endif

#ifndef GL_MAX_ARRAY_TEXTURE_LAYERS_EXT
#define GL_MAX_ARRAY_TEXTURE_LAYERS_EXT 0x88FF
#endif

#ifndef GL_MIN_PROGRAM_TEXEL_OFFSET
#define GL_MIN_PROGRAM_TEXEL_OFFSET 0x8904
#endif

#ifndef GL_MAX_PROGRAM_TEXEL_OFFSET
#define GL_MAX_PROGRAM_TEXEL_OFFSET 0x8905
#endif

#ifndef GL_MIN_PROGRAM_TEXEL_OFFSET_NV
#define GL_MIN_PROGRAM_TEXEL_OFFSET_NV 0x8904
#endif

#ifndef GL_MAX_PROGRAM_TEXEL_OFFSET_NV
#define GL_MAX_PROGRAM_TEXEL_OFFSET_NV 0x8905
#endif

#ifndef GL_PROGRAM_ATTRIB_COMPONENTS_NV
#define GL_PROGRAM_ATTRIB_COMPONENTS_NV 0x8906
#endif

#ifndef GL_PROGRAM_RESULT_COMPONENTS_NV
#define GL_PROGRAM_RESULT_COMPONENTS_NV 0x8907
#endif

#ifndef GL_MAX_PROGRAM_ATTRIB_COMPONENTS_NV
#define GL_MAX_PROGRAM_ATTRIB_COMPONENTS_NV 0x8908
#endif

#ifndef GL_MAX_PROGRAM_RESULT_COMPONENTS_NV
#define GL_MAX_PROGRAM_RESULT_COMPONENTS_NV 0x8909
#endif

#ifndef GL_STENCIL_TEST_TWO_SIDE_EXT
#define GL_STENCIL_TEST_TWO_SIDE_EXT 0x8910
#endif

#ifndef GL_ACTIVE_STENCIL_FACE_EXT
#define GL_ACTIVE_STENCIL_FACE_EXT 0x8911
#endif

#ifndef GL_MIRROR_CLAMP_TO_BORDER_EXT
#define GL_MIRROR_CLAMP_TO_BORDER_EXT 0x8912
#endif

#ifndef GL_SAMPLES_PASSED
#define GL_SAMPLES_PASSED 0x8914
#endif

#ifndef GL_SAMPLES_PASSED_ARB
#define GL_SAMPLES_PASSED_ARB 0x8914
#endif

#ifndef GL_GEOMETRY_VERTICES_OUT
#define GL_GEOMETRY_VERTICES_OUT 0x8916
#endif

#ifndef GL_GEOMETRY_INPUT_TYPE
#define GL_GEOMETRY_INPUT_TYPE 0x8917
#endif

#ifndef GL_GEOMETRY_OUTPUT_TYPE
#define GL_GEOMETRY_OUTPUT_TYPE 0x8918
#endif

#ifndef GL_SAMPLER_BINDING
#define GL_SAMPLER_BINDING 0x8919
#endif

#ifndef GL_CLAMP_VERTEX_COLOR
#define GL_CLAMP_VERTEX_COLOR 0x891A
#endif

#ifndef GL_CLAMP_FRAGMENT_COLOR
#define GL_CLAMP_FRAGMENT_COLOR 0x891B
#endif

#ifndef GL_CLAMP_READ_COLOR
#define GL_CLAMP_READ_COLOR 0x891C
#endif

#ifndef GL_FIXED_ONLY
#define GL_FIXED_ONLY 0x891D
#endif

#ifndef GL_CLAMP_VERTEX_COLOR_ARB
#define GL_CLAMP_VERTEX_COLOR_ARB 0x891A
#endif

#ifndef GL_CLAMP_FRAGMENT_COLOR_ARB
#define GL_CLAMP_FRAGMENT_COLOR_ARB 0x891B
#endif

#ifndef GL_CLAMP_READ_COLOR_ARB
#define GL_CLAMP_READ_COLOR_ARB 0x891C
#endif

#ifndef GL_FIXED_ONLY_ARB
#define GL_FIXED_ONLY_ARB 0x891D
#endif

#ifndef GL_TESS_CONTROL_PROGRAM_NV
#define GL_TESS_CONTROL_PROGRAM_NV 0x891E
#endif

#ifndef GL_TESS_EVALUATION_PROGRAM_NV
#define GL_TESS_EVALUATION_PROGRAM_NV 0x891F
#endif

#ifndef GL_FRAGMENT_SHADER_ATI
#define GL_FRAGMENT_SHADER_ATI 0x8920
#endif

#ifndef GL_REG_0_ATI
#define GL_REG_0_ATI 0x8921
#endif

#ifndef GL_REG_1_ATI
#define GL_REG_1_ATI 0x8922
#endif

#ifndef GL_REG_2_ATI
#define GL_REG_2_ATI 0x8923
#endif

#ifndef GL_REG_3_ATI
#define GL_REG_3_ATI 0x8924
#endif

#ifndef GL_REG_4_ATI
#define GL_REG_4_ATI 0x8925
#endif

#ifndef GL_REG_5_ATI
#define GL_REG_5_ATI 0x8926
#endif

#ifndef GL_REG_6_ATI
#define GL_REG_6_ATI 0x8927
#endif

#ifndef GL_REG_7_ATI
#define GL_REG_7_ATI 0x8928
#endif

#ifndef GL_REG_8_ATI
#define GL_REG_8_ATI 0x8929
#endif

#ifndef GL_REG_9_ATI
#define GL_REG_9_ATI 0x892A
#endif

#ifndef GL_REG_10_ATI
#define GL_REG_10_ATI 0x892B
#endif

#ifndef GL_REG_11_ATI
#define GL_REG_11_ATI 0x892C
#endif

#ifndef GL_REG_12_ATI
#define GL_REG_12_ATI 0x892D
#endif

#ifndef GL_REG_13_ATI
#define GL_REG_13_ATI 0x892E
#endif

#ifndef GL_REG_14_ATI
#define GL_REG_14_ATI 0x892F
#endif

#ifndef GL_REG_15_ATI
#define GL_REG_15_ATI 0x8930
#endif

#ifndef GL_REG_16_ATI
#define GL_REG_16_ATI 0x8931
#endif

#ifndef GL_REG_17_ATI
#define GL_REG_17_ATI 0x8932
#endif

#ifndef GL_REG_18_ATI
#define GL_REG_18_ATI 0x8933
#endif

#ifndef GL_REG_19_ATI
#define GL_REG_19_ATI 0x8934
#endif

#ifndef GL_REG_20_ATI
#define GL_REG_20_ATI 0x8935
#endif

#ifndef GL_REG_21_ATI
#define GL_REG_21_ATI 0x8936
#endif

#ifndef GL_REG_22_ATI
#define GL_REG_22_ATI 0x8937
#endif

#ifndef GL_REG_23_ATI
#define GL_REG_23_ATI 0x8938
#endif

#ifndef GL_REG_24_ATI
#define GL_REG_24_ATI 0x8939
#endif

#ifndef GL_REG_25_ATI
#define GL_REG_25_ATI 0x893A
#endif

#ifndef GL_REG_26_ATI
#define GL_REG_26_ATI 0x893B
#endif

#ifndef GL_REG_27_ATI
#define GL_REG_27_ATI 0x893C
#endif

#ifndef GL_REG_28_ATI
#define GL_REG_28_ATI 0x893D
#endif

#ifndef GL_REG_29_ATI
#define GL_REG_29_ATI 0x893E
#endif

#ifndef GL_REG_30_ATI
#define GL_REG_30_ATI 0x893F
#endif

#ifndef GL_REG_31_ATI
#define GL_REG_31_ATI 0x8940
#endif

#ifndef GL_CON_0_ATI
#define GL_CON_0_ATI 0x8941
#endif

#ifndef GL_CON_1_ATI
#define GL_CON_1_ATI 0x8942
#endif

#ifndef GL_CON_2_ATI
#define GL_CON_2_ATI 0x8943
#endif

#ifndef GL_CON_3_ATI
#define GL_CON_3_ATI 0x8944
#endif

#ifndef GL_CON_4_ATI
#define GL_CON_4_ATI 0x8945
#endif

#ifndef GL_CON_5_ATI
#define GL_CON_5_ATI 0x8946
#endif

#ifndef GL_CON_6_ATI
#define GL_CON_6_ATI 0x8947
#endif

#ifndef GL_CON_7_ATI
#define GL_CON_7_ATI 0x8948
#endif

#ifndef GL_CON_8_ATI
#define GL_CON_8_ATI 0x8949
#endif

#ifndef GL_CON_9_ATI
#define GL_CON_9_ATI 0x894A
#endif

#ifndef GL_CON_10_ATI
#define GL_CON_10_ATI 0x894B
#endif

#ifndef GL_CON_11_ATI
#define GL_CON_11_ATI 0x894C
#endif

#ifndef GL_CON_12_ATI
#define GL_CON_12_ATI 0x894D
#endif

#ifndef GL_CON_13_ATI
#define GL_CON_13_ATI 0x894E
#endif

#ifndef GL_CON_14_ATI
#define GL_CON_14_ATI 0x894F
#endif

#ifndef GL_CON_15_ATI
#define GL_CON_15_ATI 0x8950
#endif

#ifndef GL_CON_16_ATI
#define GL_CON_16_ATI 0x8951
#endif

#ifndef GL_CON_17_ATI
#define GL_CON_17_ATI 0x8952
#endif

#ifndef GL_CON_18_ATI
#define GL_CON_18_ATI 0x8953
#endif

#ifndef GL_CON_19_ATI
#define GL_CON_19_ATI 0x8954
#endif

#ifndef GL_CON_20_ATI
#define GL_CON_20_ATI 0x8955
#endif

#ifndef GL_CON_21_ATI
#define GL_CON_21_ATI 0x8956
#endif

#ifndef GL_CON_22_ATI
#define GL_CON_22_ATI 0x8957
#endif

#ifndef GL_CON_23_ATI
#define GL_CON_23_ATI 0x8958
#endif

#ifndef GL_CON_24_ATI
#define GL_CON_24_ATI 0x8959
#endif

#ifndef GL_CON_25_ATI
#define GL_CON_25_ATI 0x895A
#endif

#ifndef GL_CON_26_ATI
#define GL_CON_26_ATI 0x895B
#endif

#ifndef GL_CON_27_ATI
#define GL_CON_27_ATI 0x895C
#endif

#ifndef GL_CON_28_ATI
#define GL_CON_28_ATI 0x895D
#endif

#ifndef GL_CON_29_ATI
#define GL_CON_29_ATI 0x895E
#endif

#ifndef GL_CON_30_ATI
#define GL_CON_30_ATI 0x895F
#endif

#ifndef GL_CON_31_ATI
#define GL_CON_31_ATI 0x8960
#endif

#ifndef GL_MOV_ATI
#define GL_MOV_ATI 0x8961
#endif

#ifndef GL_ADD_ATI
#define GL_ADD_ATI 0x8963
#endif

#ifndef GL_MUL_ATI
#define GL_MUL_ATI 0x8964
#endif

#ifndef GL_SUB_ATI
#define GL_SUB_ATI 0x8965
#endif

#ifndef GL_DOT3_ATI
#define GL_DOT3_ATI 0x8966
#endif

#ifndef GL_DOT4_ATI
#define GL_DOT4_ATI 0x8967
#endif

#ifndef GL_MAD_ATI
#define GL_MAD_ATI 0x8968
#endif

#ifndef GL_LERP_ATI
#define GL_LERP_ATI 0x8969
#endif

#ifndef GL_CND_ATI
#define GL_CND_ATI 0x896A
#endif

#ifndef GL_CND0_ATI
#define GL_CND0_ATI 0x896B
#endif

#ifndef GL_DOT2_ADD_ATI
#define GL_DOT2_ADD_ATI 0x896C
#endif

#ifndef GL_SECONDARY_INTERPOLATOR_ATI
#define GL_SECONDARY_INTERPOLATOR_ATI 0x896D
#endif

#ifndef GL_NUM_FRAGMENT_REGISTERS_ATI
#define GL_NUM_FRAGMENT_REGISTERS_ATI 0x896E
#endif

#ifndef GL_NUM_FRAGMENT_CONSTANTS_ATI
#define GL_NUM_FRAGMENT_CONSTANTS_ATI 0x896F
#endif

#ifndef GL_NUM_PASSES_ATI
#define GL_NUM_PASSES_ATI 0x8970
#endif

#ifndef GL_NUM_INSTRUCTIONS_PER_PASS_ATI
#define GL_NUM_INSTRUCTIONS_PER_PASS_ATI 0x8971
#endif

#ifndef GL_NUM_INSTRUCTIONS_TOTAL_ATI
#define GL_NUM_INSTRUCTIONS_TOTAL_ATI 0x8972
#endif

#ifndef GL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI
#define GL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI 0x8973
#endif

#ifndef GL_NUM_LOOPBACK_COMPONENTS_ATI
#define GL_NUM_LOOPBACK_COMPONENTS_ATI 0x8974
#endif

#ifndef GL_COLOR_ALPHA_PAIRING_ATI
#define GL_COLOR_ALPHA_PAIRING_ATI 0x8975
#endif

#ifndef GL_SWIZZLE_STR_ATI
#define GL_SWIZZLE_STR_ATI 0x8976
#endif

#ifndef GL_SWIZZLE_STQ_ATI
#define GL_SWIZZLE_STQ_ATI 0x8977
#endif

#ifndef GL_SWIZZLE_STR_DR_ATI
#define GL_SWIZZLE_STR_DR_ATI 0x8978
#endif

#ifndef GL_SWIZZLE_STQ_DQ_ATI
#define GL_SWIZZLE_STQ_DQ_ATI 0x8979
#endif

#ifndef GL_SWIZZLE_STRQ_ATI
#define GL_SWIZZLE_STRQ_ATI 0x897A
#endif

#ifndef GL_SWIZZLE_STRQ_DQ_ATI
#define GL_SWIZZLE_STRQ_DQ_ATI 0x897B
#endif

#ifndef GL_INTERLACE_OML
#define GL_INTERLACE_OML 0x8980
#endif

#ifndef GL_INTERLACE_READ_OML
#define GL_INTERLACE_READ_OML 0x8981
#endif

#ifndef GL_FORMAT_SUBSAMPLE_24_24_OML
#define GL_FORMAT_SUBSAMPLE_24_24_OML 0x8982
#endif

#ifndef GL_FORMAT_SUBSAMPLE_244_244_OML
#define GL_FORMAT_SUBSAMPLE_244_244_OML 0x8983
#endif

#ifndef GL_PACK_RESAMPLE_OML
#define GL_PACK_RESAMPLE_OML 0x8984
#endif

#ifndef GL_UNPACK_RESAMPLE_OML
#define GL_UNPACK_RESAMPLE_OML 0x8985
#endif

#ifndef GL_RESAMPLE_REPLICATE_OML
#define GL_RESAMPLE_REPLICATE_OML 0x8986
#endif

#ifndef GL_RESAMPLE_ZERO_FILL_OML
#define GL_RESAMPLE_ZERO_FILL_OML 0x8987
#endif

#ifndef GL_RESAMPLE_AVERAGE_OML
#define GL_RESAMPLE_AVERAGE_OML 0x8988
#endif

#ifndef GL_RESAMPLE_DECIMATE_OML
#define GL_RESAMPLE_DECIMATE_OML 0x8989
#endif

#ifndef GL_POINT_SIZE_ARRAY_TYPE_OES
#define GL_POINT_SIZE_ARRAY_TYPE_OES 0x898A
#endif

#ifndef GL_POINT_SIZE_ARRAY_STRIDE_OES
#define GL_POINT_SIZE_ARRAY_STRIDE_OES 0x898B
#endif

#ifndef GL_POINT_SIZE_ARRAY_POINTER_OES
#define GL_POINT_SIZE_ARRAY_POINTER_OES 0x898C
#endif

#ifndef GL_MODELVIEW_MATRIX_FLOAT_AS_INT_BITS_OES
#define GL_MODELVIEW_MATRIX_FLOAT_AS_INT_BITS_OES 0x898D
#endif

#ifndef GL_PROJECTION_MATRIX_FLOAT_AS_INT_BITS_OES
#define GL_PROJECTION_MATRIX_FLOAT_AS_INT_BITS_OES 0x898E
#endif

#ifndef GL_TEXTURE_MATRIX_FLOAT_AS_INT_BITS_OES
#define GL_TEXTURE_MATRIX_FLOAT_AS_INT_BITS_OES 0x898F
#endif

#ifndef GL_VERTEX_ATTRIB_MAP1_APPLE
#define GL_VERTEX_ATTRIB_MAP1_APPLE 0x8A00
#endif

#ifndef GL_VERTEX_ATTRIB_MAP2_APPLE
#define GL_VERTEX_ATTRIB_MAP2_APPLE 0x8A01
#endif

#ifndef GL_VERTEX_ATTRIB_MAP1_SIZE_APPLE
#define GL_VERTEX_ATTRIB_MAP1_SIZE_APPLE 0x8A02
#endif

#ifndef GL_VERTEX_ATTRIB_MAP1_COEFF_APPLE
#define GL_VERTEX_ATTRIB_MAP1_COEFF_APPLE 0x8A03
#endif

#ifndef GL_VERTEX_ATTRIB_MAP1_ORDER_APPLE
#define GL_VERTEX_ATTRIB_MAP1_ORDER_APPLE 0x8A04
#endif

#ifndef GL_VERTEX_ATTRIB_MAP1_DOMAIN_APPLE
#define GL_VERTEX_ATTRIB_MAP1_DOMAIN_APPLE 0x8A05
#endif

#ifndef GL_VERTEX_ATTRIB_MAP2_SIZE_APPLE
#define GL_VERTEX_ATTRIB_MAP2_SIZE_APPLE 0x8A06
#endif

#ifndef GL_VERTEX_ATTRIB_MAP2_COEFF_APPLE
#define GL_VERTEX_ATTRIB_MAP2_COEFF_APPLE 0x8A07
#endif

#ifndef GL_VERTEX_ATTRIB_MAP2_ORDER_APPLE
#define GL_VERTEX_ATTRIB_MAP2_ORDER_APPLE 0x8A08
#endif

#ifndef GL_VERTEX_ATTRIB_MAP2_DOMAIN_APPLE
#define GL_VERTEX_ATTRIB_MAP2_DOMAIN_APPLE 0x8A09
#endif

#ifndef GL_DRAW_PIXELS_APPLE
#define GL_DRAW_PIXELS_APPLE 0x8A0A
#endif

#ifndef GL_FENCE_APPLE
#define GL_FENCE_APPLE 0x8A0B
#endif

#ifndef GL_ELEMENT_ARRAY_APPLE
#define GL_ELEMENT_ARRAY_APPLE 0x8A0C
#endif

#ifndef GL_ELEMENT_ARRAY_TYPE_APPLE
#define GL_ELEMENT_ARRAY_TYPE_APPLE 0x8A0D
#endif

#ifndef GL_ELEMENT_ARRAY_POINTER_APPLE
#define GL_ELEMENT_ARRAY_POINTER_APPLE 0x8A0E
#endif

#ifndef GL_COLOR_FLOAT_APPLE
#define GL_COLOR_FLOAT_APPLE 0x8A0F
#endif

#ifndef GL_UNIFORM_BUFFER
#define GL_UNIFORM_BUFFER 0x8A11
#endif

#ifndef GL_BUFFER_SERIALIZED_MODIFY_APPLE
#define GL_BUFFER_SERIALIZED_MODIFY_APPLE 0x8A12
#endif

#ifndef GL_BUFFER_FLUSHING_UNMAP_APPLE
#define GL_BUFFER_FLUSHING_UNMAP_APPLE 0x8A13
#endif

#ifndef GL_AUX_DEPTH_STENCIL_APPLE
#define GL_AUX_DEPTH_STENCIL_APPLE 0x8A14
#endif

#ifndef GL_PACK_ROW_BYTES_APPLE
#define GL_PACK_ROW_BYTES_APPLE 0x8A15
#endif

#ifndef GL_UNPACK_ROW_BYTES_APPLE
#define GL_UNPACK_ROW_BYTES_APPLE 0x8A16
#endif

#ifndef GL_RELEASED_APPLE
#define GL_RELEASED_APPLE 0x8A19
#endif

#ifndef GL_VOLATILE_APPLE
#define GL_VOLATILE_APPLE 0x8A1A
#endif

#ifndef GL_RETAINED_APPLE
#define GL_RETAINED_APPLE 0x8A1B
#endif

#ifndef GL_UNDEFINED_APPLE
#define GL_UNDEFINED_APPLE 0x8A1C
#endif

#ifndef GL_PURGEABLE_APPLE
#define GL_PURGEABLE_APPLE 0x8A1D
#endif

#ifndef GL_RGB_422_APPLE
#define GL_RGB_422_APPLE 0x8A1F
#endif

#ifndef GL_UNIFORM_BUFFER_BINDING
#define GL_UNIFORM_BUFFER_BINDING 0x8A28
#endif

#ifndef GL_UNIFORM_BUFFER_START
#define GL_UNIFORM_BUFFER_START 0x8A29
#endif

#ifndef GL_UNIFORM_BUFFER_SIZE
#define GL_UNIFORM_BUFFER_SIZE 0x8A2A
#endif

#ifndef GL_MAX_VERTEX_UNIFORM_BLOCKS
#define GL_MAX_VERTEX_UNIFORM_BLOCKS 0x8A2B
#endif

#ifndef GL_MAX_GEOMETRY_UNIFORM_BLOCKS
#define GL_MAX_GEOMETRY_UNIFORM_BLOCKS 0x8A2C
#endif

#ifndef GL_MAX_FRAGMENT_UNIFORM_BLOCKS
#define GL_MAX_FRAGMENT_UNIFORM_BLOCKS 0x8A2D
#endif

#ifndef GL_MAX_COMBINED_UNIFORM_BLOCKS
#define GL_MAX_COMBINED_UNIFORM_BLOCKS 0x8A2E
#endif

#ifndef GL_MAX_UNIFORM_BUFFER_BINDINGS
#define GL_MAX_UNIFORM_BUFFER_BINDINGS 0x8A2F
#endif

#ifndef GL_MAX_UNIFORM_BLOCK_SIZE
#define GL_MAX_UNIFORM_BLOCK_SIZE 0x8A30
#endif

#ifndef GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS
#define GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS 0x8A31
#endif

#ifndef GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS
#define GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS 0x8A32
#endif

#ifndef GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS
#define GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS 0x8A33
#endif

#ifndef GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT
#define GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT 0x8A34
#endif

#ifndef GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH
#define GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH 0x8A35
#endif

#ifndef GL_ACTIVE_UNIFORM_BLOCKS
#define GL_ACTIVE_UNIFORM_BLOCKS 0x8A36
#endif

#ifndef GL_UNIFORM_TYPE
#define GL_UNIFORM_TYPE 0x8A37
#endif

#ifndef GL_UNIFORM_SIZE
#define GL_UNIFORM_SIZE 0x8A38
#endif

#ifndef GL_UNIFORM_NAME_LENGTH
#define GL_UNIFORM_NAME_LENGTH 0x8A39
#endif

#ifndef GL_UNIFORM_BLOCK_INDEX
#define GL_UNIFORM_BLOCK_INDEX 0x8A3A
#endif

#ifndef GL_UNIFORM_OFFSET
#define GL_UNIFORM_OFFSET 0x8A3B
#endif

#ifndef GL_UNIFORM_ARRAY_STRIDE
#define GL_UNIFORM_ARRAY_STRIDE 0x8A3C
#endif

#ifndef GL_UNIFORM_MATRIX_STRIDE
#define GL_UNIFORM_MATRIX_STRIDE 0x8A3D
#endif

#ifndef GL_UNIFORM_IS_ROW_MAJOR
#define GL_UNIFORM_IS_ROW_MAJOR 0x8A3E
#endif

#ifndef GL_UNIFORM_BLOCK_BINDING
#define GL_UNIFORM_BLOCK_BINDING 0x8A3F
#endif

#ifndef GL_UNIFORM_BLOCK_DATA_SIZE
#define GL_UNIFORM_BLOCK_DATA_SIZE 0x8A40
#endif

#ifndef GL_UNIFORM_BLOCK_NAME_LENGTH
#define GL_UNIFORM_BLOCK_NAME_LENGTH 0x8A41
#endif

#ifndef GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS
#define GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS 0x8A42
#endif

#ifndef GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES
#define GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES 0x8A43
#endif

#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER
#define GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER 0x8A44
#endif

#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER
#define GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER 0x8A45
#endif

#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER
#define GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER 0x8A46
#endif

#ifndef GL_INVALID_INDEX
#define GL_INVALID_INDEX 0xFFFFFFFFu
#endif

#ifndef GL_TEXTURE_SRGB_DECODE_EXT
#define GL_TEXTURE_SRGB_DECODE_EXT 0x8A48
#endif

#ifndef GL_DECODE_EXT
#define GL_DECODE_EXT 0x8A49
#endif

#ifndef GL_SKIP_DECODE_EXT
#define GL_SKIP_DECODE_EXT 0x8A4A
#endif

#ifndef GL_PROGRAM_PIPELINE_OBJECT_EXT
#define GL_PROGRAM_PIPELINE_OBJECT_EXT 0x8A4F
#endif

#ifndef GL_FRAGMENT_SHADER_DISCARDS_SAMPLES_EXT
#define GL_FRAGMENT_SHADER_DISCARDS_SAMPLES_EXT 0x8A52
#endif

#ifndef GL_SYNC_OBJECT_APPLE
#define GL_SYNC_OBJECT_APPLE 0x8A53
#endif

#ifndef GL_SAMPLER_2D_RECT
#define GL_SAMPLER_2D_RECT 0x8B63
#endif

#ifndef GL_SAMPLER_2D_RECT_SHADOW
#define GL_SAMPLER_2D_RECT_SHADOW 0x8B64
#endif

#ifndef GL_PROGRAM_OBJECT_EXT
#define GL_PROGRAM_OBJECT_EXT 0x8B40
#endif

#ifndef GL_SHADER_OBJECT_EXT
#define GL_SHADER_OBJECT_EXT 0x8B48
#endif

#ifndef GL_SAMPLER_3D_OES
#define GL_SAMPLER_3D_OES 0x8B5F
#endif

#ifndef GL_SAMPLER_2D_SHADOW_EXT
#define GL_SAMPLER_2D_SHADOW_EXT 0x8B62
#endif

#ifndef GL_FRAGMENT_SHADER_DERIVATIVE_HINT_OES
#define GL_FRAGMENT_SHADER_DERIVATIVE_HINT_OES 0x8B8B
#endif

#ifndef GL_MAX_VARYING_COMPONENTS
#define GL_MAX_VARYING_COMPONENTS 0x8B4B
#endif

#ifndef GL_MAX_VARYING_COMPONENTS_EXT
#define GL_MAX_VARYING_COMPONENTS_EXT 0x8B4B
#endif

#ifndef GL_CURRENT_PROGRAM
#define GL_CURRENT_PROGRAM 0x8B8D
#endif

#ifndef GL_ACTIVE_PROGRAM_EXT
#define GL_ACTIVE_PROGRAM_EXT 0x8B8D
#endif

#ifndef GL_PALETTE4_RGB8_OES
#define GL_PALETTE4_RGB8_OES 0x8B90
#endif

#ifndef GL_PALETTE4_RGBA8_OES
#define GL_PALETTE4_RGBA8_OES 0x8B91
#endif

#ifndef GL_PALETTE4_R5_G6_B5_OES
#define GL_PALETTE4_R5_G6_B5_OES 0x8B92
#endif

#ifndef GL_PALETTE4_RGBA4_OES
#define GL_PALETTE4_RGBA4_OES 0x8B93
#endif

#ifndef GL_PALETTE4_RGB5_A1_OES
#define GL_PALETTE4_RGB5_A1_OES 0x8B94
#endif

#ifndef GL_PALETTE8_RGB8_OES
#define GL_PALETTE8_RGB8_OES 0x8B95
#endif

#ifndef GL_PALETTE8_RGBA8_OES
#define GL_PALETTE8_RGBA8_OES 0x8B96
#endif

#ifndef GL_PALETTE8_R5_G6_B5_OES
#define GL_PALETTE8_R5_G6_B5_OES 0x8B97
#endif

#ifndef GL_PALETTE8_RGBA4_OES
#define GL_PALETTE8_RGBA4_OES 0x8B98
#endif

#ifndef GL_PALETTE8_RGB5_A1_OES
#define GL_PALETTE8_RGB5_A1_OES 0x8B99
#endif

#ifndef GL_IMPLEMENTATION_COLOR_READ_TYPE_OES
#define GL_IMPLEMENTATION_COLOR_READ_TYPE_OES 0x8B9A
#endif

#ifndef GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES
#define GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES 0x8B9B
#endif

#ifndef GL_IMPLEMENTATION_COLOR_READ_TYPE
#define GL_IMPLEMENTATION_COLOR_READ_TYPE 0x8B9A
#endif

#ifndef GL_IMPLEMENTATION_COLOR_READ_FORMAT
#define GL_IMPLEMENTATION_COLOR_READ_FORMAT 0x8B9B
#endif

#ifndef GL_POINT_SIZE_ARRAY_OES
#define GL_POINT_SIZE_ARRAY_OES 0x8B9C
#endif

#ifndef GL_TEXTURE_CROP_RECT_OES
#define GL_TEXTURE_CROP_RECT_OES 0x8B9D
#endif

#ifndef GL_MATRIX_INDEX_ARRAY_BUFFER_BINDING_OES
#define GL_MATRIX_INDEX_ARRAY_BUFFER_BINDING_OES 0x8B9E
#endif

#ifndef GL_POINT_SIZE_ARRAY_BUFFER_BINDING_OES
#define GL_POINT_SIZE_ARRAY_BUFFER_BINDING_OES 0x8B9F
#endif

#ifndef GL_FRAGMENT_PROGRAM_POSITION_MESA
#define GL_FRAGMENT_PROGRAM_POSITION_MESA 0x8BB0
#endif

#ifndef GL_FRAGMENT_PROGRAM_CALLBACK_MESA
#define GL_FRAGMENT_PROGRAM_CALLBACK_MESA 0x8BB1
#endif

#ifndef GL_FRAGMENT_PROGRAM_CALLBACK_FUNC_MESA
#define GL_FRAGMENT_PROGRAM_CALLBACK_FUNC_MESA 0x8BB2
#endif

#ifndef GL_FRAGMENT_PROGRAM_CALLBACK_DATA_MESA
#define GL_FRAGMENT_PROGRAM_CALLBACK_DATA_MESA 0x8BB3
#endif

#ifndef GL_VERTEX_PROGRAM_CALLBACK_MESA
#define GL_VERTEX_PROGRAM_CALLBACK_MESA 0x8BB4
#endif

#ifndef GL_VERTEX_PROGRAM_POSITION_MESA
#define GL_VERTEX_PROGRAM_POSITION_MESA 0x8BB4
#endif

#ifndef GL_VERTEX_PROGRAM_CALLBACK_FUNC_MESA
#define GL_VERTEX_PROGRAM_CALLBACK_FUNC_MESA 0x8BB6
#endif

#ifndef GL_VERTEX_PROGRAM_CALLBACK_DATA_MESA
#define GL_VERTEX_PROGRAM_CALLBACK_DATA_MESA 0x8BB7
#endif

#ifndef GL_COUNTER_TYPE_AMD
#define GL_COUNTER_TYPE_AMD 0x8BC0
#endif

#ifndef GL_COUNTER_RANGE_AMD
#define GL_COUNTER_RANGE_AMD 0x8BC1
#endif

#ifndef GL_UNSIGNED_INT64_AMD
#define GL_UNSIGNED_INT64_AMD 0x8BC2
#endif

#ifndef GL_PERCENTAGE_AMD
#define GL_PERCENTAGE_AMD 0x8BC3
#endif

#ifndef GL_PERFMON_RESULT_AVAILABLE_AMD
#define GL_PERFMON_RESULT_AVAILABLE_AMD 0x8BC4
#endif

#ifndef GL_PERFMON_RESULT_SIZE_AMD
#define GL_PERFMON_RESULT_SIZE_AMD 0x8BC5
#endif

#ifndef GL_PERFMON_RESULT_AMD
#define GL_PERFMON_RESULT_AMD 0x8BC6
#endif

#ifndef GL_TEXTURE_WIDTH_QCOM
#define GL_TEXTURE_WIDTH_QCOM 0x8BD2
#endif

#ifndef GL_TEXTURE_HEIGHT_QCOM
#define GL_TEXTURE_HEIGHT_QCOM 0x8BD3
#endif

#ifndef GL_TEXTURE_DEPTH_QCOM
#define GL_TEXTURE_DEPTH_QCOM 0x8BD4
#endif

#ifndef GL_TEXTURE_INTERNAL_FORMAT_QCOM
#define GL_TEXTURE_INTERNAL_FORMAT_QCOM 0x8BD5
#endif

#ifndef GL_TEXTURE_FORMAT_QCOM
#define GL_TEXTURE_FORMAT_QCOM 0x8BD6
#endif

#ifndef GL_TEXTURE_TYPE_QCOM
#define GL_TEXTURE_TYPE_QCOM 0x8BD7
#endif

#ifndef GL_TEXTURE_IMAGE_VALID_QCOM
#define GL_TEXTURE_IMAGE_VALID_QCOM 0x8BD8
#endif

#ifndef GL_TEXTURE_NUM_LEVELS_QCOM
#define GL_TEXTURE_NUM_LEVELS_QCOM 0x8BD9
#endif

#ifndef GL_TEXTURE_TARGET_QCOM
#define GL_TEXTURE_TARGET_QCOM 0x8BDA
#endif

#ifndef GL_TEXTURE_OBJECT_VALID_QCOM
#define GL_TEXTURE_OBJECT_VALID_QCOM 0x8BDB
#endif

#ifndef GL_STATE_RESTORE
#define GL_STATE_RESTORE 0x8BDC
#endif

#ifndef GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG
#define GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG 0x8C00
#endif

#ifndef GL_COMPRESSED_RGB_PVRTC_2BPPV1_IMG
#define GL_COMPRESSED_RGB_PVRTC_2BPPV1_IMG 0x8C01
#endif

#ifndef GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG
#define GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG 0x8C02
#endif

#ifndef GL_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG
#define GL_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG 0x8C03
#endif

#ifndef GL_MODULATE_COLOR_IMG
#define GL_MODULATE_COLOR_IMG 0x8C04
#endif

#ifndef GL_RECIP_ADD_SIGNED_ALPHA_IMG
#define GL_RECIP_ADD_SIGNED_ALPHA_IMG 0x8C05
#endif

#ifndef GL_TEXTURE_ALPHA_MODULATE_IMG
#define GL_TEXTURE_ALPHA_MODULATE_IMG 0x8C06
#endif

#ifndef GL_FACTOR_ALPHA_MODULATE_IMG
#define GL_FACTOR_ALPHA_MODULATE_IMG 0x8C07
#endif

#ifndef GL_FRAGMENT_ALPHA_MODULATE_IMG
#define GL_FRAGMENT_ALPHA_MODULATE_IMG 0x8C08
#endif

#ifndef GL_ADD_BLEND_IMG
#define GL_ADD_BLEND_IMG 0x8C09
#endif

#ifndef GL_SGX_BINARY_IMG
#define GL_SGX_BINARY_IMG 0x8C0A
#endif

#ifndef GL_TEXTURE_RED_TYPE
#define GL_TEXTURE_RED_TYPE 0x8C10
#endif

#ifndef GL_TEXTURE_GREEN_TYPE
#define GL_TEXTURE_GREEN_TYPE 0x8C11
#endif

#ifndef GL_TEXTURE_BLUE_TYPE
#define GL_TEXTURE_BLUE_TYPE 0x8C12
#endif

#ifndef GL_TEXTURE_ALPHA_TYPE
#define GL_TEXTURE_ALPHA_TYPE 0x8C13
#endif

#ifndef GL_TEXTURE_LUMINANCE_TYPE
#define GL_TEXTURE_LUMINANCE_TYPE 0x8C14
#endif

#ifndef GL_TEXTURE_INTENSITY_TYPE
#define GL_TEXTURE_INTENSITY_TYPE 0x8C15
#endif

#ifndef GL_TEXTURE_DEPTH_TYPE
#define GL_TEXTURE_DEPTH_TYPE 0x8C16
#endif

#ifndef GL_UNSIGNED_NORMALIZED
#define GL_UNSIGNED_NORMALIZED 0x8C17
#endif

#ifndef GL_TEXTURE_RED_TYPE_ARB
#define GL_TEXTURE_RED_TYPE_ARB 0x8C10
#endif

#ifndef GL_TEXTURE_GREEN_TYPE_ARB
#define GL_TEXTURE_GREEN_TYPE_ARB 0x8C11
#endif

#ifndef GL_TEXTURE_BLUE_TYPE_ARB
#define GL_TEXTURE_BLUE_TYPE_ARB 0x8C12
#endif

#ifndef GL_TEXTURE_ALPHA_TYPE_ARB
#define GL_TEXTURE_ALPHA_TYPE_ARB 0x8C13
#endif

#ifndef GL_TEXTURE_LUMINANCE_TYPE_ARB
#define GL_TEXTURE_LUMINANCE_TYPE_ARB 0x8C14
#endif

#ifndef GL_TEXTURE_INTENSITY_TYPE_ARB
#define GL_TEXTURE_INTENSITY_TYPE_ARB 0x8C15
#endif

#ifndef GL_TEXTURE_DEPTH_TYPE_ARB
#define GL_TEXTURE_DEPTH_TYPE_ARB 0x8C16
#endif

#ifndef GL_UNSIGNED_NORMALIZED_ARB
#define GL_UNSIGNED_NORMALIZED_ARB 0x8C17
#endif

#ifndef GL_UNSIGNED_NORMALIZED_EXT
#define GL_UNSIGNED_NORMALIZED_EXT 0x8C17
#endif

#ifndef GL_TEXTURE_1D_ARRAY
#define GL_TEXTURE_1D_ARRAY 0x8C18
#endif

#ifndef GL_PROXY_TEXTURE_1D_ARRAY
#define GL_PROXY_TEXTURE_1D_ARRAY 0x8C19
#endif

#ifndef GL_TEXTURE_2D_ARRAY
#define GL_TEXTURE_2D_ARRAY 0x8C1A
#endif

#ifndef GL_PROXY_TEXTURE_2D_ARRAY
#define GL_PROXY_TEXTURE_2D_ARRAY 0x8C1B
#endif

#ifndef GL_TEXTURE_BINDING_1D_ARRAY
#define GL_TEXTURE_BINDING_1D_ARRAY 0x8C1C
#endif

#ifndef GL_TEXTURE_BINDING_2D_ARRAY
#define GL_TEXTURE_BINDING_2D_ARRAY 0x8C1D
#endif

#ifndef GL_TEXTURE_1D_ARRAY_EXT
#define GL_TEXTURE_1D_ARRAY_EXT 0x8C18
#endif

#ifndef GL_PROXY_TEXTURE_1D_ARRAY_EXT
#define GL_PROXY_TEXTURE_1D_ARRAY_EXT 0x8C19
#endif

#ifndef GL_TEXTURE_2D_ARRAY_EXT
#define GL_TEXTURE_2D_ARRAY_EXT 0x8C1A
#endif

#ifndef GL_PROXY_TEXTURE_2D_ARRAY_EXT
#define GL_PROXY_TEXTURE_2D_ARRAY_EXT 0x8C1B
#endif

#ifndef GL_TEXTURE_BINDING_1D_ARRAY_EXT
#define GL_TEXTURE_BINDING_1D_ARRAY_EXT 0x8C1C
#endif

#ifndef GL_TEXTURE_BINDING_2D_ARRAY_EXT
#define GL_TEXTURE_BINDING_2D_ARRAY_EXT 0x8C1D
#endif

#ifndef GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS
#define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS 0x8C29
#endif

#ifndef GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB
#define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB 0x8C29
#endif

#ifndef GL_GEOMETRY_PROGRAM_NV
#define GL_GEOMETRY_PROGRAM_NV 0x8C26
#endif

#ifndef GL_MAX_PROGRAM_OUTPUT_VERTICES_NV
#define GL_MAX_PROGRAM_OUTPUT_VERTICES_NV 0x8C27
#endif

#ifndef GL_MAX_PROGRAM_TOTAL_OUTPUT_COMPONENTS_NV
#define GL_MAX_PROGRAM_TOTAL_OUTPUT_COMPONENTS_NV 0x8C28
#endif

#ifndef GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT
#define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT 0x8C29
#endif

#ifndef GL_TEXTURE_BUFFER
#define GL_TEXTURE_BUFFER 0x8C2A
#endif

#ifndef GL_MAX_TEXTURE_BUFFER_SIZE
#define GL_MAX_TEXTURE_BUFFER_SIZE 0x8C2B
#endif

#ifndef GL_TEXTURE_BINDING_BUFFER
#define GL_TEXTURE_BINDING_BUFFER 0x8C2C
#endif

#ifndef GL_TEXTURE_BUFFER_DATA_STORE_BINDING
#define GL_TEXTURE_BUFFER_DATA_STORE_BINDING 0x8C2D
#endif

#ifndef GL_TEXTURE_BUFFER_ARB
#define GL_TEXTURE_BUFFER_ARB 0x8C2A
#endif

#ifndef GL_MAX_TEXTURE_BUFFER_SIZE_ARB
#define GL_MAX_TEXTURE_BUFFER_SIZE_ARB 0x8C2B
#endif

#ifndef GL_TEXTURE_BINDING_BUFFER_ARB
#define GL_TEXTURE_BINDING_BUFFER_ARB 0x8C2C
#endif

#ifndef GL_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB
#define GL_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB 0x8C2D
#endif

#ifndef GL_TEXTURE_BUFFER_FORMAT_ARB
#define GL_TEXTURE_BUFFER_FORMAT_ARB 0x8C2E
#endif

#ifndef GL_TEXTURE_BUFFER_EXT
#define GL_TEXTURE_BUFFER_EXT 0x8C2A
#endif

#ifndef GL_MAX_TEXTURE_BUFFER_SIZE_EXT
#define GL_MAX_TEXTURE_BUFFER_SIZE_EXT 0x8C2B
#endif

#ifndef GL_TEXTURE_BINDING_BUFFER_EXT
#define GL_TEXTURE_BINDING_BUFFER_EXT 0x8C2C
#endif

#ifndef GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT
#define GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT 0x8C2D
#endif

#ifndef GL_TEXTURE_BUFFER_FORMAT_EXT
#define GL_TEXTURE_BUFFER_FORMAT_EXT 0x8C2E
#endif

#ifndef GL_ANY_SAMPLES_PASSED
#define GL_ANY_SAMPLES_PASSED 0x8C2F
#endif

#ifndef GL_ANY_SAMPLES_PASSED_EXT
#define GL_ANY_SAMPLES_PASSED_EXT 0x8C2F
#endif

#ifndef GL_SAMPLE_SHADING_ARB
#define GL_SAMPLE_SHADING_ARB 0x8C36
#endif

#ifndef GL_MIN_SAMPLE_SHADING_VALUE_ARB
#define GL_MIN_SAMPLE_SHADING_VALUE_ARB 0x8C37
#endif

#ifndef GL_R11F_G11F_B10F
#define GL_R11F_G11F_B10F 0x8C3A
#endif

#ifndef GL_UNSIGNED_INT_10F_11F_11F_REV
#define GL_UNSIGNED_INT_10F_11F_11F_REV 0x8C3B
#endif

#ifndef GL_R11F_G11F_B10F_EXT
#define GL_R11F_G11F_B10F_EXT 0x8C3A
#endif

#ifndef GL_UNSIGNED_INT_10F_11F_11F_REV_EXT
#define GL_UNSIGNED_INT_10F_11F_11F_REV_EXT 0x8C3B
#endif

#ifndef GL_RGBA_SIGNED_COMPONENTS_EXT
#define GL_RGBA_SIGNED_COMPONENTS_EXT 0x8C3C
#endif

#ifndef GL_RGB9_E5
#define GL_RGB9_E5 0x8C3D
#endif

#ifndef GL_UNSIGNED_INT_5_9_9_9_REV
#define GL_UNSIGNED_INT_5_9_9_9_REV 0x8C3E
#endif

#ifndef GL_TEXTURE_SHARED_SIZE
#define GL_TEXTURE_SHARED_SIZE 0x8C3F
#endif

#ifndef GL_RGB9_E5_EXT
#define GL_RGB9_E5_EXT 0x8C3D
#endif

#ifndef GL_UNSIGNED_INT_5_9_9_9_REV_EXT
#define GL_UNSIGNED_INT_5_9_9_9_REV_EXT 0x8C3E
#endif

#ifndef GL_TEXTURE_SHARED_SIZE_EXT
#define GL_TEXTURE_SHARED_SIZE_EXT 0x8C3F
#endif

#ifndef GL_SRGB
#define GL_SRGB 0x8C40
#endif

#ifndef GL_SRGB8
#define GL_SRGB8 0x8C41
#endif

#ifndef GL_SRGB_ALPHA
#define GL_SRGB_ALPHA 0x8C42
#endif

#ifndef GL_SRGB8_ALPHA8
#define GL_SRGB8_ALPHA8 0x8C43
#endif

#ifndef GL_SLUMINANCE_ALPHA
#define GL_SLUMINANCE_ALPHA 0x8C44
#endif

#ifndef GL_SLUMINANCE8_ALPHA8
#define GL_SLUMINANCE8_ALPHA8 0x8C45
#endif

#ifndef GL_SLUMINANCE
#define GL_SLUMINANCE 0x8C46
#endif

#ifndef GL_SLUMINANCE8
#define GL_SLUMINANCE8 0x8C47
#endif

#ifndef GL_COMPRESSED_SRGB
#define GL_COMPRESSED_SRGB 0x8C48
#endif

#ifndef GL_COMPRESSED_SRGB_ALPHA
#define GL_COMPRESSED_SRGB_ALPHA 0x8C49
#endif

#ifndef GL_COMPRESSED_SLUMINANCE
#define GL_COMPRESSED_SLUMINANCE 0x8C4A
#endif

#ifndef GL_COMPRESSED_SLUMINANCE_ALPHA
#define GL_COMPRESSED_SLUMINANCE_ALPHA 0x8C4B
#endif

#ifndef GL_SRGB_EXT
#define GL_SRGB_EXT 0x8C40
#endif

#ifndef GL_SRGB8_EXT
#define GL_SRGB8_EXT 0x8C41
#endif

#ifndef GL_SRGB_ALPHA_EXT
#define GL_SRGB_ALPHA_EXT 0x8C42
#endif

#ifndef GL_SRGB8_ALPHA8_EXT
#define GL_SRGB8_ALPHA8_EXT 0x8C43
#endif

#ifndef GL_SLUMINANCE_ALPHA_EXT
#define GL_SLUMINANCE_ALPHA_EXT 0x8C44
#endif

#ifndef GL_SLUMINANCE8_ALPHA8_EXT
#define GL_SLUMINANCE8_ALPHA8_EXT 0x8C45
#endif

#ifndef GL_SLUMINANCE_EXT
#define GL_SLUMINANCE_EXT 0x8C46
#endif

#ifndef GL_SLUMINANCE8_EXT
#define GL_SLUMINANCE8_EXT 0x8C47
#endif

#ifndef GL_COMPRESSED_SRGB_EXT
#define GL_COMPRESSED_SRGB_EXT 0x8C48
#endif

#ifndef GL_COMPRESSED_SRGB_ALPHA_EXT
#define GL_COMPRESSED_SRGB_ALPHA_EXT 0x8C49
#endif

#ifndef GL_COMPRESSED_SLUMINANCE_EXT
#define GL_COMPRESSED_SLUMINANCE_EXT 0x8C4A
#endif

#ifndef GL_COMPRESSED_SLUMINANCE_ALPHA_EXT
#define GL_COMPRESSED_SLUMINANCE_ALPHA_EXT 0x8C4B
#endif

#ifndef GL_COMPRESSED_SRGB_S3TC_DXT1_EXT
#define GL_COMPRESSED_SRGB_S3TC_DXT1_EXT 0x8C4C
#endif

#ifndef GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT
#define GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT 0x8C4D
#endif

#ifndef GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT
#define GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT 0x8C4E
#endif

#ifndef GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT
#define GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT 0x8C4F
#endif

#ifndef GL_COMPRESSED_LUMINANCE_LATC1_EXT
#define GL_COMPRESSED_LUMINANCE_LATC1_EXT 0x8C70
#endif

#ifndef GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT
#define GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT 0x8C71
#endif

#ifndef GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT
#define GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT 0x8C72
#endif

#ifndef GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT
#define GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT 0x8C73
#endif

#ifndef GL_TESS_CONTROL_PROGRAM_PARAMETER_BUFFER_NV
#define GL_TESS_CONTROL_PROGRAM_PARAMETER_BUFFER_NV 0x8C74
#endif

#ifndef GL_TESS_EVALUATION_PROGRAM_PARAMETER_BUFFER_NV
#define GL_TESS_EVALUATION_PROGRAM_PARAMETER_BUFFER_NV 0x8C75
#endif

#ifndef GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH
#define GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH 0x8C76
#endif

#ifndef GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT
#define GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT 0x8C76
#endif

#ifndef GL_BACK_PRIMARY_COLOR_NV
#define GL_BACK_PRIMARY_COLOR_NV 0x8C77
#endif

#ifndef GL_BACK_SECONDARY_COLOR_NV
#define GL_BACK_SECONDARY_COLOR_NV 0x8C78
#endif

#ifndef GL_TEXTURE_COORD_NV
#define GL_TEXTURE_COORD_NV 0x8C79
#endif

#ifndef GL_CLIP_DISTANCE_NV
#define GL_CLIP_DISTANCE_NV 0x8C7A
#endif

#ifndef GL_VERTEX_ID_NV
#define GL_VERTEX_ID_NV 0x8C7B
#endif

#ifndef GL_PRIMITIVE_ID_NV
#define GL_PRIMITIVE_ID_NV 0x8C7C
#endif

#ifndef GL_GENERIC_ATTRIB_NV
#define GL_GENERIC_ATTRIB_NV 0x8C7D
#endif

#ifndef GL_TRANSFORM_FEEDBACK_ATTRIBS_NV
#define GL_TRANSFORM_FEEDBACK_ATTRIBS_NV 0x8C7E
#endif

#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_MODE
#define GL_TRANSFORM_FEEDBACK_BUFFER_MODE 0x8C7F
#endif

#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_MODE_EXT
#define GL_TRANSFORM_FEEDBACK_BUFFER_MODE_EXT 0x8C7F
#endif

#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV
#define GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV 0x8C7F
#endif

#ifndef GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS 0x8C80
#endif

#ifndef GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT 0x8C80
#endif

#ifndef GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV 0x8C80
#endif

#ifndef GL_ACTIVE_VARYINGS_NV
#define GL_ACTIVE_VARYINGS_NV 0x8C81
#endif

#ifndef GL_ACTIVE_VARYING_MAX_LENGTH_NV
#define GL_ACTIVE_VARYING_MAX_LENGTH_NV 0x8C82
#endif

#ifndef GL_TRANSFORM_FEEDBACK_VARYINGS
#define GL_TRANSFORM_FEEDBACK_VARYINGS 0x8C83
#endif

#ifndef GL_TRANSFORM_FEEDBACK_VARYINGS_EXT
#define GL_TRANSFORM_FEEDBACK_VARYINGS_EXT 0x8C83
#endif

#ifndef GL_TRANSFORM_FEEDBACK_VARYINGS_NV
#define GL_TRANSFORM_FEEDBACK_VARYINGS_NV 0x8C83
#endif

#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_START
#define GL_TRANSFORM_FEEDBACK_BUFFER_START 0x8C84
#endif

#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_START_EXT
#define GL_TRANSFORM_FEEDBACK_BUFFER_START_EXT 0x8C84
#endif

#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_START_NV
#define GL_TRANSFORM_FEEDBACK_BUFFER_START_NV 0x8C84
#endif

#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_SIZE
#define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE 0x8C85
#endif

#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT
#define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT 0x8C85
#endif

#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV
#define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV 0x8C85
#endif

#ifndef GL_TRANSFORM_FEEDBACK_RECORD_NV
#define GL_TRANSFORM_FEEDBACK_RECORD_NV 0x8C86
#endif

#ifndef GL_PRIMITIVES_GENERATED
#define GL_PRIMITIVES_GENERATED 0x8C87
#endif

#ifndef GL_PRIMITIVES_GENERATED_EXT
#define GL_PRIMITIVES_GENERATED_EXT 0x8C87
#endif

#ifndef GL_PRIMITIVES_GENERATED_NV
#define GL_PRIMITIVES_GENERATED_NV 0x8C87
#endif

#ifndef GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN
#define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN 0x8C88
#endif

#ifndef GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT
#define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT 0x8C88
#endif

#ifndef GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV
#define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV 0x8C88
#endif

#ifndef GL_RASTERIZER_DISCARD
#define GL_RASTERIZER_DISCARD 0x8C89
#endif

#ifndef GL_RASTERIZER_DISCARD_EXT
#define GL_RASTERIZER_DISCARD_EXT 0x8C89
#endif

#ifndef GL_RASTERIZER_DISCARD_NV
#define GL_RASTERIZER_DISCARD_NV 0x8C89
#endif

#ifndef GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS
#define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS 0x8C8A
#endif

#ifndef GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT
#define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT 0x8C8A
#endif

#ifndef GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV
#define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV 0x8C8A
#endif

#ifndef GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS 0x8C8B
#endif

#ifndef GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT 0x8C8B
#endif

#ifndef GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV 0x8C8B
#endif

#ifndef GL_INTERLEAVED_ATTRIBS
#define GL_INTERLEAVED_ATTRIBS 0x8C8C
#endif

#ifndef GL_INTERLEAVED_ATTRIBS_EXT
#define GL_INTERLEAVED_ATTRIBS_EXT 0x8C8C
#endif

#ifndef GL_INTERLEAVED_ATTRIBS_NV
#define GL_INTERLEAVED_ATTRIBS_NV 0x8C8C
#endif

#ifndef GL_SEPARATE_ATTRIBS
#define GL_SEPARATE_ATTRIBS 0x8C8D
#endif

#ifndef GL_SEPARATE_ATTRIBS_EXT
#define GL_SEPARATE_ATTRIBS_EXT 0x8C8D
#endif

#ifndef GL_SEPARATE_ATTRIBS_NV
#define GL_SEPARATE_ATTRIBS_NV 0x8C8D
#endif

#ifndef GL_TRANSFORM_FEEDBACK_BUFFER
#define GL_TRANSFORM_FEEDBACK_BUFFER 0x8C8E
#endif

#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_EXT
#define GL_TRANSFORM_FEEDBACK_BUFFER_EXT 0x8C8E
#endif

#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_NV
#define GL_TRANSFORM_FEEDBACK_BUFFER_NV 0x8C8E
#endif

#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_BINDING
#define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING 0x8C8F
#endif

#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT
#define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT 0x8C8F
#endif

#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV
#define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV 0x8C8F
#endif

#ifndef GL_ATC_RGB_AMD
#define GL_ATC_RGB_AMD 0x8C92
#endif

#ifndef GL_ATC_RGBA_EXPLICIT_ALPHA_AMD
#define GL_ATC_RGBA_EXPLICIT_ALPHA_AMD 0x8C93
#endif

#ifndef GL_POINT_SPRITE_COORD_ORIGIN
#define GL_POINT_SPRITE_COORD_ORIGIN 0x8CA0
#endif

#ifndef GL_LOWER_LEFT
#define GL_LOWER_LEFT 0x8CA1
#endif

#ifndef GL_UPPER_LEFT
#define GL_UPPER_LEFT 0x8CA2
#endif

#ifndef GL_STENCIL_BACK_REF
#define GL_STENCIL_BACK_REF 0x8CA3
#endif

#ifndef GL_STENCIL_BACK_VALUE_MASK
#define GL_STENCIL_BACK_VALUE_MASK 0x8CA4
#endif

#ifndef GL_STENCIL_BACK_WRITEMASK
#define GL_STENCIL_BACK_WRITEMASK 0x8CA5
#endif

#ifndef GL_FRAMEBUFFER_BINDING
#define GL_FRAMEBUFFER_BINDING 0x8CA6
#endif

#ifndef GL_DRAW_FRAMEBUFFER_BINDING
#define GL_DRAW_FRAMEBUFFER_BINDING 0x8CA6
#endif

#ifndef GL_RENDERBUFFER_BINDING
#define GL_RENDERBUFFER_BINDING 0x8CA7
#endif

#ifndef GL_FRAMEBUFFER_BINDING_EXT
#define GL_FRAMEBUFFER_BINDING_EXT 0x8CA6
#endif

#ifndef GL_RENDERBUFFER_BINDING_EXT
#define GL_RENDERBUFFER_BINDING_EXT 0x8CA7
#endif

#ifndef GL_DRAW_FRAMEBUFFER_BINDING_EXT
#define GL_DRAW_FRAMEBUFFER_BINDING_EXT 0x8CA6
#endif

#ifndef GL_FRAMEBUFFER_BINDING_OES
#define GL_FRAMEBUFFER_BINDING_OES 0x8CA6
#endif

#ifndef GL_RENDERBUFFER_BINDING_OES
#define GL_RENDERBUFFER_BINDING_OES 0x8CA7
#endif

#ifndef GL_FRAMEBUFFER_BINDING_ANGLE
#define GL_FRAMEBUFFER_BINDING_ANGLE 0x8CA6
#endif

#ifndef GL_RENDERBUFFER_BINDING_ANGLE
#define GL_RENDERBUFFER_BINDING_ANGLE 0x8CA7
#endif

#ifndef GL_READ_FRAMEBUFFER
#define GL_READ_FRAMEBUFFER 0x8CA8
#endif

#ifndef GL_DRAW_FRAMEBUFFER
#define GL_DRAW_FRAMEBUFFER 0x8CA9
#endif

#ifndef GL_READ_FRAMEBUFFER_BINDING
#define GL_READ_FRAMEBUFFER_BINDING 0x8CAA
#endif

#ifndef GL_READ_FRAMEBUFFER_ANGLE
#define GL_READ_FRAMEBUFFER_ANGLE 0x8CA8
#endif

#ifndef GL_DRAW_FRAMEBUFFER_ANGLE
#define GL_DRAW_FRAMEBUFFER_ANGLE 0x8CA9
#endif

#ifndef GL_READ_FRAMEBUFFER_EXT
#define GL_READ_FRAMEBUFFER_EXT 0x8CA8
#endif

#ifndef GL_DRAW_FRAMEBUFFER_EXT
#define GL_DRAW_FRAMEBUFFER_EXT 0x8CA9
#endif

#ifndef GL_DRAW_FRAMEBUFFER_BINDING_EXT
#define GL_DRAW_FRAMEBUFFER_BINDING_EXT 0x8CA6
#endif

#ifndef GL_READ_FRAMEBUFFER_BINDING_EXT
#define GL_READ_FRAMEBUFFER_BINDING_EXT 0x8CAA
#endif

#ifndef GL_RENDERBUFFER_SAMPLES
#define GL_RENDERBUFFER_SAMPLES 0x8CAB
#endif

#ifndef GL_RENDERBUFFER_SAMPLES_ANGLE
#define GL_RENDERBUFFER_SAMPLES_ANGLE 0x8CAB
#endif

#ifndef GL_RENDERBUFFER_SAMPLES_EXT
#define GL_RENDERBUFFER_SAMPLES_EXT 0x8CAB
#endif

#ifndef GL_RENDERBUFFER_COVERAGE_SAMPLES_NV
#define GL_RENDERBUFFER_COVERAGE_SAMPLES_NV 0x8CAB
#endif

#ifndef GL_DEPTH_COMPONENT32F
#define GL_DEPTH_COMPONENT32F 0x8CAC
#endif

#ifndef GL_DEPTH32F_STENCIL8
#define GL_DEPTH32F_STENCIL8 0x8CAD
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE
#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE 0x8CD0
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT
#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT 0x8CD0
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME
#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME 0x8CD1
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT
#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT 0x8CD1
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL 0x8CD2
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT 0x8CD2
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE 0x8CD3
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT 0x8CD3
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER 0x8CD4
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT 0x8CD4
#endif

#ifndef GL_FRAMEBUFFER_COMPLETE
#define GL_FRAMEBUFFER_COMPLETE 0x8CD5
#endif

#ifndef GL_FRAMEBUFFER_COMPLETE_EXT
#define GL_FRAMEBUFFER_COMPLETE_EXT 0x8CD5
#endif

#ifndef GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT
#define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT 0x8CD6
#endif

#ifndef GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT
#define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT 0x8CD6
#endif

#ifndef GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT
#define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT 0x8CD7
#endif

#ifndef GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT
#define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT 0x8CD7
#endif

#ifndef GL_COLOR_ATTACHMENT0_NV
#define GL_COLOR_ATTACHMENT0_NV 0x8CE0
#endif

#ifndef GL_COLOR_ATTACHMENT1_NV
#define GL_COLOR_ATTACHMENT1_NV 0x8CE1
#endif

#ifndef GL_COLOR_ATTACHMENT2_NV
#define GL_COLOR_ATTACHMENT2_NV 0x8CE2
#endif

#ifndef GL_COLOR_ATTACHMENT3_NV
#define GL_COLOR_ATTACHMENT3_NV 0x8CE3
#endif

#ifndef GL_COLOR_ATTACHMENT4_NV
#define GL_COLOR_ATTACHMENT4_NV 0x8CE4
#endif

#ifndef GL_COLOR_ATTACHMENT5_NV
#define GL_COLOR_ATTACHMENT5_NV 0x8CE5
#endif

#ifndef GL_COLOR_ATTACHMENT6_NV
#define GL_COLOR_ATTACHMENT6_NV 0x8CE6
#endif

#ifndef GL_COLOR_ATTACHMENT7_NV
#define GL_COLOR_ATTACHMENT7_NV 0x8CE7
#endif

#ifndef GL_COLOR_ATTACHMENT8_NV
#define GL_COLOR_ATTACHMENT8_NV 0x8CE8
#endif

#ifndef GL_COLOR_ATTACHMENT9_NV
#define GL_COLOR_ATTACHMENT9_NV 0x8CE9
#endif

#ifndef GL_COLOR_ATTACHMENT10_NV
#define GL_COLOR_ATTACHMENT10_NV 0x8CEA
#endif

#ifndef GL_COLOR_ATTACHMENT11_NV
#define GL_COLOR_ATTACHMENT11_NV 0x8CEB
#endif

#ifndef GL_COLOR_ATTACHMENT12_NV
#define GL_COLOR_ATTACHMENT12_NV 0x8CEC
#endif

#ifndef GL_COLOR_ATTACHMENT13_NV
#define GL_COLOR_ATTACHMENT13_NV 0x8CED
#endif

#ifndef GL_COLOR_ATTACHMENT14_NV
#define GL_COLOR_ATTACHMENT14_NV 0x8CEE
#endif

#ifndef GL_COLOR_ATTACHMENT15_NV
#define GL_COLOR_ATTACHMENT15_NV 0x8CEF
#endif

#ifndef GL_MAX_COLOR_ATTACHMENTS_NV
#define GL_MAX_COLOR_ATTACHMENTS_NV 0x8CDF
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_OES
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_OES 0x8CD4
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_OES
#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_OES 0x8CD0
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_OES
#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_OES 0x8CD1
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_OES
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_OES 0x8CD2
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_OES
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_OES 0x8CD3
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_OES
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_OES 0x8CD4
#endif

#ifndef GL_FRAMEBUFFER_COMPLETE_OES
#define GL_FRAMEBUFFER_COMPLETE_OES 0x8CD5
#endif

#ifndef GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_OES
#define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_OES 0x8CD6
#endif

#ifndef GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_OES
#define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_OES 0x8CD7
#endif

#ifndef GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_OES
#define GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_OES 0x8CD9
#endif

#ifndef GL_FRAMEBUFFER_INCOMPLETE_FORMATS_OES
#define GL_FRAMEBUFFER_INCOMPLETE_FORMATS_OES 0x8CDA
#endif

#ifndef GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_OES
#define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_OES 0x8CDB
#endif

#ifndef GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_OES
#define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_OES 0x8CDC
#endif

#ifndef GL_FRAMEBUFFER_UNSUPPORTED_OES
#define GL_FRAMEBUFFER_UNSUPPORTED_OES 0x8CDD
#endif

#ifndef GL_COLOR_ATTACHMENT0_OES
#define GL_COLOR_ATTACHMENT0_OES 0x8CE0
#endif

#ifndef GL_DEPTH_ATTACHMENT_OES
#define GL_DEPTH_ATTACHMENT_OES 0x8D00
#endif

#ifndef GL_STENCIL_ATTACHMENT_OES
#define GL_STENCIL_ATTACHMENT_OES 0x8D20
#endif

#ifndef GL_FRAMEBUFFER_OES
#define GL_FRAMEBUFFER_OES 0x8D40
#endif

#ifndef GL_RENDERBUFFER_OES
#define GL_RENDERBUFFER_OES 0x8D41
#endif

#ifndef GL_RENDERBUFFER_WIDTH_OES
#define GL_RENDERBUFFER_WIDTH_OES 0x8D42
#endif

#ifndef GL_RENDERBUFFER_HEIGHT_OES
#define GL_RENDERBUFFER_HEIGHT_OES 0x8D43
#endif

#ifndef GL_RENDERBUFFER_INTERNAL_FORMAT_OES
#define GL_RENDERBUFFER_INTERNAL_FORMAT_OES 0x8D44
#endif

#ifndef GL_STENCIL_INDEX1_OES
#define GL_STENCIL_INDEX1_OES 0x8D46
#endif

#ifndef GL_STENCIL_INDEX4_OES
#define GL_STENCIL_INDEX4_OES 0x8D47
#endif

#ifndef GL_STENCIL_INDEX8_OES
#define GL_STENCIL_INDEX8_OES 0x8D48
#endif

#ifndef GL_RENDERBUFFER_RED_SIZE_OES
#define GL_RENDERBUFFER_RED_SIZE_OES 0x8D50
#endif

#ifndef GL_RENDERBUFFER_GREEN_SIZE_OES
#define GL_RENDERBUFFER_GREEN_SIZE_OES 0x8D51
#endif

#ifndef GL_RENDERBUFFER_BLUE_SIZE_OES
#define GL_RENDERBUFFER_BLUE_SIZE_OES 0x8D52
#endif

#ifndef GL_RENDERBUFFER_ALPHA_SIZE_OES
#define GL_RENDERBUFFER_ALPHA_SIZE_OES 0x8D53
#endif

#ifndef GL_RENDERBUFFER_DEPTH_SIZE_OES
#define GL_RENDERBUFFER_DEPTH_SIZE_OES 0x8D54
#endif

#ifndef GL_RENDERBUFFER_STENCIL_SIZE_OES
#define GL_RENDERBUFFER_STENCIL_SIZE_OES 0x8D55
#endif

#ifndef GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_ANGLE
#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_ANGLE 0x8D56
#endif

#ifndef GL_MAX_SAMPLES_ANGLE
#define GL_MAX_SAMPLES_ANGLE 0x8D57
#endif

#ifndef GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT
#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT 0x8D56
#endif

#ifndef GL_MAX_SAMPLES_EXT
#define GL_MAX_SAMPLES_EXT 0x8D57
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT 0x8CD4
#endif

#ifndef GL_TEXTURE_GEN_STR_OES
#define GL_TEXTURE_GEN_STR_OES 0x8D60
#endif

#ifndef GL_HALF_FLOAT_OES
#define GL_HALF_FLOAT_OES 0x8D61
#endif

#ifndef GL_RGB565_OES
#define GL_RGB565_OES 0x8D62
#endif

#ifndef GL_ETC1_RGB8_OES
#define GL_ETC1_RGB8_OES 0x8D64
#endif

#ifndef GL_TEXTURE_EXTERNAL_OES
#define GL_TEXTURE_EXTERNAL_OES 0x8D65
#endif

#ifndef GL_SAMPLER_EXTERNAL_OES
#define GL_SAMPLER_EXTERNAL_OES 0x8D66
#endif

#ifndef GL_TEXTURE_BINDING_EXTERNAL_OES
#define GL_TEXTURE_BINDING_EXTERNAL_OES 0x8D67
#endif

#ifndef GL_REQUIRED_TEXTURE_IMAGE_UNITS_OES
#define GL_REQUIRED_TEXTURE_IMAGE_UNITS_OES 0x8D68
#endif

#ifndef GL_PRIMITIVE_RESTART_FIXED_INDEX
#define GL_PRIMITIVE_RESTART_FIXED_INDEX 0x8D69
#endif

#ifndef GL_ANY_SAMPLES_PASSED_CONSERVATIVE
#define GL_ANY_SAMPLES_PASSED_CONSERVATIVE 0x8D6A
#endif

#ifndef GL_MAX_ELEMENT_INDEX
#define GL_MAX_ELEMENT_INDEX 0x8D6B
#endif

#ifndef GL_ANY_SAMPLES_PASSED_CONSERVATIVE_EXT
#define GL_ANY_SAMPLES_PASSED_CONSERVATIVE_EXT 0x8D6A
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_SAMPLES_EXT
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_SAMPLES_EXT 0x8D6C
#endif

#ifndef GL_RGBA32UI
#define GL_RGBA32UI 0x8D70
#endif

#ifndef GL_RGBA32UI_EXT
#define GL_RGBA32UI_EXT 0x8D70
#endif

#ifndef GL_RGB32UI
#define GL_RGB32UI 0x8D71
#endif

#ifndef GL_RGB32UI_EXT
#define GL_RGB32UI_EXT 0x8D71
#endif

#ifndef GL_ALPHA32UI_EXT
#define GL_ALPHA32UI_EXT 0x8D72
#endif

#ifndef GL_INTENSITY32UI_EXT
#define GL_INTENSITY32UI_EXT 0x8D73
#endif

#ifndef GL_LUMINANCE32UI_EXT
#define GL_LUMINANCE32UI_EXT 0x8D74
#endif

#ifndef GL_LUMINANCE_ALPHA32UI_EXT
#define GL_LUMINANCE_ALPHA32UI_EXT 0x8D75
#endif

#ifndef GL_RGBA16UI
#define GL_RGBA16UI 0x8D76
#endif

#ifndef GL_RGBA16UI_EXT
#define GL_RGBA16UI_EXT 0x8D76
#endif

#ifndef GL_RGB16UI
#define GL_RGB16UI 0x8D77
#endif

#ifndef GL_RGB16UI_EXT
#define GL_RGB16UI_EXT 0x8D77
#endif

#ifndef GL_ALPHA16UI_EXT
#define GL_ALPHA16UI_EXT 0x8D78
#endif

#ifndef GL_INTENSITY16UI_EXT
#define GL_INTENSITY16UI_EXT 0x8D79
#endif

#ifndef GL_LUMINANCE16UI_EXT
#define GL_LUMINANCE16UI_EXT 0x8D7A
#endif

#ifndef GL_LUMINANCE_ALPHA16UI_EXT
#define GL_LUMINANCE_ALPHA16UI_EXT 0x8D7B
#endif

#ifndef GL_RGBA8UI
#define GL_RGBA8UI 0x8D7C
#endif

#ifndef GL_RGBA8UI_EXT
#define GL_RGBA8UI_EXT 0x8D7C
#endif

#ifndef GL_RGB8UI
#define GL_RGB8UI 0x8D7D
#endif

#ifndef GL_RGB8UI_EXT
#define GL_RGB8UI_EXT 0x8D7D
#endif

#ifndef GL_ALPHA8UI_EXT
#define GL_ALPHA8UI_EXT 0x8D7E
#endif

#ifndef GL_INTENSITY8UI_EXT
#define GL_INTENSITY8UI_EXT 0x8D7F
#endif

#ifndef GL_LUMINANCE8UI_EXT
#define GL_LUMINANCE8UI_EXT 0x8D80
#endif

#ifndef GL_LUMINANCE_ALPHA8UI_EXT
#define GL_LUMINANCE_ALPHA8UI_EXT 0x8D81
#endif

#ifndef GL_RGBA32I
#define GL_RGBA32I 0x8D82
#endif

#ifndef GL_RGBA32I_EXT
#define GL_RGBA32I_EXT 0x8D82
#endif

#ifndef GL_RGB32I
#define GL_RGB32I 0x8D83
#endif

#ifndef GL_RGB32I_EXT
#define GL_RGB32I_EXT 0x8D83
#endif

#ifndef GL_ALPHA32I_EXT
#define GL_ALPHA32I_EXT 0x8D84
#endif

#ifndef GL_INTENSITY32I_EXT
#define GL_INTENSITY32I_EXT 0x8D85
#endif

#ifndef GL_LUMINANCE32I_EXT
#define GL_LUMINANCE32I_EXT 0x8D86
#endif

#ifndef GL_LUMINANCE_ALPHA32I_EXT
#define GL_LUMINANCE_ALPHA32I_EXT 0x8D87
#endif

#ifndef GL_RGBA16I
#define GL_RGBA16I 0x8D88
#endif

#ifndef GL_RGBA16I_EXT
#define GL_RGBA16I_EXT 0x8D88
#endif

#ifndef GL_RGB16I
#define GL_RGB16I 0x8D89
#endif

#ifndef GL_RGB16I_EXT
#define GL_RGB16I_EXT 0x8D89
#endif

#ifndef GL_ALPHA16I_EXT
#define GL_ALPHA16I_EXT 0x8D8A
#endif

#ifndef GL_INTENSITY16I_EXT
#define GL_INTENSITY16I_EXT 0x8D8B
#endif

#ifndef GL_LUMINANCE16I_EXT
#define GL_LUMINANCE16I_EXT 0x8D8C
#endif

#ifndef GL_LUMINANCE_ALPHA16I_EXT
#define GL_LUMINANCE_ALPHA16I_EXT 0x8D8D
#endif

#ifndef GL_RGBA8I
#define GL_RGBA8I 0x8D8E
#endif

#ifndef GL_RGBA8I_EXT
#define GL_RGBA8I_EXT 0x8D8E
#endif

#ifndef GL_RGB8I
#define GL_RGB8I 0x8D8F
#endif

#ifndef GL_RGB8I_EXT
#define GL_RGB8I_EXT 0x8D8F
#endif

#ifndef GL_ALPHA8I_EXT
#define GL_ALPHA8I_EXT 0x8D90
#endif

#ifndef GL_INTENSITY8I_EXT
#define GL_INTENSITY8I_EXT 0x8D91
#endif

#ifndef GL_LUMINANCE8I_EXT
#define GL_LUMINANCE8I_EXT 0x8D92
#endif

#ifndef GL_LUMINANCE_ALPHA8I_EXT
#define GL_LUMINANCE_ALPHA8I_EXT 0x8D93
#endif

#ifndef GL_RED_INTEGER
#define GL_RED_INTEGER 0x8D94
#endif

#ifndef GL_RED_INTEGER_EXT
#define GL_RED_INTEGER_EXT 0x8D94
#endif

#ifndef GL_GREEN_INTEGER
#define GL_GREEN_INTEGER 0x8D95
#endif

#ifndef GL_GREEN_INTEGER_EXT
#define GL_GREEN_INTEGER_EXT 0x8D95
#endif

#ifndef GL_BLUE_INTEGER
#define GL_BLUE_INTEGER 0x8D96
#endif

#ifndef GL_BLUE_INTEGER_EXT
#define GL_BLUE_INTEGER_EXT 0x8D96
#endif

#ifndef GL_ALPHA_INTEGER
#define GL_ALPHA_INTEGER 0x8D97
#endif

#ifndef GL_ALPHA_INTEGER_EXT
#define GL_ALPHA_INTEGER_EXT 0x8D97
#endif

#ifndef GL_RGB_INTEGER
#define GL_RGB_INTEGER 0x8D98
#endif

#ifndef GL_RGB_INTEGER_EXT
#define GL_RGB_INTEGER_EXT 0x8D98
#endif

#ifndef GL_RGBA_INTEGER
#define GL_RGBA_INTEGER 0x8D99
#endif

#ifndef GL_RGBA_INTEGER_EXT
#define GL_RGBA_INTEGER_EXT 0x8D99
#endif

#ifndef GL_BGR_INTEGER
#define GL_BGR_INTEGER 0x8D9A
#endif

#ifndef GL_BGR_INTEGER_EXT
#define GL_BGR_INTEGER_EXT 0x8D9A
#endif

#ifndef GL_BGRA_INTEGER
#define GL_BGRA_INTEGER 0x8D9B
#endif

#ifndef GL_BGRA_INTEGER_EXT
#define GL_BGRA_INTEGER_EXT 0x8D9B
#endif

#ifndef GL_LUMINANCE_INTEGER_EXT
#define GL_LUMINANCE_INTEGER_EXT 0x8D9C
#endif

#ifndef GL_LUMINANCE_ALPHA_INTEGER_EXT
#define GL_LUMINANCE_ALPHA_INTEGER_EXT 0x8D9D
#endif

#ifndef GL_RGBA_INTEGER_MODE_EXT
#define GL_RGBA_INTEGER_MODE_EXT 0x8D9E
#endif

#ifndef GL_INT_2_10_10_10_REV
#define GL_INT_2_10_10_10_REV 0x8D9F
#endif

#ifndef GL_MAX_PROGRAM_PARAMETER_BUFFER_BINDINGS_NV
#define GL_MAX_PROGRAM_PARAMETER_BUFFER_BINDINGS_NV 0x8DA0
#endif

#ifndef GL_MAX_PROGRAM_PARAMETER_BUFFER_SIZE_NV
#define GL_MAX_PROGRAM_PARAMETER_BUFFER_SIZE_NV 0x8DA1
#endif

#ifndef GL_VERTEX_PROGRAM_PARAMETER_BUFFER_NV
#define GL_VERTEX_PROGRAM_PARAMETER_BUFFER_NV 0x8DA2
#endif

#ifndef GL_GEOMETRY_PROGRAM_PARAMETER_BUFFER_NV
#define GL_GEOMETRY_PROGRAM_PARAMETER_BUFFER_NV 0x8DA3
#endif

#ifndef GL_FRAGMENT_PROGRAM_PARAMETER_BUFFER_NV
#define GL_FRAGMENT_PROGRAM_PARAMETER_BUFFER_NV 0x8DA4
#endif

#ifndef GL_MAX_PROGRAM_GENERIC_ATTRIBS_NV
#define GL_MAX_PROGRAM_GENERIC_ATTRIBS_NV 0x8DA5
#endif

#ifndef GL_MAX_PROGRAM_GENERIC_RESULTS_NV
#define GL_MAX_PROGRAM_GENERIC_RESULTS_NV 0x8DA6
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_LAYERED
#define GL_FRAMEBUFFER_ATTACHMENT_LAYERED 0x8DA7
#endif

#ifndef GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS
#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS 0x8DA8
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB
#define GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB 0x8DA7
#endif

#ifndef GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB
#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB 0x8DA8
#endif

#ifndef GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB
#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB 0x8DA9
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT
#define GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT 0x8DA7
#endif

#ifndef GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT
#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT 0x8DA8
#endif

#ifndef GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT
#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT 0x8DA9
#endif

#ifndef GL_LAYER_NV
#define GL_LAYER_NV 0x8DAA
#endif

#ifndef GL_NEXT_BUFFER_NV
#define GL_NEXT_BUFFER_NV -2
#endif

#ifndef GL_SKIP_COMPONENTS4_NV
#define GL_SKIP_COMPONENTS4_NV -3
#endif

#ifndef GL_SKIP_COMPONENTS3_NV
#define GL_SKIP_COMPONENTS3_NV -4
#endif

#ifndef GL_SKIP_COMPONENTS2_NV
#define GL_SKIP_COMPONENTS2_NV -5
#endif

#ifndef GL_SKIP_COMPONENTS1_NV
#define GL_SKIP_COMPONENTS1_NV -6
#endif

#ifndef GL_FLOAT_32_UNSIGNED_INT_24_8_REV
#define GL_FLOAT_32_UNSIGNED_INT_24_8_REV 0x8DAD
#endif

#ifndef GL_DEPTH_COMPONENT32F_NV
#define GL_DEPTH_COMPONENT32F_NV 0x8DAB
#endif

#ifndef GL_DEPTH32F_STENCIL8_NV
#define GL_DEPTH32F_STENCIL8_NV 0x8DAC
#endif

#ifndef GL_FLOAT_32_UNSIGNED_INT_24_8_REV_NV
#define GL_FLOAT_32_UNSIGNED_INT_24_8_REV_NV 0x8DAD
#endif

#ifndef GL_DEPTH_BUFFER_FLOAT_MODE_NV
#define GL_DEPTH_BUFFER_FLOAT_MODE_NV 0x8DAF
#endif

#ifndef GL_SHADER_INCLUDE_ARB
#define GL_SHADER_INCLUDE_ARB 0x8DAE
#endif

#ifndef GL_FRAMEBUFFER_SRGB
#define GL_FRAMEBUFFER_SRGB 0x8DB9
#endif

#ifndef GL_FRAMEBUFFER_SRGB_EXT
#define GL_FRAMEBUFFER_SRGB_EXT 0x8DB9
#endif

#ifndef GL_FRAMEBUFFER_SRGB_CAPABLE_EXT
#define GL_FRAMEBUFFER_SRGB_CAPABLE_EXT 0x8DBA
#endif

#ifndef GL_COMPRESSED_RED_RGTC1
#define GL_COMPRESSED_RED_RGTC1 0x8DBB
#endif

#ifndef GL_COMPRESSED_SIGNED_RED_RGTC1
#define GL_COMPRESSED_SIGNED_RED_RGTC1 0x8DBC
#endif

#ifndef GL_COMPRESSED_RG_RGTC2
#define GL_COMPRESSED_RG_RGTC2 0x8DBD
#endif

#ifndef GL_COMPRESSED_SIGNED_RG_RGTC2
#define GL_COMPRESSED_SIGNED_RG_RGTC2 0x8DBE
#endif

#ifndef GL_COMPRESSED_RED_RGTC1_EXT
#define GL_COMPRESSED_RED_RGTC1_EXT 0x8DBB
#endif

#ifndef GL_COMPRESSED_SIGNED_RED_RGTC1_EXT
#define GL_COMPRESSED_SIGNED_RED_RGTC1_EXT 0x8DBC
#endif

#ifndef GL_COMPRESSED_RED_GREEN_RGTC2_EXT
#define GL_COMPRESSED_RED_GREEN_RGTC2_EXT 0x8DBD
#endif

#ifndef GL_COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT
#define GL_COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT 0x8DBE
#endif

#ifndef GL_SAMPLER_1D_ARRAY
#define GL_SAMPLER_1D_ARRAY 0x8DC0
#endif

#ifndef GL_SAMPLER_2D_ARRAY
#define GL_SAMPLER_2D_ARRAY 0x8DC1
#endif

#ifndef GL_SAMPLER_1D_ARRAY_SHADOW
#define GL_SAMPLER_1D_ARRAY_SHADOW 0x8DC3
#endif

#ifndef GL_SAMPLER_2D_ARRAY_SHADOW
#define GL_SAMPLER_2D_ARRAY_SHADOW 0x8DC4
#endif

#ifndef GL_SAMPLER_CUBE_SHADOW
#define GL_SAMPLER_CUBE_SHADOW 0x8DC5
#endif

#ifndef GL_UNSIGNED_INT_VEC2
#define GL_UNSIGNED_INT_VEC2 0x8DC6
#endif

#ifndef GL_UNSIGNED_INT_VEC3
#define GL_UNSIGNED_INT_VEC3 0x8DC7
#endif

#ifndef GL_UNSIGNED_INT_VEC4
#define GL_UNSIGNED_INT_VEC4 0x8DC8
#endif

#ifndef GL_INT_SAMPLER_1D
#define GL_INT_SAMPLER_1D 0x8DC9
#endif

#ifndef GL_INT_SAMPLER_2D
#define GL_INT_SAMPLER_2D 0x8DCA
#endif

#ifndef GL_INT_SAMPLER_3D
#define GL_INT_SAMPLER_3D 0x8DCB
#endif

#ifndef GL_INT_SAMPLER_CUBE
#define GL_INT_SAMPLER_CUBE 0x8DCC
#endif

#ifndef GL_INT_SAMPLER_1D_ARRAY
#define GL_INT_SAMPLER_1D_ARRAY 0x8DCE
#endif

#ifndef GL_INT_SAMPLER_2D_ARRAY
#define GL_INT_SAMPLER_2D_ARRAY 0x8DCF
#endif

#ifndef GL_UNSIGNED_INT_SAMPLER_1D
#define GL_UNSIGNED_INT_SAMPLER_1D 0x8DD1
#endif

#ifndef GL_UNSIGNED_INT_SAMPLER_2D
#define GL_UNSIGNED_INT_SAMPLER_2D 0x8DD2
#endif

#ifndef GL_UNSIGNED_INT_SAMPLER_3D
#define GL_UNSIGNED_INT_SAMPLER_3D 0x8DD3
#endif

#ifndef GL_UNSIGNED_INT_SAMPLER_CUBE
#define GL_UNSIGNED_INT_SAMPLER_CUBE 0x8DD4
#endif

#ifndef GL_UNSIGNED_INT_SAMPLER_1D_ARRAY
#define GL_UNSIGNED_INT_SAMPLER_1D_ARRAY 0x8DD6
#endif

#ifndef GL_UNSIGNED_INT_SAMPLER_2D_ARRAY
#define GL_UNSIGNED_INT_SAMPLER_2D_ARRAY 0x8DD7
#endif

#ifndef GL_SAMPLER_BUFFER
#define GL_SAMPLER_BUFFER 0x8DC2
#endif

#ifndef GL_INT_SAMPLER_2D_RECT
#define GL_INT_SAMPLER_2D_RECT 0x8DCD
#endif

#ifndef GL_INT_SAMPLER_BUFFER
#define GL_INT_SAMPLER_BUFFER 0x8DD0
#endif

#ifndef GL_UNSIGNED_INT_SAMPLER_2D_RECT
#define GL_UNSIGNED_INT_SAMPLER_2D_RECT 0x8DD5
#endif

#ifndef GL_UNSIGNED_INT_SAMPLER_BUFFER
#define GL_UNSIGNED_INT_SAMPLER_BUFFER 0x8DD8
#endif

#ifndef GL_SAMPLER_1D_ARRAY_EXT
#define GL_SAMPLER_1D_ARRAY_EXT 0x8DC0
#endif

#ifndef GL_SAMPLER_2D_ARRAY_EXT
#define GL_SAMPLER_2D_ARRAY_EXT 0x8DC1
#endif

#ifndef GL_SAMPLER_BUFFER_EXT
#define GL_SAMPLER_BUFFER_EXT 0x8DC2
#endif

#ifndef GL_SAMPLER_1D_ARRAY_SHADOW_EXT
#define GL_SAMPLER_1D_ARRAY_SHADOW_EXT 0x8DC3
#endif

#ifndef GL_SAMPLER_2D_ARRAY_SHADOW_EXT
#define GL_SAMPLER_2D_ARRAY_SHADOW_EXT 0x8DC4
#endif

#ifndef GL_SAMPLER_CUBE_SHADOW_EXT
#define GL_SAMPLER_CUBE_SHADOW_EXT 0x8DC5
#endif

#ifndef GL_UNSIGNED_INT_VEC2_EXT
#define GL_UNSIGNED_INT_VEC2_EXT 0x8DC6
#endif

#ifndef GL_UNSIGNED_INT_VEC3_EXT
#define GL_UNSIGNED_INT_VEC3_EXT 0x8DC7
#endif

#ifndef GL_UNSIGNED_INT_VEC4_EXT
#define GL_UNSIGNED_INT_VEC4_EXT 0x8DC8
#endif

#ifndef GL_INT_SAMPLER_1D_EXT
#define GL_INT_SAMPLER_1D_EXT 0x8DC9
#endif

#ifndef GL_INT_SAMPLER_2D_EXT
#define GL_INT_SAMPLER_2D_EXT 0x8DCA
#endif

#ifndef GL_INT_SAMPLER_3D_EXT
#define GL_INT_SAMPLER_3D_EXT 0x8DCB
#endif

#ifndef GL_INT_SAMPLER_CUBE_EXT
#define GL_INT_SAMPLER_CUBE_EXT 0x8DCC
#endif

#ifndef GL_INT_SAMPLER_2D_RECT_EXT
#define GL_INT_SAMPLER_2D_RECT_EXT 0x8DCD
#endif

#ifndef GL_INT_SAMPLER_1D_ARRAY_EXT
#define GL_INT_SAMPLER_1D_ARRAY_EXT 0x8DCE
#endif

#ifndef GL_INT_SAMPLER_2D_ARRAY_EXT
#define GL_INT_SAMPLER_2D_ARRAY_EXT 0x8DCF
#endif

#ifndef GL_INT_SAMPLER_BUFFER_EXT
#define GL_INT_SAMPLER_BUFFER_EXT 0x8DD0
#endif

#ifndef GL_UNSIGNED_INT_SAMPLER_1D_EXT
#define GL_UNSIGNED_INT_SAMPLER_1D_EXT 0x8DD1
#endif

#ifndef GL_UNSIGNED_INT_SAMPLER_2D_EXT
#define GL_UNSIGNED_INT_SAMPLER_2D_EXT 0x8DD2
#endif

#ifndef GL_UNSIGNED_INT_SAMPLER_3D_EXT
#define GL_UNSIGNED_INT_SAMPLER_3D_EXT 0x8DD3
#endif

#ifndef GL_UNSIGNED_INT_SAMPLER_CUBE_EXT
#define GL_UNSIGNED_INT_SAMPLER_CUBE_EXT 0x8DD4
#endif

#ifndef GL_UNSIGNED_INT_SAMPLER_2D_RECT_EXT
#define GL_UNSIGNED_INT_SAMPLER_2D_RECT_EXT 0x8DD5
#endif

#ifndef GL_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT
#define GL_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT 0x8DD6
#endif

#ifndef GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT
#define GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT 0x8DD7
#endif

#ifndef GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT
#define GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT 0x8DD8
#endif

#ifndef GL_GEOMETRY_SHADER
#define GL_GEOMETRY_SHADER 0x8DD9
#endif

#ifndef GL_GEOMETRY_SHADER_ARB
#define GL_GEOMETRY_SHADER_ARB 0x8DD9
#endif

#ifndef GL_GEOMETRY_SHADER_EXT
#define GL_GEOMETRY_SHADER_EXT 0x8DD9
#endif

#ifndef GL_GEOMETRY_VERTICES_OUT_ARB
#define GL_GEOMETRY_VERTICES_OUT_ARB 0x8DDA
#endif

#ifndef GL_GEOMETRY_INPUT_TYPE_ARB
#define GL_GEOMETRY_INPUT_TYPE_ARB 0x8DDB
#endif

#ifndef GL_GEOMETRY_OUTPUT_TYPE_ARB
#define GL_GEOMETRY_OUTPUT_TYPE_ARB 0x8DDC
#endif

#ifndef GL_GEOMETRY_VERTICES_OUT_EXT
#define GL_GEOMETRY_VERTICES_OUT_EXT 0x8DDA
#endif

#ifndef GL_GEOMETRY_INPUT_TYPE_EXT
#define GL_GEOMETRY_INPUT_TYPE_EXT 0x8DDB
#endif

#ifndef GL_GEOMETRY_OUTPUT_TYPE_EXT
#define GL_GEOMETRY_OUTPUT_TYPE_EXT 0x8DDC
#endif

#ifndef GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB
#define GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB 0x8DDD
#endif

#ifndef GL_MAX_VERTEX_VARYING_COMPONENTS_ARB
#define GL_MAX_VERTEX_VARYING_COMPONENTS_ARB 0x8DDE
#endif

#ifndef GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB
#define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB 0x8DDF
#endif

#ifndef GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB
#define GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB 0x8DE0
#endif

#ifndef GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB
#define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB 0x8DE1
#endif

#ifndef GL_MAX_GEOMETRY_UNIFORM_COMPONENTS
#define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS 0x8DDF
#endif

#ifndef GL_MAX_GEOMETRY_OUTPUT_VERTICES
#define GL_MAX_GEOMETRY_OUTPUT_VERTICES 0x8DE0
#endif

#ifndef GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS
#define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS 0x8DE1
#endif

#ifndef GL_MAX_GEOMETRY_VARYING_COMPONENTS_EXT
#define GL_MAX_GEOMETRY_VARYING_COMPONENTS_EXT 0x8DDD
#endif

#ifndef GL_MAX_VERTEX_VARYING_COMPONENTS_EXT
#define GL_MAX_VERTEX_VARYING_COMPONENTS_EXT 0x8DDE
#endif

#ifndef GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT
#define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT 0x8DDF
#endif

#ifndef GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT
#define GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT 0x8DE0
#endif

#ifndef GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT
#define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT 0x8DE1
#endif

#ifndef GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT
#define GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT 0x8DE2
#endif

#ifndef GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT
#define GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT 0x8DE3
#endif

#ifndef GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT
#define GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT 0x8DE4
#endif

#ifndef GL_ACTIVE_SUBROUTINES
#define GL_ACTIVE_SUBROUTINES 0x8DE5
#endif

#ifndef GL_ACTIVE_SUBROUTINE_UNIFORMS
#define GL_ACTIVE_SUBROUTINE_UNIFORMS 0x8DE6
#endif

#ifndef GL_MAX_SUBROUTINES
#define GL_MAX_SUBROUTINES 0x8DE7
#endif

#ifndef GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS
#define GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS 0x8DE8
#endif

#ifndef GL_NAMED_STRING_LENGTH_ARB
#define GL_NAMED_STRING_LENGTH_ARB 0x8DE9
#endif

#ifndef GL_NAMED_STRING_TYPE_ARB
#define GL_NAMED_STRING_TYPE_ARB 0x8DEA
#endif

#ifndef GL_MAX_BINDABLE_UNIFORM_SIZE_EXT
#define GL_MAX_BINDABLE_UNIFORM_SIZE_EXT 0x8DED
#endif

#ifndef GL_UNIFORM_BUFFER_EXT
#define GL_UNIFORM_BUFFER_EXT 0x8DEE
#endif

#ifndef GL_UNIFORM_BUFFER_BINDING_EXT
#define GL_UNIFORM_BUFFER_BINDING_EXT 0x8DEF
#endif

#ifndef GL_LOW_FLOAT
#define GL_LOW_FLOAT 0x8DF0
#endif

#ifndef GL_MEDIUM_FLOAT
#define GL_MEDIUM_FLOAT 0x8DF1
#endif

#ifndef GL_HIGH_FLOAT
#define GL_HIGH_FLOAT 0x8DF2
#endif

#ifndef GL_LOW_INT
#define GL_LOW_INT 0x8DF3
#endif

#ifndef GL_MEDIUM_INT
#define GL_MEDIUM_INT 0x8DF4
#endif

#ifndef GL_HIGH_INT
#define GL_HIGH_INT 0x8DF5
#endif

#ifndef GL_UNSIGNED_INT_10_10_10_2_OES
#define GL_UNSIGNED_INT_10_10_10_2_OES 0x8DF6
#endif

#ifndef GL_INT_10_10_10_2_OES
#define GL_INT_10_10_10_2_OES 0x8DF7
#endif

#ifndef GL_SHADER_BINARY_FORMATS
#define GL_SHADER_BINARY_FORMATS 0x8DF8
#endif

#ifndef GL_NUM_SHADER_BINARY_FORMATS
#define GL_NUM_SHADER_BINARY_FORMATS 0x8DF9
#endif

#ifndef GL_SHADER_COMPILER
#define GL_SHADER_COMPILER 0x8DFA
#endif

#ifndef GL_MAX_VERTEX_UNIFORM_VECTORS
#define GL_MAX_VERTEX_UNIFORM_VECTORS 0x8DFB
#endif

#ifndef GL_MAX_VARYING_VECTORS
#define GL_MAX_VARYING_VECTORS 0x8DFC
#endif

#ifndef GL_MAX_FRAGMENT_UNIFORM_VECTORS
#define GL_MAX_FRAGMENT_UNIFORM_VECTORS 0x8DFD
#endif

#ifndef GL_RENDERBUFFER_COLOR_SAMPLES_NV
#define GL_RENDERBUFFER_COLOR_SAMPLES_NV 0x8E10
#endif

#ifndef GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV
#define GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV 0x8E11
#endif

#ifndef GL_MULTISAMPLE_COVERAGE_MODES_NV
#define GL_MULTISAMPLE_COVERAGE_MODES_NV 0x8E12
#endif

#ifndef GL_QUERY_WAIT
#define GL_QUERY_WAIT 0x8E13
#endif

#ifndef GL_QUERY_NO_WAIT
#define GL_QUERY_NO_WAIT 0x8E14
#endif

#ifndef GL_QUERY_BY_REGION_WAIT
#define GL_QUERY_BY_REGION_WAIT 0x8E15
#endif

#ifndef GL_QUERY_BY_REGION_NO_WAIT
#define GL_QUERY_BY_REGION_NO_WAIT 0x8E16
#endif

#ifndef GL_QUERY_WAIT_NV
#define GL_QUERY_WAIT_NV 0x8E13
#endif

#ifndef GL_QUERY_NO_WAIT_NV
#define GL_QUERY_NO_WAIT_NV 0x8E14
#endif

#ifndef GL_QUERY_BY_REGION_WAIT_NV
#define GL_QUERY_BY_REGION_WAIT_NV 0x8E15
#endif

#ifndef GL_QUERY_BY_REGION_NO_WAIT_NV
#define GL_QUERY_BY_REGION_NO_WAIT_NV 0x8E16
#endif

#ifndef GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS
#define GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E1E
#endif

#ifndef GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS
#define GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E1F
#endif

#ifndef GL_COLOR_SAMPLES_NV
#define GL_COLOR_SAMPLES_NV 0x8E20
#endif

#ifndef GL_TRANSFORM_FEEDBACK
#define GL_TRANSFORM_FEEDBACK 0x8E22
#endif

#ifndef GL_TRANSFORM_FEEDBACK_PAUSED
#define GL_TRANSFORM_FEEDBACK_PAUSED 0x8E23
#endif

#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED
#define GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED GL_TRANSFORM_FEEDBACK_PAUSED
#endif

#ifndef GL_TRANSFORM_FEEDBACK_ACTIVE
#define GL_TRANSFORM_FEEDBACK_ACTIVE 0x8E24
#endif

#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE
#define GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE GL_TRANSFORM_FEEDBACK_ACTIVE
#endif

#ifndef GL_TRANSFORM_FEEDBACK_BINDING
#define GL_TRANSFORM_FEEDBACK_BINDING 0x8E25
#endif

#ifndef GL_TRANSFORM_FEEDBACK_NV
#define GL_TRANSFORM_FEEDBACK_NV 0x8E22
#endif

#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV
#define GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV 0x8E23
#endif

#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV
#define GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV 0x8E24
#endif

#ifndef GL_TRANSFORM_FEEDBACK_BINDING_NV
#define GL_TRANSFORM_FEEDBACK_BINDING_NV 0x8E25
#endif

#ifndef GL_FRAME_NV
#define GL_FRAME_NV 0x8E26
#endif

#ifndef GL_FIELDS_NV
#define GL_FIELDS_NV 0x8E27
#endif

#ifndef GL_CURRENT_TIME_NV
#define GL_CURRENT_TIME_NV 0x8E28
#endif

#ifndef GL_NUM_FILL_STREAMS_NV
#define GL_NUM_FILL_STREAMS_NV 0x8E29
#endif

#ifndef GL_PRESENT_TIME_NV
#define GL_PRESENT_TIME_NV 0x8E2A
#endif

#ifndef GL_PRESENT_DURATION_NV
#define GL_PRESENT_DURATION_NV 0x8E2B
#endif

#ifndef GL_TIMESTAMP
#define GL_TIMESTAMP 0x8E28
#endif

#ifndef GL_DEPTH_COMPONENT16_NONLINEAR_NV
#define GL_DEPTH_COMPONENT16_NONLINEAR_NV 0x8E2C
#endif

#ifndef GL_PROGRAM_MATRIX_EXT
#define GL_PROGRAM_MATRIX_EXT 0x8E2D
#endif

#ifndef GL_TRANSPOSE_PROGRAM_MATRIX_EXT
#define GL_TRANSPOSE_PROGRAM_MATRIX_EXT 0x8E2E
#endif

#ifndef GL_PROGRAM_MATRIX_STACK_DEPTH_EXT
#define GL_PROGRAM_MATRIX_STACK_DEPTH_EXT 0x8E2F
#endif

#ifndef GL_TEXTURE_SWIZZLE_R
#define GL_TEXTURE_SWIZZLE_R 0x8E42
#endif

#ifndef GL_TEXTURE_SWIZZLE_G
#define GL_TEXTURE_SWIZZLE_G 0x8E43
#endif

#ifndef GL_TEXTURE_SWIZZLE_B
#define GL_TEXTURE_SWIZZLE_B 0x8E44
#endif

#ifndef GL_TEXTURE_SWIZZLE_A
#define GL_TEXTURE_SWIZZLE_A 0x8E45
#endif

#ifndef GL_TEXTURE_SWIZZLE_RGBA
#define GL_TEXTURE_SWIZZLE_RGBA 0x8E46
#endif

#ifndef GL_TEXTURE_SWIZZLE_R_EXT
#define GL_TEXTURE_SWIZZLE_R_EXT 0x8E42
#endif

#ifndef GL_TEXTURE_SWIZZLE_G_EXT
#define GL_TEXTURE_SWIZZLE_G_EXT 0x8E43
#endif

#ifndef GL_TEXTURE_SWIZZLE_B_EXT
#define GL_TEXTURE_SWIZZLE_B_EXT 0x8E44
#endif

#ifndef GL_TEXTURE_SWIZZLE_A_EXT
#define GL_TEXTURE_SWIZZLE_A_EXT 0x8E45
#endif

#ifndef GL_TEXTURE_SWIZZLE_RGBA_EXT
#define GL_TEXTURE_SWIZZLE_RGBA_EXT 0x8E46
#endif

#ifndef GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS
#define GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS 0x8E47
#endif

#ifndef GL_ACTIVE_SUBROUTINE_MAX_LENGTH
#define GL_ACTIVE_SUBROUTINE_MAX_LENGTH 0x8E48
#endif

#ifndef GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH
#define GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH 0x8E49
#endif

#ifndef GL_NUM_COMPATIBLE_SUBROUTINES
#define GL_NUM_COMPATIBLE_SUBROUTINES 0x8E4A
#endif

#ifndef GL_COMPATIBLE_SUBROUTINES
#define GL_COMPATIBLE_SUBROUTINES 0x8E4B
#endif

#ifndef GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION
#define GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION 0x8E4C
#endif

#ifndef GL_FIRST_VERTEX_CONVENTION
#define GL_FIRST_VERTEX_CONVENTION 0x8E4D
#endif

#ifndef GL_LAST_VERTEX_CONVENTION
#define GL_LAST_VERTEX_CONVENTION 0x8E4E
#endif

#ifndef GL_PROVOKING_VERTEX
#define GL_PROVOKING_VERTEX 0x8E4F
#endif

#ifndef GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION_EXT
#define GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION_EXT 0x8E4C
#endif

#ifndef GL_FIRST_VERTEX_CONVENTION_EXT
#define GL_FIRST_VERTEX_CONVENTION_EXT 0x8E4D
#endif

#ifndef GL_LAST_VERTEX_CONVENTION_EXT
#define GL_LAST_VERTEX_CONVENTION_EXT 0x8E4E
#endif

#ifndef GL_PROVOKING_VERTEX_EXT
#define GL_PROVOKING_VERTEX_EXT 0x8E4F
#endif

#ifndef GL_SAMPLE_POSITION
#define GL_SAMPLE_POSITION 0x8E50
#endif

#ifndef GL_SAMPLE_MASK
#define GL_SAMPLE_MASK 0x8E51
#endif

#ifndef GL_SAMPLE_MASK_VALUE
#define GL_SAMPLE_MASK_VALUE 0x8E52
#endif

#ifndef GL_MAX_SAMPLE_MASK_WORDS
#define GL_MAX_SAMPLE_MASK_WORDS 0x8E59
#endif

#ifndef GL_SAMPLE_POSITION_NV
#define GL_SAMPLE_POSITION_NV 0x8E50
#endif

#ifndef GL_SAMPLE_MASK_NV
#define GL_SAMPLE_MASK_NV 0x8E51
#endif

#ifndef GL_SAMPLE_MASK_VALUE_NV
#define GL_SAMPLE_MASK_VALUE_NV 0x8E52
#endif

#ifndef GL_TEXTURE_BINDING_RENDERBUFFER_NV
#define GL_TEXTURE_BINDING_RENDERBUFFER_NV 0x8E53
#endif

#ifndef GL_TEXTURE_RENDERBUFFER_DATA_STORE_BINDING_NV
#define GL_TEXTURE_RENDERBUFFER_DATA_STORE_BINDING_NV 0x8E54
#endif

#ifndef GL_TEXTURE_RENDERBUFFER_NV
#define GL_TEXTURE_RENDERBUFFER_NV 0x8E55
#endif

#ifndef GL_SAMPLER_RENDERBUFFER_NV
#define GL_SAMPLER_RENDERBUFFER_NV 0x8E56
#endif

#ifndef GL_INT_SAMPLER_RENDERBUFFER_NV
#define GL_INT_SAMPLER_RENDERBUFFER_NV 0x8E57
#endif

#ifndef GL_UNSIGNED_INT_SAMPLER_RENDERBUFFER_NV
#define GL_UNSIGNED_INT_SAMPLER_RENDERBUFFER_NV 0x8E58
#endif

#ifndef GL_MAX_SAMPLE_MASK_WORDS_NV
#define GL_MAX_SAMPLE_MASK_WORDS_NV 0x8E59
#endif

#ifndef GL_MAX_GEOMETRY_SHADER_INVOCATIONS
#define GL_MAX_GEOMETRY_SHADER_INVOCATIONS 0x8E5A
#endif

#ifndef GL_MIN_FRAGMENT_INTERPOLATION_OFFSET
#define GL_MIN_FRAGMENT_INTERPOLATION_OFFSET 0x8E5B
#endif

#ifndef GL_MAX_FRAGMENT_INTERPOLATION_OFFSET
#define GL_MAX_FRAGMENT_INTERPOLATION_OFFSET 0x8E5C
#endif

#ifndef GL_FRAGMENT_INTERPOLATION_OFFSET_BITS
#define GL_FRAGMENT_INTERPOLATION_OFFSET_BITS 0x8E5D
#endif

#ifndef GL_MAX_GEOMETRY_PROGRAM_INVOCATIONS_NV
#define GL_MAX_GEOMETRY_PROGRAM_INVOCATIONS_NV 0x8E5A
#endif

#ifndef GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_NV
#define GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_NV 0x8E5B
#endif

#ifndef GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_NV
#define GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_NV 0x8E5C
#endif

#ifndef GL_FRAGMENT_PROGRAM_INTERPOLATION_OFFSET_BITS_NV
#define GL_FRAGMENT_PROGRAM_INTERPOLATION_OFFSET_BITS_NV 0x8E5D
#endif

#ifndef GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET
#define GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET 0x8E5E
#endif

#ifndef GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET
#define GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET 0x8E5F
#endif

#ifndef GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB
#define GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB 0x8F9F
#endif

#ifndef GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_NV
#define GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_NV 0x8E5E
#endif

#ifndef GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_NV
#define GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_NV 0x8E5F
#endif

#ifndef GL_MAX_TRANSFORM_FEEDBACK_BUFFERS
#define GL_MAX_TRANSFORM_FEEDBACK_BUFFERS 0x8E70
#endif

#ifndef GL_MAX_VERTEX_STREAMS
#define GL_MAX_VERTEX_STREAMS 0x8E71
#endif

#ifndef GL_PATCH_VERTICES
#define GL_PATCH_VERTICES 0x8E72
#endif

#ifndef GL_PATCH_DEFAULT_INNER_LEVEL
#define GL_PATCH_DEFAULT_INNER_LEVEL 0x8E73
#endif

#ifndef GL_PATCH_DEFAULT_OUTER_LEVEL
#define GL_PATCH_DEFAULT_OUTER_LEVEL 0x8E74
#endif

#ifndef GL_TESS_CONTROL_OUTPUT_VERTICES
#define GL_TESS_CONTROL_OUTPUT_VERTICES 0x8E75
#endif

#ifndef GL_TESS_GEN_MODE
#define GL_TESS_GEN_MODE 0x8E76
#endif

#ifndef GL_TESS_GEN_SPACING
#define GL_TESS_GEN_SPACING 0x8E77
#endif

#ifndef GL_TESS_GEN_VERTEX_ORDER
#define GL_TESS_GEN_VERTEX_ORDER 0x8E78
#endif

#ifndef GL_TESS_GEN_POINT_MODE
#define GL_TESS_GEN_POINT_MODE 0x8E79
#endif

#ifndef GL_ISOLINES
#define GL_ISOLINES 0x8E7A
#endif

#ifndef GL_FRACTIONAL_ODD
#define GL_FRACTIONAL_ODD 0x8E7B
#endif

#ifndef GL_FRACTIONAL_EVEN
#define GL_FRACTIONAL_EVEN 0x8E7C
#endif

#ifndef GL_MAX_PATCH_VERTICES
#define GL_MAX_PATCH_VERTICES 0x8E7D
#endif

#ifndef GL_MAX_TESS_GEN_LEVEL
#define GL_MAX_TESS_GEN_LEVEL 0x8E7E
#endif

#ifndef GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS
#define GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E7F
#endif

#ifndef GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS
#define GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E80
#endif

#ifndef GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS
#define GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS 0x8E81
#endif

#ifndef GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS
#define GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS 0x8E82
#endif

#ifndef GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS
#define GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS 0x8E83
#endif

#ifndef GL_MAX_TESS_PATCH_COMPONENTS
#define GL_MAX_TESS_PATCH_COMPONENTS 0x8E84
#endif

#ifndef GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS
#define GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS 0x8E85
#endif

#ifndef GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS
#define GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS 0x8E86
#endif

#ifndef GL_TESS_EVALUATION_SHADER
#define GL_TESS_EVALUATION_SHADER 0x8E87
#endif

#ifndef GL_TESS_CONTROL_SHADER
#define GL_TESS_CONTROL_SHADER 0x8E88
#endif

#ifndef GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS
#define GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS 0x8E89
#endif

#ifndef GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS
#define GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS 0x8E8A
#endif

#ifndef GL_COMPRESSED_RGBA_BPTC_UNORM_ARB
#define GL_COMPRESSED_RGBA_BPTC_UNORM_ARB 0x8E8C
#endif

#ifndef GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB
#define GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB 0x8E8D
#endif

#ifndef GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB
#define GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB 0x8E8E
#endif

#ifndef GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB
#define GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB 0x8E8F
#endif

#ifndef GL_COVERAGE_COMPONENT_NV
#define GL_COVERAGE_COMPONENT_NV 0x8ED0
#endif

#ifndef GL_COVERAGE_COMPONENT4_NV
#define GL_COVERAGE_COMPONENT4_NV 0x8ED1
#endif

#ifndef GL_COVERAGE_ATTACHMENT_NV
#define GL_COVERAGE_ATTACHMENT_NV 0x8ED2
#endif

#ifndef GL_COVERAGE_BUFFERS_NV
#define GL_COVERAGE_BUFFERS_NV 0x8ED3
#endif

#ifndef GL_COVERAGE_SAMPLES_NV
#define GL_COVERAGE_SAMPLES_NV 0x8ED4
#endif

#ifndef GL_COVERAGE_ALL_FRAGMENTS_NV
#define GL_COVERAGE_ALL_FRAGMENTS_NV 0x8ED5
#endif

#ifndef GL_COVERAGE_EDGE_FRAGMENTS_NV
#define GL_COVERAGE_EDGE_FRAGMENTS_NV 0x8ED6
#endif

#ifndef GL_COVERAGE_AUTOMATIC_NV
#define GL_COVERAGE_AUTOMATIC_NV 0x8ED7
#endif

#ifndef GL_COVERAGE_BUFFER_BIT_NV
#define GL_COVERAGE_BUFFER_BIT_NV 0x00008000
#endif

#ifndef GL_BUFFER_GPU_ADDRESS_NV
#define GL_BUFFER_GPU_ADDRESS_NV 0x8F1D
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV
#define GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV 0x8F1E
#endif

#ifndef GL_ELEMENT_ARRAY_UNIFIED_NV
#define GL_ELEMENT_ARRAY_UNIFIED_NV 0x8F1F
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV
#define GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV 0x8F20
#endif

#ifndef GL_VERTEX_ARRAY_ADDRESS_NV
#define GL_VERTEX_ARRAY_ADDRESS_NV 0x8F21
#endif

#ifndef GL_NORMAL_ARRAY_ADDRESS_NV
#define GL_NORMAL_ARRAY_ADDRESS_NV 0x8F22
#endif

#ifndef GL_COLOR_ARRAY_ADDRESS_NV
#define GL_COLOR_ARRAY_ADDRESS_NV 0x8F23
#endif

#ifndef GL_INDEX_ARRAY_ADDRESS_NV
#define GL_INDEX_ARRAY_ADDRESS_NV 0x8F24
#endif

#ifndef GL_TEXTURE_COORD_ARRAY_ADDRESS_NV
#define GL_TEXTURE_COORD_ARRAY_ADDRESS_NV 0x8F25
#endif

#ifndef GL_EDGE_FLAG_ARRAY_ADDRESS_NV
#define GL_EDGE_FLAG_ARRAY_ADDRESS_NV 0x8F26
#endif

#ifndef GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV
#define GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV 0x8F27
#endif

#ifndef GL_FOG_COORD_ARRAY_ADDRESS_NV
#define GL_FOG_COORD_ARRAY_ADDRESS_NV 0x8F28
#endif

#ifndef GL_ELEMENT_ARRAY_ADDRESS_NV
#define GL_ELEMENT_ARRAY_ADDRESS_NV 0x8F29
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV
#define GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV 0x8F2A
#endif

#ifndef GL_VERTEX_ARRAY_LENGTH_NV
#define GL_VERTEX_ARRAY_LENGTH_NV 0x8F2B
#endif

#ifndef GL_NORMAL_ARRAY_LENGTH_NV
#define GL_NORMAL_ARRAY_LENGTH_NV 0x8F2C
#endif

#ifndef GL_COLOR_ARRAY_LENGTH_NV
#define GL_COLOR_ARRAY_LENGTH_NV 0x8F2D
#endif

#ifndef GL_INDEX_ARRAY_LENGTH_NV
#define GL_INDEX_ARRAY_LENGTH_NV 0x8F2E
#endif

#ifndef GL_TEXTURE_COORD_ARRAY_LENGTH_NV
#define GL_TEXTURE_COORD_ARRAY_LENGTH_NV 0x8F2F
#endif

#ifndef GL_EDGE_FLAG_ARRAY_LENGTH_NV
#define GL_EDGE_FLAG_ARRAY_LENGTH_NV 0x8F30
#endif

#ifndef GL_SECONDARY_COLOR_ARRAY_LENGTH_NV
#define GL_SECONDARY_COLOR_ARRAY_LENGTH_NV 0x8F31
#endif

#ifndef GL_FOG_COORD_ARRAY_LENGTH_NV
#define GL_FOG_COORD_ARRAY_LENGTH_NV 0x8F32
#endif

#ifndef GL_ELEMENT_ARRAY_LENGTH_NV
#define GL_ELEMENT_ARRAY_LENGTH_NV 0x8F33
#endif

#ifndef GL_GPU_ADDRESS_NV
#define GL_GPU_ADDRESS_NV 0x8F34
#endif

#ifndef GL_MAX_SHADER_BUFFER_ADDRESS_NV
#define GL_MAX_SHADER_BUFFER_ADDRESS_NV 0x8F35
#endif

#ifndef GL_COPY_READ_BUFFER_BINDING
#define GL_COPY_READ_BUFFER_BINDING 0x8F36
#endif

#ifndef GL_COPY_READ_BUFFER
#define GL_COPY_READ_BUFFER GL_COPY_READ_BUFFER_BINDING
#endif

#ifndef GL_COPY_WRITE_BUFFER_BINDING
#define GL_COPY_WRITE_BUFFER_BINDING 0x8F37
#endif

#ifndef GL_COPY_WRITE_BUFFER
#define GL_COPY_WRITE_BUFFER GL_COPY_WRITE_BUFFER_BINDING
#endif

#ifndef GL_MAX_IMAGE_UNITS_EXT
#define GL_MAX_IMAGE_UNITS_EXT 0x8F38
#endif

#ifndef GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS_EXT
#define GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS_EXT 0x8F39
#endif

#ifndef GL_IMAGE_BINDING_NAME_EXT
#define GL_IMAGE_BINDING_NAME_EXT 0x8F3A
#endif

#ifndef GL_IMAGE_BINDING_LEVEL_EXT
#define GL_IMAGE_BINDING_LEVEL_EXT 0x8F3B
#endif

#ifndef GL_IMAGE_BINDING_LAYERED_EXT
#define GL_IMAGE_BINDING_LAYERED_EXT 0x8F3C
#endif

#ifndef GL_IMAGE_BINDING_LAYER_EXT
#define GL_IMAGE_BINDING_LAYER_EXT 0x8F3D
#endif

#ifndef GL_IMAGE_BINDING_ACCESS_EXT
#define GL_IMAGE_BINDING_ACCESS_EXT 0x8F3E
#endif

#ifndef GL_MAX_IMAGE_UNITS
#define GL_MAX_IMAGE_UNITS 0x8F38
#endif

#ifndef GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS
#define GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS 0x8F39
#endif

#ifndef GL_IMAGE_BINDING_NAME
#define GL_IMAGE_BINDING_NAME 0x8F3A
#endif

#ifndef GL_IMAGE_BINDING_LEVEL
#define GL_IMAGE_BINDING_LEVEL 0x8F3B
#endif

#ifndef GL_IMAGE_BINDING_LAYERED
#define GL_IMAGE_BINDING_LAYERED 0x8F3C
#endif

#ifndef GL_IMAGE_BINDING_LAYER
#define GL_IMAGE_BINDING_LAYER 0x8F3D
#endif

#ifndef GL_IMAGE_BINDING_ACCESS
#define GL_IMAGE_BINDING_ACCESS 0x8F3E
#endif

#ifndef GL_DRAW_INDIRECT_BUFFER
#define GL_DRAW_INDIRECT_BUFFER 0x8F3F
#endif

#ifndef GL_DRAW_INDIRECT_UNIFIED_NV
#define GL_DRAW_INDIRECT_UNIFIED_NV 0x8F40
#endif

#ifndef GL_DRAW_INDIRECT_ADDRESS_NV
#define GL_DRAW_INDIRECT_ADDRESS_NV 0x8F41
#endif

#ifndef GL_DRAW_INDIRECT_LENGTH_NV
#define GL_DRAW_INDIRECT_LENGTH_NV 0x8F42
#endif

#ifndef GL_DRAW_INDIRECT_BUFFER_BINDING
#define GL_DRAW_INDIRECT_BUFFER_BINDING 0x8F43
#endif

#ifndef GL_MAX_PROGRAM_SUBROUTINE_PARAMETERS_NV
#define GL_MAX_PROGRAM_SUBROUTINE_PARAMETERS_NV 0x8F44
#endif

#ifndef GL_MAX_PROGRAM_SUBROUTINE_NUM_NV
#define GL_MAX_PROGRAM_SUBROUTINE_NUM_NV 0x8F45
#endif

#ifndef GL_DOUBLE_MAT2
#define GL_DOUBLE_MAT2 0x8F46
#endif

#ifndef GL_DOUBLE_MAT3
#define GL_DOUBLE_MAT3 0x8F47
#endif

#ifndef GL_DOUBLE_MAT4
#define GL_DOUBLE_MAT4 0x8F48
#endif

#ifndef GL_DOUBLE_MAT2x3
#define GL_DOUBLE_MAT2x3 0x8F49
#endif

#ifndef GL_DOUBLE_MAT2x4
#define GL_DOUBLE_MAT2x4 0x8F4A
#endif

#ifndef GL_DOUBLE_MAT3x2
#define GL_DOUBLE_MAT3x2 0x8F4B
#endif

#ifndef GL_DOUBLE_MAT3x4
#define GL_DOUBLE_MAT3x4 0x8F4C
#endif

#ifndef GL_DOUBLE_MAT4x2
#define GL_DOUBLE_MAT4x2 0x8F4D
#endif

#ifndef GL_DOUBLE_MAT4x3
#define GL_DOUBLE_MAT4x3 0x8F4E
#endif

#ifndef GL_DOUBLE_MAT2_EXT
#define GL_DOUBLE_MAT2_EXT 0x8F46
#endif

#ifndef GL_DOUBLE_MAT3_EXT
#define GL_DOUBLE_MAT3_EXT 0x8F47
#endif

#ifndef GL_DOUBLE_MAT4_EXT
#define GL_DOUBLE_MAT4_EXT 0x8F48
#endif

#ifndef GL_DOUBLE_MAT2x3_EXT
#define GL_DOUBLE_MAT2x3_EXT 0x8F49
#endif

#ifndef GL_DOUBLE_MAT2x4_EXT
#define GL_DOUBLE_MAT2x4_EXT 0x8F4A
#endif

#ifndef GL_DOUBLE_MAT3x2_EXT
#define GL_DOUBLE_MAT3x2_EXT 0x8F4B
#endif

#ifndef GL_DOUBLE_MAT3x4_EXT
#define GL_DOUBLE_MAT3x4_EXT 0x8F4C
#endif

#ifndef GL_DOUBLE_MAT4x2_EXT
#define GL_DOUBLE_MAT4x2_EXT 0x8F4D
#endif

#ifndef GL_DOUBLE_MAT4x3_EXT
#define GL_DOUBLE_MAT4x3_EXT 0x8F4E
#endif

#ifndef GL_MALI_SHADER_BINARY_ARM
#define GL_MALI_SHADER_BINARY_ARM 0x8F60
#endif

#ifndef GL_RED_SNORM
#define GL_RED_SNORM 0x8F90
#endif

#ifndef GL_RG_SNORM
#define GL_RG_SNORM 0x8F91
#endif

#ifndef GL_RGB_SNORM
#define GL_RGB_SNORM 0x8F92
#endif

#ifndef GL_RGBA_SNORM
#define GL_RGBA_SNORM 0x8F93
#endif

#ifndef GL_R8_SNORM
#define GL_R8_SNORM 0x8F94
#endif

#ifndef GL_RG8_SNORM
#define GL_RG8_SNORM 0x8F95
#endif

#ifndef GL_RGB8_SNORM
#define GL_RGB8_SNORM 0x8F96
#endif

#ifndef GL_RGBA8_SNORM
#define GL_RGBA8_SNORM 0x8F97
#endif

#ifndef GL_R16_SNORM
#define GL_R16_SNORM 0x8F98
#endif

#ifndef GL_RG16_SNORM
#define GL_RG16_SNORM 0x8F99
#endif

#ifndef GL_RGB16_SNORM
#define GL_RGB16_SNORM 0x8F9A
#endif

#ifndef GL_RGBA16_SNORM
#define GL_RGBA16_SNORM 0x8F9B
#endif

#ifndef GL_SIGNED_NORMALIZED
#define GL_SIGNED_NORMALIZED 0x8F9C
#endif

#ifndef GL_PRIMITIVE_RESTART
#define GL_PRIMITIVE_RESTART 0x8F9D
#endif

#ifndef GL_PRIMITIVE_RESTART_INDEX
#define GL_PRIMITIVE_RESTART_INDEX 0x8F9E
#endif

#ifndef GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS
#define GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS 0x8F9F
#endif

#ifndef GL_PERFMON_GLOBAL_MODE_QCOM
#define GL_PERFMON_GLOBAL_MODE_QCOM 0x8FA0
#endif

#ifndef GL_BINNING_CONTROL_HINT_QCOM
#define GL_BINNING_CONTROL_HINT_QCOM 0x8FB0
#endif

#ifndef GL_CPU_OPTIMIZED_QCOM
#define GL_CPU_OPTIMIZED_QCOM 0x8FB1
#endif

#ifndef GL_GPU_OPTIMIZED_QCOM
#define GL_GPU_OPTIMIZED_QCOM 0x8FB2
#endif

#ifndef GL_RENDER_DIRECT_TO_FRAMEBUFFER_QCOM
#define GL_RENDER_DIRECT_TO_FRAMEBUFFER_QCOM 0x8FB3
#endif

#ifndef GL_SHADER_BINARY_VIV
#define GL_SHADER_BINARY_VIV 0x8FC4
#endif

#ifndef GL_INT8_NV
#define GL_INT8_NV 0x8FE0
#endif

#ifndef GL_INT8_VEC2_NV
#define GL_INT8_VEC2_NV 0x8FE1
#endif

#ifndef GL_INT8_VEC3_NV
#define GL_INT8_VEC3_NV 0x8FE2
#endif

#ifndef GL_INT8_VEC4_NV
#define GL_INT8_VEC4_NV 0x8FE3
#endif

#ifndef GL_INT16_NV
#define GL_INT16_NV 0x8FE4
#endif

#ifndef GL_INT16_VEC2_NV
#define GL_INT16_VEC2_NV 0x8FE5
#endif

#ifndef GL_INT16_VEC3_NV
#define GL_INT16_VEC3_NV 0x8FE6
#endif

#ifndef GL_INT16_VEC4_NV
#define GL_INT16_VEC4_NV 0x8FE7
#endif

#ifndef GL_INT64_VEC2_NV
#define GL_INT64_VEC2_NV 0x8FE9
#endif

#ifndef GL_INT64_VEC3_NV
#define GL_INT64_VEC3_NV 0x8FEA
#endif

#ifndef GL_INT64_VEC4_NV
#define GL_INT64_VEC4_NV 0x8FEB
#endif

#ifndef GL_UNSIGNED_INT8_NV
#define GL_UNSIGNED_INT8_NV 0x8FEC
#endif

#ifndef GL_UNSIGNED_INT8_VEC2_NV
#define GL_UNSIGNED_INT8_VEC2_NV 0x8FED
#endif

#ifndef GL_UNSIGNED_INT8_VEC3_NV
#define GL_UNSIGNED_INT8_VEC3_NV 0x8FEE
#endif

#ifndef GL_UNSIGNED_INT8_VEC4_NV
#define GL_UNSIGNED_INT8_VEC4_NV 0x8FEF
#endif

#ifndef GL_UNSIGNED_INT16_NV
#define GL_UNSIGNED_INT16_NV 0x8FF0
#endif

#ifndef GL_UNSIGNED_INT16_VEC2_NV
#define GL_UNSIGNED_INT16_VEC2_NV 0x8FF1
#endif

#ifndef GL_UNSIGNED_INT16_VEC3_NV
#define GL_UNSIGNED_INT16_VEC3_NV 0x8FF2
#endif

#ifndef GL_UNSIGNED_INT16_VEC4_NV
#define GL_UNSIGNED_INT16_VEC4_NV 0x8FF3
#endif

#ifndef GL_UNSIGNED_INT64_VEC2_NV
#define GL_UNSIGNED_INT64_VEC2_NV 0x8FF5
#endif

#ifndef GL_UNSIGNED_INT64_VEC3_NV
#define GL_UNSIGNED_INT64_VEC3_NV 0x8FF6
#endif

#ifndef GL_UNSIGNED_INT64_VEC4_NV
#define GL_UNSIGNED_INT64_VEC4_NV 0x8FF7
#endif

#ifndef GL_FLOAT16_NV
#define GL_FLOAT16_NV 0x8FF8
#endif

#ifndef GL_FLOAT16_VEC2_NV
#define GL_FLOAT16_VEC2_NV 0x8FF9
#endif

#ifndef GL_FLOAT16_VEC3_NV
#define GL_FLOAT16_VEC3_NV 0x8FFA
#endif

#ifndef GL_FLOAT16_VEC4_NV
#define GL_FLOAT16_VEC4_NV 0x8FFB
#endif

#ifndef GL_DOUBLE_VEC2
#define GL_DOUBLE_VEC2 0x8FFC
#endif

#ifndef GL_DOUBLE_VEC3
#define GL_DOUBLE_VEC3 0x8FFD
#endif

#ifndef GL_DOUBLE_VEC4
#define GL_DOUBLE_VEC4 0x8FFE
#endif

#ifndef GL_DOUBLE_VEC2_EXT
#define GL_DOUBLE_VEC2_EXT 0x8FFC
#endif

#ifndef GL_DOUBLE_VEC3_EXT
#define GL_DOUBLE_VEC3_EXT 0x8FFD
#endif

#ifndef GL_DOUBLE_VEC4_EXT
#define GL_DOUBLE_VEC4_EXT 0x8FFE
#endif

#ifndef GL_SAMPLER_BUFFER_AMD
#define GL_SAMPLER_BUFFER_AMD 0x9001
#endif

#ifndef GL_INT_SAMPLER_BUFFER_AMD
#define GL_INT_SAMPLER_BUFFER_AMD 0x9002
#endif

#ifndef GL_UNSIGNED_INT_SAMPLER_BUFFER_AMD
#define GL_UNSIGNED_INT_SAMPLER_BUFFER_AMD 0x9003
#endif

#ifndef GL_TESSELLATION_MODE_AMD
#define GL_TESSELLATION_MODE_AMD 0x9004
#endif

#ifndef GL_TESSELLATION_FACTOR_AMD
#define GL_TESSELLATION_FACTOR_AMD 0x9005
#endif

#ifndef GL_DISCRETE_AMD
#define GL_DISCRETE_AMD 0x9006
#endif

#ifndef GL_CONTINUOUS_AMD
#define GL_CONTINUOUS_AMD 0x9007
#endif

#ifndef GL_TEXTURE_CUBE_MAP_ARRAY
#define GL_TEXTURE_CUBE_MAP_ARRAY 0x9009
#endif

#ifndef GL_TEXTURE_BINDING_CUBE_MAP_ARRAY
#define GL_TEXTURE_BINDING_CUBE_MAP_ARRAY 0x900A
#endif

#ifndef GL_PROXY_TEXTURE_CUBE_MAP_ARRAY
#define GL_PROXY_TEXTURE_CUBE_MAP_ARRAY 0x900B
#endif

#ifndef GL_SAMPLER_CUBE_MAP_ARRAY
#define GL_SAMPLER_CUBE_MAP_ARRAY 0x900C
#endif

#ifndef GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW
#define GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW 0x900D
#endif

#ifndef GL_INT_SAMPLER_CUBE_MAP_ARRAY
#define GL_INT_SAMPLER_CUBE_MAP_ARRAY 0x900E
#endif

#ifndef GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY
#define GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY 0x900F
#endif

#ifndef GL_ALPHA_SNORM
#define GL_ALPHA_SNORM 0x9010
#endif

#ifndef GL_LUMINANCE_SNORM
#define GL_LUMINANCE_SNORM 0x9011
#endif

#ifndef GL_LUMINANCE_ALPHA_SNORM
#define GL_LUMINANCE_ALPHA_SNORM 0x9012
#endif

#ifndef GL_INTENSITY_SNORM
#define GL_INTENSITY_SNORM 0x9013
#endif

#ifndef GL_ALPHA8_SNORM
#define GL_ALPHA8_SNORM 0x9014
#endif

#ifndef GL_LUMINANCE8_SNORM
#define GL_LUMINANCE8_SNORM 0x9015
#endif

#ifndef GL_LUMINANCE8_ALPHA8_SNORM
#define GL_LUMINANCE8_ALPHA8_SNORM 0x9016
#endif

#ifndef GL_INTENSITY8_SNORM
#define GL_INTENSITY8_SNORM 0x9017
#endif

#ifndef GL_ALPHA16_SNORM
#define GL_ALPHA16_SNORM 0x9018
#endif

#ifndef GL_LUMINANCE16_SNORM
#define GL_LUMINANCE16_SNORM 0x9019
#endif

#ifndef GL_LUMINANCE16_ALPHA16_SNORM
#define GL_LUMINANCE16_ALPHA16_SNORM 0x901A
#endif

#ifndef GL_INTENSITY16_SNORM
#define GL_INTENSITY16_SNORM 0x901B
#endif

#ifndef GL_FACTOR_MIN_AMD
#define GL_FACTOR_MIN_AMD 0x901C
#endif

#ifndef GL_FACTOR_MAX_AMD
#define GL_FACTOR_MAX_AMD 0x901D
#endif

#ifndef GL_DEPTH_CLAMP_NEAR_AMD
#define GL_DEPTH_CLAMP_NEAR_AMD 0x901E
#endif

#ifndef GL_DEPTH_CLAMP_FAR_AMD
#define GL_DEPTH_CLAMP_FAR_AMD 0x901F
#endif

#ifndef GL_VIDEO_BUFFER_NV
#define GL_VIDEO_BUFFER_NV 0x9020
#endif

#ifndef GL_VIDEO_BUFFER_BINDING_NV
#define GL_VIDEO_BUFFER_BINDING_NV 0x9021
#endif

#ifndef GL_FIELD_UPPER_NV
#define GL_FIELD_UPPER_NV 0x9022
#endif

#ifndef GL_FIELD_LOWER_NV
#define GL_FIELD_LOWER_NV 0x9023
#endif

#ifndef GL_NUM_VIDEO_CAPTURE_STREAMS_NV
#define GL_NUM_VIDEO_CAPTURE_STREAMS_NV 0x9024
#endif

#ifndef GL_NEXT_VIDEO_CAPTURE_BUFFER_STATUS_NV
#define GL_NEXT_VIDEO_CAPTURE_BUFFER_STATUS_NV 0x9025
#endif

#ifndef GL_VIDEO_CAPTURE_TO_422_SUPPORTED_NV
#define GL_VIDEO_CAPTURE_TO_422_SUPPORTED_NV 0x9026
#endif

#ifndef GL_LAST_VIDEO_CAPTURE_STATUS_NV
#define GL_LAST_VIDEO_CAPTURE_STATUS_NV 0x9027
#endif

#ifndef GL_VIDEO_BUFFER_PITCH_NV
#define GL_VIDEO_BUFFER_PITCH_NV 0x9028
#endif

#ifndef GL_VIDEO_COLOR_CONVERSION_MATRIX_NV
#define GL_VIDEO_COLOR_CONVERSION_MATRIX_NV 0x9029
#endif

#ifndef GL_VIDEO_COLOR_CONVERSION_MAX_NV
#define GL_VIDEO_COLOR_CONVERSION_MAX_NV 0x902A
#endif

#ifndef GL_VIDEO_COLOR_CONVERSION_MIN_NV
#define GL_VIDEO_COLOR_CONVERSION_MIN_NV 0x902B
#endif

#ifndef GL_VIDEO_COLOR_CONVERSION_OFFSET_NV
#define GL_VIDEO_COLOR_CONVERSION_OFFSET_NV 0x902C
#endif

#ifndef GL_VIDEO_BUFFER_INTERNAL_FORMAT_NV
#define GL_VIDEO_BUFFER_INTERNAL_FORMAT_NV 0x902D
#endif

#ifndef GL_PARTIAL_SUCCESS_NV
#define GL_PARTIAL_SUCCESS_NV 0x902E
#endif

#ifndef GL_SUCCESS_NV
#define GL_SUCCESS_NV 0x902F
#endif

#ifndef GL_FAILURE_NV
#define GL_FAILURE_NV 0x9030
#endif

#ifndef GL_YCBYCR8_422_NV
#define GL_YCBYCR8_422_NV 0x9031
#endif

#ifndef GL_YCBAYCR8A_4224_NV
#define GL_YCBAYCR8A_4224_NV 0x9032
#endif

#ifndef GL_Z6Y10Z6CB10Z6Y10Z6CR10_422_NV
#define GL_Z6Y10Z6CB10Z6Y10Z6CR10_422_NV 0x9033
#endif

#ifndef GL_Z6Y10Z6CB10Z6A10Z6Y10Z6CR10Z6A10_4224_NV
#define GL_Z6Y10Z6CB10Z6A10Z6Y10Z6CR10Z6A10_4224_NV 0x9034
#endif

#ifndef GL_Z4Y12Z4CB12Z4Y12Z4CR12_422_NV
#define GL_Z4Y12Z4CB12Z4Y12Z4CR12_422_NV 0x9035
#endif

#ifndef GL_Z4Y12Z4CB12Z4A12Z4Y12Z4CR12Z4A12_4224_NV
#define GL_Z4Y12Z4CB12Z4A12Z4Y12Z4CR12Z4A12_4224_NV 0x9036
#endif

#ifndef GL_Z4Y12Z4CB12Z4CR12_444_NV
#define GL_Z4Y12Z4CB12Z4CR12_444_NV 0x9037
#endif

#ifndef GL_VIDEO_CAPTURE_FRAME_WIDTH_NV
#define GL_VIDEO_CAPTURE_FRAME_WIDTH_NV 0x9038
#endif

#ifndef GL_VIDEO_CAPTURE_FRAME_HEIGHT_NV
#define GL_VIDEO_CAPTURE_FRAME_HEIGHT_NV 0x9039
#endif

#ifndef GL_VIDEO_CAPTURE_FIELD_UPPER_HEIGHT_NV
#define GL_VIDEO_CAPTURE_FIELD_UPPER_HEIGHT_NV 0x903A
#endif

#ifndef GL_VIDEO_CAPTURE_FIELD_LOWER_HEIGHT_NV
#define GL_VIDEO_CAPTURE_FIELD_LOWER_HEIGHT_NV 0x903B
#endif

#ifndef GL_VIDEO_CAPTURE_SURFACE_ORIGIN_NV
#define GL_VIDEO_CAPTURE_SURFACE_ORIGIN_NV 0x903C
#endif

#ifndef GL_TEXTURE_COVERAGE_SAMPLES_NV
#define GL_TEXTURE_COVERAGE_SAMPLES_NV 0x9045
#endif

#ifndef GL_TEXTURE_COLOR_SAMPLES_NV
#define GL_TEXTURE_COLOR_SAMPLES_NV 0x9046
#endif

#ifndef GL_IMAGE_1D_EXT
#define GL_IMAGE_1D_EXT 0x904C
#endif

#ifndef GL_IMAGE_2D_EXT
#define GL_IMAGE_2D_EXT 0x904D
#endif

#ifndef GL_IMAGE_3D_EXT
#define GL_IMAGE_3D_EXT 0x904E
#endif

#ifndef GL_IMAGE_2D_RECT_EXT
#define GL_IMAGE_2D_RECT_EXT 0x904F
#endif

#ifndef GL_IMAGE_CUBE_EXT
#define GL_IMAGE_CUBE_EXT 0x9050
#endif

#ifndef GL_IMAGE_BUFFER_EXT
#define GL_IMAGE_BUFFER_EXT 0x9051
#endif

#ifndef GL_IMAGE_1D_ARRAY_EXT
#define GL_IMAGE_1D_ARRAY_EXT 0x9052
#endif

#ifndef GL_IMAGE_2D_ARRAY_EXT
#define GL_IMAGE_2D_ARRAY_EXT 0x9053
#endif

#ifndef GL_IMAGE_CUBE_MAP_ARRAY_EXT
#define GL_IMAGE_CUBE_MAP_ARRAY_EXT 0x9054
#endif

#ifndef GL_IMAGE_2D_MULTISAMPLE_EXT
#define GL_IMAGE_2D_MULTISAMPLE_EXT 0x9055
#endif

#ifndef GL_IMAGE_2D_MULTISAMPLE_ARRAY_EXT
#define GL_IMAGE_2D_MULTISAMPLE_ARRAY_EXT 0x9056
#endif

#ifndef GL_INT_IMAGE_1D_EXT
#define GL_INT_IMAGE_1D_EXT 0x9057
#endif

#ifndef GL_INT_IMAGE_2D_EXT
#define GL_INT_IMAGE_2D_EXT 0x9058
#endif

#ifndef GL_INT_IMAGE_3D_EXT
#define GL_INT_IMAGE_3D_EXT 0x9059
#endif

#ifndef GL_INT_IMAGE_2D_RECT_EXT
#define GL_INT_IMAGE_2D_RECT_EXT 0x905A
#endif

#ifndef GL_INT_IMAGE_CUBE_EXT
#define GL_INT_IMAGE_CUBE_EXT 0x905B
#endif

#ifndef GL_INT_IMAGE_BUFFER_EXT
#define GL_INT_IMAGE_BUFFER_EXT 0x905C
#endif

#ifndef GL_INT_IMAGE_1D_ARRAY_EXT
#define GL_INT_IMAGE_1D_ARRAY_EXT 0x905D
#endif

#ifndef GL_INT_IMAGE_2D_ARRAY_EXT
#define GL_INT_IMAGE_2D_ARRAY_EXT 0x905E
#endif

#ifndef GL_INT_IMAGE_CUBE_MAP_ARRAY_EXT
#define GL_INT_IMAGE_CUBE_MAP_ARRAY_EXT 0x905F
#endif

#ifndef GL_INT_IMAGE_2D_MULTISAMPLE_EXT
#define GL_INT_IMAGE_2D_MULTISAMPLE_EXT 0x9060
#endif

#ifndef GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT
#define GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT 0x9061
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_1D_EXT
#define GL_UNSIGNED_INT_IMAGE_1D_EXT 0x9062
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_2D_EXT
#define GL_UNSIGNED_INT_IMAGE_2D_EXT 0x9063
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_3D_EXT
#define GL_UNSIGNED_INT_IMAGE_3D_EXT 0x9064
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_2D_RECT_EXT
#define GL_UNSIGNED_INT_IMAGE_2D_RECT_EXT 0x9065
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_CUBE_EXT
#define GL_UNSIGNED_INT_IMAGE_CUBE_EXT 0x9066
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_BUFFER_EXT
#define GL_UNSIGNED_INT_IMAGE_BUFFER_EXT 0x9067
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_1D_ARRAY_EXT
#define GL_UNSIGNED_INT_IMAGE_1D_ARRAY_EXT 0x9068
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_2D_ARRAY_EXT
#define GL_UNSIGNED_INT_IMAGE_2D_ARRAY_EXT 0x9069
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT
#define GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT 0x906A
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_EXT
#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_EXT 0x906B
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT
#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT 0x906C
#endif

#ifndef GL_MAX_IMAGE_SAMPLES_EXT
#define GL_MAX_IMAGE_SAMPLES_EXT 0x906D
#endif

#ifndef GL_IMAGE_BINDING_FORMAT_EXT
#define GL_IMAGE_BINDING_FORMAT_EXT 0x906E
#endif

#ifndef GL_IMAGE_1D
#define GL_IMAGE_1D 0x904C
#endif

#ifndef GL_IMAGE_2D
#define GL_IMAGE_2D 0x904D
#endif

#ifndef GL_IMAGE_3D
#define GL_IMAGE_3D 0x904E
#endif

#ifndef GL_IMAGE_2D_RECT
#define GL_IMAGE_2D_RECT 0x904F
#endif

#ifndef GL_IMAGE_CUBE
#define GL_IMAGE_CUBE 0x9050
#endif

#ifndef GL_IMAGE_BUFFER
#define GL_IMAGE_BUFFER 0x9051
#endif

#ifndef GL_IMAGE_1D_ARRAY
#define GL_IMAGE_1D_ARRAY 0x9052
#endif

#ifndef GL_IMAGE_2D_ARRAY
#define GL_IMAGE_2D_ARRAY 0x9053
#endif

#ifndef GL_IMAGE_CUBE_MAP_ARRAY
#define GL_IMAGE_CUBE_MAP_ARRAY 0x9054
#endif

#ifndef GL_IMAGE_2D_MULTISAMPLE
#define GL_IMAGE_2D_MULTISAMPLE 0x9055
#endif

#ifndef GL_IMAGE_2D_MULTISAMPLE_ARRAY
#define GL_IMAGE_2D_MULTISAMPLE_ARRAY 0x9056
#endif

#ifndef GL_INT_IMAGE_1D
#define GL_INT_IMAGE_1D 0x9057
#endif

#ifndef GL_INT_IMAGE_2D
#define GL_INT_IMAGE_2D 0x9058
#endif

#ifndef GL_INT_IMAGE_3D
#define GL_INT_IMAGE_3D 0x9059
#endif

#ifndef GL_INT_IMAGE_2D_RECT
#define GL_INT_IMAGE_2D_RECT 0x905A
#endif

#ifndef GL_INT_IMAGE_CUBE
#define GL_INT_IMAGE_CUBE 0x905B
#endif

#ifndef GL_INT_IMAGE_BUFFER
#define GL_INT_IMAGE_BUFFER 0x905C
#endif

#ifndef GL_INT_IMAGE_1D_ARRAY
#define GL_INT_IMAGE_1D_ARRAY 0x905D
#endif

#ifndef GL_INT_IMAGE_2D_ARRAY
#define GL_INT_IMAGE_2D_ARRAY 0x905E
#endif

#ifndef GL_INT_IMAGE_CUBE_MAP_ARRAY
#define GL_INT_IMAGE_CUBE_MAP_ARRAY 0x905F
#endif

#ifndef GL_INT_IMAGE_2D_MULTISAMPLE
#define GL_INT_IMAGE_2D_MULTISAMPLE 0x9060
#endif

#ifndef GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY
#define GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY 0x9061
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_1D
#define GL_UNSIGNED_INT_IMAGE_1D 0x9062
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_2D
#define GL_UNSIGNED_INT_IMAGE_2D 0x9063
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_3D
#define GL_UNSIGNED_INT_IMAGE_3D 0x9064
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_2D_RECT
#define GL_UNSIGNED_INT_IMAGE_2D_RECT 0x9065
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_CUBE
#define GL_UNSIGNED_INT_IMAGE_CUBE 0x9066
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_BUFFER
#define GL_UNSIGNED_INT_IMAGE_BUFFER 0x9067
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_1D_ARRAY
#define GL_UNSIGNED_INT_IMAGE_1D_ARRAY 0x9068
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_2D_ARRAY
#define GL_UNSIGNED_INT_IMAGE_2D_ARRAY 0x9069
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY
#define GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY 0x906A
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE
#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE 0x906B
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY
#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY 0x906C
#endif

#ifndef GL_MAX_IMAGE_SAMPLES
#define GL_MAX_IMAGE_SAMPLES 0x906D
#endif

#ifndef GL_IMAGE_BINDING_FORMAT
#define GL_IMAGE_BINDING_FORMAT 0x906E
#endif

#ifndef GL_SHADER_GLOBAL_ACCESS_BARRIER_BIT_NV
#define GL_SHADER_GLOBAL_ACCESS_BARRIER_BIT_NV 0x00000010
#endif

#ifndef GL_RGB10_A2UI
#define GL_RGB10_A2UI 0x906F
#endif

#ifndef GL_PATH_FORMAT_SVG_NV
#define GL_PATH_FORMAT_SVG_NV 0x9070
#endif

#ifndef GL_PATH_FORMAT_PS_NV
#define GL_PATH_FORMAT_PS_NV 0x9071
#endif

#ifndef GL_STANDARD_FONT_NAME_NV
#define GL_STANDARD_FONT_NAME_NV 0x9072
#endif

#ifndef GL_SYSTEM_FONT_NAME_NV
#define GL_SYSTEM_FONT_NAME_NV 0x9073
#endif

#ifndef GL_FILE_NAME_NV
#define GL_FILE_NAME_NV 0x9074
#endif

#ifndef GL_PATH_STROKE_WIDTH_NV
#define GL_PATH_STROKE_WIDTH_NV 0x9075
#endif

#ifndef GL_PATH_END_CAPS_NV
#define GL_PATH_END_CAPS_NV 0x9076
#endif

#ifndef GL_PATH_INITIAL_END_CAP_NV
#define GL_PATH_INITIAL_END_CAP_NV 0x9077
#endif

#ifndef GL_PATH_TERMINAL_END_CAP_NV
#define GL_PATH_TERMINAL_END_CAP_NV 0x9078
#endif

#ifndef GL_PATH_JOIN_STYLE_NV
#define GL_PATH_JOIN_STYLE_NV 0x9079
#endif

#ifndef GL_PATH_MITER_LIMIT_NV
#define GL_PATH_MITER_LIMIT_NV 0x907A
#endif

#ifndef GL_PATH_DASH_CAPS_NV
#define GL_PATH_DASH_CAPS_NV 0x907B
#endif

#ifndef GL_PATH_INITIAL_DASH_CAP_NV
#define GL_PATH_INITIAL_DASH_CAP_NV 0x907C
#endif

#ifndef GL_PATH_TERMINAL_DASH_CAP_NV
#define GL_PATH_TERMINAL_DASH_CAP_NV 0x907D
#endif

#ifndef GL_PATH_DASH_OFFSET_NV
#define GL_PATH_DASH_OFFSET_NV 0x907E
#endif

#ifndef GL_PATH_CLIENT_LENGTH_NV
#define GL_PATH_CLIENT_LENGTH_NV 0x907F
#endif

#ifndef GL_PATH_FILL_MODE_NV
#define GL_PATH_FILL_MODE_NV 0x9080
#endif

#ifndef GL_PATH_FILL_MASK_NV
#define GL_PATH_FILL_MASK_NV 0x9081
#endif

#ifndef GL_PATH_FILL_COVER_MODE_NV
#define GL_PATH_FILL_COVER_MODE_NV 0x9082
#endif

#ifndef GL_PATH_STROKE_COVER_MODE_NV
#define GL_PATH_STROKE_COVER_MODE_NV 0x9083
#endif

#ifndef GL_PATH_STROKE_MASK_NV
#define GL_PATH_STROKE_MASK_NV 0x9084
#endif

#ifndef GL_PATH_SAMPLE_QUALITY_NV
#define GL_PATH_SAMPLE_QUALITY_NV 0x9085
#endif

#ifndef GL_PATH_STROKE_BOUND_NV
#define GL_PATH_STROKE_BOUND_NV 0x9086
#endif

#ifndef GL_PATH_STROKE_OVERSAMPLE_COUNT_NV
#define GL_PATH_STROKE_OVERSAMPLE_COUNT_NV 0x9087
#endif

#ifndef GL_COUNT_UP_NV
#define GL_COUNT_UP_NV 0x9088
#endif

#ifndef GL_COUNT_DOWN_NV
#define GL_COUNT_DOWN_NV 0x9089
#endif

#ifndef GL_PATH_OBJECT_BOUNDING_BOX_NV
#define GL_PATH_OBJECT_BOUNDING_BOX_NV 0x908A
#endif

#ifndef GL_CONVEX_HULL_NV
#define GL_CONVEX_HULL_NV 0x908B
#endif

#ifndef GL_MULTI_HULLS_NV
#define GL_MULTI_HULLS_NV 0x908C
#endif

#ifndef GL_BOUNDING_BOX_NV
#define GL_BOUNDING_BOX_NV 0x908D
#endif

#ifndef GL_TRANSLATE_X_NV
#define GL_TRANSLATE_X_NV 0x908E
#endif

#ifndef GL_TRANSLATE_Y_NV
#define GL_TRANSLATE_Y_NV 0x908F
#endif

#ifndef GL_TRANSLATE_2D_NV
#define GL_TRANSLATE_2D_NV 0x9090
#endif

#ifndef GL_TRANSLATE_3D_NV
#define GL_TRANSLATE_3D_NV 0x9091
#endif

#ifndef GL_AFFINE_2D_NV
#define GL_AFFINE_2D_NV 0x9092
#endif

#ifndef GL_PROJECTIVE_2D_NV
#define GL_PROJECTIVE_2D_NV 0x9093
#endif

#ifndef GL_AFFINE_3D_NV
#define GL_AFFINE_3D_NV 0x9094
#endif

#ifndef GL_PROJECTIVE_3D_NV
#define GL_PROJECTIVE_3D_NV 0x9095
#endif

#ifndef GL_TRANSPOSE_AFFINE_2D_NV
#define GL_TRANSPOSE_AFFINE_2D_NV 0x9096
#endif

#ifndef GL_TRANSPOSE_PROJECTIVE_2D_NV
#define GL_TRANSPOSE_PROJECTIVE_2D_NV 0x9097
#endif

#ifndef GL_TRANSPOSE_AFFINE_3D_NV
#define GL_TRANSPOSE_AFFINE_3D_NV 0x9098
#endif

#ifndef GL_TRANSPOSE_PROJECTIVE_3D_NV
#define GL_TRANSPOSE_PROJECTIVE_3D_NV 0x9099
#endif

#ifndef GL_UTF8_NV
#define GL_UTF8_NV 0x909A
#endif

#ifndef GL_UTF16_NV
#define GL_UTF16_NV 0x909B
#endif

#ifndef GL_BOUNDING_BOX_OF_BOUNDING_BOXES_NV
#define GL_BOUNDING_BOX_OF_BOUNDING_BOXES_NV 0x909C
#endif

#ifndef GL_PATH_COMMAND_COUNT_NV
#define GL_PATH_COMMAND_COUNT_NV 0x909D
#endif

#ifndef GL_PATH_COORD_COUNT_NV
#define GL_PATH_COORD_COUNT_NV 0x909E
#endif

#ifndef GL_PATH_DASH_ARRAY_COUNT_NV
#define GL_PATH_DASH_ARRAY_COUNT_NV 0x909F
#endif

#ifndef GL_PATH_COMPUTED_LENGTH_NV
#define GL_PATH_COMPUTED_LENGTH_NV 0x90A0
#endif

#ifndef GL_PATH_FILL_BOUNDING_BOX_NV
#define GL_PATH_FILL_BOUNDING_BOX_NV 0x90A1
#endif

#ifndef GL_PATH_STROKE_BOUNDING_BOX_NV
#define GL_PATH_STROKE_BOUNDING_BOX_NV 0x90A2
#endif

#ifndef GL_SQUARE_NV
#define GL_SQUARE_NV 0x90A3
#endif

#ifndef GL_ROUND_NV
#define GL_ROUND_NV 0x90A4
#endif

#ifndef GL_TRIANGULAR_NV
#define GL_TRIANGULAR_NV 0x90A5
#endif

#ifndef GL_BEVEL_NV
#define GL_BEVEL_NV 0x90A6
#endif

#ifndef GL_MITER_REVERT_NV
#define GL_MITER_REVERT_NV 0x90A7
#endif

#ifndef GL_MITER_TRUNCATE_NV
#define GL_MITER_TRUNCATE_NV 0x90A8
#endif

#ifndef GL_SKIP_MISSING_GLYPH_NV
#define GL_SKIP_MISSING_GLYPH_NV 0x90A9
#endif

#ifndef GL_USE_MISSING_GLYPH_NV
#define GL_USE_MISSING_GLYPH_NV 0x90AA
#endif

#ifndef GL_PATH_ERROR_POSITION_NV
#define GL_PATH_ERROR_POSITION_NV 0x90AB
#endif

#ifndef GL_PATH_FOG_GEN_MODE_NV
#define GL_PATH_FOG_GEN_MODE_NV 0x90AC
#endif

#ifndef GL_ACCUM_ADJACENT_PAIRS_NV
#define GL_ACCUM_ADJACENT_PAIRS_NV 0x90AD
#endif

#ifndef GL_ADJACENT_PAIRS_NV
#define GL_ADJACENT_PAIRS_NV 0x90AE
#endif

#ifndef GL_FIRST_TO_REST_NV
#define GL_FIRST_TO_REST_NV 0x90AF
#endif

#ifndef GL_PATH_GEN_MODE_NV
#define GL_PATH_GEN_MODE_NV 0x90B0
#endif

#ifndef GL_PATH_GEN_COEFF_NV
#define GL_PATH_GEN_COEFF_NV 0x90B1
#endif

#ifndef GL_PATH_GEN_COLOR_FORMAT_NV
#define GL_PATH_GEN_COLOR_FORMAT_NV 0x90B2
#endif

#ifndef GL_PATH_GEN_COMPONENTS_NV
#define GL_PATH_GEN_COMPONENTS_NV 0x90B3
#endif

#ifndef GL_PATH_DASH_OFFSET_RESET_NV
#define GL_PATH_DASH_OFFSET_RESET_NV 0x90B4
#endif

#ifndef GL_MOVE_TO_RESETS_NV
#define GL_MOVE_TO_RESETS_NV 0x90B5
#endif

#ifndef GL_MOVE_TO_CONTINUES_NV
#define GL_MOVE_TO_CONTINUES_NV 0x90B6
#endif

#ifndef GL_PATH_STENCIL_FUNC_NV
#define GL_PATH_STENCIL_FUNC_NV 0x90B7
#endif

#ifndef GL_PATH_STENCIL_REF_NV
#define GL_PATH_STENCIL_REF_NV 0x90B8
#endif

#ifndef GL_PATH_STENCIL_VALUE_MASK_NV
#define GL_PATH_STENCIL_VALUE_MASK_NV 0x90B9
#endif

#ifndef GL_CLOSE_PATH_NV
#define GL_CLOSE_PATH_NV 0x00
#endif

#ifndef GL_MOVE_TO_NV
#define GL_MOVE_TO_NV 0x02
#endif

#ifndef GL_RELATIVE_MOVE_TO_NV
#define GL_RELATIVE_MOVE_TO_NV 0x03
#endif

#ifndef GL_LINE_TO_NV
#define GL_LINE_TO_NV 0x04
#endif

#ifndef GL_RELATIVE_LINE_TO_NV
#define GL_RELATIVE_LINE_TO_NV 0x05
#endif

#ifndef GL_HORIZONTAL_LINE_TO_NV
#define GL_HORIZONTAL_LINE_TO_NV 0x06
#endif

#ifndef GL_RELATIVE_HORIZONTAL_LINE_TO_NV
#define GL_RELATIVE_HORIZONTAL_LINE_TO_NV 0x07
#endif

#ifndef GL_VERTICAL_LINE_TO_NV
#define GL_VERTICAL_LINE_TO_NV 0x08
#endif

#ifndef GL_RELATIVE_VERTICAL_LINE_TO_NV
#define GL_RELATIVE_VERTICAL_LINE_TO_NV 0x09
#endif

#ifndef GL_QUADRATIC_CURVE_TO_NV
#define GL_QUADRATIC_CURVE_TO_NV 0x0A
#endif

#ifndef GL_RELATIVE_QUADRATIC_CURVE_TO_NV
#define GL_RELATIVE_QUADRATIC_CURVE_TO_NV 0x0B
#endif

#ifndef GL_CUBIC_CURVE_TO_NV
#define GL_CUBIC_CURVE_TO_NV 0x0C
#endif

#ifndef GL_RELATIVE_CUBIC_CURVE_TO_NV
#define GL_RELATIVE_CUBIC_CURVE_TO_NV 0x0D
#endif

#ifndef GL_SMOOTH_QUADRATIC_CURVE_TO_NV
#define GL_SMOOTH_QUADRATIC_CURVE_TO_NV 0x0E
#endif

#ifndef GL_RELATIVE_SMOOTH_QUADRATIC_CURVE_TO_NV
#define GL_RELATIVE_SMOOTH_QUADRATIC_CURVE_TO_NV 0x0F
#endif

#ifndef GL_SMOOTH_CUBIC_CURVE_TO_NV
#define GL_SMOOTH_CUBIC_CURVE_TO_NV 0x10
#endif

#ifndef GL_RELATIVE_SMOOTH_CUBIC_CURVE_TO_NV
#define GL_RELATIVE_SMOOTH_CUBIC_CURVE_TO_NV 0x11
#endif

#ifndef GL_SMALL_CCW_ARC_TO_NV
#define GL_SMALL_CCW_ARC_TO_NV 0x12
#endif

#ifndef GL_RELATIVE_SMALL_CCW_ARC_TO_NV
#define GL_RELATIVE_SMALL_CCW_ARC_TO_NV 0x13
#endif

#ifndef GL_SMALL_CW_ARC_TO_NV
#define GL_SMALL_CW_ARC_TO_NV 0x14
#endif

#ifndef GL_RELATIVE_SMALL_CW_ARC_TO_NV
#define GL_RELATIVE_SMALL_CW_ARC_TO_NV 0x15
#endif

#ifndef GL_LARGE_CCW_ARC_TO_NV
#define GL_LARGE_CCW_ARC_TO_NV 0x16
#endif

#ifndef GL_RELATIVE_LARGE_CCW_ARC_TO_NV
#define GL_RELATIVE_LARGE_CCW_ARC_TO_NV 0x17
#endif

#ifndef GL_LARGE_CW_ARC_TO_NV
#define GL_LARGE_CW_ARC_TO_NV 0x18
#endif

#ifndef GL_RELATIVE_LARGE_CW_ARC_TO_NV
#define GL_RELATIVE_LARGE_CW_ARC_TO_NV 0x19
#endif

#ifndef GL_RESTART_PATH_NV
#define GL_RESTART_PATH_NV 0xF0
#endif

#ifndef GL_DUP_FIRST_CUBIC_CURVE_TO_NV
#define GL_DUP_FIRST_CUBIC_CURVE_TO_NV 0xF2
#endif

#ifndef GL_DUP_LAST_CUBIC_CURVE_TO_NV
#define GL_DUP_LAST_CUBIC_CURVE_TO_NV 0xF4
#endif

#ifndef GL_RECT_NV
#define GL_RECT_NV 0xF6
#endif

#ifndef GL_CIRCULAR_CCW_ARC_TO_NV
#define GL_CIRCULAR_CCW_ARC_TO_NV 0xF8
#endif

#ifndef GL_CIRCULAR_CW_ARC_TO_NV
#define GL_CIRCULAR_CW_ARC_TO_NV 0xFA
#endif

#ifndef GL_CIRCULAR_TANGENT_ARC_TO_NV
#define GL_CIRCULAR_TANGENT_ARC_TO_NV 0xFC
#endif

#ifndef GL_ARC_TO_NV
#define GL_ARC_TO_NV 0xFE
#endif

#ifndef GL_RELATIVE_ARC_TO_NV
#define GL_RELATIVE_ARC_TO_NV 0xFF
#endif

#ifndef GL_BOLD_BIT_NV
#define GL_BOLD_BIT_NV 0x01
#endif

#ifndef GL_ITALIC_BIT_NV
#define GL_ITALIC_BIT_NV 0x02
#endif

#ifndef GL_GLYPH_WIDTH_BIT_NV
#define GL_GLYPH_WIDTH_BIT_NV 0x01
#endif

#ifndef GL_GLYPH_HEIGHT_BIT_NV
#define GL_GLYPH_HEIGHT_BIT_NV 0x02
#endif

#ifndef GL_GLYPH_HORIZONTAL_BEARING_X_BIT_NV
#define GL_GLYPH_HORIZONTAL_BEARING_X_BIT_NV 0x04
#endif

#ifndef GL_GLYPH_HORIZONTAL_BEARING_Y_BIT_NV
#define GL_GLYPH_HORIZONTAL_BEARING_Y_BIT_NV 0x08
#endif

#ifndef GL_GLYPH_HORIZONTAL_BEARING_ADVANCE_BIT_NV
#define GL_GLYPH_HORIZONTAL_BEARING_ADVANCE_BIT_NV 0x10
#endif

#ifndef GL_GLYPH_VERTICAL_BEARING_X_BIT_NV
#define GL_GLYPH_VERTICAL_BEARING_X_BIT_NV 0x20
#endif

#ifndef GL_GLYPH_VERTICAL_BEARING_Y_BIT_NV
#define GL_GLYPH_VERTICAL_BEARING_Y_BIT_NV 0x40
#endif

#ifndef GL_GLYPH_VERTICAL_BEARING_ADVANCE_BIT_NV
#define GL_GLYPH_VERTICAL_BEARING_ADVANCE_BIT_NV 0x80
#endif

#ifndef GL_GLYPH_HAS_KERNING_NV
#define GL_GLYPH_HAS_KERNING_NV 0x100
#endif

#ifndef GL_FONT_X_MIN_BOUNDS_NV
#define GL_FONT_X_MIN_BOUNDS_NV 0x00010000
#endif

#ifndef GL_FONT_Y_MIN_BOUNDS_NV
#define GL_FONT_Y_MIN_BOUNDS_NV 0x00020000
#endif

#ifndef GL_FONT_X_MAX_BOUNDS_NV
#define GL_FONT_X_MAX_BOUNDS_NV 0x00040000
#endif

#ifndef GL_FONT_Y_MAX_BOUNDS_NV
#define GL_FONT_Y_MAX_BOUNDS_NV 0x00080000
#endif

#ifndef GL_FONT_UNITS_PER_EM_NV
#define GL_FONT_UNITS_PER_EM_NV 0x00100000
#endif

#ifndef GL_FONT_ASCENDER_NV
#define GL_FONT_ASCENDER_NV 0x00200000
#endif

#ifndef GL_FONT_DESCENDER_NV
#define GL_FONT_DESCENDER_NV 0x00400000
#endif

#ifndef GL_FONT_HEIGHT_NV
#define GL_FONT_HEIGHT_NV 0x00800000
#endif

#ifndef GL_FONT_MAX_ADVANCE_WIDTH_NV
#define GL_FONT_MAX_ADVANCE_WIDTH_NV 0x01000000
#endif

#ifndef GL_FONT_MAX_ADVANCE_HEIGHT_NV
#define GL_FONT_MAX_ADVANCE_HEIGHT_NV 0x02000000
#endif

#ifndef GL_FONT_UNDERLINE_POSITION_NV
#define GL_FONT_UNDERLINE_POSITION_NV 0x04000000
#endif

#ifndef GL_FONT_UNDERLINE_THICKNESS_NV
#define GL_FONT_UNDERLINE_THICKNESS_NV 0x08000000
#endif

#ifndef GL_FONT_HAS_KERNING_NV
#define GL_FONT_HAS_KERNING_NV 0x10000000
#endif

#ifndef GL_SCALED_RESOLVE_FASTEST_EXT
#define GL_SCALED_RESOLVE_FASTEST_EXT 0x90BA
#endif

#ifndef GL_SCALED_RESOLVE_NICEST_EXT
#define GL_SCALED_RESOLVE_NICEST_EXT 0x90BB
#endif

#ifndef GL_MIN_MAP_BUFFER_ALIGNMENT
#define GL_MIN_MAP_BUFFER_ALIGNMENT 0x90BC
#endif

#ifndef GL_PATH_STENCIL_DEPTH_OFFSET_FACTOR_NV
#define GL_PATH_STENCIL_DEPTH_OFFSET_FACTOR_NV 0x90BD
#endif

#ifndef GL_PATH_STENCIL_DEPTH_OFFSET_UNITS_NV
#define GL_PATH_STENCIL_DEPTH_OFFSET_UNITS_NV 0x90BE
#endif

#ifndef GL_PATH_COVER_DEPTH_FUNC_NV
#define GL_PATH_COVER_DEPTH_FUNC_NV 0x90BF
#endif

#ifndef GL_IMAGE_FORMAT_COMPATIBILITY_TYPE
#define GL_IMAGE_FORMAT_COMPATIBILITY_TYPE 0x90C7
#endif

#ifndef GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE
#define GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE 0x90C8
#endif

#ifndef GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS
#define GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS 0x90C9
#endif

#ifndef GL_MAX_VERTEX_IMAGE_UNIFORMS
#define GL_MAX_VERTEX_IMAGE_UNIFORMS 0x90CA
#endif

#ifndef GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS
#define GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS 0x90CB
#endif

#ifndef GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS
#define GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS 0x90CC
#endif

#ifndef GL_MAX_GEOMETRY_IMAGE_UNIFORMS
#define GL_MAX_GEOMETRY_IMAGE_UNIFORMS 0x90CD
#endif

#ifndef GL_MAX_FRAGMENT_IMAGE_UNIFORMS
#define GL_MAX_FRAGMENT_IMAGE_UNIFORMS 0x90CE
#endif

#ifndef GL_MAX_COMBINED_IMAGE_UNIFORMS
#define GL_MAX_COMBINED_IMAGE_UNIFORMS 0x90CF
#endif

#ifndef GL_SHADER_STORAGE_BUFFER
#define GL_SHADER_STORAGE_BUFFER 0x90D2
#endif

#ifndef GL_SHADER_STORAGE_BUFFER_BINDING
#define GL_SHADER_STORAGE_BUFFER_BINDING 0x90D3
#endif

#ifndef GL_SHADER_STORAGE_BUFFER_START
#define GL_SHADER_STORAGE_BUFFER_START 0x90D4
#endif

#ifndef GL_SHADER_STORAGE_BUFFER_SIZE
#define GL_SHADER_STORAGE_BUFFER_SIZE 0x90D5
#endif

#ifndef GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS
#define GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS 0x90D6
#endif

#ifndef GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS
#define GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS 0x90D7
#endif

#ifndef GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS
#define GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS 0x90D8
#endif

#ifndef GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS
#define GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS 0x90D9
#endif

#ifndef GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS
#define GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS 0x90DA
#endif

#ifndef GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS
#define GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS 0x90DB
#endif

#ifndef GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS
#define GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS 0x90DC
#endif

#ifndef GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS
#define GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS 0x90DD
#endif

#ifndef GL_MAX_SHADER_STORAGE_BLOCK_SIZE
#define GL_MAX_SHADER_STORAGE_BLOCK_SIZE 0x90DE
#endif

#ifndef GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT
#define GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT 0x90DF
#endif

#ifndef GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES
#define GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS
#endif

#ifndef GL_SYNC_X11_FENCE_EXT
#define GL_SYNC_X11_FENCE_EXT 0x90E1
#endif

#ifndef GL_DEPTH_STENCIL_TEXTURE_MODE
#define GL_DEPTH_STENCIL_TEXTURE_MODE 0x90EA
#endif

#ifndef GL_MAX_COMPUTE_LOCAL_INVOCATIONS
#define GL_MAX_COMPUTE_LOCAL_INVOCATIONS 0x90EB
#endif

#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER
#define GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER 0x90EC
#endif

#ifndef GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER 0x90ED
#endif

#ifndef GL_DISPATCH_INDIRECT_BUFFER
#define GL_DISPATCH_INDIRECT_BUFFER 0x90EE
#endif

#ifndef GL_DISPATCH_INDIRECT_BUFFER_BINDING
#define GL_DISPATCH_INDIRECT_BUFFER_BINDING 0x90EF
#endif

#ifndef GL_DRAW_BUFFER_EXT
#define GL_DRAW_BUFFER_EXT 0x0C01
#endif

#ifndef GL_READ_BUFFER_EXT
#define GL_READ_BUFFER_EXT 0x0C02
#endif

#ifndef GL_COLOR_ATTACHMENT_EXT
#define GL_COLOR_ATTACHMENT_EXT 0x90F0
#endif

#ifndef GL_MULTIVIEW_EXT
#define GL_MULTIVIEW_EXT 0x90F1
#endif

#ifndef GL_MAX_MULTIVIEW_BUFFERS_EXT
#define GL_MAX_MULTIVIEW_BUFFERS_EXT 0x90F2
#endif

#ifndef GL_TEXTURE_2D_MULTISAMPLE
#define GL_TEXTURE_2D_MULTISAMPLE 0x9100
#endif

#ifndef GL_PROXY_TEXTURE_2D_MULTISAMPLE
#define GL_PROXY_TEXTURE_2D_MULTISAMPLE 0x9101
#endif

#ifndef GL_TEXTURE_2D_MULTISAMPLE_ARRAY
#define GL_TEXTURE_2D_MULTISAMPLE_ARRAY 0x9102
#endif

#ifndef GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY
#define GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY 0x9103
#endif

#ifndef GL_TEXTURE_BINDING_2D_MULTISAMPLE
#define GL_TEXTURE_BINDING_2D_MULTISAMPLE 0x9104
#endif

#ifndef GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY
#define GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY 0x9105
#endif

#ifndef GL_TEXTURE_SAMPLES
#define GL_TEXTURE_SAMPLES 0x9106
#endif

#ifndef GL_TEXTURE_FIXED_SAMPLE_LOCATIONS
#define GL_TEXTURE_FIXED_SAMPLE_LOCATIONS 0x9107
#endif

#ifndef GL_SAMPLER_2D_MULTISAMPLE
#define GL_SAMPLER_2D_MULTISAMPLE 0x9108
#endif

#ifndef GL_INT_SAMPLER_2D_MULTISAMPLE
#define GL_INT_SAMPLER_2D_MULTISAMPLE 0x9109
#endif

#ifndef GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE
#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE 0x910A
#endif

#ifndef GL_SAMPLER_2D_MULTISAMPLE_ARRAY
#define GL_SAMPLER_2D_MULTISAMPLE_ARRAY 0x910B
#endif

#ifndef GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY
#define GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY 0x910C
#endif

#ifndef GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY
#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY 0x910D
#endif

#ifndef GL_MAX_COLOR_TEXTURE_SAMPLES
#define GL_MAX_COLOR_TEXTURE_SAMPLES 0x910E
#endif

#ifndef GL_MAX_DEPTH_TEXTURE_SAMPLES
#define GL_MAX_DEPTH_TEXTURE_SAMPLES 0x910F
#endif

#ifndef GL_MAX_INTEGER_SAMPLES
#define GL_MAX_INTEGER_SAMPLES 0x9110
#endif

#ifndef GL_MAX_SERVER_WAIT_TIMEOUT
#define GL_MAX_SERVER_WAIT_TIMEOUT 0x9111
#endif

#ifndef GL_OBJECT_TYPE
#define GL_OBJECT_TYPE 0x9112
#endif

#ifndef GL_SYNC_CONDITION
#define GL_SYNC_CONDITION 0x9113
#endif

#ifndef GL_SYNC_STATUS
#define GL_SYNC_STATUS 0x9114
#endif

#ifndef GL_SYNC_FLAGS
#define GL_SYNC_FLAGS 0x9115
#endif

#ifndef GL_SYNC_FENCE
#define GL_SYNC_FENCE 0x9116
#endif

#ifndef GL_SYNC_GPU_COMMANDS_COMPLETE
#define GL_SYNC_GPU_COMMANDS_COMPLETE 0x9117
#endif

#ifndef GL_UNSIGNALED
#define GL_UNSIGNALED 0x9118
#endif

#ifndef GL_SIGNALED
#define GL_SIGNALED 0x9119
#endif

#ifndef GL_ALREADY_SIGNALED
#define GL_ALREADY_SIGNALED 0x911A
#endif

#ifndef GL_TIMEOUT_EXPIRED
#define GL_TIMEOUT_EXPIRED 0x911B
#endif

#ifndef GL_CONDITION_SATISFIED
#define GL_CONDITION_SATISFIED 0x911C
#endif

#ifndef GL_WAIT_FAILED
#define GL_WAIT_FAILED 0x911D
#endif

#ifndef GL_SYNC_FLUSH_COMMANDS_BIT
#define GL_SYNC_FLUSH_COMMANDS_BIT 0x00000001
#endif

#ifndef GL_TIMEOUT_IGNORED
#define GL_TIMEOUT_IGNORED 0xFFFFFFFFFFFFFFFFull
#endif

#ifndef GL_MAX_SERVER_WAIT_TIMEOUT_APPLE
#define GL_MAX_SERVER_WAIT_TIMEOUT_APPLE 0x9111
#endif

#ifndef GL_OBJECT_TYPE_APPLE
#define GL_OBJECT_TYPE_APPLE 0x9112
#endif

#ifndef GL_SYNC_CONDITION_APPLE
#define GL_SYNC_CONDITION_APPLE 0x9113
#endif

#ifndef GL_SYNC_STATUS_APPLE
#define GL_SYNC_STATUS_APPLE 0x9114
#endif

#ifndef GL_SYNC_FLAGS_APPLE
#define GL_SYNC_FLAGS_APPLE 0x9115
#endif

#ifndef GL_SYNC_FENCE_APPLE
#define GL_SYNC_FENCE_APPLE 0x9116
#endif

#ifndef GL_SYNC_GPU_COMMANDS_COMPLETE_APPLE
#define GL_SYNC_GPU_COMMANDS_COMPLETE_APPLE 0x9117
#endif

#ifndef GL_UNSIGNALED_APPLE
#define GL_UNSIGNALED_APPLE 0x9118
#endif

#ifndef GL_SIGNALED_APPLE
#define GL_SIGNALED_APPLE 0x9119
#endif

#ifndef GL_ALREADY_SIGNALED_APPLE
#define GL_ALREADY_SIGNALED_APPLE 0x911A
#endif

#ifndef GL_TIMEOUT_EXPIRED_APPLE
#define GL_TIMEOUT_EXPIRED_APPLE 0x911B
#endif

#ifndef GL_CONDITION_SATISFIED_APPLE
#define GL_CONDITION_SATISFIED_APPLE 0x911C
#endif

#ifndef GL_WAIT_FAILED_APPLE
#define GL_WAIT_FAILED_APPLE 0x911D
#endif

#ifndef GL_SYNC_FLUSH_COMMANDS_BIT_APPLE
#define GL_SYNC_FLUSH_COMMANDS_BIT_APPLE 0x00000001
#endif

#ifndef GL_TIMEOUT_IGNORED_APPLE
#define GL_TIMEOUT_IGNORED_APPLE 0xFFFFFFFFFFFFFFFFull
#endif

#ifndef GL_BUFFER_ACCESS_FLAGS
#define GL_BUFFER_ACCESS_FLAGS 0x911F
#endif

#ifndef GL_BUFFER_MAP_LENGTH
#define GL_BUFFER_MAP_LENGTH 0x9120
#endif

#ifndef GL_BUFFER_MAP_OFFSET
#define GL_BUFFER_MAP_OFFSET 0x9121
#endif

#ifndef GL_MAX_VERTEX_OUTPUT_COMPONENTS
#define GL_MAX_VERTEX_OUTPUT_COMPONENTS 0x9122
#endif

#ifndef GL_MAX_GEOMETRY_INPUT_COMPONENTS
#define GL_MAX_GEOMETRY_INPUT_COMPONENTS 0x9123
#endif

#ifndef GL_MAX_GEOMETRY_OUTPUT_COMPONENTS
#define GL_MAX_GEOMETRY_OUTPUT_COMPONENTS 0x9124
#endif

#ifndef GL_MAX_FRAGMENT_INPUT_COMPONENTS
#define GL_MAX_FRAGMENT_INPUT_COMPONENTS 0x9125
#endif

#ifndef GL_CONTEXT_CORE_PROFILE_BIT
#define GL_CONTEXT_CORE_PROFILE_BIT 0x00000001
#endif

#ifndef GL_CONTEXT_COMPATIBILITY_PROFILE_BIT
#define GL_CONTEXT_COMPATIBILITY_PROFILE_BIT 0x00000002
#endif

#ifndef GL_CONTEXT_PROFILE_MASK
#define GL_CONTEXT_PROFILE_MASK 0x9126
#endif

#ifndef GL_UNPACK_COMPRESSED_BLOCK_WIDTH
#define GL_UNPACK_COMPRESSED_BLOCK_WIDTH 0x9127
#endif

#ifndef GL_UNPACK_COMPRESSED_BLOCK_HEIGHT
#define GL_UNPACK_COMPRESSED_BLOCK_HEIGHT 0x9128
#endif

#ifndef GL_UNPACK_COMPRESSED_BLOCK_DEPTH
#define GL_UNPACK_COMPRESSED_BLOCK_DEPTH 0x9129
#endif

#ifndef GL_UNPACK_COMPRESSED_BLOCK_SIZE
#define GL_UNPACK_COMPRESSED_BLOCK_SIZE 0x912A
#endif

#ifndef GL_PACK_COMPRESSED_BLOCK_WIDTH
#define GL_PACK_COMPRESSED_BLOCK_WIDTH 0x912B
#endif

#ifndef GL_PACK_COMPRESSED_BLOCK_HEIGHT
#define GL_PACK_COMPRESSED_BLOCK_HEIGHT 0x912C
#endif

#ifndef GL_PACK_COMPRESSED_BLOCK_DEPTH
#define GL_PACK_COMPRESSED_BLOCK_DEPTH 0x912D
#endif

#ifndef GL_PACK_COMPRESSED_BLOCK_SIZE
#define GL_PACK_COMPRESSED_BLOCK_SIZE 0x912E
#endif

#ifndef GL_TEXTURE_IMMUTABLE_FORMAT
#define GL_TEXTURE_IMMUTABLE_FORMAT 0x912F
#endif

#ifndef GL_SGX_PROGRAM_BINARY_IMG
#define GL_SGX_PROGRAM_BINARY_IMG 0x9130
#endif

#ifndef GL_RENDERBUFFER_SAMPLES_IMG
#define GL_RENDERBUFFER_SAMPLES_IMG 0x9133
#endif

#ifndef GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_IMG
#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_IMG 0x9134
#endif

#ifndef GL_MAX_SAMPLES_IMG
#define GL_MAX_SAMPLES_IMG 0x9135
#endif

#ifndef GL_TEXTURE_SAMPLES_IMG
#define GL_TEXTURE_SAMPLES_IMG 0x9136
#endif

#ifndef GL_MAX_DEBUG_MESSAGE_LENGTH
#define GL_MAX_DEBUG_MESSAGE_LENGTH 0x9143
#endif

#ifndef GL_MAX_DEBUG_LOGGED_MESSAGES
#define GL_MAX_DEBUG_LOGGED_MESSAGES 0x9144
#endif

#ifndef GL_DEBUG_LOGGED_MESSAGES
#define GL_DEBUG_LOGGED_MESSAGES 0x9145
#endif

#ifndef GL_DEBUG_SEVERITY_HIGH
#define GL_DEBUG_SEVERITY_HIGH 0x9146
#endif

#ifndef GL_DEBUG_SEVERITY_MEDIUM
#define GL_DEBUG_SEVERITY_MEDIUM 0x9147
#endif

#ifndef GL_DEBUG_SEVERITY_LOW
#define GL_DEBUG_SEVERITY_LOW 0x9148
#endif

#ifndef GL_MAX_DEBUG_MESSAGE_LENGTH_ARB
#define GL_MAX_DEBUG_MESSAGE_LENGTH_ARB 0x9143
#endif

#ifndef GL_MAX_DEBUG_LOGGED_MESSAGES_ARB
#define GL_MAX_DEBUG_LOGGED_MESSAGES_ARB 0x9144
#endif

#ifndef GL_DEBUG_LOGGED_MESSAGES_ARB
#define GL_DEBUG_LOGGED_MESSAGES_ARB 0x9145
#endif

#ifndef GL_DEBUG_SEVERITY_HIGH_ARB
#define GL_DEBUG_SEVERITY_HIGH_ARB 0x9146
#endif

#ifndef GL_DEBUG_SEVERITY_MEDIUM_ARB
#define GL_DEBUG_SEVERITY_MEDIUM_ARB 0x9147
#endif

#ifndef GL_DEBUG_SEVERITY_LOW_ARB
#define GL_DEBUG_SEVERITY_LOW_ARB 0x9148
#endif

#ifndef GL_MAX_DEBUG_MESSAGE_LENGTH_AMD
#define GL_MAX_DEBUG_MESSAGE_LENGTH_AMD 0x9143
#endif

#ifndef GL_MAX_DEBUG_LOGGED_MESSAGES_AMD
#define GL_MAX_DEBUG_LOGGED_MESSAGES_AMD 0x9144
#endif

#ifndef GL_DEBUG_LOGGED_MESSAGES_AMD
#define GL_DEBUG_LOGGED_MESSAGES_AMD 0x9145
#endif

#ifndef GL_DEBUG_SEVERITY_HIGH_AMD
#define GL_DEBUG_SEVERITY_HIGH_AMD 0x9146
#endif

#ifndef GL_DEBUG_SEVERITY_MEDIUM_AMD
#define GL_DEBUG_SEVERITY_MEDIUM_AMD 0x9147
#endif

#ifndef GL_DEBUG_SEVERITY_LOW_AMD
#define GL_DEBUG_SEVERITY_LOW_AMD 0x9148
#endif

#ifndef GL_DEBUG_CATEGORY_API_ERROR_AMD
#define GL_DEBUG_CATEGORY_API_ERROR_AMD 0x9149
#endif

#ifndef GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD
#define GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD 0x914A
#endif

#ifndef GL_DEBUG_CATEGORY_DEPRECATION_AMD
#define GL_DEBUG_CATEGORY_DEPRECATION_AMD 0x914B
#endif

#ifndef GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD
#define GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD 0x914C
#endif

#ifndef GL_DEBUG_CATEGORY_PERFORMANCE_AMD
#define GL_DEBUG_CATEGORY_PERFORMANCE_AMD 0x914D
#endif

#ifndef GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD
#define GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD 0x914E
#endif

#ifndef GL_DEBUG_CATEGORY_APPLICATION_AMD
#define GL_DEBUG_CATEGORY_APPLICATION_AMD 0x914F
#endif

#ifndef GL_DEBUG_CATEGORY_OTHER_AMD
#define GL_DEBUG_CATEGORY_OTHER_AMD 0x9150
#endif

#ifndef GL_DATA_BUFFER_AMD
#define GL_DATA_BUFFER_AMD 0x9151
#endif

#ifndef GL_PERFORMANCE_MONITOR_AMD
#define GL_PERFORMANCE_MONITOR_AMD 0x9152
#endif

#ifndef GL_QUERY_OBJECT_AMD
#define GL_QUERY_OBJECT_AMD 0x9153
#endif

#ifndef GL_VERTEX_ARRAY_OBJECT_AMD
#define GL_VERTEX_ARRAY_OBJECT_AMD 0x9154
#endif

#ifndef GL_SAMPLER_OBJECT_AMD
#define GL_SAMPLER_OBJECT_AMD 0x9155
#endif

#ifndef GL_BUFFER_OBJECT_EXT
#define GL_BUFFER_OBJECT_EXT 0x9151
#endif

#ifndef GL_QUERY_OBJECT_EXT
#define GL_QUERY_OBJECT_EXT 0x9153
#endif

#ifndef GL_VERTEX_ARRAY_OBJECT_EXT
#define GL_VERTEX_ARRAY_OBJECT_EXT 0x9154
#endif

#ifndef GL_EXTERNAL_VIRTUAL_MEMORY_BUFFER_AMD
#define GL_EXTERNAL_VIRTUAL_MEMORY_BUFFER_AMD 0x9160
#endif

#ifndef GL_QUERY_BUFFER_AMD
#define GL_QUERY_BUFFER_AMD 0x9192
#endif

#ifndef GL_QUERY_BUFFER_BINDING_AMD
#define GL_QUERY_BUFFER_BINDING_AMD 0x9193
#endif

#ifndef GL_QUERY_RESULT_NO_WAIT_AMD
#define GL_QUERY_RESULT_NO_WAIT_AMD 0x9194
#endif

#ifndef GL_VIRTUAL_PAGE_SIZE_X_AMD
#define GL_VIRTUAL_PAGE_SIZE_X_AMD 0x9195
#endif

#ifndef GL_VIRTUAL_PAGE_SIZE_Y_AMD
#define GL_VIRTUAL_PAGE_SIZE_Y_AMD 0x9196
#endif

#ifndef GL_VIRTUAL_PAGE_SIZE_Z_AMD
#define GL_VIRTUAL_PAGE_SIZE_Z_AMD 0x9197
#endif

#ifndef GL_MAX_SPARSE_TEXTURE_SIZE_AMD
#define GL_MAX_SPARSE_TEXTURE_SIZE_AMD 0x9198
#endif

#ifndef GL_MAX_SPARSE_3D_TEXTURE_SIZE_AMD
#define GL_MAX_SPARSE_3D_TEXTURE_SIZE_AMD 0x9199
#endif

#ifndef GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS
#define GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS 0x919A
#endif

#ifndef GL_MIN_SPARSE_LEVEL_AMD
#define GL_MIN_SPARSE_LEVEL_AMD 0x919B
#endif

#ifndef GL_MIN_LOD_WARNING_AMD
#define GL_MIN_LOD_WARNING_AMD 0x919C
#endif

#ifndef GL_TEXTURE_BUFFER_OFFSET
#define GL_TEXTURE_BUFFER_OFFSET 0x919D
#endif

#ifndef GL_TEXTURE_BUFFER_SIZE
#define GL_TEXTURE_BUFFER_SIZE 0x919E
#endif

#ifndef GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT
#define GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT 0x919F
#endif

#ifndef GL_COMPUTE_SHADER
#define GL_COMPUTE_SHADER 0x91B9
#endif

#ifndef GL_MAX_COMPUTE_UNIFORM_BLOCKS
#define GL_MAX_COMPUTE_UNIFORM_BLOCKS 0x91BB
#endif

#ifndef GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS
#define GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS 0x91BC
#endif

#ifndef GL_MAX_COMPUTE_IMAGE_UNIFORMS
#define GL_MAX_COMPUTE_IMAGE_UNIFORMS 0x91BD
#endif

#ifndef GL_MAX_COMPUTE_WORK_GROUP_COUNT
#define GL_MAX_COMPUTE_WORK_GROUP_COUNT 0x91BE
#endif

#ifndef GL_MAX_COMPUTE_WORK_GROUP_SIZE
#define GL_MAX_COMPUTE_WORK_GROUP_SIZE 0x91BF
#endif

#ifndef GL_SHADER_BINARY_DMP
#define GL_SHADER_BINARY_DMP 0x9250
#endif

#ifndef GL_GCCSO_SHADER_BINARY_FJ
#define GL_GCCSO_SHADER_BINARY_FJ 0x9260
#endif

#ifndef GL_COMPRESSED_R11_EAC
#define GL_COMPRESSED_R11_EAC 0x9270
#endif

#ifndef GL_COMPRESSED_SIGNED_R11_EAC
#define GL_COMPRESSED_SIGNED_R11_EAC 0x9271
#endif

#ifndef GL_COMPRESSED_RG11_EAC
#define GL_COMPRESSED_RG11_EAC 0x9272
#endif

#ifndef GL_COMPRESSED_SIGNED_RG11_EAC
#define GL_COMPRESSED_SIGNED_RG11_EAC 0x9273
#endif

#ifndef GL_COMPRESSED_RGB8_ETC2
#define GL_COMPRESSED_RGB8_ETC2 0x9274
#endif

#ifndef GL_COMPRESSED_SRGB8_ETC2
#define GL_COMPRESSED_SRGB8_ETC2 0x9275
#endif

#ifndef GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2
#define GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 0x9276
#endif

#ifndef GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2
#define GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 0x9277
#endif

#ifndef GL_COMPRESSED_RGBA8_ETC2_EAC
#define GL_COMPRESSED_RGBA8_ETC2_EAC 0x9278
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC
#define GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC 0x9279
#endif

#ifndef GL_ATOMIC_COUNTER_BUFFER
#define GL_ATOMIC_COUNTER_BUFFER 0x92C0
#endif

#ifndef GL_ATOMIC_COUNTER_BUFFER_BINDING
#define GL_ATOMIC_COUNTER_BUFFER_BINDING 0x92C1
#endif

#ifndef GL_ATOMIC_COUNTER_BUFFER_START
#define GL_ATOMIC_COUNTER_BUFFER_START 0x92C2
#endif

#ifndef GL_ATOMIC_COUNTER_BUFFER_SIZE
#define GL_ATOMIC_COUNTER_BUFFER_SIZE 0x92C3
#endif

#ifndef GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE
#define GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE 0x92C4
#endif

#ifndef GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS
#define GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS 0x92C5
#endif

#ifndef GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES
#define GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES 0x92C6
#endif

#ifndef GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER 0x92C7
#endif

#ifndef GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER 0x92C8
#endif

#ifndef GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER 0x92C9
#endif

#ifndef GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER 0x92CA
#endif

#ifndef GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER 0x92CB
#endif

#ifndef GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS
#define GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS 0x92CC
#endif

#ifndef GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS
#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS 0x92CD
#endif

#ifndef GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS
#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS 0x92CE
#endif

#ifndef GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS
#define GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS 0x92CF
#endif

#ifndef GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS
#define GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS 0x92D0
#endif

#ifndef GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS
#define GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS 0x92D1
#endif

#ifndef GL_MAX_VERTEX_ATOMIC_COUNTERS
#define GL_MAX_VERTEX_ATOMIC_COUNTERS 0x92D2
#endif

#ifndef GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS
#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS 0x92D3
#endif

#ifndef GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS
#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS 0x92D4
#endif

#ifndef GL_MAX_GEOMETRY_ATOMIC_COUNTERS
#define GL_MAX_GEOMETRY_ATOMIC_COUNTERS 0x92D5
#endif

#ifndef GL_MAX_FRAGMENT_ATOMIC_COUNTERS
#define GL_MAX_FRAGMENT_ATOMIC_COUNTERS 0x92D6
#endif

#ifndef GL_MAX_COMBINED_ATOMIC_COUNTERS
#define GL_MAX_COMBINED_ATOMIC_COUNTERS 0x92D7
#endif

#ifndef GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE
#define GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE 0x92D8
#endif

#ifndef GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS
#define GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS 0x92DC
#endif

#ifndef GL_ACTIVE_ATOMIC_COUNTER_BUFFERS
#define GL_ACTIVE_ATOMIC_COUNTER_BUFFERS 0x92D9
#endif

#ifndef GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX
#define GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX 0x92DA
#endif

#ifndef GL_UNSIGNED_INT_ATOMIC_COUNTER
#define GL_UNSIGNED_INT_ATOMIC_COUNTER 0x92DB
#endif

#ifndef GL_DEBUG_OUTPUT
#define GL_DEBUG_OUTPUT 0x92E0
#endif

#ifndef GL_UNIFORM
#define GL_UNIFORM 0x92E1
#endif

#ifndef GL_UNIFORM_BLOCK
#define GL_UNIFORM_BLOCK 0x92E2
#endif

#ifndef GL_PROGRAM_INPUT
#define GL_PROGRAM_INPUT 0x92E3
#endif

#ifndef GL_PROGRAM_OUTPUT
#define GL_PROGRAM_OUTPUT 0x92E4
#endif

#ifndef GL_BUFFER_VARIABLE
#define GL_BUFFER_VARIABLE 0x92E5
#endif

#ifndef GL_SHADER_STORAGE_BLOCK
#define GL_SHADER_STORAGE_BLOCK 0x92E6
#endif

#ifndef GL_IS_PER_PATCH
#define GL_IS_PER_PATCH 0x92E7
#endif

#ifndef GL_VERTEX_SUBROUTINE
#define GL_VERTEX_SUBROUTINE 0x92E8
#endif

#ifndef GL_TESS_CONTROL_SUBROUTINE
#define GL_TESS_CONTROL_SUBROUTINE 0x92E9
#endif

#ifndef GL_TESS_EVALUATION_SUBROUTINE
#define GL_TESS_EVALUATION_SUBROUTINE 0x92EA
#endif

#ifndef GL_GEOMETRY_SUBROUTINE
#define GL_GEOMETRY_SUBROUTINE 0x92EB
#endif

#ifndef GL_FRAGMENT_SUBROUTINE
#define GL_FRAGMENT_SUBROUTINE 0x92EC
#endif

#ifndef GL_COMPUTE_SUBROUTINE
#define GL_COMPUTE_SUBROUTINE 0x92ED
#endif

#ifndef GL_VERTEX_SUBROUTINE_UNIFORM
#define GL_VERTEX_SUBROUTINE_UNIFORM 0x92EE
#endif

#ifndef GL_TESS_CONTROL_SUBROUTINE_UNIFORM
#define GL_TESS_CONTROL_SUBROUTINE_UNIFORM 0x92EF
#endif

#ifndef GL_TESS_EVALUATION_SUBROUTINE_UNIFORM
#define GL_TESS_EVALUATION_SUBROUTINE_UNIFORM 0x92F0
#endif

#ifndef GL_GEOMETRY_SUBROUTINE_UNIFORM
#define GL_GEOMETRY_SUBROUTINE_UNIFORM 0x92F1
#endif

#ifndef GL_FRAGMENT_SUBROUTINE_UNIFORM
#define GL_FRAGMENT_SUBROUTINE_UNIFORM 0x92F2
#endif

#ifndef GL_COMPUTE_SUBROUTINE_UNIFORM
#define GL_COMPUTE_SUBROUTINE_UNIFORM 0x92F3
#endif

#ifndef GL_TRANSFORM_FEEDBACK_VARYING
#define GL_TRANSFORM_FEEDBACK_VARYING 0x92F4
#endif

#ifndef GL_ACTIVE_RESOURCES
#define GL_ACTIVE_RESOURCES 0x92F5
#endif

#ifndef GL_MAX_NAME_LENGTH
#define GL_MAX_NAME_LENGTH 0x92F6
#endif

#ifndef GL_MAX_NUM_ACTIVE_VARIABLES
#define GL_MAX_NUM_ACTIVE_VARIABLES 0x92F7
#endif

#ifndef GL_MAX_NUM_COMPATIBLE_SUBROUTINES
#define GL_MAX_NUM_COMPATIBLE_SUBROUTINES 0x92F8
#endif

#ifndef GL_NAME_LENGTH
#define GL_NAME_LENGTH 0x92F9
#endif

#ifndef GL_TYPE
#define GL_TYPE 0x92FA
#endif

#ifndef GL_ARRAY_SIZE
#define GL_ARRAY_SIZE 0x92FB
#endif

#ifndef GL_OFFSET
#define GL_OFFSET 0x92FC
#endif

#ifndef GL_BLOCK_INDEX
#define GL_BLOCK_INDEX 0x92FD
#endif

#ifndef GL_ARRAY_STRIDE
#define GL_ARRAY_STRIDE 0x92FE
#endif

#ifndef GL_MATRIX_STRIDE
#define GL_MATRIX_STRIDE 0x92FF
#endif

#ifndef GL_IS_ROW_MAJOR
#define GL_IS_ROW_MAJOR 0x9300
#endif

#ifndef GL_ATOMIC_COUNTER_BUFFER_INDEX
#define GL_ATOMIC_COUNTER_BUFFER_INDEX 0x9301
#endif

#ifndef GL_BUFFER_BINDING
#define GL_BUFFER_BINDING 0x9302
#endif

#ifndef GL_BUFFER_DATA_SIZE
#define GL_BUFFER_DATA_SIZE 0x9303
#endif

#ifndef GL_NUM_ACTIVE_VARIABLES
#define GL_NUM_ACTIVE_VARIABLES 0x9304
#endif

#ifndef GL_ACTIVE_VARIABLES
#define GL_ACTIVE_VARIABLES 0x9305
#endif

#ifndef GL_REFERENCED_BY_VERTEX_SHADER
#define GL_REFERENCED_BY_VERTEX_SHADER 0x9306
#endif

#ifndef GL_REFERENCED_BY_TESS_CONTROL_SHADER
#define GL_REFERENCED_BY_TESS_CONTROL_SHADER 0x9307
#endif

#ifndef GL_REFERENCED_BY_TESS_EVALUATION_SHADER
#define GL_REFERENCED_BY_TESS_EVALUATION_SHADER 0x9308
#endif

#ifndef GL_REFERENCED_BY_GEOMETRY_SHADER
#define GL_REFERENCED_BY_GEOMETRY_SHADER 0x9309
#endif

#ifndef GL_REFERENCED_BY_FRAGMENT_SHADER
#define GL_REFERENCED_BY_FRAGMENT_SHADER 0x930A
#endif

#ifndef GL_REFERENCED_BY_COMPUTE_SHADER
#define GL_REFERENCED_BY_COMPUTE_SHADER 0x930B
#endif

#ifndef GL_TOP_LEVEL_ARRAY_SIZE
#define GL_TOP_LEVEL_ARRAY_SIZE 0x930C
#endif

#ifndef GL_TOP_LEVEL_ARRAY_STRIDE
#define GL_TOP_LEVEL_ARRAY_STRIDE 0x930D
#endif

#ifndef GL_LOCATION
#define GL_LOCATION 0x930E
#endif

#ifndef GL_LOCATION_INDEX
#define GL_LOCATION_INDEX 0x930F
#endif

#ifndef GL_FRAMEBUFFER_DEFAULT_WIDTH
#define GL_FRAMEBUFFER_DEFAULT_WIDTH 0x9310
#endif

#ifndef GL_FRAMEBUFFER_DEFAULT_HEIGHT
#define GL_FRAMEBUFFER_DEFAULT_HEIGHT 0x9311
#endif

#ifndef GL_FRAMEBUFFER_DEFAULT_LAYERS
#define GL_FRAMEBUFFER_DEFAULT_LAYERS 0x9312
#endif

#ifndef GL_FRAMEBUFFER_DEFAULT_SAMPLES
#define GL_FRAMEBUFFER_DEFAULT_SAMPLES 0x9313
#endif

#ifndef GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS
#define GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS 0x9314
#endif

#ifndef GL_MAX_FRAMEBUFFER_WIDTH
#define GL_MAX_FRAMEBUFFER_WIDTH 0x9315
#endif

#ifndef GL_MAX_FRAMEBUFFER_HEIGHT
#define GL_MAX_FRAMEBUFFER_HEIGHT 0x9316
#endif

#ifndef GL_MAX_FRAMEBUFFER_LAYERS
#define GL_MAX_FRAMEBUFFER_LAYERS 0x9317
#endif

#ifndef GL_MAX_FRAMEBUFFER_SAMPLES
#define GL_MAX_FRAMEBUFFER_SAMPLES 0x9318
#endif

#ifndef GL_NUM_SAMPLE_COUNTS
#define GL_NUM_SAMPLE_COUNTS 0x9380
#endif

#ifndef GL_TRANSLATED_SHADER_SOURCE_LENGTH_ANGLE
#define GL_TRANSLATED_SHADER_SOURCE_LENGTH_ANGLE 0x93A0
#endif

#ifndef GL_TEXTURE_USAGE_ANGLE
#define GL_TEXTURE_USAGE_ANGLE 0x93A2
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_ANGLE
#define GL_FRAMEBUFFER_ATTACHMENT_ANGLE 0x93A3
#endif

#ifndef GL_PACK_REVERSE_ROW_ORDER_ANGLE
#define GL_PACK_REVERSE_ROW_ORDER_ANGLE 0x93A4
#endif

#ifndef GL_COMPRESSED_RGBA_ASTC_4x4_KHR
#define GL_COMPRESSED_RGBA_ASTC_4x4_KHR 0x93B0
#endif

#ifndef GL_COMPRESSED_RGBA_ASTC_5x4_KHR
#define GL_COMPRESSED_RGBA_ASTC_5x4_KHR 0x93B1
#endif

#ifndef GL_COMPRESSED_RGBA_ASTC_5x5_KHR
#define GL_COMPRESSED_RGBA_ASTC_5x5_KHR 0x93B2
#endif

#ifndef GL_COMPRESSED_RGBA_ASTC_6x5_KHR
#define GL_COMPRESSED_RGBA_ASTC_6x5_KHR 0x93B3
#endif

#ifndef GL_COMPRESSED_RGBA_ASTC_6x6_KHR
#define GL_COMPRESSED_RGBA_ASTC_6x6_KHR 0x93B4
#endif

#ifndef GL_COMPRESSED_RGBA_ASTC_8x5_KHR
#define GL_COMPRESSED_RGBA_ASTC_8x5_KHR 0x93B5
#endif

#ifndef GL_COMPRESSED_RGBA_ASTC_8x6_KHR
#define GL_COMPRESSED_RGBA_ASTC_8x6_KHR 0x93B6
#endif

#ifndef GL_COMPRESSED_RGBA_ASTC_8x8_KHR
#define GL_COMPRESSED_RGBA_ASTC_8x8_KHR 0x93B7
#endif

#ifndef GL_COMPRESSED_RGBA_ASTC_10x5_KHR
#define GL_COMPRESSED_RGBA_ASTC_10x5_KHR 0x93B8
#endif

#ifndef GL_COMPRESSED_RGBA_ASTC_10x6_KHR
#define GL_COMPRESSED_RGBA_ASTC_10x6_KHR 0x93B9
#endif

#ifndef GL_COMPRESSED_RGBA_ASTC_10x8_KHR
#define GL_COMPRESSED_RGBA_ASTC_10x8_KHR 0x93BA
#endif

#ifndef GL_COMPRESSED_RGBA_ASTC_10x10_KHR
#define GL_COMPRESSED_RGBA_ASTC_10x10_KHR 0x93BB
#endif

#ifndef GL_COMPRESSED_RGBA_ASTC_12x10_KHR
#define GL_COMPRESSED_RGBA_ASTC_12x10_KHR 0x93BC
#endif

#ifndef GL_COMPRESSED_RGBA_ASTC_12x12_KHR
#define GL_COMPRESSED_RGBA_ASTC_12x12_KHR 0x93BD
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR 0x93D0
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR 0x93D1
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR 0x93D2
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR 0x93D3
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR 0x93D4
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR 0x93D5
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR 0x93D6
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR 0x93D7
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR 0x93D8
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR 0x93D9
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR 0x93DA
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR 0x93DB
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR 0x93DC
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR 0x93DD
#endif

/* AttribMask */
#ifndef GL_DEPTH_BUFFER_BIT
#define GL_DEPTH_BUFFER_BIT 0x00000100
#endif

#ifndef GL_STENCIL_BUFFER_BIT
#define GL_STENCIL_BUFFER_BIT 0x00000400
#endif

#ifndef GL_COLOR_BUFFER_BIT
#define GL_COLOR_BUFFER_BIT 0x00004000
#endif

/* Boolean */
#ifndef GL_FALSE
#define GL_FALSE 0
#endif

#ifndef GL_TRUE
#define GL_TRUE 1
#endif

/* BeginMode */
#ifndef GL_POINTS
#define GL_POINTS 0x0000
#endif

#ifndef GL_LINES
#define GL_LINES 0x0001
#endif

#ifndef GL_LINE_LOOP
#define GL_LINE_LOOP 0x0002
#endif

#ifndef GL_LINE_STRIP
#define GL_LINE_STRIP 0x0003
#endif

#ifndef GL_TRIANGLES
#define GL_TRIANGLES 0x0004
#endif

#ifndef GL_TRIANGLE_STRIP
#define GL_TRIANGLE_STRIP 0x0005
#endif

#ifndef GL_TRIANGLE_FAN
#define GL_TRIANGLE_FAN 0x0006
#endif

#ifndef GL_QUADS
#define GL_QUADS 0x0007
#endif

/* AlphaFunction */
#ifndef GL_NEVER
#define GL_NEVER 0x0200
#endif

#ifndef GL_LESS
#define GL_LESS 0x0201
#endif

#ifndef GL_EQUAL
#define GL_EQUAL 0x0202
#endif

#ifndef GL_LEQUAL
#define GL_LEQUAL 0x0203
#endif

#ifndef GL_GREATER
#define GL_GREATER 0x0204
#endif

#ifndef GL_NOTEQUAL
#define GL_NOTEQUAL 0x0205
#endif

#ifndef GL_GEQUAL
#define GL_GEQUAL 0x0206
#endif

#ifndef GL_ALWAYS
#define GL_ALWAYS 0x0207
#endif

/* BlendingFactorDest */
#ifndef GL_ZERO
#define GL_ZERO 0
#endif

#ifndef GL_ONE
#define GL_ONE 1
#endif

#ifndef GL_SRC_COLOR
#define GL_SRC_COLOR 0x0300
#endif

#ifndef GL_ONE_MINUS_SRC_COLOR
#define GL_ONE_MINUS_SRC_COLOR 0x0301
#endif

#ifndef GL_SRC_ALPHA
#define GL_SRC_ALPHA 0x0302
#endif

#ifndef GL_ONE_MINUS_SRC_ALPHA
#define GL_ONE_MINUS_SRC_ALPHA 0x0303
#endif

#ifndef GL_DST_ALPHA
#define GL_DST_ALPHA 0x0304
#endif

#ifndef GL_ONE_MINUS_DST_ALPHA
#define GL_ONE_MINUS_DST_ALPHA 0x0305
#endif

/* BlendingFactorSrc */
#ifndef GL_DST_COLOR
#define GL_DST_COLOR 0x0306
#endif

#ifndef GL_ONE_MINUS_DST_COLOR
#define GL_ONE_MINUS_DST_COLOR 0x0307
#endif

#ifndef GL_SRC_ALPHA_SATURATE
#define GL_SRC_ALPHA_SATURATE 0x0308
#endif

/* DrawBufferMode */
#ifndef GL_NONE
#define GL_NONE 0
#endif

#ifndef GL_FRONT_LEFT
#define GL_FRONT_LEFT 0x0400
#endif

#ifndef GL_FRONT_RIGHT
#define GL_FRONT_RIGHT 0x0401
#endif

#ifndef GL_BACK_LEFT
#define GL_BACK_LEFT 0x0402
#endif

#ifndef GL_BACK_RIGHT
#define GL_BACK_RIGHT 0x0403
#endif

#ifndef GL_FRONT
#define GL_FRONT 0x0404
#endif

#ifndef GL_BACK
#define GL_BACK 0x0405
#endif

#ifndef GL_LEFT
#define GL_LEFT 0x0406
#endif

#ifndef GL_RIGHT
#define GL_RIGHT 0x0407
#endif

#ifndef GL_FRONT_AND_BACK
#define GL_FRONT_AND_BACK 0x0408
#endif

/* ErrorCode */
#ifndef GL_NO_ERROR
#define GL_NO_ERROR 0
#endif

#ifndef GL_INVALID_ENUM
#define GL_INVALID_ENUM 0x0500
#endif

#ifndef GL_INVALID_VALUE
#define GL_INVALID_VALUE 0x0501
#endif

#ifndef GL_INVALID_OPERATION
#define GL_INVALID_OPERATION 0x0502
#endif

#ifndef GL_OUT_OF_MEMORY
#define GL_OUT_OF_MEMORY 0x0505
#endif

/* FrontFaceDirection */
#ifndef GL_CW
#define GL_CW 0x0900
#endif

#ifndef GL_CCW
#define GL_CCW 0x0901
#endif

/* GetPName */
#ifndef GL_POINT_SIZE
#define GL_POINT_SIZE 0x0B11
#endif

#ifndef GL_POINT_SIZE_RANGE
#define GL_POINT_SIZE_RANGE 0x0B12
#endif

#ifndef GL_POINT_SIZE_GRANULARITY
#define GL_POINT_SIZE_GRANULARITY 0x0B13
#endif

#ifndef GL_LINE_SMOOTH
#define GL_LINE_SMOOTH 0x0B20
#endif

#ifndef GL_LINE_WIDTH
#define GL_LINE_WIDTH 0x0B21
#endif

#ifndef GL_LINE_WIDTH_RANGE
#define GL_LINE_WIDTH_RANGE 0x0B22
#endif

#ifndef GL_LINE_WIDTH_GRANULARITY
#define GL_LINE_WIDTH_GRANULARITY 0x0B23
#endif

#ifndef GL_POLYGON_MODE
#define GL_POLYGON_MODE 0x0B40
#endif

#ifndef GL_POLYGON_SMOOTH
#define GL_POLYGON_SMOOTH 0x0B41
#endif

#ifndef GL_CULL_FACE
#define GL_CULL_FACE 0x0B44
#endif

#ifndef GL_CULL_FACE_MODE
#define GL_CULL_FACE_MODE 0x0B45
#endif

#ifndef GL_FRONT_FACE
#define GL_FRONT_FACE 0x0B46
#endif

#ifndef GL_DEPTH_RANGE
#define GL_DEPTH_RANGE 0x0B70
#endif

#ifndef GL_DEPTH_TEST
#define GL_DEPTH_TEST 0x0B71
#endif

#ifndef GL_DEPTH_WRITEMASK
#define GL_DEPTH_WRITEMASK 0x0B72
#endif

#ifndef GL_DEPTH_CLEAR_VALUE
#define GL_DEPTH_CLEAR_VALUE 0x0B73
#endif

#ifndef GL_DEPTH_FUNC
#define GL_DEPTH_FUNC 0x0B74
#endif

#ifndef GL_STENCIL_TEST
#define GL_STENCIL_TEST 0x0B90
#endif

#ifndef GL_STENCIL_CLEAR_VALUE
#define GL_STENCIL_CLEAR_VALUE 0x0B91
#endif

#ifndef GL_STENCIL_FUNC
#define GL_STENCIL_FUNC 0x0B92
#endif

#ifndef GL_STENCIL_VALUE_MASK
#define GL_STENCIL_VALUE_MASK 0x0B93
#endif

#ifndef GL_STENCIL_FAIL
#define GL_STENCIL_FAIL 0x0B94
#endif

#ifndef GL_STENCIL_PASS_DEPTH_FAIL
#define GL_STENCIL_PASS_DEPTH_FAIL 0x0B95
#endif

#ifndef GL_STENCIL_PASS_DEPTH_PASS
#define GL_STENCIL_PASS_DEPTH_PASS 0x0B96
#endif

#ifndef GL_STENCIL_REF
#define GL_STENCIL_REF 0x0B97
#endif

#ifndef GL_STENCIL_WRITEMASK
#define GL_STENCIL_WRITEMASK 0x0B98
#endif

#ifndef GL_VIEWPORT
#define GL_VIEWPORT 0x0BA2
#endif

#ifndef GL_DITHER
#define GL_DITHER 0x0BD0
#endif

#ifndef GL_BLEND_DST
#define GL_BLEND_DST 0x0BE0
#endif

#ifndef GL_BLEND_SRC
#define GL_BLEND_SRC 0x0BE1
#endif

#ifndef GL_BLEND
#define GL_BLEND 0x0BE2
#endif

#ifndef GL_LOGIC_OP_MODE
#define GL_LOGIC_OP_MODE 0x0BF0
#endif

#ifndef GL_COLOR_LOGIC_OP
#define GL_COLOR_LOGIC_OP 0x0BF2
#endif

#ifndef GL_DRAW_BUFFER
#define GL_DRAW_BUFFER 0x0C01
#endif

#ifndef GL_READ_BUFFER
#define GL_READ_BUFFER 0x0C02
#endif

#ifndef GL_SCISSOR_BOX
#define GL_SCISSOR_BOX 0x0C10
#endif

#ifndef GL_SCISSOR_TEST
#define GL_SCISSOR_TEST 0x0C11
#endif

#ifndef GL_COLOR_CLEAR_VALUE
#define GL_COLOR_CLEAR_VALUE 0x0C22
#endif

#ifndef GL_COLOR_WRITEMASK
#define GL_COLOR_WRITEMASK 0x0C23
#endif

#ifndef GL_DOUBLEBUFFER
#define GL_DOUBLEBUFFER 0x0C32
#endif

#ifndef GL_STEREO
#define GL_STEREO 0x0C33
#endif

#ifndef GL_LINE_SMOOTH_HINT
#define GL_LINE_SMOOTH_HINT 0x0C52
#endif

#ifndef GL_POLYGON_SMOOTH_HINT
#define GL_POLYGON_SMOOTH_HINT 0x0C53
#endif

#ifndef GL_UNPACK_SWAP_BYTES
#define GL_UNPACK_SWAP_BYTES 0x0CF0
#endif

#ifndef GL_UNPACK_LSB_FIRST
#define GL_UNPACK_LSB_FIRST 0x0CF1
#endif

#ifndef GL_UNPACK_ROW_LENGTH
#define GL_UNPACK_ROW_LENGTH 0x0CF2
#endif

#ifndef GL_UNPACK_SKIP_ROWS
#define GL_UNPACK_SKIP_ROWS 0x0CF3
#endif

#ifndef GL_UNPACK_SKIP_PIXELS
#define GL_UNPACK_SKIP_PIXELS 0x0CF4
#endif

#ifndef GL_UNPACK_ALIGNMENT
#define GL_UNPACK_ALIGNMENT 0x0CF5
#endif

#ifndef GL_PACK_SWAP_BYTES
#define GL_PACK_SWAP_BYTES 0x0D00
#endif

#ifndef GL_PACK_LSB_FIRST
#define GL_PACK_LSB_FIRST 0x0D01
#endif

#ifndef GL_PACK_ROW_LENGTH
#define GL_PACK_ROW_LENGTH 0x0D02
#endif

#ifndef GL_PACK_SKIP_ROWS
#define GL_PACK_SKIP_ROWS 0x0D03
#endif

#ifndef GL_PACK_SKIP_PIXELS
#define GL_PACK_SKIP_PIXELS 0x0D04
#endif

#ifndef GL_PACK_ALIGNMENT
#define GL_PACK_ALIGNMENT 0x0D05
#endif

#ifndef GL_MAX_TEXTURE_SIZE
#define GL_MAX_TEXTURE_SIZE 0x0D33
#endif

#ifndef GL_MAX_VIEWPORT_DIMS
#define GL_MAX_VIEWPORT_DIMS 0x0D3A
#endif

#ifndef GL_SUBPIXEL_BITS
#define GL_SUBPIXEL_BITS 0x0D50
#endif

#ifndef GL_TEXTURE_1D
#define GL_TEXTURE_1D 0x0DE0
#endif

#ifndef GL_TEXTURE_2D
#define GL_TEXTURE_2D 0x0DE1
#endif

#ifndef GL_POLYGON_OFFSET_UNITS
#define GL_POLYGON_OFFSET_UNITS 0x2A00
#endif

#ifndef GL_POLYGON_OFFSET_POINT
#define GL_POLYGON_OFFSET_POINT 0x2A01
#endif

#ifndef GL_POLYGON_OFFSET_LINE
#define GL_POLYGON_OFFSET_LINE 0x2A02
#endif

#ifndef GL_POLYGON_OFFSET_FILL
#define GL_POLYGON_OFFSET_FILL 0x8037
#endif

#ifndef GL_POLYGON_OFFSET_FACTOR
#define GL_POLYGON_OFFSET_FACTOR 0x8038
#endif

#ifndef GL_TEXTURE_BINDING_1D
#define GL_TEXTURE_BINDING_1D 0x8068
#endif

#ifndef GL_TEXTURE_BINDING_2D
#define GL_TEXTURE_BINDING_2D 0x8069
#endif

/* GetTextureParameter */
#ifndef GL_TEXTURE_WIDTH
#define GL_TEXTURE_WIDTH 0x1000
#endif

#ifndef GL_TEXTURE_HEIGHT
#define GL_TEXTURE_HEIGHT 0x1001
#endif

#ifndef GL_TEXTURE_INTERNAL_FORMAT
#define GL_TEXTURE_INTERNAL_FORMAT 0x1003
#endif

#ifndef GL_TEXTURE_BORDER_COLOR
#define GL_TEXTURE_BORDER_COLOR 0x1004
#endif

#ifndef GL_TEXTURE_RED_SIZE
#define GL_TEXTURE_RED_SIZE 0x805C
#endif

#ifndef GL_TEXTURE_GREEN_SIZE
#define GL_TEXTURE_GREEN_SIZE 0x805D
#endif

#ifndef GL_TEXTURE_BLUE_SIZE
#define GL_TEXTURE_BLUE_SIZE 0x805E
#endif

#ifndef GL_TEXTURE_ALPHA_SIZE
#define GL_TEXTURE_ALPHA_SIZE 0x805F
#endif

/* HintMode */
#ifndef GL_DONT_CARE
#define GL_DONT_CARE 0x1100
#endif

#ifndef GL_FASTEST
#define GL_FASTEST 0x1101
#endif

#ifndef GL_NICEST
#define GL_NICEST 0x1102
#endif

/* DataType */
#ifndef GL_BYTE
#define GL_BYTE 0x1400
#endif

#ifndef GL_UNSIGNED_BYTE
#define GL_UNSIGNED_BYTE 0x1401
#endif

#ifndef GL_SHORT
#define GL_SHORT 0x1402
#endif

#ifndef GL_UNSIGNED_SHORT
#define GL_UNSIGNED_SHORT 0x1403
#endif

#ifndef GL_INT
#define GL_INT 0x1404
#endif

#ifndef GL_UNSIGNED_INT
#define GL_UNSIGNED_INT 0x1405
#endif

#ifndef GL_FLOAT
#define GL_FLOAT 0x1406
#endif

#ifndef GL_DOUBLE
#define GL_DOUBLE 0x140A
#endif

/* ErrorCode */
#ifndef GL_STACK_OVERFLOW
#define GL_STACK_OVERFLOW 0x0503
#endif

#ifndef GL_STACK_UNDERFLOW
#define GL_STACK_UNDERFLOW 0x0504
#endif

/* LogicOp */
#ifndef GL_CLEAR
#define GL_CLEAR 0x1500
#endif

#ifndef GL_AND
#define GL_AND 0x1501
#endif

#ifndef GL_AND_REVERSE
#define GL_AND_REVERSE 0x1502
#endif

#ifndef GL_COPY
#define GL_COPY 0x1503
#endif

#ifndef GL_AND_INVERTED
#define GL_AND_INVERTED 0x1504
#endif

#ifndef GL_NOOP
#define GL_NOOP 0x1505
#endif

#ifndef GL_XOR
#define GL_XOR 0x1506
#endif

#ifndef GL_OR
#define GL_OR 0x1507
#endif

#ifndef GL_NOR
#define GL_NOR 0x1508
#endif

#ifndef GL_EQUIV
#define GL_EQUIV 0x1509
#endif

#ifndef GL_INVERT
#define GL_INVERT 0x150A
#endif

#ifndef GL_OR_REVERSE
#define GL_OR_REVERSE 0x150B
#endif

#ifndef GL_COPY_INVERTED
#define GL_COPY_INVERTED 0x150C
#endif

#ifndef GL_OR_INVERTED
#define GL_OR_INVERTED 0x150D
#endif

#ifndef GL_NAND
#define GL_NAND 0x150E
#endif

#ifndef GL_SET
#define GL_SET 0x150F
#endif

/* MatrixMode (for gl3.h, FBO attachment type) */
#ifndef GL_TEXTURE
#define GL_TEXTURE 0x1702
#endif

/* PixelCopyType */
#ifndef GL_COLOR
#define GL_COLOR 0x1800
#endif

#ifndef GL_DEPTH
#define GL_DEPTH 0x1801
#endif

#ifndef GL_STENCIL
#define GL_STENCIL 0x1802
#endif

/* PixelFormat */
#ifndef GL_STENCIL_INDEX
#define GL_STENCIL_INDEX 0x1901
#endif

#ifndef GL_DEPTH_COMPONENT
#define GL_DEPTH_COMPONENT 0x1902
#endif

#ifndef GL_RED
#define GL_RED 0x1903
#endif

#ifndef GL_GREEN
#define GL_GREEN 0x1904
#endif

#ifndef GL_BLUE
#define GL_BLUE 0x1905
#endif

#ifndef GL_ALPHA
#define GL_ALPHA 0x1906
#endif

#ifndef GL_RGB
#define GL_RGB 0x1907
#endif

#ifndef GL_RGBA
#define GL_RGBA 0x1908
#endif

/* PolygonMode */
#ifndef GL_POINT
#define GL_POINT 0x1B00
#endif

#ifndef GL_LINE
#define GL_LINE 0x1B01
#endif

#ifndef GL_FILL
#define GL_FILL 0x1B02
#endif

/* StencilOp */
#ifndef GL_KEEP
#define GL_KEEP 0x1E00
#endif

#ifndef GL_REPLACE
#define GL_REPLACE 0x1E01
#endif

#ifndef GL_INCR
#define GL_INCR 0x1E02
#endif

#ifndef GL_DECR
#define GL_DECR 0x1E03
#endif

/* StringName */
#ifndef GL_VENDOR
#define GL_VENDOR 0x1F00
#endif

#ifndef GL_RENDERER
#define GL_RENDERER 0x1F01
#endif

#ifndef GL_VERSION
#define GL_VERSION 0x1F02
#endif

#ifndef GL_EXTENSIONS
#define GL_EXTENSIONS 0x1F03
#endif

/* TextureMagFilter */
#ifndef GL_NEAREST
#define GL_NEAREST 0x2600
#endif

#ifndef GL_LINEAR
#define GL_LINEAR 0x2601
#endif

/* TextureMinFilter */
#ifndef GL_NEAREST_MIPMAP_NEAREST
#define GL_NEAREST_MIPMAP_NEAREST 0x2700
#endif

#ifndef GL_LINEAR_MIPMAP_NEAREST
#define GL_LINEAR_MIPMAP_NEAREST 0x2701
#endif

#ifndef GL_NEAREST_MIPMAP_LINEAR
#define GL_NEAREST_MIPMAP_LINEAR 0x2702
#endif

#ifndef GL_LINEAR_MIPMAP_LINEAR
#define GL_LINEAR_MIPMAP_LINEAR 0x2703
#endif

/* TextureParameterName */
#ifndef GL_TEXTURE_MAG_FILTER
#define GL_TEXTURE_MAG_FILTER 0x2800
#endif

#ifndef GL_TEXTURE_MIN_FILTER
#define GL_TEXTURE_MIN_FILTER 0x2801
#endif

#ifndef GL_TEXTURE_WRAP_S
#define GL_TEXTURE_WRAP_S 0x2802
#endif

#ifndef GL_TEXTURE_WRAP_T
#define GL_TEXTURE_WRAP_T 0x2803
#endif

/* TextureTarget */
#ifndef GL_PROXY_TEXTURE_1D
#define GL_PROXY_TEXTURE_1D 0x8063
#endif

#ifndef GL_PROXY_TEXTURE_2D
#define GL_PROXY_TEXTURE_2D 0x8064
#endif

/* TextureWrapMode */
#ifndef GL_REPEAT
#define GL_REPEAT 0x2901
#endif

/* PixelInternalFormat */
#ifndef GL_R3_G3_B2
#define GL_R3_G3_B2 0x2A10
#endif

#ifndef GL_RGB4
#define GL_RGB4 0x804F
#endif

#ifndef GL_RGB5
#define GL_RGB5 0x8050
#endif

#ifndef GL_RGB8
#define GL_RGB8 0x8051
#endif

#ifndef GL_RGB10
#define GL_RGB10 0x8052
#endif

#ifndef GL_RGB12
#define GL_RGB12 0x8053
#endif

#ifndef GL_RGB16
#define GL_RGB16 0x8054
#endif

#ifndef GL_RGBA2
#define GL_RGBA2 0x8055
#endif

#ifndef GL_RGBA4
#define GL_RGBA4 0x8056
#endif

#ifndef GL_RGB5_A1
#define GL_RGB5_A1 0x8057
#endif

#ifndef GL_RGBA8
#define GL_RGBA8 0x8058
#endif

#ifndef GL_RGB10_A2
#define GL_RGB10_A2 0x8059
#endif

#ifndef GL_RGBA12
#define GL_RGBA12 0x805A
#endif

#ifndef GL_RGBA16
#define GL_RGBA16 0x805B
#endif

/* AttribMask */
#ifndef GL_CURRENT_BIT
#define GL_CURRENT_BIT 0x00000001
#endif

#ifndef GL_POINT_BIT
#define GL_POINT_BIT 0x00000002
#endif

#ifndef GL_LINE_BIT
#define GL_LINE_BIT 0x00000004
#endif

#ifndef GL_POLYGON_BIT
#define GL_POLYGON_BIT 0x00000008
#endif

#ifndef GL_POLYGON_STIPPLE_BIT
#define GL_POLYGON_STIPPLE_BIT 0x00000010
#endif

#ifndef GL_PIXEL_MODE_BIT
#define GL_PIXEL_MODE_BIT 0x00000020
#endif

#ifndef GL_LIGHTING_BIT
#define GL_LIGHTING_BIT 0x00000040
#endif

#ifndef GL_FOG_BIT
#define GL_FOG_BIT 0x00000080
#endif

#ifndef GL_ACCUM_BUFFER_BIT
#define GL_ACCUM_BUFFER_BIT 0x00000200
#endif

#ifndef GL_VIEWPORT_BIT
#define GL_VIEWPORT_BIT 0x00000800
#endif

#ifndef GL_TRANSFORM_BIT
#define GL_TRANSFORM_BIT 0x00001000
#endif

#ifndef GL_ENABLE_BIT
#define GL_ENABLE_BIT 0x00002000
#endif

#ifndef GL_HINT_BIT
#define GL_HINT_BIT 0x00008000
#endif

#ifndef GL_EVAL_BIT
#define GL_EVAL_BIT 0x00010000
#endif

#ifndef GL_LIST_BIT
#define GL_LIST_BIT 0x00020000
#endif

#ifndef GL_TEXTURE_BIT
#define GL_TEXTURE_BIT 0x00040000
#endif

#ifndef GL_SCISSOR_BIT
#define GL_SCISSOR_BIT 0x00080000
#endif

#ifndef GL_ALL_ATTRIB_BITS
#define GL_ALL_ATTRIB_BITS 0xFFFFFFFF
#endif

/* ClientAttribMask */
#ifndef GL_CLIENT_PIXEL_STORE_BIT
#define GL_CLIENT_PIXEL_STORE_BIT 0x00000001
#endif

#ifndef GL_CLIENT_VERTEX_ARRAY_BIT
#define GL_CLIENT_VERTEX_ARRAY_BIT 0x00000002
#endif

#ifndef GL_CLIENT_ALL_ATTRIB_BITS
#define GL_CLIENT_ALL_ATTRIB_BITS 0xFFFFFFFF
#endif

/* BeginMode */
#ifndef GL_QUAD_STRIP
#define GL_QUAD_STRIP 0x0008
#endif

#ifndef GL_POLYGON
#define GL_POLYGON 0x0009
#endif

/* AccumOp */
#ifndef GL_ACCUM
#define GL_ACCUM 0x0100
#endif

#ifndef GL_LOAD
#define GL_LOAD 0x0101
#endif

#ifndef GL_RETURN
#define GL_RETURN 0x0102
#endif

#ifndef GL_MULT
#define GL_MULT 0x0103
#endif

#ifndef GL_ADD
#define GL_ADD 0x0104
#endif

/* DrawBufferMode */
#ifndef GL_AUX0
#define GL_AUX0 0x0409
#endif

#ifndef GL_AUX1
#define GL_AUX1 0x040A
#endif

#ifndef GL_AUX2
#define GL_AUX2 0x040B
#endif

#ifndef GL_AUX3
#define GL_AUX3 0x040C
#endif

/* FeedbackType */
#ifndef GL_2D
#define GL_2D 0x0600
#endif

#ifndef GL_3D
#define GL_3D 0x0601
#endif

#ifndef GL_3D_COLOR
#define GL_3D_COLOR 0x0602
#endif

#ifndef GL_3D_COLOR_TEXTURE
#define GL_3D_COLOR_TEXTURE 0x0603
#endif

#ifndef GL_4D_COLOR_TEXTURE
#define GL_4D_COLOR_TEXTURE 0x0604
#endif

/* FeedBackToken */
#ifndef GL_PASS_THROUGH_TOKEN
#define GL_PASS_THROUGH_TOKEN 0x0700
#endif

#ifndef GL_POINT_TOKEN
#define GL_POINT_TOKEN 0x0701
#endif

#ifndef GL_LINE_TOKEN
#define GL_LINE_TOKEN 0x0702
#endif

#ifndef GL_POLYGON_TOKEN
#define GL_POLYGON_TOKEN 0x0703
#endif

#ifndef GL_BITMAP_TOKEN
#define GL_BITMAP_TOKEN 0x0704
#endif

#ifndef GL_DRAW_PIXEL_TOKEN
#define GL_DRAW_PIXEL_TOKEN 0x0705
#endif

#ifndef GL_COPY_PIXEL_TOKEN
#define GL_COPY_PIXEL_TOKEN 0x0706
#endif

#ifndef GL_LINE_RESET_TOKEN
#define GL_LINE_RESET_TOKEN 0x0707
#endif

/* FogMode */
#ifndef GL_EXP
#define GL_EXP 0x0800
#endif

#ifndef GL_EXP2
#define GL_EXP2 0x0801
#endif

/* GetMapQuery */
#ifndef GL_COEFF
#define GL_COEFF 0x0A00
#endif

#ifndef GL_ORDER
#define GL_ORDER 0x0A01
#endif

#ifndef GL_DOMAIN
#define GL_DOMAIN 0x0A02
#endif

/* GetPixelMap */
#ifndef GL_PIXEL_MAP_I_TO_I
#define GL_PIXEL_MAP_I_TO_I 0x0C70
#endif

#ifndef GL_PIXEL_MAP_S_TO_S
#define GL_PIXEL_MAP_S_TO_S 0x0C71
#endif

#ifndef GL_PIXEL_MAP_I_TO_R
#define GL_PIXEL_MAP_I_TO_R 0x0C72
#endif

#ifndef GL_PIXEL_MAP_I_TO_G
#define GL_PIXEL_MAP_I_TO_G 0x0C73
#endif

#ifndef GL_PIXEL_MAP_I_TO_B
#define GL_PIXEL_MAP_I_TO_B 0x0C74
#endif

#ifndef GL_PIXEL_MAP_I_TO_A
#define GL_PIXEL_MAP_I_TO_A 0x0C75
#endif

#ifndef GL_PIXEL_MAP_R_TO_R
#define GL_PIXEL_MAP_R_TO_R 0x0C76
#endif

#ifndef GL_PIXEL_MAP_G_TO_G
#define GL_PIXEL_MAP_G_TO_G 0x0C77
#endif

#ifndef GL_PIXEL_MAP_B_TO_B
#define GL_PIXEL_MAP_B_TO_B 0x0C78
#endif

#ifndef GL_PIXEL_MAP_A_TO_A
#define GL_PIXEL_MAP_A_TO_A 0x0C79
#endif

/* GetPointervPName */
#ifndef GL_VERTEX_ARRAY_POINTER
#define GL_VERTEX_ARRAY_POINTER 0x808E
#endif

#ifndef GL_NORMAL_ARRAY_POINTER
#define GL_NORMAL_ARRAY_POINTER 0x808F
#endif

#ifndef GL_COLOR_ARRAY_POINTER
#define GL_COLOR_ARRAY_POINTER 0x8090
#endif

#ifndef GL_INDEX_ARRAY_POINTER
#define GL_INDEX_ARRAY_POINTER 0x8091
#endif

#ifndef GL_TEXTURE_COORD_ARRAY_POINTER
#define GL_TEXTURE_COORD_ARRAY_POINTER 0x8092
#endif

#ifndef GL_EDGE_FLAG_ARRAY_POINTER
#define GL_EDGE_FLAG_ARRAY_POINTER 0x8093
#endif

#ifndef GL_FEEDBACK_BUFFER_POINTER
#define GL_FEEDBACK_BUFFER_POINTER 0x0DF0
#endif

#ifndef GL_SELECTION_BUFFER_POINTER
#define GL_SELECTION_BUFFER_POINTER 0x0DF3
#endif

/* GetPName */
#ifndef GL_CURRENT_COLOR
#define GL_CURRENT_COLOR 0x0B00
#endif

#ifndef GL_CURRENT_INDEX
#define GL_CURRENT_INDEX 0x0B01
#endif

#ifndef GL_CURRENT_NORMAL
#define GL_CURRENT_NORMAL 0x0B02
#endif

#ifndef GL_CURRENT_TEXTURE_COORDS
#define GL_CURRENT_TEXTURE_COORDS 0x0B03
#endif

#ifndef GL_CURRENT_RASTER_COLOR
#define GL_CURRENT_RASTER_COLOR 0x0B04
#endif

#ifndef GL_CURRENT_RASTER_INDEX
#define GL_CURRENT_RASTER_INDEX 0x0B05
#endif

#ifndef GL_CURRENT_RASTER_TEXTURE_COORDS
#define GL_CURRENT_RASTER_TEXTURE_COORDS 0x0B06
#endif

#ifndef GL_CURRENT_RASTER_POSITION
#define GL_CURRENT_RASTER_POSITION 0x0B07
#endif

#ifndef GL_CURRENT_RASTER_POSITION_VALID
#define GL_CURRENT_RASTER_POSITION_VALID 0x0B08
#endif

#ifndef GL_CURRENT_RASTER_DISTANCE
#define GL_CURRENT_RASTER_DISTANCE 0x0B09
#endif

#ifndef GL_POINT_SMOOTH
#define GL_POINT_SMOOTH 0x0B10
#endif

#ifndef GL_LINE_STIPPLE
#define GL_LINE_STIPPLE 0x0B24
#endif

#ifndef GL_LINE_STIPPLE_PATTERN
#define GL_LINE_STIPPLE_PATTERN 0x0B25
#endif

#ifndef GL_LINE_STIPPLE_REPEAT
#define GL_LINE_STIPPLE_REPEAT 0x0B26
#endif

#ifndef GL_LIST_MODE
#define GL_LIST_MODE 0x0B30
#endif

#ifndef GL_MAX_LIST_NESTING
#define GL_MAX_LIST_NESTING 0x0B31
#endif

#ifndef GL_LIST_BASE
#define GL_LIST_BASE 0x0B32
#endif

#ifndef GL_LIST_INDEX
#define GL_LIST_INDEX 0x0B33
#endif

#ifndef GL_POLYGON_STIPPLE
#define GL_POLYGON_STIPPLE 0x0B42
#endif

#ifndef GL_EDGE_FLAG
#define GL_EDGE_FLAG 0x0B43
#endif

#ifndef GL_LIGHTING
#define GL_LIGHTING 0x0B50
#endif

#ifndef GL_LIGHT_MODEL_LOCAL_VIEWER
#define GL_LIGHT_MODEL_LOCAL_VIEWER 0x0B51
#endif

#ifndef GL_LIGHT_MODEL_TWO_SIDE
#define GL_LIGHT_MODEL_TWO_SIDE 0x0B52
#endif

#ifndef GL_LIGHT_MODEL_AMBIENT
#define GL_LIGHT_MODEL_AMBIENT 0x0B53
#endif

#ifndef GL_SHADE_MODEL
#define GL_SHADE_MODEL 0x0B54
#endif

#ifndef GL_COLOR_MATERIAL_FACE
#define GL_COLOR_MATERIAL_FACE 0x0B55
#endif

#ifndef GL_COLOR_MATERIAL_PARAMETER
#define GL_COLOR_MATERIAL_PARAMETER 0x0B56
#endif

#ifndef GL_COLOR_MATERIAL
#define GL_COLOR_MATERIAL 0x0B57
#endif

#ifndef GL_FOG
#define GL_FOG 0x0B60
#endif

#ifndef GL_FOG_INDEX
#define GL_FOG_INDEX 0x0B61
#endif

#ifndef GL_FOG_DENSITY
#define GL_FOG_DENSITY 0x0B62
#endif

#ifndef GL_FOG_START
#define GL_FOG_START 0x0B63
#endif

#ifndef GL_FOG_END
#define GL_FOG_END 0x0B64
#endif

#ifndef GL_FOG_MODE
#define GL_FOG_MODE 0x0B65
#endif

#ifndef GL_FOG_COLOR
#define GL_FOG_COLOR 0x0B66
#endif

#ifndef GL_ACCUM_CLEAR_VALUE
#define GL_ACCUM_CLEAR_VALUE 0x0B80
#endif

#ifndef GL_MATRIX_MODE
#define GL_MATRIX_MODE 0x0BA0
#endif

#ifndef GL_NORMALIZE
#define GL_NORMALIZE 0x0BA1
#endif

#ifndef GL_MODELVIEW_STACK_DEPTH
#define GL_MODELVIEW_STACK_DEPTH 0x0BA3
#endif

#ifndef GL_PROJECTION_STACK_DEPTH
#define GL_PROJECTION_STACK_DEPTH 0x0BA4
#endif

#ifndef GL_TEXTURE_STACK_DEPTH
#define GL_TEXTURE_STACK_DEPTH 0x0BA5
#endif

#ifndef GL_MODELVIEW_MATRIX
#define GL_MODELVIEW_MATRIX 0x0BA6
#endif

#ifndef GL_PROJECTION_MATRIX
#define GL_PROJECTION_MATRIX 0x0BA7
#endif

#ifndef GL_TEXTURE_MATRIX
#define GL_TEXTURE_MATRIX 0x0BA8
#endif

#ifndef GL_ATTRIB_STACK_DEPTH
#define GL_ATTRIB_STACK_DEPTH 0x0BB0
#endif

#ifndef GL_CLIENT_ATTRIB_STACK_DEPTH
#define GL_CLIENT_ATTRIB_STACK_DEPTH 0x0BB1
#endif

#ifndef GL_ALPHA_TEST
#define GL_ALPHA_TEST 0x0BC0
#endif

#ifndef GL_ALPHA_TEST_FUNC
#define GL_ALPHA_TEST_FUNC 0x0BC1
#endif

#ifndef GL_ALPHA_TEST_REF
#define GL_ALPHA_TEST_REF 0x0BC2
#endif

#ifndef GL_INDEX_LOGIC_OP
#define GL_INDEX_LOGIC_OP 0x0BF1
#endif

#ifndef GL_LOGIC_OP
#define GL_LOGIC_OP 0x0BF1
#endif

#ifndef GL_AUX_BUFFERS
#define GL_AUX_BUFFERS 0x0C00
#endif

#ifndef GL_INDEX_CLEAR_VALUE
#define GL_INDEX_CLEAR_VALUE 0x0C20
#endif

#ifndef GL_INDEX_WRITEMASK
#define GL_INDEX_WRITEMASK 0x0C21
#endif

#ifndef GL_INDEX_MODE
#define GL_INDEX_MODE 0x0C30
#endif

#ifndef GL_RGBA_MODE
#define GL_RGBA_MODE 0x0C31
#endif

#ifndef GL_RENDER_MODE
#define GL_RENDER_MODE 0x0C40
#endif

#ifndef GL_PERSPECTIVE_CORRECTION_HINT
#define GL_PERSPECTIVE_CORRECTION_HINT 0x0C50
#endif

#ifndef GL_POINT_SMOOTH_HINT
#define GL_POINT_SMOOTH_HINT 0x0C51
#endif

#ifndef GL_FOG_HINT
#define GL_FOG_HINT 0x0C54
#endif

#ifndef GL_TEXTURE_GEN_S
#define GL_TEXTURE_GEN_S 0x0C60
#endif

#ifndef GL_TEXTURE_GEN_T
#define GL_TEXTURE_GEN_T 0x0C61
#endif

#ifndef GL_TEXTURE_GEN_R
#define GL_TEXTURE_GEN_R 0x0C62
#endif

#ifndef GL_TEXTURE_GEN_Q
#define GL_TEXTURE_GEN_Q 0x0C63
#endif

#ifndef GL_PIXEL_MAP_I_TO_I_SIZE
#define GL_PIXEL_MAP_I_TO_I_SIZE 0x0CB0
#endif

#ifndef GL_PIXEL_MAP_S_TO_S_SIZE
#define GL_PIXEL_MAP_S_TO_S_SIZE 0x0CB1
#endif

#ifndef GL_PIXEL_MAP_I_TO_R_SIZE
#define GL_PIXEL_MAP_I_TO_R_SIZE 0x0CB2
#endif

#ifndef GL_PIXEL_MAP_I_TO_G_SIZE
#define GL_PIXEL_MAP_I_TO_G_SIZE 0x0CB3
#endif

#ifndef GL_PIXEL_MAP_I_TO_B_SIZE
#define GL_PIXEL_MAP_I_TO_B_SIZE 0x0CB4
#endif

#ifndef GL_PIXEL_MAP_I_TO_A_SIZE
#define GL_PIXEL_MAP_I_TO_A_SIZE 0x0CB5
#endif

#ifndef GL_PIXEL_MAP_R_TO_R_SIZE
#define GL_PIXEL_MAP_R_TO_R_SIZE 0x0CB6
#endif

#ifndef GL_PIXEL_MAP_G_TO_G_SIZE
#define GL_PIXEL_MAP_G_TO_G_SIZE 0x0CB7
#endif

#ifndef GL_PIXEL_MAP_B_TO_B_SIZE
#define GL_PIXEL_MAP_B_TO_B_SIZE 0x0CB8
#endif

#ifndef GL_PIXEL_MAP_A_TO_A_SIZE
#define GL_PIXEL_MAP_A_TO_A_SIZE 0x0CB9
#endif

#ifndef GL_MAP_COLOR
#define GL_MAP_COLOR 0x0D10
#endif

#ifndef GL_MAP_STENCIL
#define GL_MAP_STENCIL 0x0D11
#endif

#ifndef GL_INDEX_SHIFT
#define GL_INDEX_SHIFT 0x0D12
#endif

#ifndef GL_INDEX_OFFSET
#define GL_INDEX_OFFSET 0x0D13
#endif

#ifndef GL_RED_SCALE
#define GL_RED_SCALE 0x0D14
#endif

#ifndef GL_RED_BIAS
#define GL_RED_BIAS 0x0D15
#endif

#ifndef GL_ZOOM_X
#define GL_ZOOM_X 0x0D16
#endif

#ifndef GL_ZOOM_Y
#define GL_ZOOM_Y 0x0D17
#endif

#ifndef GL_GREEN_SCALE
#define GL_GREEN_SCALE 0x0D18
#endif

#ifndef GL_GREEN_BIAS
#define GL_GREEN_BIAS 0x0D19
#endif

#ifndef GL_BLUE_SCALE
#define GL_BLUE_SCALE 0x0D1A
#endif

#ifndef GL_BLUE_BIAS
#define GL_BLUE_BIAS 0x0D1B
#endif

#ifndef GL_ALPHA_SCALE
#define GL_ALPHA_SCALE 0x0D1C
#endif

#ifndef GL_ALPHA_BIAS
#define GL_ALPHA_BIAS 0x0D1D
#endif

#ifndef GL_DEPTH_SCALE
#define GL_DEPTH_SCALE 0x0D1E
#endif

#ifndef GL_DEPTH_BIAS
#define GL_DEPTH_BIAS 0x0D1F
#endif

#ifndef GL_MAX_EVAL_ORDER
#define GL_MAX_EVAL_ORDER 0x0D30
#endif

#ifndef GL_MAX_LIGHTS
#define GL_MAX_LIGHTS 0x0D31
#endif

#ifndef GL_MAX_CLIP_PLANES
#define GL_MAX_CLIP_PLANES 0x0D32
#endif

#ifndef GL_MAX_PIXEL_MAP_TABLE
#define GL_MAX_PIXEL_MAP_TABLE 0x0D34
#endif

#ifndef GL_MAX_ATTRIB_STACK_DEPTH
#define GL_MAX_ATTRIB_STACK_DEPTH 0x0D35
#endif

#ifndef GL_MAX_MODELVIEW_STACK_DEPTH
#define GL_MAX_MODELVIEW_STACK_DEPTH 0x0D36
#endif

#ifndef GL_MAX_NAME_STACK_DEPTH
#define GL_MAX_NAME_STACK_DEPTH 0x0D37
#endif

#ifndef GL_MAX_PROJECTION_STACK_DEPTH
#define GL_MAX_PROJECTION_STACK_DEPTH 0x0D38
#endif

#ifndef GL_MAX_TEXTURE_STACK_DEPTH
#define GL_MAX_TEXTURE_STACK_DEPTH 0x0D39
#endif

#ifndef GL_MAX_CLIENT_ATTRIB_STACK_DEPTH
#define GL_MAX_CLIENT_ATTRIB_STACK_DEPTH 0x0D3B
#endif

#ifndef GL_INDEX_BITS
#define GL_INDEX_BITS 0x0D51
#endif

#ifndef GL_RED_BITS
#define GL_RED_BITS 0x0D52
#endif

#ifndef GL_GREEN_BITS
#define GL_GREEN_BITS 0x0D53
#endif

#ifndef GL_BLUE_BITS
#define GL_BLUE_BITS 0x0D54
#endif

#ifndef GL_ALPHA_BITS
#define GL_ALPHA_BITS 0x0D55
#endif

#ifndef GL_DEPTH_BITS
#define GL_DEPTH_BITS 0x0D56
#endif

#ifndef GL_STENCIL_BITS
#define GL_STENCIL_BITS 0x0D57
#endif

#ifndef GL_ACCUM_RED_BITS
#define GL_ACCUM_RED_BITS 0x0D58
#endif

#ifndef GL_ACCUM_GREEN_BITS
#define GL_ACCUM_GREEN_BITS 0x0D59
#endif

#ifndef GL_ACCUM_BLUE_BITS
#define GL_ACCUM_BLUE_BITS 0x0D5A
#endif

#ifndef GL_ACCUM_ALPHA_BITS
#define GL_ACCUM_ALPHA_BITS 0x0D5B
#endif

#ifndef GL_NAME_STACK_DEPTH
#define GL_NAME_STACK_DEPTH 0x0D70
#endif

#ifndef GL_AUTO_NORMAL
#define GL_AUTO_NORMAL 0x0D80
#endif

#ifndef GL_MAP1_COLOR_4
#define GL_MAP1_COLOR_4 0x0D90
#endif

#ifndef GL_MAP1_INDEX
#define GL_MAP1_INDEX 0x0D91
#endif

#ifndef GL_MAP1_NORMAL
#define GL_MAP1_NORMAL 0x0D92
#endif

#ifndef GL_MAP1_TEXTURE_COORD_1
#define GL_MAP1_TEXTURE_COORD_1 0x0D93
#endif

#ifndef GL_MAP1_TEXTURE_COORD_2
#define GL_MAP1_TEXTURE_COORD_2 0x0D94
#endif

#ifndef GL_MAP1_TEXTURE_COORD_3
#define GL_MAP1_TEXTURE_COORD_3 0x0D95
#endif

#ifndef GL_MAP1_TEXTURE_COORD_4
#define GL_MAP1_TEXTURE_COORD_4 0x0D96
#endif

#ifndef GL_MAP1_VERTEX_3
#define GL_MAP1_VERTEX_3 0x0D97
#endif

#ifndef GL_MAP1_VERTEX_4
#define GL_MAP1_VERTEX_4 0x0D98
#endif

#ifndef GL_MAP2_COLOR_4
#define GL_MAP2_COLOR_4 0x0DB0
#endif

#ifndef GL_MAP2_INDEX
#define GL_MAP2_INDEX 0x0DB1
#endif

#ifndef GL_MAP2_NORMAL
#define GL_MAP2_NORMAL 0x0DB2
#endif

#ifndef GL_MAP2_TEXTURE_COORD_1
#define GL_MAP2_TEXTURE_COORD_1 0x0DB3
#endif

#ifndef GL_MAP2_TEXTURE_COORD_2
#define GL_MAP2_TEXTURE_COORD_2 0x0DB4
#endif

#ifndef GL_MAP2_TEXTURE_COORD_3
#define GL_MAP2_TEXTURE_COORD_3 0x0DB5
#endif

#ifndef GL_MAP2_TEXTURE_COORD_4
#define GL_MAP2_TEXTURE_COORD_4 0x0DB6
#endif

#ifndef GL_MAP2_VERTEX_3
#define GL_MAP2_VERTEX_3 0x0DB7
#endif

#ifndef GL_MAP2_VERTEX_4
#define GL_MAP2_VERTEX_4 0x0DB8
#endif

#ifndef GL_MAP1_GRID_DOMAIN
#define GL_MAP1_GRID_DOMAIN 0x0DD0
#endif

#ifndef GL_MAP1_GRID_SEGMENTS
#define GL_MAP1_GRID_SEGMENTS 0x0DD1
#endif

#ifndef GL_MAP2_GRID_DOMAIN
#define GL_MAP2_GRID_DOMAIN 0x0DD2
#endif

#ifndef GL_MAP2_GRID_SEGMENTS
#define GL_MAP2_GRID_SEGMENTS 0x0DD3
#endif

#ifndef GL_FEEDBACK_BUFFER_SIZE
#define GL_FEEDBACK_BUFFER_SIZE 0x0DF1
#endif

#ifndef GL_FEEDBACK_BUFFER_TYPE
#define GL_FEEDBACK_BUFFER_TYPE 0x0DF2
#endif

#ifndef GL_SELECTION_BUFFER_SIZE
#define GL_SELECTION_BUFFER_SIZE 0x0DF4
#endif

#ifndef GL_VERTEX_ARRAY
#define GL_VERTEX_ARRAY 0x8074
#endif

#ifndef GL_NORMAL_ARRAY
#define GL_NORMAL_ARRAY 0x8075
#endif

#ifndef GL_COLOR_ARRAY
#define GL_COLOR_ARRAY 0x8076
#endif

#ifndef GL_INDEX_ARRAY
#define GL_INDEX_ARRAY 0x8077
#endif

#ifndef GL_TEXTURE_COORD_ARRAY
#define GL_TEXTURE_COORD_ARRAY 0x8078
#endif

#ifndef GL_EDGE_FLAG_ARRAY
#define GL_EDGE_FLAG_ARRAY 0x8079
#endif

#ifndef GL_VERTEX_ARRAY_SIZE
#define GL_VERTEX_ARRAY_SIZE 0x807A
#endif

#ifndef GL_VERTEX_ARRAY_TYPE
#define GL_VERTEX_ARRAY_TYPE 0x807B
#endif

#ifndef GL_VERTEX_ARRAY_STRIDE
#define GL_VERTEX_ARRAY_STRIDE 0x807C
#endif

#ifndef GL_NORMAL_ARRAY_TYPE
#define GL_NORMAL_ARRAY_TYPE 0x807E
#endif

#ifndef GL_NORMAL_ARRAY_STRIDE
#define GL_NORMAL_ARRAY_STRIDE 0x807F
#endif

#ifndef GL_COLOR_ARRAY_SIZE
#define GL_COLOR_ARRAY_SIZE 0x8081
#endif

#ifndef GL_COLOR_ARRAY_TYPE
#define GL_COLOR_ARRAY_TYPE 0x8082
#endif

#ifndef GL_COLOR_ARRAY_STRIDE
#define GL_COLOR_ARRAY_STRIDE 0x8083
#endif

#ifndef GL_INDEX_ARRAY_TYPE
#define GL_INDEX_ARRAY_TYPE 0x8085
#endif

#ifndef GL_INDEX_ARRAY_STRIDE
#define GL_INDEX_ARRAY_STRIDE 0x8086
#endif

#ifndef GL_TEXTURE_COORD_ARRAY_SIZE
#define GL_TEXTURE_COORD_ARRAY_SIZE 0x8088
#endif

#ifndef GL_TEXTURE_COORD_ARRAY_TYPE
#define GL_TEXTURE_COORD_ARRAY_TYPE 0x8089
#endif

#ifndef GL_TEXTURE_COORD_ARRAY_STRIDE
#define GL_TEXTURE_COORD_ARRAY_STRIDE 0x808A
#endif

#ifndef GL_EDGE_FLAG_ARRAY_STRIDE
#define GL_EDGE_FLAG_ARRAY_STRIDE 0x808C
#endif

/* GetTextureParameter */
#ifndef GL_TEXTURE_COMPONENTS
#define GL_TEXTURE_COMPONENTS 0x1003
#endif

#ifndef GL_TEXTURE_BORDER
#define GL_TEXTURE_BORDER 0x1005
#endif

#ifndef GL_TEXTURE_LUMINANCE_SIZE
#define GL_TEXTURE_LUMINANCE_SIZE 0x8060
#endif

#ifndef GL_TEXTURE_INTENSITY_SIZE
#define GL_TEXTURE_INTENSITY_SIZE 0x8061
#endif

#ifndef GL_TEXTURE_PRIORITY
#define GL_TEXTURE_PRIORITY 0x8066
#endif

#ifndef GL_TEXTURE_RESIDENT
#define GL_TEXTURE_RESIDENT 0x8067
#endif

/* LightParameter */
#ifndef GL_AMBIENT
#define GL_AMBIENT 0x1200
#endif

#ifndef GL_DIFFUSE
#define GL_DIFFUSE 0x1201
#endif

#ifndef GL_SPECULAR
#define GL_SPECULAR 0x1202
#endif

#ifndef GL_POSITION
#define GL_POSITION 0x1203
#endif

#ifndef GL_SPOT_DIRECTION
#define GL_SPOT_DIRECTION 0x1204
#endif

#ifndef GL_SPOT_EXPONENT
#define GL_SPOT_EXPONENT 0x1205
#endif

#ifndef GL_SPOT_CUTOFF
#define GL_SPOT_CUTOFF 0x1206
#endif

#ifndef GL_CONSTANT_ATTENUATION
#define GL_CONSTANT_ATTENUATION 0x1207
#endif

#ifndef GL_LINEAR_ATTENUATION
#define GL_LINEAR_ATTENUATION 0x1208
#endif

#ifndef GL_QUADRATIC_ATTENUATION
#define GL_QUADRATIC_ATTENUATION 0x1209
#endif

/* ListMode */
#ifndef GL_COMPILE
#define GL_COMPILE 0x1300
#endif

#ifndef GL_COMPILE_AND_EXECUTE
#define GL_COMPILE_AND_EXECUTE 0x1301
#endif

/* DataType */
#ifndef GL_2_BYTES
#define GL_2_BYTES 0x1407
#endif

#ifndef GL_3_BYTES
#define GL_3_BYTES 0x1408
#endif

#ifndef GL_4_BYTES
#define GL_4_BYTES 0x1409
#endif

/* MaterialParameter */
#ifndef GL_EMISSION
#define GL_EMISSION 0x1600
#endif

#ifndef GL_SHININESS
#define GL_SHININESS 0x1601
#endif

#ifndef GL_AMBIENT_AND_DIFFUSE
#define GL_AMBIENT_AND_DIFFUSE 0x1602
#endif

#ifndef GL_COLOR_INDEXES
#define GL_COLOR_INDEXES 0x1603
#endif

/* MatrixMode */
#ifndef GL_MODELVIEW
#define GL_MODELVIEW 0x1700
#endif

#ifndef GL_PROJECTION
#define GL_PROJECTION 0x1701
#endif

/* PixelFormat */
#ifndef GL_COLOR_INDEX
#define GL_COLOR_INDEX 0x1900
#endif

#ifndef GL_LUMINANCE
#define GL_LUMINANCE 0x1909
#endif

#ifndef GL_LUMINANCE_ALPHA
#define GL_LUMINANCE_ALPHA 0x190A
#endif

/* PixelType */
#ifndef GL_BITMAP
#define GL_BITMAP 0x1A00
#endif

/* RenderingMode */
#ifndef GL_RENDER
#define GL_RENDER 0x1C00
#endif

#ifndef GL_FEEDBACK
#define GL_FEEDBACK 0x1C01
#endif

#ifndef GL_SELECT
#define GL_SELECT 0x1C02
#endif

/* ShadingModel */
#ifndef GL_FLAT
#define GL_FLAT 0x1D00
#endif

#ifndef GL_SMOOTH
#define GL_SMOOTH 0x1D01
#endif

/* TextureCoordName */
#ifndef GL_S
#define GL_S 0x2000
#endif

#ifndef GL_T
#define GL_T 0x2001
#endif

#ifndef GL_R
#define GL_R 0x2002
#endif

#ifndef GL_Q
#define GL_Q 0x2003
#endif

/* TextureEnvMode */
#ifndef GL_MODULATE
#define GL_MODULATE 0x2100
#endif

#ifndef GL_DECAL
#define GL_DECAL 0x2101
#endif

/* TextureEnvParameter */
#ifndef GL_TEXTURE_ENV_MODE
#define GL_TEXTURE_ENV_MODE 0x2200
#endif

#ifndef GL_TEXTURE_ENV_COLOR
#define GL_TEXTURE_ENV_COLOR 0x2201
#endif

/* TextureEnvTarget */
#ifndef GL_TEXTURE_ENV
#define GL_TEXTURE_ENV 0x2300
#endif

/* TextureGenMode */
#ifndef GL_EYE_LINEAR
#define GL_EYE_LINEAR 0x2400
#endif

#ifndef GL_OBJECT_LINEAR
#define GL_OBJECT_LINEAR 0x2401
#endif

#ifndef GL_SPHERE_MAP
#define GL_SPHERE_MAP 0x2402
#endif

/* TextureGenParameter */
#ifndef GL_TEXTURE_GEN_MODE
#define GL_TEXTURE_GEN_MODE 0x2500
#endif

#ifndef GL_OBJECT_PLANE
#define GL_OBJECT_PLANE 0x2501
#endif

#ifndef GL_EYE_PLANE
#define GL_EYE_PLANE 0x2502
#endif

/* TextureWrapMode */
#ifndef GL_CLAMP
#define GL_CLAMP 0x2900
#endif

/* PixelInternalFormat */
#ifndef GL_ALPHA4
#define GL_ALPHA4 0x803B
#endif

#ifndef GL_ALPHA8
#define GL_ALPHA8 0x803C
#endif

#ifndef GL_ALPHA12
#define GL_ALPHA12 0x803D
#endif

#ifndef GL_ALPHA16
#define GL_ALPHA16 0x803E
#endif

#ifndef GL_LUMINANCE4
#define GL_LUMINANCE4 0x803F
#endif

#ifndef GL_LUMINANCE8
#define GL_LUMINANCE8 0x8040
#endif

#ifndef GL_LUMINANCE12
#define GL_LUMINANCE12 0x8041
#endif

#ifndef GL_LUMINANCE16
#define GL_LUMINANCE16 0x8042
#endif

#ifndef GL_LUMINANCE4_ALPHA4
#define GL_LUMINANCE4_ALPHA4 0x8043
#endif

#ifndef GL_LUMINANCE6_ALPHA2
#define GL_LUMINANCE6_ALPHA2 0x8044
#endif

#ifndef GL_LUMINANCE8_ALPHA8
#define GL_LUMINANCE8_ALPHA8 0x8045
#endif

#ifndef GL_LUMINANCE12_ALPHA4
#define GL_LUMINANCE12_ALPHA4 0x8046
#endif

#ifndef GL_LUMINANCE12_ALPHA12
#define GL_LUMINANCE12_ALPHA12 0x8047
#endif

#ifndef GL_LUMINANCE16_ALPHA16
#define GL_LUMINANCE16_ALPHA16 0x8048
#endif

#ifndef GL_INTENSITY
#define GL_INTENSITY 0x8049
#endif

#ifndef GL_INTENSITY4
#define GL_INTENSITY4 0x804A
#endif

#ifndef GL_INTENSITY8
#define GL_INTENSITY8 0x804B
#endif

#ifndef GL_INTENSITY12
#define GL_INTENSITY12 0x804C
#endif

#ifndef GL_INTENSITY16
#define GL_INTENSITY16 0x804D
#endif

/* InterleavedArrayFormat */
#ifndef GL_V2F
#define GL_V2F 0x2A20
#endif

#ifndef GL_V3F
#define GL_V3F 0x2A21
#endif

#ifndef GL_C4UB_V2F
#define GL_C4UB_V2F 0x2A22
#endif

#ifndef GL_C4UB_V3F
#define GL_C4UB_V3F 0x2A23
#endif

#ifndef GL_C3F_V3F
#define GL_C3F_V3F 0x2A24
#endif

#ifndef GL_N3F_V3F
#define GL_N3F_V3F 0x2A25
#endif

#ifndef GL_C4F_N3F_V3F
#define GL_C4F_N3F_V3F 0x2A26
#endif

#ifndef GL_T2F_V3F
#define GL_T2F_V3F 0x2A27
#endif

#ifndef GL_T4F_V4F
#define GL_T4F_V4F 0x2A28
#endif

#ifndef GL_T2F_C4UB_V3F
#define GL_T2F_C4UB_V3F 0x2A29
#endif

#ifndef GL_T2F_C3F_V3F
#define GL_T2F_C3F_V3F 0x2A2A
#endif

#ifndef GL_T2F_N3F_V3F
#define GL_T2F_N3F_V3F 0x2A2B
#endif

#ifndef GL_T2F_C4F_N3F_V3F
#define GL_T2F_C4F_N3F_V3F 0x2A2C
#endif

#ifndef GL_T4F_C4F_N3F_V4F
#define GL_T4F_C4F_N3F_V4F 0x2A2D
#endif

/* ClipPlaneName */
#ifndef GL_CLIP_PLANE0
#define GL_CLIP_PLANE0 0x3000
#endif

#ifndef GL_CLIP_PLANE1
#define GL_CLIP_PLANE1 0x3001
#endif

#ifndef GL_CLIP_PLANE2
#define GL_CLIP_PLANE2 0x3002
#endif

#ifndef GL_CLIP_PLANE3
#define GL_CLIP_PLANE3 0x3003
#endif

#ifndef GL_CLIP_PLANE4
#define GL_CLIP_PLANE4 0x3004
#endif

#ifndef GL_CLIP_PLANE5
#define GL_CLIP_PLANE5 0x3005
#endif

/* LightName */
#ifndef GL_LIGHT0
#define GL_LIGHT0 0x4000
#endif

#ifndef GL_LIGHT1
#define GL_LIGHT1 0x4001
#endif

#ifndef GL_LIGHT2
#define GL_LIGHT2 0x4002
#endif

#ifndef GL_LIGHT3
#define GL_LIGHT3 0x4003
#endif

#ifndef GL_LIGHT4
#define GL_LIGHT4 0x4004
#endif

#ifndef GL_LIGHT5
#define GL_LIGHT5 0x4005
#endif

#ifndef GL_LIGHT6
#define GL_LIGHT6 0x4006
#endif

#ifndef GL_LIGHT7
#define GL_LIGHT7 0x4007
#endif

#ifndef GL_UNSIGNED_BYTE_3_3_2
#define GL_UNSIGNED_BYTE_3_3_2 0x8032
#endif

#ifndef GL_UNSIGNED_SHORT_4_4_4_4
#define GL_UNSIGNED_SHORT_4_4_4_4 0x8033
#endif

#ifndef GL_UNSIGNED_SHORT_5_5_5_1
#define GL_UNSIGNED_SHORT_5_5_5_1 0x8034
#endif

#ifndef GL_UNSIGNED_INT_8_8_8_8
#define GL_UNSIGNED_INT_8_8_8_8 0x8035
#endif

#ifndef GL_UNSIGNED_INT_10_10_10_2
#define GL_UNSIGNED_INT_10_10_10_2 0x8036
#endif

#ifndef GL_TEXTURE_BINDING_3D
#define GL_TEXTURE_BINDING_3D 0x806A
#endif

#ifndef GL_PACK_SKIP_IMAGES
#define GL_PACK_SKIP_IMAGES 0x806B
#endif

#ifndef GL_PACK_IMAGE_HEIGHT
#define GL_PACK_IMAGE_HEIGHT 0x806C
#endif

#ifndef GL_UNPACK_SKIP_IMAGES
#define GL_UNPACK_SKIP_IMAGES 0x806D
#endif

#ifndef GL_UNPACK_IMAGE_HEIGHT
#define GL_UNPACK_IMAGE_HEIGHT 0x806E
#endif

#ifndef GL_TEXTURE_3D
#define GL_TEXTURE_3D 0x806F
#endif

#ifndef GL_PROXY_TEXTURE_3D
#define GL_PROXY_TEXTURE_3D 0x8070
#endif

#ifndef GL_TEXTURE_DEPTH
#define GL_TEXTURE_DEPTH 0x8071
#endif

#ifndef GL_TEXTURE_WRAP_R
#define GL_TEXTURE_WRAP_R 0x8072
#endif

#ifndef GL_MAX_3D_TEXTURE_SIZE
#define GL_MAX_3D_TEXTURE_SIZE 0x8073
#endif

#ifndef GL_UNSIGNED_BYTE_2_3_3_REV
#define GL_UNSIGNED_BYTE_2_3_3_REV 0x8362
#endif

#ifndef GL_UNSIGNED_SHORT_5_6_5
#define GL_UNSIGNED_SHORT_5_6_5 0x8363
#endif

#ifndef GL_UNSIGNED_SHORT_5_6_5_REV
#define GL_UNSIGNED_SHORT_5_6_5_REV 0x8364
#endif

#ifndef GL_UNSIGNED_SHORT_4_4_4_4_REV
#define GL_UNSIGNED_SHORT_4_4_4_4_REV 0x8365
#endif

#ifndef GL_UNSIGNED_SHORT_1_5_5_5_REV
#define GL_UNSIGNED_SHORT_1_5_5_5_REV 0x8366
#endif

#ifndef GL_UNSIGNED_INT_8_8_8_8_REV
#define GL_UNSIGNED_INT_8_8_8_8_REV 0x8367
#endif

#ifndef GL_UNSIGNED_INT_2_10_10_10_REV
#define GL_UNSIGNED_INT_2_10_10_10_REV 0x8368
#endif

#ifndef GL_BGR
#define GL_BGR 0x80E0
#endif

#ifndef GL_BGRA
#define GL_BGRA 0x80E1
#endif

#ifndef GL_MAX_ELEMENTS_VERTICES
#define GL_MAX_ELEMENTS_VERTICES 0x80E8
#endif

#ifndef GL_MAX_ELEMENTS_INDICES
#define GL_MAX_ELEMENTS_INDICES 0x80E9
#endif

#ifndef GL_CLAMP_TO_EDGE
#define GL_CLAMP_TO_EDGE 0x812F
#endif

#ifndef GL_TEXTURE_MIN_LOD
#define GL_TEXTURE_MIN_LOD 0x813A
#endif

#ifndef GL_TEXTURE_MAX_LOD
#define GL_TEXTURE_MAX_LOD 0x813B
#endif

#ifndef GL_TEXTURE_BASE_LEVEL
#define GL_TEXTURE_BASE_LEVEL 0x813C
#endif

#ifndef GL_TEXTURE_MAX_LEVEL
#define GL_TEXTURE_MAX_LEVEL 0x813D
#endif

#ifndef GL_SMOOTH_POINT_SIZE_RANGE
#define GL_SMOOTH_POINT_SIZE_RANGE 0x0B12
#endif

#ifndef GL_SMOOTH_POINT_SIZE_GRANULARITY
#define GL_SMOOTH_POINT_SIZE_GRANULARITY 0x0B13
#endif

#ifndef GL_SMOOTH_LINE_WIDTH_RANGE
#define GL_SMOOTH_LINE_WIDTH_RANGE 0x0B22
#endif

#ifndef GL_SMOOTH_LINE_WIDTH_GRANULARITY
#define GL_SMOOTH_LINE_WIDTH_GRANULARITY 0x0B23
#endif

#ifndef GL_ALIASED_LINE_WIDTH_RANGE
#define GL_ALIASED_LINE_WIDTH_RANGE 0x846E
#endif

#ifndef GL_RESCALE_NORMAL
#define GL_RESCALE_NORMAL 0x803A
#endif

#ifndef GL_LIGHT_MODEL_COLOR_CONTROL
#define GL_LIGHT_MODEL_COLOR_CONTROL 0x81F8
#endif

#ifndef GL_SINGLE_COLOR
#define GL_SINGLE_COLOR 0x81F9
#endif

#ifndef GL_SEPARATE_SPECULAR_COLOR
#define GL_SEPARATE_SPECULAR_COLOR 0x81FA
#endif

#ifndef GL_ALIASED_POINT_SIZE_RANGE
#define GL_ALIASED_POINT_SIZE_RANGE 0x846D
#endif

#ifndef GL_CONSTANT_COLOR
#define GL_CONSTANT_COLOR 0x8001
#endif

#ifndef GL_ONE_MINUS_CONSTANT_COLOR
#define GL_ONE_MINUS_CONSTANT_COLOR 0x8002
#endif

#ifndef GL_CONSTANT_ALPHA
#define GL_CONSTANT_ALPHA 0x8003
#endif

#ifndef GL_ONE_MINUS_CONSTANT_ALPHA
#define GL_ONE_MINUS_CONSTANT_ALPHA 0x8004
#endif

#ifndef GL_BLEND_COLOR
#define GL_BLEND_COLOR 0x8005
#endif

#ifndef GL_FUNC_ADD
#define GL_FUNC_ADD 0x8006
#endif

#ifndef GL_MIN
#define GL_MIN 0x8007
#endif

#ifndef GL_MAX
#define GL_MAX 0x8008
#endif

#ifndef GL_BLEND_EQUATION
#define GL_BLEND_EQUATION 0x8009
#endif

#ifndef GL_FUNC_SUBTRACT
#define GL_FUNC_SUBTRACT 0x800A
#endif

#ifndef GL_FUNC_REVERSE_SUBTRACT
#define GL_FUNC_REVERSE_SUBTRACT 0x800B
#endif

#ifndef GL_CONVOLUTION_1D
#define GL_CONVOLUTION_1D 0x8010
#endif

#ifndef GL_CONVOLUTION_2D
#define GL_CONVOLUTION_2D 0x8011
#endif

#ifndef GL_SEPARABLE_2D
#define GL_SEPARABLE_2D 0x8012
#endif

#ifndef GL_CONVOLUTION_BORDER_MODE
#define GL_CONVOLUTION_BORDER_MODE 0x8013
#endif

#ifndef GL_CONVOLUTION_FILTER_SCALE
#define GL_CONVOLUTION_FILTER_SCALE 0x8014
#endif

#ifndef GL_CONVOLUTION_FILTER_BIAS
#define GL_CONVOLUTION_FILTER_BIAS 0x8015
#endif

#ifndef GL_REDUCE
#define GL_REDUCE 0x8016
#endif

#ifndef GL_CONVOLUTION_FORMAT
#define GL_CONVOLUTION_FORMAT 0x8017
#endif

#ifndef GL_CONVOLUTION_WIDTH
#define GL_CONVOLUTION_WIDTH 0x8018
#endif

#ifndef GL_CONVOLUTION_HEIGHT
#define GL_CONVOLUTION_HEIGHT 0x8019
#endif

#ifndef GL_MAX_CONVOLUTION_WIDTH
#define GL_MAX_CONVOLUTION_WIDTH 0x801A
#endif

#ifndef GL_MAX_CONVOLUTION_HEIGHT
#define GL_MAX_CONVOLUTION_HEIGHT 0x801B
#endif

#ifndef GL_POST_CONVOLUTION_RED_SCALE
#define GL_POST_CONVOLUTION_RED_SCALE 0x801C
#endif

#ifndef GL_POST_CONVOLUTION_GREEN_SCALE
#define GL_POST_CONVOLUTION_GREEN_SCALE 0x801D
#endif

#ifndef GL_POST_CONVOLUTION_BLUE_SCALE
#define GL_POST_CONVOLUTION_BLUE_SCALE 0x801E
#endif

#ifndef GL_POST_CONVOLUTION_ALPHA_SCALE
#define GL_POST_CONVOLUTION_ALPHA_SCALE 0x801F
#endif

#ifndef GL_POST_CONVOLUTION_RED_BIAS
#define GL_POST_CONVOLUTION_RED_BIAS 0x8020
#endif

#ifndef GL_POST_CONVOLUTION_GREEN_BIAS
#define GL_POST_CONVOLUTION_GREEN_BIAS 0x8021
#endif

#ifndef GL_POST_CONVOLUTION_BLUE_BIAS
#define GL_POST_CONVOLUTION_BLUE_BIAS 0x8022
#endif

#ifndef GL_POST_CONVOLUTION_ALPHA_BIAS
#define GL_POST_CONVOLUTION_ALPHA_BIAS 0x8023
#endif

#ifndef GL_HISTOGRAM
#define GL_HISTOGRAM 0x8024
#endif

#ifndef GL_PROXY_HISTOGRAM
#define GL_PROXY_HISTOGRAM 0x8025
#endif

#ifndef GL_HISTOGRAM_WIDTH
#define GL_HISTOGRAM_WIDTH 0x8026
#endif

#ifndef GL_HISTOGRAM_FORMAT
#define GL_HISTOGRAM_FORMAT 0x8027
#endif

#ifndef GL_HISTOGRAM_RED_SIZE
#define GL_HISTOGRAM_RED_SIZE 0x8028
#endif

#ifndef GL_HISTOGRAM_GREEN_SIZE
#define GL_HISTOGRAM_GREEN_SIZE 0x8029
#endif

#ifndef GL_HISTOGRAM_BLUE_SIZE
#define GL_HISTOGRAM_BLUE_SIZE 0x802A
#endif

#ifndef GL_HISTOGRAM_ALPHA_SIZE
#define GL_HISTOGRAM_ALPHA_SIZE 0x802B
#endif

#ifndef GL_HISTOGRAM_LUMINANCE_SIZE
#define GL_HISTOGRAM_LUMINANCE_SIZE 0x802C
#endif

#ifndef GL_HISTOGRAM_SINK
#define GL_HISTOGRAM_SINK 0x802D
#endif

#ifndef GL_MINMAX
#define GL_MINMAX 0x802E
#endif

#ifndef GL_MINMAX_FORMAT
#define GL_MINMAX_FORMAT 0x802F
#endif

#ifndef GL_MINMAX_SINK
#define GL_MINMAX_SINK 0x8030
#endif

#ifndef GL_TABLE_TOO_LARGE
#define GL_TABLE_TOO_LARGE 0x8031
#endif

#ifndef GL_COLOR_MATRIX
#define GL_COLOR_MATRIX 0x80B1
#endif

#ifndef GL_COLOR_MATRIX_STACK_DEPTH
#define GL_COLOR_MATRIX_STACK_DEPTH 0x80B2
#endif

#ifndef GL_MAX_COLOR_MATRIX_STACK_DEPTH
#define GL_MAX_COLOR_MATRIX_STACK_DEPTH 0x80B3
#endif

#ifndef GL_POST_COLOR_MATRIX_RED_SCALE
#define GL_POST_COLOR_MATRIX_RED_SCALE 0x80B4
#endif

#ifndef GL_POST_COLOR_MATRIX_GREEN_SCALE
#define GL_POST_COLOR_MATRIX_GREEN_SCALE 0x80B5
#endif

#ifndef GL_POST_COLOR_MATRIX_BLUE_SCALE
#define GL_POST_COLOR_MATRIX_BLUE_SCALE 0x80B6
#endif

#ifndef GL_POST_COLOR_MATRIX_ALPHA_SCALE
#define GL_POST_COLOR_MATRIX_ALPHA_SCALE 0x80B7
#endif

#ifndef GL_POST_COLOR_MATRIX_RED_BIAS
#define GL_POST_COLOR_MATRIX_RED_BIAS 0x80B8
#endif

#ifndef GL_POST_COLOR_MATRIX_GREEN_BIAS
#define GL_POST_COLOR_MATRIX_GREEN_BIAS 0x80B9
#endif

#ifndef GL_POST_COLOR_MATRIX_BLUE_BIAS
#define GL_POST_COLOR_MATRIX_BLUE_BIAS 0x80BA
#endif

#ifndef GL_POST_COLOR_MATRIX_ALPHA_BIAS
#define GL_POST_COLOR_MATRIX_ALPHA_BIAS 0x80BB
#endif

#ifndef GL_COLOR_TABLE
#define GL_COLOR_TABLE 0x80D0
#endif

#ifndef GL_POST_CONVOLUTION_COLOR_TABLE
#define GL_POST_CONVOLUTION_COLOR_TABLE 0x80D1
#endif

#ifndef GL_POST_COLOR_MATRIX_COLOR_TABLE
#define GL_POST_COLOR_MATRIX_COLOR_TABLE 0x80D2
#endif

#ifndef GL_PROXY_COLOR_TABLE
#define GL_PROXY_COLOR_TABLE 0x80D3
#endif

#ifndef GL_PROXY_POST_CONVOLUTION_COLOR_TABLE
#define GL_PROXY_POST_CONVOLUTION_COLOR_TABLE 0x80D4
#endif

#ifndef GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE
#define GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE 0x80D5
#endif

#ifndef GL_COLOR_TABLE_SCALE
#define GL_COLOR_TABLE_SCALE 0x80D6
#endif

#ifndef GL_COLOR_TABLE_BIAS
#define GL_COLOR_TABLE_BIAS 0x80D7
#endif

#ifndef GL_COLOR_TABLE_FORMAT
#define GL_COLOR_TABLE_FORMAT 0x80D8
#endif

#ifndef GL_COLOR_TABLE_WIDTH
#define GL_COLOR_TABLE_WIDTH 0x80D9
#endif

#ifndef GL_COLOR_TABLE_RED_SIZE
#define GL_COLOR_TABLE_RED_SIZE 0x80DA
#endif

#ifndef GL_COLOR_TABLE_GREEN_SIZE
#define GL_COLOR_TABLE_GREEN_SIZE 0x80DB
#endif

#ifndef GL_COLOR_TABLE_BLUE_SIZE
#define GL_COLOR_TABLE_BLUE_SIZE 0x80DC
#endif

#ifndef GL_COLOR_TABLE_ALPHA_SIZE
#define GL_COLOR_TABLE_ALPHA_SIZE 0x80DD
#endif

#ifndef GL_COLOR_TABLE_LUMINANCE_SIZE
#define GL_COLOR_TABLE_LUMINANCE_SIZE 0x80DE
#endif

#ifndef GL_COLOR_TABLE_INTENSITY_SIZE
#define GL_COLOR_TABLE_INTENSITY_SIZE 0x80DF
#endif

#ifndef GL_CONSTANT_BORDER
#define GL_CONSTANT_BORDER 0x8151
#endif

#ifndef GL_REPLICATE_BORDER
#define GL_REPLICATE_BORDER 0x8153
#endif

#ifndef GL_CONVOLUTION_BORDER_COLOR
#define GL_CONVOLUTION_BORDER_COLOR 0x8154
#endif

#ifndef GL_TEXTURE0
#define GL_TEXTURE0 0x84C0
#endif

#ifndef GL_TEXTURE1
#define GL_TEXTURE1 0x84C1
#endif

#ifndef GL_TEXTURE2
#define GL_TEXTURE2 0x84C2
#endif

#ifndef GL_TEXTURE3
#define GL_TEXTURE3 0x84C3
#endif

#ifndef GL_TEXTURE4
#define GL_TEXTURE4 0x84C4
#endif

#ifndef GL_TEXTURE5
#define GL_TEXTURE5 0x84C5
#endif

#ifndef GL_TEXTURE6
#define GL_TEXTURE6 0x84C6
#endif

#ifndef GL_TEXTURE7
#define GL_TEXTURE7 0x84C7
#endif

#ifndef GL_TEXTURE8
#define GL_TEXTURE8 0x84C8
#endif

#ifndef GL_TEXTURE9
#define GL_TEXTURE9 0x84C9
#endif

#ifndef GL_TEXTURE10
#define GL_TEXTURE10 0x84CA
#endif

#ifndef GL_TEXTURE11
#define GL_TEXTURE11 0x84CB
#endif

#ifndef GL_TEXTURE12
#define GL_TEXTURE12 0x84CC
#endif

#ifndef GL_TEXTURE13
#define GL_TEXTURE13 0x84CD
#endif

#ifndef GL_TEXTURE14
#define GL_TEXTURE14 0x84CE
#endif

#ifndef GL_TEXTURE15
#define GL_TEXTURE15 0x84CF
#endif

#ifndef GL_TEXTURE16
#define GL_TEXTURE16 0x84D0
#endif

#ifndef GL_TEXTURE17
#define GL_TEXTURE17 0x84D1
#endif

#ifndef GL_TEXTURE18
#define GL_TEXTURE18 0x84D2
#endif

#ifndef GL_TEXTURE19
#define GL_TEXTURE19 0x84D3
#endif

#ifndef GL_TEXTURE20
#define GL_TEXTURE20 0x84D4
#endif

#ifndef GL_TEXTURE21
#define GL_TEXTURE21 0x84D5
#endif

#ifndef GL_TEXTURE22
#define GL_TEXTURE22 0x84D6
#endif

#ifndef GL_TEXTURE23
#define GL_TEXTURE23 0x84D7
#endif

#ifndef GL_TEXTURE24
#define GL_TEXTURE24 0x84D8
#endif

#ifndef GL_TEXTURE25
#define GL_TEXTURE25 0x84D9
#endif

#ifndef GL_TEXTURE26
#define GL_TEXTURE26 0x84DA
#endif

#ifndef GL_TEXTURE27
#define GL_TEXTURE27 0x84DB
#endif

#ifndef GL_TEXTURE28
#define GL_TEXTURE28 0x84DC
#endif

#ifndef GL_TEXTURE29
#define GL_TEXTURE29 0x84DD
#endif

#ifndef GL_TEXTURE30
#define GL_TEXTURE30 0x84DE
#endif

#ifndef GL_TEXTURE31
#define GL_TEXTURE31 0x84DF
#endif

#ifndef GL_ACTIVE_TEXTURE
#define GL_ACTIVE_TEXTURE 0x84E0
#endif

#ifndef GL_MULTISAMPLE
#define GL_MULTISAMPLE 0x809D
#endif

#ifndef GL_SAMPLE_ALPHA_TO_COVERAGE
#define GL_SAMPLE_ALPHA_TO_COVERAGE 0x809E
#endif

#ifndef GL_SAMPLE_ALPHA_TO_ONE
#define GL_SAMPLE_ALPHA_TO_ONE 0x809F
#endif

#ifndef GL_SAMPLE_COVERAGE
#define GL_SAMPLE_COVERAGE 0x80A0
#endif

#ifndef GL_SAMPLE_BUFFERS
#define GL_SAMPLE_BUFFERS 0x80A8
#endif

#ifndef GL_SAMPLES
#define GL_SAMPLES 0x80A9
#endif

#ifndef GL_SAMPLE_COVERAGE_VALUE
#define GL_SAMPLE_COVERAGE_VALUE 0x80AA
#endif

#ifndef GL_SAMPLE_COVERAGE_INVERT
#define GL_SAMPLE_COVERAGE_INVERT 0x80AB
#endif

#ifndef GL_TEXTURE_CUBE_MAP
#define GL_TEXTURE_CUBE_MAP 0x8513
#endif

#ifndef GL_TEXTURE_BINDING_CUBE_MAP
#define GL_TEXTURE_BINDING_CUBE_MAP 0x8514
#endif

#ifndef GL_TEXTURE_CUBE_MAP_POSITIVE_X
#define GL_TEXTURE_CUBE_MAP_POSITIVE_X 0x8515
#endif

#ifndef GL_TEXTURE_CUBE_MAP_NEGATIVE_X
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X 0x8516
#endif

#ifndef GL_TEXTURE_CUBE_MAP_POSITIVE_Y
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y 0x8517
#endif

#ifndef GL_TEXTURE_CUBE_MAP_NEGATIVE_Y
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y 0x8518
#endif

#ifndef GL_TEXTURE_CUBE_MAP_POSITIVE_Z
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z 0x8519
#endif

#ifndef GL_TEXTURE_CUBE_MAP_NEGATIVE_Z
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z 0x851A
#endif

#ifndef GL_PROXY_TEXTURE_CUBE_MAP
#define GL_PROXY_TEXTURE_CUBE_MAP 0x851B
#endif

#ifndef GL_MAX_CUBE_MAP_TEXTURE_SIZE
#define GL_MAX_CUBE_MAP_TEXTURE_SIZE 0x851C
#endif

#ifndef GL_COMPRESSED_RGB
#define GL_COMPRESSED_RGB 0x84ED
#endif

#ifndef GL_COMPRESSED_RGBA
#define GL_COMPRESSED_RGBA 0x84EE
#endif

#ifndef GL_TEXTURE_COMPRESSION_HINT
#define GL_TEXTURE_COMPRESSION_HINT 0x84EF
#endif

#ifndef GL_TEXTURE_COMPRESSED_IMAGE_SIZE
#define GL_TEXTURE_COMPRESSED_IMAGE_SIZE 0x86A0
#endif

#ifndef GL_TEXTURE_COMPRESSED
#define GL_TEXTURE_COMPRESSED 0x86A1
#endif

#ifndef GL_NUM_COMPRESSED_TEXTURE_FORMATS
#define GL_NUM_COMPRESSED_TEXTURE_FORMATS 0x86A2
#endif

#ifndef GL_COMPRESSED_TEXTURE_FORMATS
#define GL_COMPRESSED_TEXTURE_FORMATS 0x86A3
#endif

#ifndef GL_CLAMP_TO_BORDER
#define GL_CLAMP_TO_BORDER 0x812D
#endif

#ifndef GL_CLIENT_ACTIVE_TEXTURE
#define GL_CLIENT_ACTIVE_TEXTURE 0x84E1
#endif

#ifndef GL_MAX_TEXTURE_UNITS
#define GL_MAX_TEXTURE_UNITS 0x84E2
#endif

#ifndef GL_TRANSPOSE_MODELVIEW_MATRIX
#define GL_TRANSPOSE_MODELVIEW_MATRIX 0x84E3
#endif

#ifndef GL_TRANSPOSE_PROJECTION_MATRIX
#define GL_TRANSPOSE_PROJECTION_MATRIX 0x84E4
#endif

#ifndef GL_TRANSPOSE_TEXTURE_MATRIX
#define GL_TRANSPOSE_TEXTURE_MATRIX 0x84E5
#endif

#ifndef GL_TRANSPOSE_COLOR_MATRIX
#define GL_TRANSPOSE_COLOR_MATRIX 0x84E6
#endif

#ifndef GL_MULTISAMPLE_BIT
#define GL_MULTISAMPLE_BIT 0x20000000
#endif

#ifndef GL_NORMAL_MAP
#define GL_NORMAL_MAP 0x8511
#endif

#ifndef GL_REFLECTION_MAP
#define GL_REFLECTION_MAP 0x8512
#endif

#ifndef GL_COMPRESSED_ALPHA
#define GL_COMPRESSED_ALPHA 0x84E9
#endif

#ifndef GL_COMPRESSED_LUMINANCE
#define GL_COMPRESSED_LUMINANCE 0x84EA
#endif

#ifndef GL_COMPRESSED_LUMINANCE_ALPHA
#define GL_COMPRESSED_LUMINANCE_ALPHA 0x84EB
#endif

#ifndef GL_COMPRESSED_INTENSITY
#define GL_COMPRESSED_INTENSITY 0x84EC
#endif

#ifndef GL_COMBINE
#define GL_COMBINE 0x8570
#endif

#ifndef GL_COMBINE_RGB
#define GL_COMBINE_RGB 0x8571
#endif

#ifndef GL_COMBINE_ALPHA
#define GL_COMBINE_ALPHA 0x8572
#endif

#ifndef GL_SOURCE0_RGB
#define GL_SOURCE0_RGB 0x8580
#endif

#ifndef GL_SOURCE1_RGB
#define GL_SOURCE1_RGB 0x8581
#endif

#ifndef GL_SOURCE2_RGB
#define GL_SOURCE2_RGB 0x8582
#endif

#ifndef GL_SOURCE0_ALPHA
#define GL_SOURCE0_ALPHA 0x8588
#endif

#ifndef GL_SOURCE1_ALPHA
#define GL_SOURCE1_ALPHA 0x8589
#endif

#ifndef GL_SOURCE2_ALPHA
#define GL_SOURCE2_ALPHA 0x858A
#endif

#ifndef GL_OPERAND0_RGB
#define GL_OPERAND0_RGB 0x8590
#endif

#ifndef GL_OPERAND1_RGB
#define GL_OPERAND1_RGB 0x8591
#endif

#ifndef GL_OPERAND2_RGB
#define GL_OPERAND2_RGB 0x8592
#endif

#ifndef GL_OPERAND0_ALPHA
#define GL_OPERAND0_ALPHA 0x8598
#endif

#ifndef GL_OPERAND1_ALPHA
#define GL_OPERAND1_ALPHA 0x8599
#endif

#ifndef GL_OPERAND2_ALPHA
#define GL_OPERAND2_ALPHA 0x859A
#endif

#ifndef GL_RGB_SCALE
#define GL_RGB_SCALE 0x8573
#endif

#ifndef GL_ADD_SIGNED
#define GL_ADD_SIGNED 0x8574
#endif

#ifndef GL_INTERPOLATE
#define GL_INTERPOLATE 0x8575
#endif

#ifndef GL_SUBTRACT
#define GL_SUBTRACT 0x84E7
#endif

#ifndef GL_CONSTANT
#define GL_CONSTANT 0x8576
#endif

#ifndef GL_PRIMARY_COLOR
#define GL_PRIMARY_COLOR 0x8577
#endif

#ifndef GL_PREVIOUS
#define GL_PREVIOUS 0x8578
#endif

#ifndef GL_DOT3_RGB
#define GL_DOT3_RGB 0x86AE
#endif

#ifndef GL_DOT3_RGBA
#define GL_DOT3_RGBA 0x86AF
#endif

#ifndef GL_BLEND_DST_RGB
#define GL_BLEND_DST_RGB 0x80C8
#endif

#ifndef GL_BLEND_SRC_RGB
#define GL_BLEND_SRC_RGB 0x80C9
#endif

#ifndef GL_BLEND_DST_ALPHA
#define GL_BLEND_DST_ALPHA 0x80CA
#endif

#ifndef GL_BLEND_SRC_ALPHA
#define GL_BLEND_SRC_ALPHA 0x80CB
#endif

#ifndef GL_POINT_FADE_THRESHOLD_SIZE
#define GL_POINT_FADE_THRESHOLD_SIZE 0x8128
#endif

#ifndef GL_DEPTH_COMPONENT16
#define GL_DEPTH_COMPONENT16 0x81A5
#endif

#ifndef GL_DEPTH_COMPONENT24
#define GL_DEPTH_COMPONENT24 0x81A6
#endif

#ifndef GL_DEPTH_COMPONENT32
#define GL_DEPTH_COMPONENT32 0x81A7
#endif

#ifndef GL_MIRRORED_REPEAT
#define GL_MIRRORED_REPEAT 0x8370
#endif

#ifndef GL_MAX_TEXTURE_LOD_BIAS
#define GL_MAX_TEXTURE_LOD_BIAS 0x84FD
#endif

#ifndef GL_TEXTURE_LOD_BIAS
#define GL_TEXTURE_LOD_BIAS 0x8501
#endif

#ifndef GL_INCR_WRAP
#define GL_INCR_WRAP 0x8507
#endif

#ifndef GL_DECR_WRAP
#define GL_DECR_WRAP 0x8508
#endif

#ifndef GL_TEXTURE_DEPTH_SIZE
#define GL_TEXTURE_DEPTH_SIZE 0x884A
#endif

#ifndef GL_TEXTURE_COMPARE_MODE
#define GL_TEXTURE_COMPARE_MODE 0x884C
#endif

#ifndef GL_TEXTURE_COMPARE_FUNC
#define GL_TEXTURE_COMPARE_FUNC 0x884D
#endif

#ifndef GL_POINT_SIZE_MIN
#define GL_POINT_SIZE_MIN 0x8126
#endif

#ifndef GL_POINT_SIZE_MAX
#define GL_POINT_SIZE_MAX 0x8127
#endif

#ifndef GL_POINT_DISTANCE_ATTENUATION
#define GL_POINT_DISTANCE_ATTENUATION 0x8129
#endif

#ifndef GL_GENERATE_MIPMAP
#define GL_GENERATE_MIPMAP 0x8191
#endif

#ifndef GL_GENERATE_MIPMAP_HINT
#define GL_GENERATE_MIPMAP_HINT 0x8192
#endif

#ifndef GL_FOG_COORDINATE_SOURCE
#define GL_FOG_COORDINATE_SOURCE 0x8450
#endif

#ifndef GL_FOG_COORDINATE
#define GL_FOG_COORDINATE 0x8451
#endif

#ifndef GL_FRAGMENT_DEPTH
#define GL_FRAGMENT_DEPTH 0x8452
#endif

#ifndef GL_CURRENT_FOG_COORDINATE
#define GL_CURRENT_FOG_COORDINATE 0x8453
#endif

#ifndef GL_FOG_COORDINATE_ARRAY_TYPE
#define GL_FOG_COORDINATE_ARRAY_TYPE 0x8454
#endif

#ifndef GL_FOG_COORDINATE_ARRAY_STRIDE
#define GL_FOG_COORDINATE_ARRAY_STRIDE 0x8455
#endif

#ifndef GL_FOG_COORDINATE_ARRAY_POINTER
#define GL_FOG_COORDINATE_ARRAY_POINTER 0x8456
#endif

#ifndef GL_FOG_COORDINATE_ARRAY
#define GL_FOG_COORDINATE_ARRAY 0x8457
#endif

#ifndef GL_COLOR_SUM
#define GL_COLOR_SUM 0x8458
#endif

#ifndef GL_CURRENT_SECONDARY_COLOR
#define GL_CURRENT_SECONDARY_COLOR 0x8459
#endif

#ifndef GL_SECONDARY_COLOR_ARRAY_SIZE
#define GL_SECONDARY_COLOR_ARRAY_SIZE 0x845A
#endif

#ifndef GL_SECONDARY_COLOR_ARRAY_TYPE
#define GL_SECONDARY_COLOR_ARRAY_TYPE 0x845B
#endif

#ifndef GL_SECONDARY_COLOR_ARRAY_STRIDE
#define GL_SECONDARY_COLOR_ARRAY_STRIDE 0x845C
#endif

#ifndef GL_SECONDARY_COLOR_ARRAY_POINTER
#define GL_SECONDARY_COLOR_ARRAY_POINTER 0x845D
#endif

#ifndef GL_SECONDARY_COLOR_ARRAY
#define GL_SECONDARY_COLOR_ARRAY 0x845E
#endif

#ifndef GL_TEXTURE_FILTER_CONTROL
#define GL_TEXTURE_FILTER_CONTROL 0x8500
#endif

#ifndef GL_DEPTH_TEXTURE_MODE
#define GL_DEPTH_TEXTURE_MODE 0x884B
#endif

#ifndef GL_COMPARE_R_TO_TEXTURE
#define GL_COMPARE_R_TO_TEXTURE 0x884E
#endif

#ifndef GL_BUFFER_SIZE
#define GL_BUFFER_SIZE 0x8764
#endif

#ifndef GL_BUFFER_USAGE
#define GL_BUFFER_USAGE 0x8765
#endif

#ifndef GL_QUERY_COUNTER_BITS
#define GL_QUERY_COUNTER_BITS 0x8864
#endif

#ifndef GL_CURRENT_QUERY
#define GL_CURRENT_QUERY 0x8865
#endif

#ifndef GL_QUERY_RESULT
#define GL_QUERY_RESULT 0x8866
#endif

#ifndef GL_QUERY_RESULT_AVAILABLE
#define GL_QUERY_RESULT_AVAILABLE 0x8867
#endif

#ifndef GL_ARRAY_BUFFER
#define GL_ARRAY_BUFFER 0x8892
#endif

#ifndef GL_ELEMENT_ARRAY_BUFFER
#define GL_ELEMENT_ARRAY_BUFFER 0x8893
#endif

#ifndef GL_ARRAY_BUFFER_BINDING
#define GL_ARRAY_BUFFER_BINDING 0x8894
#endif

#ifndef GL_ELEMENT_ARRAY_BUFFER_BINDING
#define GL_ELEMENT_ARRAY_BUFFER_BINDING 0x8895
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING
#define GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING 0x889F
#endif

#ifndef GL_READ_ONLY
#define GL_READ_ONLY 0x88B8
#endif

#ifndef GL_WRITE_ONLY
#define GL_WRITE_ONLY 0x88B9
#endif

#ifndef GL_READ_WRITE
#define GL_READ_WRITE 0x88BA
#endif

#ifndef GL_BUFFER_ACCESS
#define GL_BUFFER_ACCESS 0x88BB
#endif

#ifndef GL_BUFFER_MAPPED
#define GL_BUFFER_MAPPED 0x88BC
#endif

#ifndef GL_BUFFER_MAP_POINTER
#define GL_BUFFER_MAP_POINTER 0x88BD
#endif

#ifndef GL_STREAM_DRAW
#define GL_STREAM_DRAW 0x88E0
#endif

#ifndef GL_STREAM_READ
#define GL_STREAM_READ 0x88E1
#endif

#ifndef GL_STREAM_COPY
#define GL_STREAM_COPY 0x88E2
#endif

#ifndef GL_STATIC_DRAW
#define GL_STATIC_DRAW 0x88E4
#endif

#ifndef GL_STATIC_READ
#define GL_STATIC_READ 0x88E5
#endif

#ifndef GL_STATIC_COPY
#define GL_STATIC_COPY 0x88E6
#endif

#ifndef GL_DYNAMIC_DRAW
#define GL_DYNAMIC_DRAW 0x88E8
#endif

#ifndef GL_DYNAMIC_READ
#define GL_DYNAMIC_READ 0x88E9
#endif

#ifndef GL_DYNAMIC_COPY
#define GL_DYNAMIC_COPY 0x88EA
#endif

#ifndef GL_SAMPLES_PASSED
#define GL_SAMPLES_PASSED 0x8914
#endif

#ifndef GL_VERTEX_ARRAY_BUFFER_BINDING
#define GL_VERTEX_ARRAY_BUFFER_BINDING 0x8896
#endif

#ifndef GL_NORMAL_ARRAY_BUFFER_BINDING
#define GL_NORMAL_ARRAY_BUFFER_BINDING 0x8897
#endif

#ifndef GL_COLOR_ARRAY_BUFFER_BINDING
#define GL_COLOR_ARRAY_BUFFER_BINDING 0x8898
#endif

#ifndef GL_INDEX_ARRAY_BUFFER_BINDING
#define GL_INDEX_ARRAY_BUFFER_BINDING 0x8899
#endif

#ifndef GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING
#define GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING 0x889A
#endif

#ifndef GL_EDGE_FLAG_ARRAY_BUFFER_BINDING
#define GL_EDGE_FLAG_ARRAY_BUFFER_BINDING 0x889B
#endif

#ifndef GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING
#define GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING 0x889C
#endif

#ifndef GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING
#define GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING 0x889D
#endif

#ifndef GL_WEIGHT_ARRAY_BUFFER_BINDING
#define GL_WEIGHT_ARRAY_BUFFER_BINDING 0x889E
#endif

#ifndef GL_FOG_COORD_SRC
#define GL_FOG_COORD_SRC 0x8450
#endif

#ifndef GL_FOG_COORD
#define GL_FOG_COORD 0x8451
#endif

#ifndef GL_CURRENT_FOG_COORD
#define GL_CURRENT_FOG_COORD 0x8453
#endif

#ifndef GL_FOG_COORD_ARRAY_TYPE
#define GL_FOG_COORD_ARRAY_TYPE 0x8454
#endif

#ifndef GL_FOG_COORD_ARRAY_STRIDE
#define GL_FOG_COORD_ARRAY_STRIDE 0x8455
#endif

#ifndef GL_FOG_COORD_ARRAY_POINTER
#define GL_FOG_COORD_ARRAY_POINTER 0x8456
#endif

#ifndef GL_FOG_COORD_ARRAY
#define GL_FOG_COORD_ARRAY 0x8457
#endif

#ifndef GL_FOG_COORD_ARRAY_BUFFER_BINDING
#define GL_FOG_COORD_ARRAY_BUFFER_BINDING 0x889D
#endif

#ifndef GL_BLEND_EQUATION_RGB
#define GL_BLEND_EQUATION_RGB 0x8009
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY_ENABLED
#define GL_VERTEX_ATTRIB_ARRAY_ENABLED 0x8622
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY_SIZE
#define GL_VERTEX_ATTRIB_ARRAY_SIZE 0x8623
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY_STRIDE
#define GL_VERTEX_ATTRIB_ARRAY_STRIDE 0x8624
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY_TYPE
#define GL_VERTEX_ATTRIB_ARRAY_TYPE 0x8625
#endif

#ifndef GL_CURRENT_VERTEX_ATTRIB
#define GL_CURRENT_VERTEX_ATTRIB 0x8626
#endif

#ifndef GL_VERTEX_PROGRAM_POINT_SIZE
#define GL_VERTEX_PROGRAM_POINT_SIZE 0x8642
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY_POINTER
#define GL_VERTEX_ATTRIB_ARRAY_POINTER 0x8645
#endif

#ifndef GL_STENCIL_BACK_FUNC
#define GL_STENCIL_BACK_FUNC 0x8800
#endif

#ifndef GL_STENCIL_BACK_FAIL
#define GL_STENCIL_BACK_FAIL 0x8801
#endif

#ifndef GL_STENCIL_BACK_PASS_DEPTH_FAIL
#define GL_STENCIL_BACK_PASS_DEPTH_FAIL 0x8802
#endif

#ifndef GL_STENCIL_BACK_PASS_DEPTH_PASS
#define GL_STENCIL_BACK_PASS_DEPTH_PASS 0x8803
#endif

#ifndef GL_MAX_DRAW_BUFFERS
#define GL_MAX_DRAW_BUFFERS 0x8824
#endif

#ifndef GL_DRAW_BUFFER0
#define GL_DRAW_BUFFER0 0x8825
#endif

#ifndef GL_DRAW_BUFFER1
#define GL_DRAW_BUFFER1 0x8826
#endif

#ifndef GL_DRAW_BUFFER2
#define GL_DRAW_BUFFER2 0x8827
#endif

#ifndef GL_DRAW_BUFFER3
#define GL_DRAW_BUFFER3 0x8828
#endif

#ifndef GL_DRAW_BUFFER4
#define GL_DRAW_BUFFER4 0x8829
#endif

#ifndef GL_DRAW_BUFFER5
#define GL_DRAW_BUFFER5 0x882A
#endif

#ifndef GL_DRAW_BUFFER6
#define GL_DRAW_BUFFER6 0x882B
#endif

#ifndef GL_DRAW_BUFFER7
#define GL_DRAW_BUFFER7 0x882C
#endif

#ifndef GL_DRAW_BUFFER8
#define GL_DRAW_BUFFER8 0x882D
#endif

#ifndef GL_DRAW_BUFFER9
#define GL_DRAW_BUFFER9 0x882E
#endif

#ifndef GL_DRAW_BUFFER10
#define GL_DRAW_BUFFER10 0x882F
#endif

#ifndef GL_DRAW_BUFFER11
#define GL_DRAW_BUFFER11 0x8830
#endif

#ifndef GL_DRAW_BUFFER12
#define GL_DRAW_BUFFER12 0x8831
#endif

#ifndef GL_DRAW_BUFFER13
#define GL_DRAW_BUFFER13 0x8832
#endif

#ifndef GL_DRAW_BUFFER14
#define GL_DRAW_BUFFER14 0x8833
#endif

#ifndef GL_DRAW_BUFFER15
#define GL_DRAW_BUFFER15 0x8834
#endif

#ifndef GL_BLEND_EQUATION_ALPHA
#define GL_BLEND_EQUATION_ALPHA 0x883D
#endif

#ifndef GL_MAX_VERTEX_ATTRIBS
#define GL_MAX_VERTEX_ATTRIBS 0x8869
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY_NORMALIZED
#define GL_VERTEX_ATTRIB_ARRAY_NORMALIZED 0x886A
#endif

#ifndef GL_MAX_TEXTURE_IMAGE_UNITS
#define GL_MAX_TEXTURE_IMAGE_UNITS 0x8872
#endif

#ifndef GL_FRAGMENT_SHADER
#define GL_FRAGMENT_SHADER 0x8B30
#endif

#ifndef GL_VERTEX_SHADER
#define GL_VERTEX_SHADER 0x8B31
#endif

#ifndef GL_MAX_FRAGMENT_UNIFORM_COMPONENTS
#define GL_MAX_FRAGMENT_UNIFORM_COMPONENTS 0x8B49
#endif

#ifndef GL_MAX_VERTEX_UNIFORM_COMPONENTS
#define GL_MAX_VERTEX_UNIFORM_COMPONENTS 0x8B4A
#endif

#ifndef GL_MAX_VARYING_FLOATS
#define GL_MAX_VARYING_FLOATS 0x8B4B
#endif

#ifndef GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS
#define GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS 0x8B4C
#endif

#ifndef GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS
#define GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS 0x8B4D
#endif

#ifndef GL_SHADER_TYPE
#define GL_SHADER_TYPE 0x8B4F
#endif

#ifndef GL_FLOAT_VEC2
#define GL_FLOAT_VEC2 0x8B50
#endif

#ifndef GL_FLOAT_VEC3
#define GL_FLOAT_VEC3 0x8B51
#endif

#ifndef GL_FLOAT_VEC4
#define GL_FLOAT_VEC4 0x8B52
#endif

#ifndef GL_INT_VEC2
#define GL_INT_VEC2 0x8B53
#endif

#ifndef GL_INT_VEC3
#define GL_INT_VEC3 0x8B54
#endif

#ifndef GL_INT_VEC4
#define GL_INT_VEC4 0x8B55
#endif

#ifndef GL_BOOL
#define GL_BOOL 0x8B56
#endif

#ifndef GL_BOOL_VEC2
#define GL_BOOL_VEC2 0x8B57
#endif

#ifndef GL_BOOL_VEC3
#define GL_BOOL_VEC3 0x8B58
#endif

#ifndef GL_BOOL_VEC4
#define GL_BOOL_VEC4 0x8B59
#endif

#ifndef GL_FLOAT_MAT2
#define GL_FLOAT_MAT2 0x8B5A
#endif

#ifndef GL_FLOAT_MAT3
#define GL_FLOAT_MAT3 0x8B5B
#endif

#ifndef GL_FLOAT_MAT4
#define GL_FLOAT_MAT4 0x8B5C
#endif

#ifndef GL_SAMPLER_1D
#define GL_SAMPLER_1D 0x8B5D
#endif

#ifndef GL_SAMPLER_2D
#define GL_SAMPLER_2D 0x8B5E
#endif

#ifndef GL_SAMPLER_3D
#define GL_SAMPLER_3D 0x8B5F
#endif

#ifndef GL_SAMPLER_CUBE
#define GL_SAMPLER_CUBE 0x8B60
#endif

#ifndef GL_SAMPLER_1D_SHADOW
#define GL_SAMPLER_1D_SHADOW 0x8B61
#endif

#ifndef GL_SAMPLER_2D_SHADOW
#define GL_SAMPLER_2D_SHADOW 0x8B62
#endif

#ifndef GL_DELETE_STATUS
#define GL_DELETE_STATUS 0x8B80
#endif

#ifndef GL_COMPILE_STATUS
#define GL_COMPILE_STATUS 0x8B81
#endif

#ifndef GL_LINK_STATUS
#define GL_LINK_STATUS 0x8B82
#endif

#ifndef GL_VALIDATE_STATUS
#define GL_VALIDATE_STATUS 0x8B83
#endif

#ifndef GL_INFO_LOG_LENGTH
#define GL_INFO_LOG_LENGTH 0x8B84
#endif

#ifndef GL_ATTACHED_SHADERS
#define GL_ATTACHED_SHADERS 0x8B85
#endif

#ifndef GL_ACTIVE_UNIFORMS
#define GL_ACTIVE_UNIFORMS 0x8B86
#endif

#ifndef GL_ACTIVE_UNIFORM_MAX_LENGTH
#define GL_ACTIVE_UNIFORM_MAX_LENGTH 0x8B87
#endif

#ifndef GL_SHADER_SOURCE_LENGTH
#define GL_SHADER_SOURCE_LENGTH 0x8B88
#endif

#ifndef GL_ACTIVE_ATTRIBUTES
#define GL_ACTIVE_ATTRIBUTES 0x8B89
#endif

#ifndef GL_ACTIVE_ATTRIBUTE_MAX_LENGTH
#define GL_ACTIVE_ATTRIBUTE_MAX_LENGTH 0x8B8A
#endif

#ifndef GL_FRAGMENT_SHADER_DERIVATIVE_HINT
#define GL_FRAGMENT_SHADER_DERIVATIVE_HINT 0x8B8B
#endif

#ifndef GL_SHADING_LANGUAGE_VERSION
#define GL_SHADING_LANGUAGE_VERSION 0x8B8C
#endif

#ifndef GL_CURRENT_PROGRAM
#define GL_CURRENT_PROGRAM 0x8B8D
#endif

#ifndef GL_POINT_SPRITE_COORD_ORIGIN
#define GL_POINT_SPRITE_COORD_ORIGIN 0x8CA0
#endif

#ifndef GL_LOWER_LEFT
#define GL_LOWER_LEFT 0x8CA1
#endif

#ifndef GL_UPPER_LEFT
#define GL_UPPER_LEFT 0x8CA2
#endif

#ifndef GL_STENCIL_BACK_REF
#define GL_STENCIL_BACK_REF 0x8CA3
#endif

#ifndef GL_STENCIL_BACK_VALUE_MASK
#define GL_STENCIL_BACK_VALUE_MASK 0x8CA4
#endif

#ifndef GL_STENCIL_BACK_WRITEMASK
#define GL_STENCIL_BACK_WRITEMASK 0x8CA5
#endif

#ifndef GL_VERTEX_PROGRAM_TWO_SIDE
#define GL_VERTEX_PROGRAM_TWO_SIDE 0x8643
#endif

#ifndef GL_POINT_SPRITE
#define GL_POINT_SPRITE 0x8861
#endif

#ifndef GL_COORD_REPLACE
#define GL_COORD_REPLACE 0x8862
#endif

#ifndef GL_MAX_TEXTURE_COORDS
#define GL_MAX_TEXTURE_COORDS 0x8871
#endif

#ifndef GL_PIXEL_PACK_BUFFER
#define GL_PIXEL_PACK_BUFFER 0x88EB
#endif

#ifndef GL_PIXEL_UNPACK_BUFFER
#define GL_PIXEL_UNPACK_BUFFER 0x88EC
#endif

#ifndef GL_PIXEL_PACK_BUFFER_BINDING
#define GL_PIXEL_PACK_BUFFER_BINDING 0x88ED
#endif

#ifndef GL_PIXEL_UNPACK_BUFFER_BINDING
#define GL_PIXEL_UNPACK_BUFFER_BINDING 0x88EF
#endif

#ifndef GL_FLOAT_MAT2x3
#define GL_FLOAT_MAT2x3 0x8B65
#endif

#ifndef GL_FLOAT_MAT2x4
#define GL_FLOAT_MAT2x4 0x8B66
#endif

#ifndef GL_FLOAT_MAT3x2
#define GL_FLOAT_MAT3x2 0x8B67
#endif

#ifndef GL_FLOAT_MAT3x4
#define GL_FLOAT_MAT3x4 0x8B68
#endif

#ifndef GL_FLOAT_MAT4x2
#define GL_FLOAT_MAT4x2 0x8B69
#endif

#ifndef GL_FLOAT_MAT4x3
#define GL_FLOAT_MAT4x3 0x8B6A
#endif

#ifndef GL_SRGB
#define GL_SRGB 0x8C40
#endif

#ifndef GL_SRGB8
#define GL_SRGB8 0x8C41
#endif

#ifndef GL_SRGB_ALPHA
#define GL_SRGB_ALPHA 0x8C42
#endif

#ifndef GL_SRGB8_ALPHA8
#define GL_SRGB8_ALPHA8 0x8C43
#endif

#ifndef GL_COMPRESSED_SRGB
#define GL_COMPRESSED_SRGB 0x8C48
#endif

#ifndef GL_COMPRESSED_SRGB_ALPHA
#define GL_COMPRESSED_SRGB_ALPHA 0x8C49
#endif

#ifndef GL_CURRENT_RASTER_SECONDARY_COLOR
#define GL_CURRENT_RASTER_SECONDARY_COLOR 0x845F
#endif

#ifndef GL_SLUMINANCE_ALPHA
#define GL_SLUMINANCE_ALPHA 0x8C44
#endif

#ifndef GL_SLUMINANCE8_ALPHA8
#define GL_SLUMINANCE8_ALPHA8 0x8C45
#endif

#ifndef GL_SLUMINANCE
#define GL_SLUMINANCE 0x8C46
#endif

#ifndef GL_SLUMINANCE8
#define GL_SLUMINANCE8 0x8C47
#endif

#ifndef GL_COMPRESSED_SLUMINANCE
#define GL_COMPRESSED_SLUMINANCE 0x8C4A
#endif

#ifndef GL_COMPRESSED_SLUMINANCE_ALPHA
#define GL_COMPRESSED_SLUMINANCE_ALPHA 0x8C4B
#endif

#ifndef GL_COMPARE_REF_TO_TEXTURE
#define GL_COMPARE_REF_TO_TEXTURE 0x884E
#endif

#ifndef GL_CLIP_DISTANCE0
#define GL_CLIP_DISTANCE0 0x3000
#endif

#ifndef GL_CLIP_DISTANCE1
#define GL_CLIP_DISTANCE1 0x3001
#endif

#ifndef GL_CLIP_DISTANCE2
#define GL_CLIP_DISTANCE2 0x3002
#endif

#ifndef GL_CLIP_DISTANCE3
#define GL_CLIP_DISTANCE3 0x3003
#endif

#ifndef GL_CLIP_DISTANCE4
#define GL_CLIP_DISTANCE4 0x3004
#endif

#ifndef GL_CLIP_DISTANCE5
#define GL_CLIP_DISTANCE5 0x3005
#endif

#ifndef GL_CLIP_DISTANCE6
#define GL_CLIP_DISTANCE6 0x3006
#endif

#ifndef GL_CLIP_DISTANCE7
#define GL_CLIP_DISTANCE7 0x3007
#endif

#ifndef GL_MAX_CLIP_DISTANCES
#define GL_MAX_CLIP_DISTANCES 0x0D32
#endif

#ifndef GL_MAJOR_VERSION
#define GL_MAJOR_VERSION 0x821B
#endif

#ifndef GL_MINOR_VERSION
#define GL_MINOR_VERSION 0x821C
#endif

#ifndef GL_NUM_EXTENSIONS
#define GL_NUM_EXTENSIONS 0x821D
#endif

#ifndef GL_CONTEXT_FLAGS
#define GL_CONTEXT_FLAGS 0x821E
#endif

#ifndef GL_COMPRESSED_RED
#define GL_COMPRESSED_RED 0x8225
#endif

#ifndef GL_COMPRESSED_RG
#define GL_COMPRESSED_RG 0x8226
#endif

#ifndef GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT
#define GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT 0x0001
#endif

#ifndef GL_RGBA32F
#define GL_RGBA32F 0x8814
#endif

#ifndef GL_RGB32F
#define GL_RGB32F 0x8815
#endif

#ifndef GL_RGBA16F
#define GL_RGBA16F 0x881A
#endif

#ifndef GL_RGB16F
#define GL_RGB16F 0x881B
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY_INTEGER
#define GL_VERTEX_ATTRIB_ARRAY_INTEGER 0x88FD
#endif

#ifndef GL_MAX_ARRAY_TEXTURE_LAYERS
#define GL_MAX_ARRAY_TEXTURE_LAYERS 0x88FF
#endif

#ifndef GL_MIN_PROGRAM_TEXEL_OFFSET
#define GL_MIN_PROGRAM_TEXEL_OFFSET 0x8904
#endif

#ifndef GL_MAX_PROGRAM_TEXEL_OFFSET
#define GL_MAX_PROGRAM_TEXEL_OFFSET 0x8905
#endif

#ifndef GL_CLAMP_READ_COLOR
#define GL_CLAMP_READ_COLOR 0x891C
#endif

#ifndef GL_FIXED_ONLY
#define GL_FIXED_ONLY 0x891D
#endif

#ifndef GL_MAX_VARYING_COMPONENTS
#define GL_MAX_VARYING_COMPONENTS 0x8B4B
#endif

#ifndef GL_TEXTURE_1D_ARRAY
#define GL_TEXTURE_1D_ARRAY 0x8C18
#endif

#ifndef GL_PROXY_TEXTURE_1D_ARRAY
#define GL_PROXY_TEXTURE_1D_ARRAY 0x8C19
#endif

#ifndef GL_TEXTURE_2D_ARRAY
#define GL_TEXTURE_2D_ARRAY 0x8C1A
#endif

#ifndef GL_PROXY_TEXTURE_2D_ARRAY
#define GL_PROXY_TEXTURE_2D_ARRAY 0x8C1B
#endif

#ifndef GL_TEXTURE_BINDING_1D_ARRAY
#define GL_TEXTURE_BINDING_1D_ARRAY 0x8C1C
#endif

#ifndef GL_TEXTURE_BINDING_2D_ARRAY
#define GL_TEXTURE_BINDING_2D_ARRAY 0x8C1D
#endif

#ifndef GL_R11F_G11F_B10F
#define GL_R11F_G11F_B10F 0x8C3A
#endif

#ifndef GL_UNSIGNED_INT_10F_11F_11F_REV
#define GL_UNSIGNED_INT_10F_11F_11F_REV 0x8C3B
#endif

#ifndef GL_RGB9_E5
#define GL_RGB9_E5 0x8C3D
#endif

#ifndef GL_UNSIGNED_INT_5_9_9_9_REV
#define GL_UNSIGNED_INT_5_9_9_9_REV 0x8C3E
#endif

#ifndef GL_TEXTURE_SHARED_SIZE
#define GL_TEXTURE_SHARED_SIZE 0x8C3F
#endif

#ifndef GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH
#define GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH 0x8C76
#endif

#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_MODE
#define GL_TRANSFORM_FEEDBACK_BUFFER_MODE 0x8C7F
#endif

#ifndef GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS 0x8C80
#endif

#ifndef GL_TRANSFORM_FEEDBACK_VARYINGS
#define GL_TRANSFORM_FEEDBACK_VARYINGS 0x8C83
#endif

#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_START
#define GL_TRANSFORM_FEEDBACK_BUFFER_START 0x8C84
#endif

#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_SIZE
#define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE 0x8C85
#endif

#ifndef GL_PRIMITIVES_GENERATED
#define GL_PRIMITIVES_GENERATED 0x8C87
#endif

#ifndef GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN
#define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN 0x8C88
#endif

#ifndef GL_RASTERIZER_DISCARD
#define GL_RASTERIZER_DISCARD 0x8C89
#endif

#ifndef GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS
#define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS 0x8C8A
#endif

#ifndef GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS 0x8C8B
#endif

#ifndef GL_INTERLEAVED_ATTRIBS
#define GL_INTERLEAVED_ATTRIBS 0x8C8C
#endif

#ifndef GL_SEPARATE_ATTRIBS
#define GL_SEPARATE_ATTRIBS 0x8C8D
#endif

#ifndef GL_TRANSFORM_FEEDBACK_BUFFER
#define GL_TRANSFORM_FEEDBACK_BUFFER 0x8C8E
#endif

#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_BINDING
#define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING 0x8C8F
#endif

#ifndef GL_RGBA32UI
#define GL_RGBA32UI 0x8D70
#endif

#ifndef GL_RGB32UI
#define GL_RGB32UI 0x8D71
#endif

#ifndef GL_RGBA16UI
#define GL_RGBA16UI 0x8D76
#endif

#ifndef GL_RGB16UI
#define GL_RGB16UI 0x8D77
#endif

#ifndef GL_RGBA8UI
#define GL_RGBA8UI 0x8D7C
#endif

#ifndef GL_RGB8UI
#define GL_RGB8UI 0x8D7D
#endif

#ifndef GL_RGBA32I
#define GL_RGBA32I 0x8D82
#endif

#ifndef GL_RGB32I
#define GL_RGB32I 0x8D83
#endif

#ifndef GL_RGBA16I
#define GL_RGBA16I 0x8D88
#endif

#ifndef GL_RGB16I
#define GL_RGB16I 0x8D89
#endif

#ifndef GL_RGBA8I
#define GL_RGBA8I 0x8D8E
#endif

#ifndef GL_RGB8I
#define GL_RGB8I 0x8D8F
#endif

#ifndef GL_RED_INTEGER
#define GL_RED_INTEGER 0x8D94
#endif

#ifndef GL_GREEN_INTEGER
#define GL_GREEN_INTEGER 0x8D95
#endif

#ifndef GL_BLUE_INTEGER
#define GL_BLUE_INTEGER 0x8D96
#endif

#ifndef GL_RGB_INTEGER
#define GL_RGB_INTEGER 0x8D98
#endif

#ifndef GL_RGBA_INTEGER
#define GL_RGBA_INTEGER 0x8D99
#endif

#ifndef GL_BGR_INTEGER
#define GL_BGR_INTEGER 0x8D9A
#endif

#ifndef GL_BGRA_INTEGER
#define GL_BGRA_INTEGER 0x8D9B
#endif

#ifndef GL_SAMPLER_1D_ARRAY
#define GL_SAMPLER_1D_ARRAY 0x8DC0
#endif

#ifndef GL_SAMPLER_2D_ARRAY
#define GL_SAMPLER_2D_ARRAY 0x8DC1
#endif

#ifndef GL_SAMPLER_1D_ARRAY_SHADOW
#define GL_SAMPLER_1D_ARRAY_SHADOW 0x8DC3
#endif

#ifndef GL_SAMPLER_2D_ARRAY_SHADOW
#define GL_SAMPLER_2D_ARRAY_SHADOW 0x8DC4
#endif

#ifndef GL_SAMPLER_CUBE_SHADOW
#define GL_SAMPLER_CUBE_SHADOW 0x8DC5
#endif

#ifndef GL_UNSIGNED_INT_VEC2
#define GL_UNSIGNED_INT_VEC2 0x8DC6
#endif

#ifndef GL_UNSIGNED_INT_VEC3
#define GL_UNSIGNED_INT_VEC3 0x8DC7
#endif

#ifndef GL_UNSIGNED_INT_VEC4
#define GL_UNSIGNED_INT_VEC4 0x8DC8
#endif

#ifndef GL_INT_SAMPLER_1D
#define GL_INT_SAMPLER_1D 0x8DC9
#endif

#ifndef GL_INT_SAMPLER_2D
#define GL_INT_SAMPLER_2D 0x8DCA
#endif

#ifndef GL_INT_SAMPLER_3D
#define GL_INT_SAMPLER_3D 0x8DCB
#endif

#ifndef GL_INT_SAMPLER_CUBE
#define GL_INT_SAMPLER_CUBE 0x8DCC
#endif

#ifndef GL_INT_SAMPLER_1D_ARRAY
#define GL_INT_SAMPLER_1D_ARRAY 0x8DCE
#endif

#ifndef GL_INT_SAMPLER_2D_ARRAY
#define GL_INT_SAMPLER_2D_ARRAY 0x8DCF
#endif

#ifndef GL_UNSIGNED_INT_SAMPLER_1D
#define GL_UNSIGNED_INT_SAMPLER_1D 0x8DD1
#endif

#ifndef GL_UNSIGNED_INT_SAMPLER_2D
#define GL_UNSIGNED_INT_SAMPLER_2D 0x8DD2
#endif

#ifndef GL_UNSIGNED_INT_SAMPLER_3D
#define GL_UNSIGNED_INT_SAMPLER_3D 0x8DD3
#endif

#ifndef GL_UNSIGNED_INT_SAMPLER_CUBE
#define GL_UNSIGNED_INT_SAMPLER_CUBE 0x8DD4
#endif

#ifndef GL_UNSIGNED_INT_SAMPLER_1D_ARRAY
#define GL_UNSIGNED_INT_SAMPLER_1D_ARRAY 0x8DD6
#endif

#ifndef GL_UNSIGNED_INT_SAMPLER_2D_ARRAY
#define GL_UNSIGNED_INT_SAMPLER_2D_ARRAY 0x8DD7
#endif

#ifndef GL_QUERY_WAIT
#define GL_QUERY_WAIT 0x8E13
#endif

#ifndef GL_QUERY_NO_WAIT
#define GL_QUERY_NO_WAIT 0x8E14
#endif

#ifndef GL_QUERY_BY_REGION_WAIT
#define GL_QUERY_BY_REGION_WAIT 0x8E15
#endif

#ifndef GL_QUERY_BY_REGION_NO_WAIT
#define GL_QUERY_BY_REGION_NO_WAIT 0x8E16
#endif

#ifndef GL_BUFFER_ACCESS_FLAGS
#define GL_BUFFER_ACCESS_FLAGS 0x911F
#endif

#ifndef GL_BUFFER_MAP_LENGTH
#define GL_BUFFER_MAP_LENGTH 0x9120
#endif

#ifndef GL_BUFFER_MAP_OFFSET
#define GL_BUFFER_MAP_OFFSET 0x9121
#endif

/* Reuse tokens from ARB_depth_buffer_float */
/* Reuse tokens from ARB_framebuffer_object */
/* Reuse tokens from ARB_framebuffer_sRGB */
/* Reuse tokens from ARB_half_float_vertex */
/* Reuse tokens from ARB_map_buffer_range */
/* Reuse tokens from ARB_texture_compression_rgtc */
/* Reuse tokens from ARB_texture_rg */
/* Reuse tokens from ARB_vertex_array_object */
#ifndef GL_CLAMP_VERTEX_COLOR
#define GL_CLAMP_VERTEX_COLOR 0x891A
#endif

#ifndef GL_CLAMP_FRAGMENT_COLOR
#define GL_CLAMP_FRAGMENT_COLOR 0x891B
#endif

#ifndef GL_ALPHA_INTEGER
#define GL_ALPHA_INTEGER 0x8D97
#endif

/* Reuse tokens from ARB_framebuffer_object */
#ifndef GL_SAMPLER_2D_RECT
#define GL_SAMPLER_2D_RECT 0x8B63
#endif

#ifndef GL_SAMPLER_2D_RECT_SHADOW
#define GL_SAMPLER_2D_RECT_SHADOW 0x8B64
#endif

#ifndef GL_SAMPLER_BUFFER
#define GL_SAMPLER_BUFFER 0x8DC2
#endif

#ifndef GL_INT_SAMPLER_2D_RECT
#define GL_INT_SAMPLER_2D_RECT 0x8DCD
#endif

#ifndef GL_INT_SAMPLER_BUFFER
#define GL_INT_SAMPLER_BUFFER 0x8DD0
#endif

#ifndef GL_UNSIGNED_INT_SAMPLER_2D_RECT
#define GL_UNSIGNED_INT_SAMPLER_2D_RECT 0x8DD5
#endif

#ifndef GL_UNSIGNED_INT_SAMPLER_BUFFER
#define GL_UNSIGNED_INT_SAMPLER_BUFFER 0x8DD8
#endif

#ifndef GL_TEXTURE_BUFFER
#define GL_TEXTURE_BUFFER 0x8C2A
#endif

#ifndef GL_MAX_TEXTURE_BUFFER_SIZE
#define GL_MAX_TEXTURE_BUFFER_SIZE 0x8C2B
#endif

#ifndef GL_TEXTURE_BINDING_BUFFER
#define GL_TEXTURE_BINDING_BUFFER 0x8C2C
#endif

#ifndef GL_TEXTURE_BUFFER_DATA_STORE_BINDING
#define GL_TEXTURE_BUFFER_DATA_STORE_BINDING 0x8C2D
#endif

#ifndef GL_TEXTURE_RECTANGLE
#define GL_TEXTURE_RECTANGLE 0x84F5
#endif

#ifndef GL_TEXTURE_BINDING_RECTANGLE
#define GL_TEXTURE_BINDING_RECTANGLE 0x84F6
#endif

#ifndef GL_PROXY_TEXTURE_RECTANGLE
#define GL_PROXY_TEXTURE_RECTANGLE 0x84F7
#endif

#ifndef GL_MAX_RECTANGLE_TEXTURE_SIZE
#define GL_MAX_RECTANGLE_TEXTURE_SIZE 0x84F8
#endif

#ifndef GL_RED_SNORM
#define GL_RED_SNORM 0x8F90
#endif

#ifndef GL_RG_SNORM
#define GL_RG_SNORM 0x8F91
#endif

#ifndef GL_RGB_SNORM
#define GL_RGB_SNORM 0x8F92
#endif

#ifndef GL_RGBA_SNORM
#define GL_RGBA_SNORM 0x8F93
#endif

#ifndef GL_R8_SNORM
#define GL_R8_SNORM 0x8F94
#endif

#ifndef GL_RG8_SNORM
#define GL_RG8_SNORM 0x8F95
#endif

#ifndef GL_RGB8_SNORM
#define GL_RGB8_SNORM 0x8F96
#endif

#ifndef GL_RGBA8_SNORM
#define GL_RGBA8_SNORM 0x8F97
#endif

#ifndef GL_R16_SNORM
#define GL_R16_SNORM 0x8F98
#endif

#ifndef GL_RG16_SNORM
#define GL_RG16_SNORM 0x8F99
#endif

#ifndef GL_RGB16_SNORM
#define GL_RGB16_SNORM 0x8F9A
#endif

#ifndef GL_RGBA16_SNORM
#define GL_RGBA16_SNORM 0x8F9B
#endif

#ifndef GL_SIGNED_NORMALIZED
#define GL_SIGNED_NORMALIZED 0x8F9C
#endif

#ifndef GL_PRIMITIVE_RESTART
#define GL_PRIMITIVE_RESTART 0x8F9D
#endif

#ifndef GL_PRIMITIVE_RESTART_INDEX
#define GL_PRIMITIVE_RESTART_INDEX 0x8F9E
#endif

/* Reuse tokens from ARB_copy_buffer */
/* Reuse tokens from ARB_draw_instanced (none) */
/* Reuse tokens from ARB_uniform_buffer_object */
#ifndef GL_CONTEXT_CORE_PROFILE_BIT
#define GL_CONTEXT_CORE_PROFILE_BIT 0x00000001
#endif

#ifndef GL_CONTEXT_COMPATIBILITY_PROFILE_BIT
#define GL_CONTEXT_COMPATIBILITY_PROFILE_BIT 0x00000002
#endif

#ifndef GL_LINES_ADJACENCY
#define GL_LINES_ADJACENCY 0x000A
#endif

#ifndef GL_LINE_STRIP_ADJACENCY
#define GL_LINE_STRIP_ADJACENCY 0x000B
#endif

#ifndef GL_TRIANGLES_ADJACENCY
#define GL_TRIANGLES_ADJACENCY 0x000C
#endif

#ifndef GL_TRIANGLE_STRIP_ADJACENCY
#define GL_TRIANGLE_STRIP_ADJACENCY 0x000D
#endif

#ifndef GL_PROGRAM_POINT_SIZE
#define GL_PROGRAM_POINT_SIZE 0x8642
#endif

#ifndef GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS
#define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS 0x8C29
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_LAYERED
#define GL_FRAMEBUFFER_ATTACHMENT_LAYERED 0x8DA7
#endif

#ifndef GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS
#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS 0x8DA8
#endif

#ifndef GL_GEOMETRY_SHADER
#define GL_GEOMETRY_SHADER 0x8DD9
#endif

#ifndef GL_GEOMETRY_VERTICES_OUT
#define GL_GEOMETRY_VERTICES_OUT 0x8916
#endif

#ifndef GL_GEOMETRY_INPUT_TYPE
#define GL_GEOMETRY_INPUT_TYPE 0x8917
#endif

#ifndef GL_GEOMETRY_OUTPUT_TYPE
#define GL_GEOMETRY_OUTPUT_TYPE 0x8918
#endif

#ifndef GL_MAX_GEOMETRY_UNIFORM_COMPONENTS
#define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS 0x8DDF
#endif

#ifndef GL_MAX_GEOMETRY_OUTPUT_VERTICES
#define GL_MAX_GEOMETRY_OUTPUT_VERTICES 0x8DE0
#endif

#ifndef GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS
#define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS 0x8DE1
#endif

#ifndef GL_MAX_VERTEX_OUTPUT_COMPONENTS
#define GL_MAX_VERTEX_OUTPUT_COMPONENTS 0x9122
#endif

#ifndef GL_MAX_GEOMETRY_INPUT_COMPONENTS
#define GL_MAX_GEOMETRY_INPUT_COMPONENTS 0x9123
#endif

#ifndef GL_MAX_GEOMETRY_OUTPUT_COMPONENTS
#define GL_MAX_GEOMETRY_OUTPUT_COMPONENTS 0x9124
#endif

#ifndef GL_MAX_FRAGMENT_INPUT_COMPONENTS
#define GL_MAX_FRAGMENT_INPUT_COMPONENTS 0x9125
#endif

#ifndef GL_CONTEXT_PROFILE_MASK
#define GL_CONTEXT_PROFILE_MASK 0x9126
#endif

/* Reuse tokens from ARB_depth_clamp */
/* Reuse tokens from ARB_draw_elements_base_vertex (none) */
/* Reuse tokens from ARB_fragment_coord_conventions (none) */
/* Reuse tokens from ARB_provoking_vertex */
/* Reuse tokens from ARB_seamless_cube_map */
/* Reuse tokens from ARB_sync */
/* Reuse tokens from ARB_texture_multisample */
/* Don't need to reuse tokens from ARB_vertex_array_bgra since they're already in 1.2 core */
#ifndef GL_VERTEX_ATTRIB_ARRAY_DIVISOR
#define GL_VERTEX_ATTRIB_ARRAY_DIVISOR 0x88FE
#endif

/* Reuse tokens from ARB_blend_func_extended */
/* Reuse tokens from ARB_explicit_attrib_location (none) */
/* Reuse tokens from ARB_occlusion_query2 */
/* Reuse tokens from ARB_sampler_objects */
/* Reuse tokens from ARB_shader_bit_encoding (none) */
/* Reuse tokens from ARB_texture_rgb10_a2ui */
/* Reuse tokens from ARB_texture_swizzle */
/* Reuse tokens from ARB_timer_query */
/* Reuse tokens from ARB_vertex_type_2_10_10_10_rev */
#ifndef GL_SAMPLE_SHADING
#define GL_SAMPLE_SHADING 0x8C36
#endif

#ifndef GL_MIN_SAMPLE_SHADING_VALUE
#define GL_MIN_SAMPLE_SHADING_VALUE 0x8C37
#endif

#ifndef GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET
#define GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET 0x8E5E
#endif

#ifndef GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET
#define GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET 0x8E5F
#endif

#ifndef GL_TEXTURE_CUBE_MAP_ARRAY
#define GL_TEXTURE_CUBE_MAP_ARRAY 0x9009
#endif

#ifndef GL_TEXTURE_BINDING_CUBE_MAP_ARRAY
#define GL_TEXTURE_BINDING_CUBE_MAP_ARRAY 0x900A
#endif

#ifndef GL_PROXY_TEXTURE_CUBE_MAP_ARRAY
#define GL_PROXY_TEXTURE_CUBE_MAP_ARRAY 0x900B
#endif

#ifndef GL_SAMPLER_CUBE_MAP_ARRAY
#define GL_SAMPLER_CUBE_MAP_ARRAY 0x900C
#endif

#ifndef GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW
#define GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW 0x900D
#endif

#ifndef GL_INT_SAMPLER_CUBE_MAP_ARRAY
#define GL_INT_SAMPLER_CUBE_MAP_ARRAY 0x900E
#endif

#ifndef GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY
#define GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY 0x900F
#endif

/* Reuse tokens from ARB_texture_query_lod (none) */
/* Reuse tokens from ARB_draw_buffers_blend (none) */
/* Reuse tokens from ARB_draw_indirect */
/* Reuse tokens from ARB_gpu_shader5 */
/* Reuse tokens from ARB_gpu_shader_fp64 */
/* Reuse tokens from ARB_shader_subroutine */
/* Reuse tokens from ARB_tessellation_shader */
/* Reuse tokens from ARB_texture_buffer_object_rgb32 (none) */
/* Reuse tokens from ARB_transform_feedback2 */
/* Reuse tokens from ARB_transform_feedback3 */
/* Reuse tokens from ARB_ES2_compatibility */
/* Reuse tokens from ARB_get_program_binary */
/* Reuse tokens from ARB_separate_shader_objects */
/* Reuse tokens from ARB_shader_precision (none) */
/* Reuse tokens from ARB_vertex_attrib_64bit - all are in GL 3.0 and 4.0 already */
/* Reuse tokens from ARB_viewport_array - some are in GL 1.1 and ARB_provoking_vertex already */
/* Reuse tokens from ARB_base_instance (none) */
/* Reuse tokens from ARB_shading_language_420pack (none) */
/* Reuse tokens from ARB_transform_feedback_instanced (none) */
/* Reuse tokens from ARB_compressed_texture_pixel_storage */
/* Reuse tokens from ARB_conservative_depth (none) */
/* Reuse tokens from ARB_internalformat_query */
/* Reuse tokens from ARB_map_buffer_alignment */
/* Reuse tokens from ARB_shader_atomic_counters */
/* Reuse tokens from ARB_shader_image_load_store */
/* Reuse tokens from ARB_shading_language_packing (none) */
/* Reuse tokens from ARB_texture_storage */
#ifndef GL_NUM_SHADING_LANGUAGE_VERSIONS
#define GL_NUM_SHADING_LANGUAGE_VERSIONS 0x82E9
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY_LONG
#define GL_VERTEX_ATTRIB_ARRAY_LONG 0x874E
#endif

/* Reuse tokens from ARB_arrays_of_arrays (none, GLSL only) */
/* Reuse tokens from ARB_fragment_layer_viewport (none, GLSL only) */
/* Reuse tokens from ARB_shader_image_size (none, GLSL only) */
/* Reuse tokens from ARB_ES3_compatibility */
/* Reuse tokens from ARB_clear_buffer_object (none) */
/* Reuse tokens from ARB_compute_shader */
/* Reuse tokens from ARB_copy_image (none) */
/* Reuse tokens from KHR_debug */
/* Reuse tokens from ARB_explicit_uniform_location */
/* Reuse tokens from ARB_framebuffer_no_attachments */
/* Reuse tokens from ARB_internalformat_query2 */
/* Reuse tokens from ARB_invalidate_subdata (none) */
/* Reuse tokens from ARB_multi_draw_indirect (none) */
/* Reuse tokens from ARB_program_interface_query */
/* Reuse tokens from ARB_robust_buffer_access_behavior (none) */
/* Reuse tokens from ARB_shader_storage_buffer_object */
/* Reuse tokens from ARB_stencil_texturing */
/* Reuse tokens from ARB_texture_buffer_range */
/* Reuse tokens from ARB_texture_query_levels (none) */
/* Reuse tokens from ARB_texture_storage_multisample (none) */
/* Reuse tokens from ARB_texture_view */
/* Reuse tokens from ARB_vertex_attrib_binding */
#ifndef GL_TEXTURE0_ARB
#define GL_TEXTURE0_ARB 0x84C0
#endif

#ifndef GL_TEXTURE1_ARB
#define GL_TEXTURE1_ARB 0x84C1
#endif

#ifndef GL_TEXTURE2_ARB
#define GL_TEXTURE2_ARB 0x84C2
#endif

#ifndef GL_TEXTURE3_ARB
#define GL_TEXTURE3_ARB 0x84C3
#endif

#ifndef GL_TEXTURE4_ARB
#define GL_TEXTURE4_ARB 0x84C4
#endif

#ifndef GL_TEXTURE5_ARB
#define GL_TEXTURE5_ARB 0x84C5
#endif

#ifndef GL_TEXTURE6_ARB
#define GL_TEXTURE6_ARB 0x84C6
#endif

#ifndef GL_TEXTURE7_ARB
#define GL_TEXTURE7_ARB 0x84C7
#endif

#ifndef GL_TEXTURE8_ARB
#define GL_TEXTURE8_ARB 0x84C8
#endif

#ifndef GL_TEXTURE9_ARB
#define GL_TEXTURE9_ARB 0x84C9
#endif

#ifndef GL_TEXTURE10_ARB
#define GL_TEXTURE10_ARB 0x84CA
#endif

#ifndef GL_TEXTURE11_ARB
#define GL_TEXTURE11_ARB 0x84CB
#endif

#ifndef GL_TEXTURE12_ARB
#define GL_TEXTURE12_ARB 0x84CC
#endif

#ifndef GL_TEXTURE13_ARB
#define GL_TEXTURE13_ARB 0x84CD
#endif

#ifndef GL_TEXTURE14_ARB
#define GL_TEXTURE14_ARB 0x84CE
#endif

#ifndef GL_TEXTURE15_ARB
#define GL_TEXTURE15_ARB 0x84CF
#endif

#ifndef GL_TEXTURE16_ARB
#define GL_TEXTURE16_ARB 0x84D0
#endif

#ifndef GL_TEXTURE17_ARB
#define GL_TEXTURE17_ARB 0x84D1
#endif

#ifndef GL_TEXTURE18_ARB
#define GL_TEXTURE18_ARB 0x84D2
#endif

#ifndef GL_TEXTURE19_ARB
#define GL_TEXTURE19_ARB 0x84D3
#endif

#ifndef GL_TEXTURE20_ARB
#define GL_TEXTURE20_ARB 0x84D4
#endif

#ifndef GL_TEXTURE21_ARB
#define GL_TEXTURE21_ARB 0x84D5
#endif

#ifndef GL_TEXTURE22_ARB
#define GL_TEXTURE22_ARB 0x84D6
#endif

#ifndef GL_TEXTURE23_ARB
#define GL_TEXTURE23_ARB 0x84D7
#endif

#ifndef GL_TEXTURE24_ARB
#define GL_TEXTURE24_ARB 0x84D8
#endif

#ifndef GL_TEXTURE25_ARB
#define GL_TEXTURE25_ARB 0x84D9
#endif

#ifndef GL_TEXTURE26_ARB
#define GL_TEXTURE26_ARB 0x84DA
#endif

#ifndef GL_TEXTURE27_ARB
#define GL_TEXTURE27_ARB 0x84DB
#endif

#ifndef GL_TEXTURE28_ARB
#define GL_TEXTURE28_ARB 0x84DC
#endif

#ifndef GL_TEXTURE29_ARB
#define GL_TEXTURE29_ARB 0x84DD
#endif

#ifndef GL_TEXTURE30_ARB
#define GL_TEXTURE30_ARB 0x84DE
#endif

#ifndef GL_TEXTURE31_ARB
#define GL_TEXTURE31_ARB 0x84DF
#endif

#ifndef GL_ACTIVE_TEXTURE_ARB
#define GL_ACTIVE_TEXTURE_ARB 0x84E0
#endif

#ifndef GL_CLIENT_ACTIVE_TEXTURE_ARB
#define GL_CLIENT_ACTIVE_TEXTURE_ARB 0x84E1
#endif

#ifndef GL_MAX_TEXTURE_UNITS_ARB
#define GL_MAX_TEXTURE_UNITS_ARB 0x84E2
#endif

#ifndef GL_TRANSPOSE_MODELVIEW_MATRIX_ARB
#define GL_TRANSPOSE_MODELVIEW_MATRIX_ARB 0x84E3
#endif

#ifndef GL_TRANSPOSE_PROJECTION_MATRIX_ARB
#define GL_TRANSPOSE_PROJECTION_MATRIX_ARB 0x84E4
#endif

#ifndef GL_TRANSPOSE_TEXTURE_MATRIX_ARB
#define GL_TRANSPOSE_TEXTURE_MATRIX_ARB 0x84E5
#endif

#ifndef GL_TRANSPOSE_COLOR_MATRIX_ARB
#define GL_TRANSPOSE_COLOR_MATRIX_ARB 0x84E6
#endif

#ifndef GL_MULTISAMPLE_ARB
#define GL_MULTISAMPLE_ARB 0x809D
#endif

#ifndef GL_SAMPLE_ALPHA_TO_COVERAGE_ARB
#define GL_SAMPLE_ALPHA_TO_COVERAGE_ARB 0x809E
#endif

#ifndef GL_SAMPLE_ALPHA_TO_ONE_ARB
#define GL_SAMPLE_ALPHA_TO_ONE_ARB 0x809F
#endif

#ifndef GL_SAMPLE_COVERAGE_ARB
#define GL_SAMPLE_COVERAGE_ARB 0x80A0
#endif

#ifndef GL_SAMPLE_BUFFERS_ARB
#define GL_SAMPLE_BUFFERS_ARB 0x80A8
#endif

#ifndef GL_SAMPLES_ARB
#define GL_SAMPLES_ARB 0x80A9
#endif

#ifndef GL_SAMPLE_COVERAGE_VALUE_ARB
#define GL_SAMPLE_COVERAGE_VALUE_ARB 0x80AA
#endif

#ifndef GL_SAMPLE_COVERAGE_INVERT_ARB
#define GL_SAMPLE_COVERAGE_INVERT_ARB 0x80AB
#endif

#ifndef GL_MULTISAMPLE_BIT_ARB
#define GL_MULTISAMPLE_BIT_ARB 0x20000000
#endif

#ifndef GL_NORMAL_MAP_ARB
#define GL_NORMAL_MAP_ARB 0x8511
#endif

#ifndef GL_REFLECTION_MAP_ARB
#define GL_REFLECTION_MAP_ARB 0x8512
#endif

#ifndef GL_TEXTURE_CUBE_MAP_ARB
#define GL_TEXTURE_CUBE_MAP_ARB 0x8513
#endif

#ifndef GL_TEXTURE_BINDING_CUBE_MAP_ARB
#define GL_TEXTURE_BINDING_CUBE_MAP_ARB 0x8514
#endif

#ifndef GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB
#define GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB 0x8515
#endif

#ifndef GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB 0x8516
#endif

#ifndef GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB 0x8517
#endif

#ifndef GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB 0x8518
#endif

#ifndef GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB 0x8519
#endif

#ifndef GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB 0x851A
#endif

#ifndef GL_PROXY_TEXTURE_CUBE_MAP_ARB
#define GL_PROXY_TEXTURE_CUBE_MAP_ARB 0x851B
#endif

#ifndef GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB
#define GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB 0x851C
#endif

#ifndef GL_COMPRESSED_ALPHA_ARB
#define GL_COMPRESSED_ALPHA_ARB 0x84E9
#endif

#ifndef GL_COMPRESSED_LUMINANCE_ARB
#define GL_COMPRESSED_LUMINANCE_ARB 0x84EA
#endif

#ifndef GL_COMPRESSED_LUMINANCE_ALPHA_ARB
#define GL_COMPRESSED_LUMINANCE_ALPHA_ARB 0x84EB
#endif

#ifndef GL_COMPRESSED_INTENSITY_ARB
#define GL_COMPRESSED_INTENSITY_ARB 0x84EC
#endif

#ifndef GL_COMPRESSED_RGB_ARB
#define GL_COMPRESSED_RGB_ARB 0x84ED
#endif

#ifndef GL_COMPRESSED_RGBA_ARB
#define GL_COMPRESSED_RGBA_ARB 0x84EE
#endif

#ifndef GL_TEXTURE_COMPRESSION_HINT_ARB
#define GL_TEXTURE_COMPRESSION_HINT_ARB 0x84EF
#endif

#ifndef GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB
#define GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB 0x86A0
#endif

#ifndef GL_TEXTURE_COMPRESSED_ARB
#define GL_TEXTURE_COMPRESSED_ARB 0x86A1
#endif

#ifndef GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB
#define GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB 0x86A2
#endif

#ifndef GL_COMPRESSED_TEXTURE_FORMATS_ARB
#define GL_COMPRESSED_TEXTURE_FORMATS_ARB 0x86A3
#endif

#ifndef GL_CLAMP_TO_BORDER_ARB
#define GL_CLAMP_TO_BORDER_ARB 0x812D
#endif

#ifndef GL_POINT_SIZE_MIN_ARB
#define GL_POINT_SIZE_MIN_ARB 0x8126
#endif

#ifndef GL_POINT_SIZE_MAX_ARB
#define GL_POINT_SIZE_MAX_ARB 0x8127
#endif

#ifndef GL_POINT_FADE_THRESHOLD_SIZE_ARB
#define GL_POINT_FADE_THRESHOLD_SIZE_ARB 0x8128
#endif

#ifndef GL_POINT_DISTANCE_ATTENUATION_ARB
#define GL_POINT_DISTANCE_ATTENUATION_ARB 0x8129
#endif

#ifndef GL_MAX_VERTEX_UNITS_ARB
#define GL_MAX_VERTEX_UNITS_ARB 0x86A4
#endif

#ifndef GL_ACTIVE_VERTEX_UNITS_ARB
#define GL_ACTIVE_VERTEX_UNITS_ARB 0x86A5
#endif

#ifndef GL_WEIGHT_SUM_UNITY_ARB
#define GL_WEIGHT_SUM_UNITY_ARB 0x86A6
#endif

#ifndef GL_VERTEX_BLEND_ARB
#define GL_VERTEX_BLEND_ARB 0x86A7
#endif

#ifndef GL_CURRENT_WEIGHT_ARB
#define GL_CURRENT_WEIGHT_ARB 0x86A8
#endif

#ifndef GL_WEIGHT_ARRAY_TYPE_ARB
#define GL_WEIGHT_ARRAY_TYPE_ARB 0x86A9
#endif

#ifndef GL_WEIGHT_ARRAY_STRIDE_ARB
#define GL_WEIGHT_ARRAY_STRIDE_ARB 0x86AA
#endif

#ifndef GL_WEIGHT_ARRAY_SIZE_ARB
#define GL_WEIGHT_ARRAY_SIZE_ARB 0x86AB
#endif

#ifndef GL_WEIGHT_ARRAY_POINTER_ARB
#define GL_WEIGHT_ARRAY_POINTER_ARB 0x86AC
#endif

#ifndef GL_WEIGHT_ARRAY_ARB
#define GL_WEIGHT_ARRAY_ARB 0x86AD
#endif

#ifndef GL_MODELVIEW0_ARB
#define GL_MODELVIEW0_ARB 0x1700
#endif

#ifndef GL_MODELVIEW1_ARB
#define GL_MODELVIEW1_ARB 0x850A
#endif

#ifndef GL_MODELVIEW2_ARB
#define GL_MODELVIEW2_ARB 0x8722
#endif

#ifndef GL_MODELVIEW3_ARB
#define GL_MODELVIEW3_ARB 0x8723
#endif

#ifndef GL_MODELVIEW4_ARB
#define GL_MODELVIEW4_ARB 0x8724
#endif

#ifndef GL_MODELVIEW5_ARB
#define GL_MODELVIEW5_ARB 0x8725
#endif

#ifndef GL_MODELVIEW6_ARB
#define GL_MODELVIEW6_ARB 0x8726
#endif

#ifndef GL_MODELVIEW7_ARB
#define GL_MODELVIEW7_ARB 0x8727
#endif

#ifndef GL_MODELVIEW8_ARB
#define GL_MODELVIEW8_ARB 0x8728
#endif

#ifndef GL_MODELVIEW9_ARB
#define GL_MODELVIEW9_ARB 0x8729
#endif

#ifndef GL_MODELVIEW10_ARB
#define GL_MODELVIEW10_ARB 0x872A
#endif

#ifndef GL_MODELVIEW11_ARB
#define GL_MODELVIEW11_ARB 0x872B
#endif

#ifndef GL_MODELVIEW12_ARB
#define GL_MODELVIEW12_ARB 0x872C
#endif

#ifndef GL_MODELVIEW13_ARB
#define GL_MODELVIEW13_ARB 0x872D
#endif

#ifndef GL_MODELVIEW14_ARB
#define GL_MODELVIEW14_ARB 0x872E
#endif

#ifndef GL_MODELVIEW15_ARB
#define GL_MODELVIEW15_ARB 0x872F
#endif

#ifndef GL_MODELVIEW16_ARB
#define GL_MODELVIEW16_ARB 0x8730
#endif

#ifndef GL_MODELVIEW17_ARB
#define GL_MODELVIEW17_ARB 0x8731
#endif

#ifndef GL_MODELVIEW18_ARB
#define GL_MODELVIEW18_ARB 0x8732
#endif

#ifndef GL_MODELVIEW19_ARB
#define GL_MODELVIEW19_ARB 0x8733
#endif

#ifndef GL_MODELVIEW20_ARB
#define GL_MODELVIEW20_ARB 0x8734
#endif

#ifndef GL_MODELVIEW21_ARB
#define GL_MODELVIEW21_ARB 0x8735
#endif

#ifndef GL_MODELVIEW22_ARB
#define GL_MODELVIEW22_ARB 0x8736
#endif

#ifndef GL_MODELVIEW23_ARB
#define GL_MODELVIEW23_ARB 0x8737
#endif

#ifndef GL_MODELVIEW24_ARB
#define GL_MODELVIEW24_ARB 0x8738
#endif

#ifndef GL_MODELVIEW25_ARB
#define GL_MODELVIEW25_ARB 0x8739
#endif

#ifndef GL_MODELVIEW26_ARB
#define GL_MODELVIEW26_ARB 0x873A
#endif

#ifndef GL_MODELVIEW27_ARB
#define GL_MODELVIEW27_ARB 0x873B
#endif

#ifndef GL_MODELVIEW28_ARB
#define GL_MODELVIEW28_ARB 0x873C
#endif

#ifndef GL_MODELVIEW29_ARB
#define GL_MODELVIEW29_ARB 0x873D
#endif

#ifndef GL_MODELVIEW30_ARB
#define GL_MODELVIEW30_ARB 0x873E
#endif

#ifndef GL_MODELVIEW31_ARB
#define GL_MODELVIEW31_ARB 0x873F
#endif

#ifndef GL_MATRIX_PALETTE_ARB
#define GL_MATRIX_PALETTE_ARB 0x8840
#endif

#ifndef GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB
#define GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB 0x8841
#endif

#ifndef GL_MAX_PALETTE_MATRICES_ARB
#define GL_MAX_PALETTE_MATRICES_ARB 0x8842
#endif

#ifndef GL_CURRENT_PALETTE_MATRIX_ARB
#define GL_CURRENT_PALETTE_MATRIX_ARB 0x8843
#endif

#ifndef GL_MATRIX_INDEX_ARRAY_ARB
#define GL_MATRIX_INDEX_ARRAY_ARB 0x8844
#endif

#ifndef GL_CURRENT_MATRIX_INDEX_ARB
#define GL_CURRENT_MATRIX_INDEX_ARB 0x8845
#endif

#ifndef GL_MATRIX_INDEX_ARRAY_SIZE_ARB
#define GL_MATRIX_INDEX_ARRAY_SIZE_ARB 0x8846
#endif

#ifndef GL_MATRIX_INDEX_ARRAY_TYPE_ARB
#define GL_MATRIX_INDEX_ARRAY_TYPE_ARB 0x8847
#endif

#ifndef GL_MATRIX_INDEX_ARRAY_STRIDE_ARB
#define GL_MATRIX_INDEX_ARRAY_STRIDE_ARB 0x8848
#endif

#ifndef GL_MATRIX_INDEX_ARRAY_POINTER_ARB
#define GL_MATRIX_INDEX_ARRAY_POINTER_ARB 0x8849
#endif

#ifndef GL_COMBINE_ARB
#define GL_COMBINE_ARB 0x8570
#endif

#ifndef GL_COMBINE_RGB_ARB
#define GL_COMBINE_RGB_ARB 0x8571
#endif

#ifndef GL_COMBINE_ALPHA_ARB
#define GL_COMBINE_ALPHA_ARB 0x8572
#endif

#ifndef GL_SOURCE0_RGB_ARB
#define GL_SOURCE0_RGB_ARB 0x8580
#endif

#ifndef GL_SOURCE1_RGB_ARB
#define GL_SOURCE1_RGB_ARB 0x8581
#endif

#ifndef GL_SOURCE2_RGB_ARB
#define GL_SOURCE2_RGB_ARB 0x8582
#endif

#ifndef GL_SOURCE0_ALPHA_ARB
#define GL_SOURCE0_ALPHA_ARB 0x8588
#endif

#ifndef GL_SOURCE1_ALPHA_ARB
#define GL_SOURCE1_ALPHA_ARB 0x8589
#endif

#ifndef GL_SOURCE2_ALPHA_ARB
#define GL_SOURCE2_ALPHA_ARB 0x858A
#endif

#ifndef GL_OPERAND0_RGB_ARB
#define GL_OPERAND0_RGB_ARB 0x8590
#endif

#ifndef GL_OPERAND1_RGB_ARB
#define GL_OPERAND1_RGB_ARB 0x8591
#endif

#ifndef GL_OPERAND2_RGB_ARB
#define GL_OPERAND2_RGB_ARB 0x8592
#endif

#ifndef GL_OPERAND0_ALPHA_ARB
#define GL_OPERAND0_ALPHA_ARB 0x8598
#endif

#ifndef GL_OPERAND1_ALPHA_ARB
#define GL_OPERAND1_ALPHA_ARB 0x8599
#endif

#ifndef GL_OPERAND2_ALPHA_ARB
#define GL_OPERAND2_ALPHA_ARB 0x859A
#endif

#ifndef GL_RGB_SCALE_ARB
#define GL_RGB_SCALE_ARB 0x8573
#endif

#ifndef GL_ADD_SIGNED_ARB
#define GL_ADD_SIGNED_ARB 0x8574
#endif

#ifndef GL_INTERPOLATE_ARB
#define GL_INTERPOLATE_ARB 0x8575
#endif

#ifndef GL_SUBTRACT_ARB
#define GL_SUBTRACT_ARB 0x84E7
#endif

#ifndef GL_CONSTANT_ARB
#define GL_CONSTANT_ARB 0x8576
#endif

#ifndef GL_PRIMARY_COLOR_ARB
#define GL_PRIMARY_COLOR_ARB 0x8577
#endif

#ifndef GL_PREVIOUS_ARB
#define GL_PREVIOUS_ARB 0x8578
#endif

#ifndef GL_DOT3_RGB_ARB
#define GL_DOT3_RGB_ARB 0x86AE
#endif

#ifndef GL_DOT3_RGBA_ARB
#define GL_DOT3_RGBA_ARB 0x86AF
#endif

#ifndef GL_MIRRORED_REPEAT_ARB
#define GL_MIRRORED_REPEAT_ARB 0x8370
#endif

#ifndef GL_DEPTH_COMPONENT16_ARB
#define GL_DEPTH_COMPONENT16_ARB 0x81A5
#endif

#ifndef GL_DEPTH_COMPONENT24_ARB
#define GL_DEPTH_COMPONENT24_ARB 0x81A6
#endif

#ifndef GL_DEPTH_COMPONENT32_ARB
#define GL_DEPTH_COMPONENT32_ARB 0x81A7
#endif

#ifndef GL_TEXTURE_DEPTH_SIZE_ARB
#define GL_TEXTURE_DEPTH_SIZE_ARB 0x884A
#endif

#ifndef GL_DEPTH_TEXTURE_MODE_ARB
#define GL_DEPTH_TEXTURE_MODE_ARB 0x884B
#endif

#ifndef GL_TEXTURE_COMPARE_FAIL_VALUE_ARB
#define GL_TEXTURE_COMPARE_FAIL_VALUE_ARB 0x80BF
#endif

#ifndef GL_COLOR_SUM_ARB
#define GL_COLOR_SUM_ARB 0x8458
#endif

#ifndef GL_VERTEX_PROGRAM_ARB
#define GL_VERTEX_PROGRAM_ARB 0x8620
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB
#define GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB 0x8622
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB
#define GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB 0x8623
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB
#define GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB 0x8624
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB
#define GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB 0x8625
#endif

#ifndef GL_CURRENT_VERTEX_ATTRIB_ARB
#define GL_CURRENT_VERTEX_ATTRIB_ARB 0x8626
#endif

#ifndef GL_PROGRAM_LENGTH_ARB
#define GL_PROGRAM_LENGTH_ARB 0x8627
#endif

#ifndef GL_PROGRAM_STRING_ARB
#define GL_PROGRAM_STRING_ARB 0x8628
#endif

#ifndef GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB
#define GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB 0x862E
#endif

#ifndef GL_MAX_PROGRAM_MATRICES_ARB
#define GL_MAX_PROGRAM_MATRICES_ARB 0x862F
#endif

#ifndef GL_CURRENT_MATRIX_STACK_DEPTH_ARB
#define GL_CURRENT_MATRIX_STACK_DEPTH_ARB 0x8640
#endif

#ifndef GL_CURRENT_MATRIX_ARB
#define GL_CURRENT_MATRIX_ARB 0x8641
#endif

#ifndef GL_VERTEX_PROGRAM_POINT_SIZE_ARB
#define GL_VERTEX_PROGRAM_POINT_SIZE_ARB 0x8642
#endif

#ifndef GL_VERTEX_PROGRAM_TWO_SIDE_ARB
#define GL_VERTEX_PROGRAM_TWO_SIDE_ARB 0x8643
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB
#define GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB 0x8645
#endif

#ifndef GL_PROGRAM_ERROR_POSITION_ARB
#define GL_PROGRAM_ERROR_POSITION_ARB 0x864B
#endif

#ifndef GL_PROGRAM_BINDING_ARB
#define GL_PROGRAM_BINDING_ARB 0x8677
#endif

#ifndef GL_MAX_VERTEX_ATTRIBS_ARB
#define GL_MAX_VERTEX_ATTRIBS_ARB 0x8869
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB
#define GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB 0x886A
#endif

#ifndef GL_PROGRAM_ERROR_STRING_ARB
#define GL_PROGRAM_ERROR_STRING_ARB 0x8874
#endif

#ifndef GL_PROGRAM_FORMAT_ASCII_ARB
#define GL_PROGRAM_FORMAT_ASCII_ARB 0x8875
#endif

#ifndef GL_PROGRAM_FORMAT_ARB
#define GL_PROGRAM_FORMAT_ARB 0x8876
#endif

#ifndef GL_PROGRAM_INSTRUCTIONS_ARB
#define GL_PROGRAM_INSTRUCTIONS_ARB 0x88A0
#endif

#ifndef GL_MAX_PROGRAM_INSTRUCTIONS_ARB
#define GL_MAX_PROGRAM_INSTRUCTIONS_ARB 0x88A1
#endif

#ifndef GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB
#define GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB 0x88A2
#endif

#ifndef GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB
#define GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB 0x88A3
#endif

#ifndef GL_PROGRAM_TEMPORARIES_ARB
#define GL_PROGRAM_TEMPORARIES_ARB 0x88A4
#endif

#ifndef GL_MAX_PROGRAM_TEMPORARIES_ARB
#define GL_MAX_PROGRAM_TEMPORARIES_ARB 0x88A5
#endif

#ifndef GL_PROGRAM_NATIVE_TEMPORARIES_ARB
#define GL_PROGRAM_NATIVE_TEMPORARIES_ARB 0x88A6
#endif

#ifndef GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB
#define GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB 0x88A7
#endif

#ifndef GL_PROGRAM_PARAMETERS_ARB
#define GL_PROGRAM_PARAMETERS_ARB 0x88A8
#endif

#ifndef GL_MAX_PROGRAM_PARAMETERS_ARB
#define GL_MAX_PROGRAM_PARAMETERS_ARB 0x88A9
#endif

#ifndef GL_PROGRAM_NATIVE_PARAMETERS_ARB
#define GL_PROGRAM_NATIVE_PARAMETERS_ARB 0x88AA
#endif

#ifndef GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB
#define GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB 0x88AB
#endif

#ifndef GL_PROGRAM_ATTRIBS_ARB
#define GL_PROGRAM_ATTRIBS_ARB 0x88AC
#endif

#ifndef GL_MAX_PROGRAM_ATTRIBS_ARB
#define GL_MAX_PROGRAM_ATTRIBS_ARB 0x88AD
#endif

#ifndef GL_PROGRAM_NATIVE_ATTRIBS_ARB
#define GL_PROGRAM_NATIVE_ATTRIBS_ARB 0x88AE
#endif

#ifndef GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB
#define GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB 0x88AF
#endif

#ifndef GL_PROGRAM_ADDRESS_REGISTERS_ARB
#define GL_PROGRAM_ADDRESS_REGISTERS_ARB 0x88B0
#endif

#ifndef GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB
#define GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB 0x88B1
#endif

#ifndef GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB
#define GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB 0x88B2
#endif

#ifndef GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB
#define GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB 0x88B3
#endif

#ifndef GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB
#define GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB 0x88B4
#endif

#ifndef GL_MAX_PROGRAM_ENV_PARAMETERS_ARB
#define GL_MAX_PROGRAM_ENV_PARAMETERS_ARB 0x88B5
#endif

#ifndef GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB
#define GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB 0x88B6
#endif

#ifndef GL_TRANSPOSE_CURRENT_MATRIX_ARB
#define GL_TRANSPOSE_CURRENT_MATRIX_ARB 0x88B7
#endif

#ifndef GL_MATRIX0_ARB
#define GL_MATRIX0_ARB 0x88C0
#endif

#ifndef GL_MATRIX1_ARB
#define GL_MATRIX1_ARB 0x88C1
#endif

#ifndef GL_MATRIX2_ARB
#define GL_MATRIX2_ARB 0x88C2
#endif

#ifndef GL_MATRIX3_ARB
#define GL_MATRIX3_ARB 0x88C3
#endif

#ifndef GL_MATRIX4_ARB
#define GL_MATRIX4_ARB 0x88C4
#endif

#ifndef GL_MATRIX5_ARB
#define GL_MATRIX5_ARB 0x88C5
#endif

#ifndef GL_MATRIX6_ARB
#define GL_MATRIX6_ARB 0x88C6
#endif

#ifndef GL_MATRIX7_ARB
#define GL_MATRIX7_ARB 0x88C7
#endif

#ifndef GL_MATRIX8_ARB
#define GL_MATRIX8_ARB 0x88C8
#endif

#ifndef GL_MATRIX9_ARB
#define GL_MATRIX9_ARB 0x88C9
#endif

#ifndef GL_MATRIX10_ARB
#define GL_MATRIX10_ARB 0x88CA
#endif

#ifndef GL_MATRIX11_ARB
#define GL_MATRIX11_ARB 0x88CB
#endif

#ifndef GL_MATRIX12_ARB
#define GL_MATRIX12_ARB 0x88CC
#endif

#ifndef GL_MATRIX13_ARB
#define GL_MATRIX13_ARB 0x88CD
#endif

#ifndef GL_MATRIX14_ARB
#define GL_MATRIX14_ARB 0x88CE
#endif

#ifndef GL_MATRIX15_ARB
#define GL_MATRIX15_ARB 0x88CF
#endif

#ifndef GL_MATRIX16_ARB
#define GL_MATRIX16_ARB 0x88D0
#endif

#ifndef GL_MATRIX17_ARB
#define GL_MATRIX17_ARB 0x88D1
#endif

#ifndef GL_MATRIX18_ARB
#define GL_MATRIX18_ARB 0x88D2
#endif

#ifndef GL_MATRIX19_ARB
#define GL_MATRIX19_ARB 0x88D3
#endif

#ifndef GL_MATRIX20_ARB
#define GL_MATRIX20_ARB 0x88D4
#endif

#ifndef GL_MATRIX21_ARB
#define GL_MATRIX21_ARB 0x88D5
#endif

#ifndef GL_MATRIX22_ARB
#define GL_MATRIX22_ARB 0x88D6
#endif

#ifndef GL_MATRIX23_ARB
#define GL_MATRIX23_ARB 0x88D7
#endif

#ifndef GL_MATRIX24_ARB
#define GL_MATRIX24_ARB 0x88D8
#endif

#ifndef GL_MATRIX25_ARB
#define GL_MATRIX25_ARB 0x88D9
#endif

#ifndef GL_MATRIX26_ARB
#define GL_MATRIX26_ARB 0x88DA
#endif

#ifndef GL_MATRIX27_ARB
#define GL_MATRIX27_ARB 0x88DB
#endif

#ifndef GL_MATRIX28_ARB
#define GL_MATRIX28_ARB 0x88DC
#endif

#ifndef GL_MATRIX29_ARB
#define GL_MATRIX29_ARB 0x88DD
#endif

#ifndef GL_MATRIX30_ARB
#define GL_MATRIX30_ARB 0x88DE
#endif

#ifndef GL_MATRIX31_ARB
#define GL_MATRIX31_ARB 0x88DF
#endif

#ifndef GL_BUFFER_SIZE_ARB
#define GL_BUFFER_SIZE_ARB 0x8764
#endif

#ifndef GL_BUFFER_USAGE_ARB
#define GL_BUFFER_USAGE_ARB 0x8765
#endif

#ifndef GL_ARRAY_BUFFER_ARB
#define GL_ARRAY_BUFFER_ARB 0x8892
#endif

#ifndef GL_ELEMENT_ARRAY_BUFFER_ARB
#define GL_ELEMENT_ARRAY_BUFFER_ARB 0x8893
#endif

#ifndef GL_ARRAY_BUFFER_BINDING_ARB
#define GL_ARRAY_BUFFER_BINDING_ARB 0x8894
#endif

#ifndef GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB
#define GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB 0x8895
#endif

#ifndef GL_VERTEX_ARRAY_BUFFER_BINDING_ARB
#define GL_VERTEX_ARRAY_BUFFER_BINDING_ARB 0x8896
#endif

#ifndef GL_NORMAL_ARRAY_BUFFER_BINDING_ARB
#define GL_NORMAL_ARRAY_BUFFER_BINDING_ARB 0x8897
#endif

#ifndef GL_COLOR_ARRAY_BUFFER_BINDING_ARB
#define GL_COLOR_ARRAY_BUFFER_BINDING_ARB 0x8898
#endif

#ifndef GL_INDEX_ARRAY_BUFFER_BINDING_ARB
#define GL_INDEX_ARRAY_BUFFER_BINDING_ARB 0x8899
#endif

#ifndef GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB
#define GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB 0x889A
#endif

#ifndef GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB
#define GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB 0x889B
#endif

#ifndef GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB
#define GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB 0x889C
#endif

#ifndef GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB
#define GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB 0x889D
#endif

#ifndef GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB
#define GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB 0x889E
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB
#define GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB 0x889F
#endif

#ifndef GL_READ_ONLY_ARB
#define GL_READ_ONLY_ARB 0x88B8
#endif

#ifndef GL_WRITE_ONLY_ARB
#define GL_WRITE_ONLY_ARB 0x88B9
#endif

#ifndef GL_READ_WRITE_ARB
#define GL_READ_WRITE_ARB 0x88BA
#endif

#ifndef GL_BUFFER_ACCESS_ARB
#define GL_BUFFER_ACCESS_ARB 0x88BB
#endif

#ifndef GL_BUFFER_MAPPED_ARB
#define GL_BUFFER_MAPPED_ARB 0x88BC
#endif

#ifndef GL_BUFFER_MAP_POINTER_ARB
#define GL_BUFFER_MAP_POINTER_ARB 0x88BD
#endif

#ifndef GL_STREAM_DRAW_ARB
#define GL_STREAM_DRAW_ARB 0x88E0
#endif

#ifndef GL_STREAM_READ_ARB
#define GL_STREAM_READ_ARB 0x88E1
#endif

#ifndef GL_STREAM_COPY_ARB
#define GL_STREAM_COPY_ARB 0x88E2
#endif

#ifndef GL_STATIC_DRAW_ARB
#define GL_STATIC_DRAW_ARB 0x88E4
#endif

#ifndef GL_STATIC_READ_ARB
#define GL_STATIC_READ_ARB 0x88E5
#endif

#ifndef GL_STATIC_COPY_ARB
#define GL_STATIC_COPY_ARB 0x88E6
#endif

#ifndef GL_DYNAMIC_DRAW_ARB
#define GL_DYNAMIC_DRAW_ARB 0x88E8
#endif

#ifndef GL_DYNAMIC_READ_ARB
#define GL_DYNAMIC_READ_ARB 0x88E9
#endif

#ifndef GL_DYNAMIC_COPY_ARB
#define GL_DYNAMIC_COPY_ARB 0x88EA
#endif

#ifndef GL_QUERY_COUNTER_BITS_ARB
#define GL_QUERY_COUNTER_BITS_ARB 0x8864
#endif

#ifndef GL_CURRENT_QUERY_ARB
#define GL_CURRENT_QUERY_ARB 0x8865
#endif

#ifndef GL_QUERY_RESULT_ARB
#define GL_QUERY_RESULT_ARB 0x8866
#endif

#ifndef GL_QUERY_RESULT_AVAILABLE_ARB
#define GL_QUERY_RESULT_AVAILABLE_ARB 0x8867
#endif

#ifndef GL_SAMPLES_PASSED_ARB
#define GL_SAMPLES_PASSED_ARB 0x8914
#endif

#ifndef GL_PROGRAM_OBJECT_ARB
#define GL_PROGRAM_OBJECT_ARB 0x8B40
#endif

#ifndef GL_SHADER_OBJECT_ARB
#define GL_SHADER_OBJECT_ARB 0x8B48
#endif

#ifndef GL_OBJECT_TYPE_ARB
#define GL_OBJECT_TYPE_ARB 0x8B4E
#endif

#ifndef GL_OBJECT_SUBTYPE_ARB
#define GL_OBJECT_SUBTYPE_ARB 0x8B4F
#endif

#ifndef GL_FLOAT_VEC2_ARB
#define GL_FLOAT_VEC2_ARB 0x8B50
#endif

#ifndef GL_FLOAT_VEC3_ARB
#define GL_FLOAT_VEC3_ARB 0x8B51
#endif

#ifndef GL_FLOAT_VEC4_ARB
#define GL_FLOAT_VEC4_ARB 0x8B52
#endif

#ifndef GL_INT_VEC2_ARB
#define GL_INT_VEC2_ARB 0x8B53
#endif

#ifndef GL_INT_VEC3_ARB
#define GL_INT_VEC3_ARB 0x8B54
#endif

#ifndef GL_INT_VEC4_ARB
#define GL_INT_VEC4_ARB 0x8B55
#endif

#ifndef GL_BOOL_ARB
#define GL_BOOL_ARB 0x8B56
#endif

#ifndef GL_BOOL_VEC2_ARB
#define GL_BOOL_VEC2_ARB 0x8B57
#endif

#ifndef GL_BOOL_VEC3_ARB
#define GL_BOOL_VEC3_ARB 0x8B58
#endif

#ifndef GL_BOOL_VEC4_ARB
#define GL_BOOL_VEC4_ARB 0x8B59
#endif

#ifndef GL_FLOAT_MAT2_ARB
#define GL_FLOAT_MAT2_ARB 0x8B5A
#endif

#ifndef GL_FLOAT_MAT3_ARB
#define GL_FLOAT_MAT3_ARB 0x8B5B
#endif

#ifndef GL_FLOAT_MAT4_ARB
#define GL_FLOAT_MAT4_ARB 0x8B5C
#endif

#ifndef GL_SAMPLER_1D_ARB
#define GL_SAMPLER_1D_ARB 0x8B5D
#endif

#ifndef GL_SAMPLER_2D_ARB
#define GL_SAMPLER_2D_ARB 0x8B5E
#endif

#ifndef GL_SAMPLER_3D_ARB
#define GL_SAMPLER_3D_ARB 0x8B5F
#endif

#ifndef GL_SAMPLER_CUBE_ARB
#define GL_SAMPLER_CUBE_ARB 0x8B60
#endif

#ifndef GL_SAMPLER_1D_SHADOW_ARB
#define GL_SAMPLER_1D_SHADOW_ARB 0x8B61
#endif

#ifndef GL_SAMPLER_2D_SHADOW_ARB
#define GL_SAMPLER_2D_SHADOW_ARB 0x8B62
#endif

#ifndef GL_SAMPLER_2D_RECT_ARB
#define GL_SAMPLER_2D_RECT_ARB 0x8B63
#endif

#ifndef GL_SAMPLER_2D_RECT_SHADOW_ARB
#define GL_SAMPLER_2D_RECT_SHADOW_ARB 0x8B64
#endif

#ifndef GL_OBJECT_DELETE_STATUS_ARB
#define GL_OBJECT_DELETE_STATUS_ARB 0x8B80
#endif

#ifndef GL_OBJECT_COMPILE_STATUS_ARB
#define GL_OBJECT_COMPILE_STATUS_ARB 0x8B81
#endif

#ifndef GL_OBJECT_LINK_STATUS_ARB
#define GL_OBJECT_LINK_STATUS_ARB 0x8B82
#endif

#ifndef GL_OBJECT_VALIDATE_STATUS_ARB
#define GL_OBJECT_VALIDATE_STATUS_ARB 0x8B83
#endif

#ifndef GL_OBJECT_INFO_LOG_LENGTH_ARB
#define GL_OBJECT_INFO_LOG_LENGTH_ARB 0x8B84
#endif

#ifndef GL_OBJECT_ATTACHED_OBJECTS_ARB
#define GL_OBJECT_ATTACHED_OBJECTS_ARB 0x8B85
#endif

#ifndef GL_OBJECT_ACTIVE_UNIFORMS_ARB
#define GL_OBJECT_ACTIVE_UNIFORMS_ARB 0x8B86
#endif

#ifndef GL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB
#define GL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB 0x8B87
#endif

#ifndef GL_OBJECT_SHADER_SOURCE_LENGTH_ARB
#define GL_OBJECT_SHADER_SOURCE_LENGTH_ARB 0x8B88
#endif

#ifndef GL_VERTEX_SHADER_ARB
#define GL_VERTEX_SHADER_ARB 0x8B31
#endif

#ifndef GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB
#define GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB 0x8B4A
#endif

#ifndef GL_MAX_VARYING_FLOATS_ARB
#define GL_MAX_VARYING_FLOATS_ARB 0x8B4B
#endif

#ifndef GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB
#define GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB 0x8B4C
#endif

#ifndef GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB
#define GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB 0x8B4D
#endif

#ifndef GL_OBJECT_ACTIVE_ATTRIBUTES_ARB
#define GL_OBJECT_ACTIVE_ATTRIBUTES_ARB 0x8B89
#endif

#ifndef GL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB
#define GL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB 0x8B8A
#endif

#ifndef GL_FRAGMENT_SHADER_ARB
#define GL_FRAGMENT_SHADER_ARB 0x8B30
#endif

#ifndef GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB
#define GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB 0x8B49
#endif

#ifndef GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB
#define GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB 0x8B8B
#endif

#ifndef GL_SHADING_LANGUAGE_VERSION_ARB
#define GL_SHADING_LANGUAGE_VERSION_ARB 0x8B8C
#endif

#ifndef GL_POINT_SPRITE_ARB
#define GL_POINT_SPRITE_ARB 0x8861
#endif

#ifndef GL_COORD_REPLACE_ARB
#define GL_COORD_REPLACE_ARB 0x8862
#endif

#ifndef GL_MAX_DRAW_BUFFERS_ARB
#define GL_MAX_DRAW_BUFFERS_ARB 0x8824
#endif

#ifndef GL_DRAW_BUFFER0_ARB
#define GL_DRAW_BUFFER0_ARB 0x8825
#endif

#ifndef GL_DRAW_BUFFER1_ARB
#define GL_DRAW_BUFFER1_ARB 0x8826
#endif

#ifndef GL_DRAW_BUFFER2_ARB
#define GL_DRAW_BUFFER2_ARB 0x8827
#endif

#ifndef GL_DRAW_BUFFER3_ARB
#define GL_DRAW_BUFFER3_ARB 0x8828
#endif

#ifndef GL_DRAW_BUFFER4_ARB
#define GL_DRAW_BUFFER4_ARB 0x8829
#endif

#ifndef GL_DRAW_BUFFER5_ARB
#define GL_DRAW_BUFFER5_ARB 0x882A
#endif

#ifndef GL_DRAW_BUFFER6_ARB
#define GL_DRAW_BUFFER6_ARB 0x882B
#endif

#ifndef GL_DRAW_BUFFER7_ARB
#define GL_DRAW_BUFFER7_ARB 0x882C
#endif

#ifndef GL_DRAW_BUFFER8_ARB
#define GL_DRAW_BUFFER8_ARB 0x882D
#endif

#ifndef GL_DRAW_BUFFER9_ARB
#define GL_DRAW_BUFFER9_ARB 0x882E
#endif

#ifndef GL_DRAW_BUFFER10_ARB
#define GL_DRAW_BUFFER10_ARB 0x882F
#endif

#ifndef GL_DRAW_BUFFER11_ARB
#define GL_DRAW_BUFFER11_ARB 0x8830
#endif

#ifndef GL_DRAW_BUFFER12_ARB
#define GL_DRAW_BUFFER12_ARB 0x8831
#endif

#ifndef GL_DRAW_BUFFER13_ARB
#define GL_DRAW_BUFFER13_ARB 0x8832
#endif

#ifndef GL_DRAW_BUFFER14_ARB
#define GL_DRAW_BUFFER14_ARB 0x8833
#endif

#ifndef GL_DRAW_BUFFER15_ARB
#define GL_DRAW_BUFFER15_ARB 0x8834
#endif

#ifndef GL_TEXTURE_RECTANGLE_ARB
#define GL_TEXTURE_RECTANGLE_ARB 0x84F5
#endif

#ifndef GL_TEXTURE_BINDING_RECTANGLE_ARB
#define GL_TEXTURE_BINDING_RECTANGLE_ARB 0x84F6
#endif

#ifndef GL_PROXY_TEXTURE_RECTANGLE_ARB
#define GL_PROXY_TEXTURE_RECTANGLE_ARB 0x84F7
#endif

#ifndef GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB
#define GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB 0x84F8
#endif

#ifndef GL_RGBA_FLOAT_MODE_ARB
#define GL_RGBA_FLOAT_MODE_ARB 0x8820
#endif

#ifndef GL_CLAMP_VERTEX_COLOR_ARB
#define GL_CLAMP_VERTEX_COLOR_ARB 0x891A
#endif

#ifndef GL_CLAMP_FRAGMENT_COLOR_ARB
#define GL_CLAMP_FRAGMENT_COLOR_ARB 0x891B
#endif

#ifndef GL_CLAMP_READ_COLOR_ARB
#define GL_CLAMP_READ_COLOR_ARB 0x891C
#endif

#ifndef GL_FIXED_ONLY_ARB
#define GL_FIXED_ONLY_ARB 0x891D
#endif

#ifndef GL_HALF_FLOAT_ARB
#define GL_HALF_FLOAT_ARB 0x140B
#endif

#ifndef GL_TEXTURE_RED_TYPE_ARB
#define GL_TEXTURE_RED_TYPE_ARB 0x8C10
#endif

#ifndef GL_TEXTURE_GREEN_TYPE_ARB
#define GL_TEXTURE_GREEN_TYPE_ARB 0x8C11
#endif

#ifndef GL_TEXTURE_BLUE_TYPE_ARB
#define GL_TEXTURE_BLUE_TYPE_ARB 0x8C12
#endif

#ifndef GL_TEXTURE_ALPHA_TYPE_ARB
#define GL_TEXTURE_ALPHA_TYPE_ARB 0x8C13
#endif

#ifndef GL_TEXTURE_LUMINANCE_TYPE_ARB
#define GL_TEXTURE_LUMINANCE_TYPE_ARB 0x8C14
#endif

#ifndef GL_TEXTURE_INTENSITY_TYPE_ARB
#define GL_TEXTURE_INTENSITY_TYPE_ARB 0x8C15
#endif

#ifndef GL_TEXTURE_DEPTH_TYPE_ARB
#define GL_TEXTURE_DEPTH_TYPE_ARB 0x8C16
#endif

#ifndef GL_UNSIGNED_NORMALIZED_ARB
#define GL_UNSIGNED_NORMALIZED_ARB 0x8C17
#endif

#ifndef GL_RGBA32F_ARB
#define GL_RGBA32F_ARB 0x8814
#endif

#ifndef GL_RGB32F_ARB
#define GL_RGB32F_ARB 0x8815
#endif

#ifndef GL_ALPHA32F_ARB
#define GL_ALPHA32F_ARB 0x8816
#endif

#ifndef GL_INTENSITY32F_ARB
#define GL_INTENSITY32F_ARB 0x8817
#endif

#ifndef GL_LUMINANCE32F_ARB
#define GL_LUMINANCE32F_ARB 0x8818
#endif

#ifndef GL_LUMINANCE_ALPHA32F_ARB
#define GL_LUMINANCE_ALPHA32F_ARB 0x8819
#endif

#ifndef GL_RGBA16F_ARB
#define GL_RGBA16F_ARB 0x881A
#endif

#ifndef GL_RGB16F_ARB
#define GL_RGB16F_ARB 0x881B
#endif

#ifndef GL_ALPHA16F_ARB
#define GL_ALPHA16F_ARB 0x881C
#endif

#ifndef GL_INTENSITY16F_ARB
#define GL_INTENSITY16F_ARB 0x881D
#endif

#ifndef GL_LUMINANCE16F_ARB
#define GL_LUMINANCE16F_ARB 0x881E
#endif

#ifndef GL_LUMINANCE_ALPHA16F_ARB
#define GL_LUMINANCE_ALPHA16F_ARB 0x881F
#endif

#ifndef GL_PIXEL_PACK_BUFFER_ARB
#define GL_PIXEL_PACK_BUFFER_ARB 0x88EB
#endif

#ifndef GL_PIXEL_UNPACK_BUFFER_ARB
#define GL_PIXEL_UNPACK_BUFFER_ARB 0x88EC
#endif

#ifndef GL_PIXEL_PACK_BUFFER_BINDING_ARB
#define GL_PIXEL_PACK_BUFFER_BINDING_ARB 0x88ED
#endif

#ifndef GL_PIXEL_UNPACK_BUFFER_BINDING_ARB
#define GL_PIXEL_UNPACK_BUFFER_BINDING_ARB 0x88EF
#endif

#ifndef GL_DEPTH_COMPONENT32F
#define GL_DEPTH_COMPONENT32F 0x8CAC
#endif

#ifndef GL_DEPTH32F_STENCIL8
#define GL_DEPTH32F_STENCIL8 0x8CAD
#endif

#ifndef GL_FLOAT_32_UNSIGNED_INT_24_8_REV
#define GL_FLOAT_32_UNSIGNED_INT_24_8_REV 0x8DAD
#endif

#ifndef GL_INVALID_FRAMEBUFFER_OPERATION
#define GL_INVALID_FRAMEBUFFER_OPERATION 0x0506
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING
#define GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING 0x8210
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE
#define GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE 0x8211
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE
#define GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE 0x8212
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE
#define GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE 0x8213
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE
#define GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE 0x8214
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE
#define GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE 0x8215
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE
#define GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE 0x8216
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE
#define GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE 0x8217
#endif

#ifndef GL_FRAMEBUFFER_DEFAULT
#define GL_FRAMEBUFFER_DEFAULT 0x8218
#endif

#ifndef GL_FRAMEBUFFER_UNDEFINED
#define GL_FRAMEBUFFER_UNDEFINED 0x8219
#endif

#ifndef GL_DEPTH_STENCIL_ATTACHMENT
#define GL_DEPTH_STENCIL_ATTACHMENT 0x821A
#endif

#ifndef GL_MAX_RENDERBUFFER_SIZE
#define GL_MAX_RENDERBUFFER_SIZE 0x84E8
#endif

#ifndef GL_DEPTH_STENCIL
#define GL_DEPTH_STENCIL 0x84F9
#endif

#ifndef GL_UNSIGNED_INT_24_8
#define GL_UNSIGNED_INT_24_8 0x84FA
#endif

#ifndef GL_DEPTH24_STENCIL8
#define GL_DEPTH24_STENCIL8 0x88F0
#endif

#ifndef GL_TEXTURE_STENCIL_SIZE
#define GL_TEXTURE_STENCIL_SIZE 0x88F1
#endif

#ifndef GL_TEXTURE_RED_TYPE
#define GL_TEXTURE_RED_TYPE 0x8C10
#endif

#ifndef GL_TEXTURE_GREEN_TYPE
#define GL_TEXTURE_GREEN_TYPE 0x8C11
#endif

#ifndef GL_TEXTURE_BLUE_TYPE
#define GL_TEXTURE_BLUE_TYPE 0x8C12
#endif

#ifndef GL_TEXTURE_ALPHA_TYPE
#define GL_TEXTURE_ALPHA_TYPE 0x8C13
#endif

#ifndef GL_TEXTURE_DEPTH_TYPE
#define GL_TEXTURE_DEPTH_TYPE 0x8C16
#endif

#ifndef GL_UNSIGNED_NORMALIZED
#define GL_UNSIGNED_NORMALIZED 0x8C17
#endif

#ifndef GL_FRAMEBUFFER_BINDING
#define GL_FRAMEBUFFER_BINDING 0x8CA6
#endif

#ifndef GL_DRAW_FRAMEBUFFER_BINDING
#define GL_DRAW_FRAMEBUFFER_BINDING GL_FRAMEBUFFER_BINDING
#endif

#ifndef GL_RENDERBUFFER_BINDING
#define GL_RENDERBUFFER_BINDING 0x8CA7
#endif

#ifndef GL_READ_FRAMEBUFFER
#define GL_READ_FRAMEBUFFER 0x8CA8
#endif

#ifndef GL_DRAW_FRAMEBUFFER
#define GL_DRAW_FRAMEBUFFER 0x8CA9
#endif

#ifndef GL_READ_FRAMEBUFFER_BINDING
#define GL_READ_FRAMEBUFFER_BINDING 0x8CAA
#endif

#ifndef GL_RENDERBUFFER_SAMPLES
#define GL_RENDERBUFFER_SAMPLES 0x8CAB
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE
#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE 0x8CD0
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME
#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME 0x8CD1
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL 0x8CD2
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE 0x8CD3
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER 0x8CD4
#endif

#ifndef GL_FRAMEBUFFER_COMPLETE
#define GL_FRAMEBUFFER_COMPLETE 0x8CD5
#endif

#ifndef GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT
#define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT 0x8CD6
#endif

#ifndef GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT
#define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT 0x8CD7
#endif

#ifndef GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER
#define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER 0x8CDB
#endif

#ifndef GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER
#define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER 0x8CDC
#endif

#ifndef GL_FRAMEBUFFER_UNSUPPORTED
#define GL_FRAMEBUFFER_UNSUPPORTED 0x8CDD
#endif

#ifndef GL_MAX_COLOR_ATTACHMENTS
#define GL_MAX_COLOR_ATTACHMENTS 0x8CDF
#endif

#ifndef GL_COLOR_ATTACHMENT0
#define GL_COLOR_ATTACHMENT0 0x8CE0
#endif

#ifndef GL_COLOR_ATTACHMENT1
#define GL_COLOR_ATTACHMENT1 0x8CE1
#endif

#ifndef GL_COLOR_ATTACHMENT2
#define GL_COLOR_ATTACHMENT2 0x8CE2
#endif

#ifndef GL_COLOR_ATTACHMENT3
#define GL_COLOR_ATTACHMENT3 0x8CE3
#endif

#ifndef GL_COLOR_ATTACHMENT4
#define GL_COLOR_ATTACHMENT4 0x8CE4
#endif

#ifndef GL_COLOR_ATTACHMENT5
#define GL_COLOR_ATTACHMENT5 0x8CE5
#endif

#ifndef GL_COLOR_ATTACHMENT6
#define GL_COLOR_ATTACHMENT6 0x8CE6
#endif

#ifndef GL_COLOR_ATTACHMENT7
#define GL_COLOR_ATTACHMENT7 0x8CE7
#endif

#ifndef GL_COLOR_ATTACHMENT8
#define GL_COLOR_ATTACHMENT8 0x8CE8
#endif

#ifndef GL_COLOR_ATTACHMENT9
#define GL_COLOR_ATTACHMENT9 0x8CE9
#endif

#ifndef GL_COLOR_ATTACHMENT10
#define GL_COLOR_ATTACHMENT10 0x8CEA
#endif

#ifndef GL_COLOR_ATTACHMENT11
#define GL_COLOR_ATTACHMENT11 0x8CEB
#endif

#ifndef GL_COLOR_ATTACHMENT12
#define GL_COLOR_ATTACHMENT12 0x8CEC
#endif

#ifndef GL_COLOR_ATTACHMENT13
#define GL_COLOR_ATTACHMENT13 0x8CED
#endif

#ifndef GL_COLOR_ATTACHMENT14
#define GL_COLOR_ATTACHMENT14 0x8CEE
#endif

#ifndef GL_COLOR_ATTACHMENT15
#define GL_COLOR_ATTACHMENT15 0x8CEF
#endif

#ifndef GL_DEPTH_ATTACHMENT
#define GL_DEPTH_ATTACHMENT 0x8D00
#endif

#ifndef GL_STENCIL_ATTACHMENT
#define GL_STENCIL_ATTACHMENT 0x8D20
#endif

#ifndef GL_FRAMEBUFFER
#define GL_FRAMEBUFFER 0x8D40
#endif

#ifndef GL_RENDERBUFFER
#define GL_RENDERBUFFER 0x8D41
#endif

#ifndef GL_RENDERBUFFER_WIDTH
#define GL_RENDERBUFFER_WIDTH 0x8D42
#endif

#ifndef GL_RENDERBUFFER_HEIGHT
#define GL_RENDERBUFFER_HEIGHT 0x8D43
#endif

#ifndef GL_RENDERBUFFER_INTERNAL_FORMAT
#define GL_RENDERBUFFER_INTERNAL_FORMAT 0x8D44
#endif

#ifndef GL_STENCIL_INDEX1
#define GL_STENCIL_INDEX1 0x8D46
#endif

#ifndef GL_STENCIL_INDEX4
#define GL_STENCIL_INDEX4 0x8D47
#endif

#ifndef GL_STENCIL_INDEX8
#define GL_STENCIL_INDEX8 0x8D48
#endif

#ifndef GL_STENCIL_INDEX16
#define GL_STENCIL_INDEX16 0x8D49
#endif

#ifndef GL_RENDERBUFFER_RED_SIZE
#define GL_RENDERBUFFER_RED_SIZE 0x8D50
#endif

#ifndef GL_RENDERBUFFER_GREEN_SIZE
#define GL_RENDERBUFFER_GREEN_SIZE 0x8D51
#endif

#ifndef GL_RENDERBUFFER_BLUE_SIZE
#define GL_RENDERBUFFER_BLUE_SIZE 0x8D52
#endif

#ifndef GL_RENDERBUFFER_ALPHA_SIZE
#define GL_RENDERBUFFER_ALPHA_SIZE 0x8D53
#endif

#ifndef GL_RENDERBUFFER_DEPTH_SIZE
#define GL_RENDERBUFFER_DEPTH_SIZE 0x8D54
#endif

#ifndef GL_RENDERBUFFER_STENCIL_SIZE
#define GL_RENDERBUFFER_STENCIL_SIZE 0x8D55
#endif

#ifndef GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE
#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE 0x8D56
#endif

#ifndef GL_MAX_SAMPLES
#define GL_MAX_SAMPLES 0x8D57
#endif

#ifndef GL_INDEX
#define GL_INDEX 0x8222
#endif

#ifndef GL_TEXTURE_LUMINANCE_TYPE
#define GL_TEXTURE_LUMINANCE_TYPE 0x8C14
#endif

#ifndef GL_TEXTURE_INTENSITY_TYPE
#define GL_TEXTURE_INTENSITY_TYPE 0x8C15
#endif

#ifndef GL_FRAMEBUFFER_SRGB
#define GL_FRAMEBUFFER_SRGB 0x8DB9
#endif

#ifndef GL_LINES_ADJACENCY_ARB
#define GL_LINES_ADJACENCY_ARB 0x000A
#endif

#ifndef GL_LINE_STRIP_ADJACENCY_ARB
#define GL_LINE_STRIP_ADJACENCY_ARB 0x000B
#endif

#ifndef GL_TRIANGLES_ADJACENCY_ARB
#define GL_TRIANGLES_ADJACENCY_ARB 0x000C
#endif

#ifndef GL_TRIANGLE_STRIP_ADJACENCY_ARB
#define GL_TRIANGLE_STRIP_ADJACENCY_ARB 0x000D
#endif

#ifndef GL_PROGRAM_POINT_SIZE_ARB
#define GL_PROGRAM_POINT_SIZE_ARB 0x8642
#endif

#ifndef GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB
#define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB 0x8C29
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB
#define GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB 0x8DA7
#endif

#ifndef GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB
#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB 0x8DA8
#endif

#ifndef GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB
#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB 0x8DA9
#endif

#ifndef GL_GEOMETRY_SHADER_ARB
#define GL_GEOMETRY_SHADER_ARB 0x8DD9
#endif

#ifndef GL_GEOMETRY_VERTICES_OUT_ARB
#define GL_GEOMETRY_VERTICES_OUT_ARB 0x8DDA
#endif

#ifndef GL_GEOMETRY_INPUT_TYPE_ARB
#define GL_GEOMETRY_INPUT_TYPE_ARB 0x8DDB
#endif

#ifndef GL_GEOMETRY_OUTPUT_TYPE_ARB
#define GL_GEOMETRY_OUTPUT_TYPE_ARB 0x8DDC
#endif

#ifndef GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB
#define GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB 0x8DDD
#endif

#ifndef GL_MAX_VERTEX_VARYING_COMPONENTS_ARB
#define GL_MAX_VERTEX_VARYING_COMPONENTS_ARB 0x8DDE
#endif

#ifndef GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB
#define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB 0x8DDF
#endif

#ifndef GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB
#define GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB 0x8DE0
#endif

#ifndef GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB
#define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB 0x8DE1
#endif

#ifndef GL_HALF_FLOAT
#define GL_HALF_FLOAT 0x140B
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB
#define GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB 0x88FE
#endif

#ifndef GL_MAP_READ_BIT
#define GL_MAP_READ_BIT 0x0001
#endif

#ifndef GL_MAP_WRITE_BIT
#define GL_MAP_WRITE_BIT 0x0002
#endif

#ifndef GL_MAP_INVALIDATE_RANGE_BIT
#define GL_MAP_INVALIDATE_RANGE_BIT 0x0004
#endif

#ifndef GL_MAP_INVALIDATE_BUFFER_BIT
#define GL_MAP_INVALIDATE_BUFFER_BIT 0x0008
#endif

#ifndef GL_MAP_FLUSH_EXPLICIT_BIT
#define GL_MAP_FLUSH_EXPLICIT_BIT 0x0010
#endif

#ifndef GL_MAP_UNSYNCHRONIZED_BIT
#define GL_MAP_UNSYNCHRONIZED_BIT 0x0020
#endif

#ifndef GL_TEXTURE_BUFFER_ARB
#define GL_TEXTURE_BUFFER_ARB 0x8C2A
#endif

#ifndef GL_MAX_TEXTURE_BUFFER_SIZE_ARB
#define GL_MAX_TEXTURE_BUFFER_SIZE_ARB 0x8C2B
#endif

#ifndef GL_TEXTURE_BINDING_BUFFER_ARB
#define GL_TEXTURE_BINDING_BUFFER_ARB 0x8C2C
#endif

#ifndef GL_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB
#define GL_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB 0x8C2D
#endif

#ifndef GL_TEXTURE_BUFFER_FORMAT_ARB
#define GL_TEXTURE_BUFFER_FORMAT_ARB 0x8C2E
#endif

#ifndef GL_COMPRESSED_RED_RGTC1
#define GL_COMPRESSED_RED_RGTC1 0x8DBB
#endif

#ifndef GL_COMPRESSED_SIGNED_RED_RGTC1
#define GL_COMPRESSED_SIGNED_RED_RGTC1 0x8DBC
#endif

#ifndef GL_COMPRESSED_RG_RGTC2
#define GL_COMPRESSED_RG_RGTC2 0x8DBD
#endif

#ifndef GL_COMPRESSED_SIGNED_RG_RGTC2
#define GL_COMPRESSED_SIGNED_RG_RGTC2 0x8DBE
#endif

#ifndef GL_RG
#define GL_RG 0x8227
#endif

#ifndef GL_RG_INTEGER
#define GL_RG_INTEGER 0x8228
#endif

#ifndef GL_R8
#define GL_R8 0x8229
#endif

#ifndef GL_R16
#define GL_R16 0x822A
#endif

#ifndef GL_RG8
#define GL_RG8 0x822B
#endif

#ifndef GL_RG16
#define GL_RG16 0x822C
#endif

#ifndef GL_R16F
#define GL_R16F 0x822D
#endif

#ifndef GL_R32F
#define GL_R32F 0x822E
#endif

#ifndef GL_RG16F
#define GL_RG16F 0x822F
#endif

#ifndef GL_RG32F
#define GL_RG32F 0x8230
#endif

#ifndef GL_R8I
#define GL_R8I 0x8231
#endif

#ifndef GL_R8UI
#define GL_R8UI 0x8232
#endif

#ifndef GL_R16I
#define GL_R16I 0x8233
#endif

#ifndef GL_R16UI
#define GL_R16UI 0x8234
#endif

#ifndef GL_R32I
#define GL_R32I 0x8235
#endif

#ifndef GL_R32UI
#define GL_R32UI 0x8236
#endif

#ifndef GL_RG8I
#define GL_RG8I 0x8237
#endif

#ifndef GL_RG8UI
#define GL_RG8UI 0x8238
#endif

#ifndef GL_RG16I
#define GL_RG16I 0x8239
#endif

#ifndef GL_RG16UI
#define GL_RG16UI 0x823A
#endif

#ifndef GL_RG32I
#define GL_RG32I 0x823B
#endif

#ifndef GL_RG32UI
#define GL_RG32UI 0x823C
#endif

#ifndef GL_VERTEX_ARRAY_BINDING
#define GL_VERTEX_ARRAY_BINDING 0x85B5
#endif

#ifndef GL_UNIFORM_BUFFER
#define GL_UNIFORM_BUFFER 0x8A11
#endif

#ifndef GL_UNIFORM_BUFFER_BINDING
#define GL_UNIFORM_BUFFER_BINDING 0x8A28
#endif

#ifndef GL_UNIFORM_BUFFER_START
#define GL_UNIFORM_BUFFER_START 0x8A29
#endif

#ifndef GL_UNIFORM_BUFFER_SIZE
#define GL_UNIFORM_BUFFER_SIZE 0x8A2A
#endif

#ifndef GL_MAX_VERTEX_UNIFORM_BLOCKS
#define GL_MAX_VERTEX_UNIFORM_BLOCKS 0x8A2B
#endif

#ifndef GL_MAX_GEOMETRY_UNIFORM_BLOCKS
#define GL_MAX_GEOMETRY_UNIFORM_BLOCKS 0x8A2C
#endif

#ifndef GL_MAX_FRAGMENT_UNIFORM_BLOCKS
#define GL_MAX_FRAGMENT_UNIFORM_BLOCKS 0x8A2D
#endif

#ifndef GL_MAX_COMBINED_UNIFORM_BLOCKS
#define GL_MAX_COMBINED_UNIFORM_BLOCKS 0x8A2E
#endif

#ifndef GL_MAX_UNIFORM_BUFFER_BINDINGS
#define GL_MAX_UNIFORM_BUFFER_BINDINGS 0x8A2F
#endif

#ifndef GL_MAX_UNIFORM_BLOCK_SIZE
#define GL_MAX_UNIFORM_BLOCK_SIZE 0x8A30
#endif

#ifndef GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS
#define GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS 0x8A31
#endif

#ifndef GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS
#define GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS 0x8A32
#endif

#ifndef GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS
#define GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS 0x8A33
#endif

#ifndef GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT
#define GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT 0x8A34
#endif

#ifndef GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH
#define GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH 0x8A35
#endif

#ifndef GL_ACTIVE_UNIFORM_BLOCKS
#define GL_ACTIVE_UNIFORM_BLOCKS 0x8A36
#endif

#ifndef GL_UNIFORM_TYPE
#define GL_UNIFORM_TYPE 0x8A37
#endif

#ifndef GL_UNIFORM_SIZE
#define GL_UNIFORM_SIZE 0x8A38
#endif

#ifndef GL_UNIFORM_NAME_LENGTH
#define GL_UNIFORM_NAME_LENGTH 0x8A39
#endif

#ifndef GL_UNIFORM_BLOCK_INDEX
#define GL_UNIFORM_BLOCK_INDEX 0x8A3A
#endif

#ifndef GL_UNIFORM_OFFSET
#define GL_UNIFORM_OFFSET 0x8A3B
#endif

#ifndef GL_UNIFORM_ARRAY_STRIDE
#define GL_UNIFORM_ARRAY_STRIDE 0x8A3C
#endif

#ifndef GL_UNIFORM_MATRIX_STRIDE
#define GL_UNIFORM_MATRIX_STRIDE 0x8A3D
#endif

#ifndef GL_UNIFORM_IS_ROW_MAJOR
#define GL_UNIFORM_IS_ROW_MAJOR 0x8A3E
#endif

#ifndef GL_UNIFORM_BLOCK_BINDING
#define GL_UNIFORM_BLOCK_BINDING 0x8A3F
#endif

#ifndef GL_UNIFORM_BLOCK_DATA_SIZE
#define GL_UNIFORM_BLOCK_DATA_SIZE 0x8A40
#endif

#ifndef GL_UNIFORM_BLOCK_NAME_LENGTH
#define GL_UNIFORM_BLOCK_NAME_LENGTH 0x8A41
#endif

#ifndef GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS
#define GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS 0x8A42
#endif

#ifndef GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES
#define GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES 0x8A43
#endif

#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER
#define GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER 0x8A44
#endif

#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER
#define GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER 0x8A45
#endif

#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER
#define GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER 0x8A46
#endif

#ifndef GL_INVALID_INDEX
#define GL_INVALID_INDEX 0xFFFFFFFFu
#endif

/* ARB_compatibility just defines tokens from core 3.0 */
#ifndef GL_COPY_READ_BUFFER_BINDING
#define GL_COPY_READ_BUFFER_BINDING 0x8F36
#endif

#ifndef GL_COPY_READ_BUFFER
#define GL_COPY_READ_BUFFER GL_COPY_READ_BUFFER_BINDING
#endif

#ifndef GL_COPY_WRITE_BUFFER_BINDING
#define GL_COPY_WRITE_BUFFER_BINDING 0x8F37
#endif

#ifndef GL_COPY_WRITE_BUFFER
#define GL_COPY_WRITE_BUFFER GL_COPY_WRITE_BUFFER_BINDING
#endif

#ifndef GL_DEPTH_CLAMP
#define GL_DEPTH_CLAMP 0x864F
#endif

#ifndef GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION
#define GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION 0x8E4C
#endif

#ifndef GL_FIRST_VERTEX_CONVENTION
#define GL_FIRST_VERTEX_CONVENTION 0x8E4D
#endif

#ifndef GL_LAST_VERTEX_CONVENTION
#define GL_LAST_VERTEX_CONVENTION 0x8E4E
#endif

#ifndef GL_PROVOKING_VERTEX
#define GL_PROVOKING_VERTEX 0x8E4F
#endif

#ifndef GL_TEXTURE_CUBE_MAP_SEAMLESS
#define GL_TEXTURE_CUBE_MAP_SEAMLESS 0x884F
#endif

#ifndef GL_MAX_SERVER_WAIT_TIMEOUT
#define GL_MAX_SERVER_WAIT_TIMEOUT 0x9111
#endif

#ifndef GL_OBJECT_TYPE
#define GL_OBJECT_TYPE 0x9112
#endif

#ifndef GL_SYNC_CONDITION
#define GL_SYNC_CONDITION 0x9113
#endif

#ifndef GL_SYNC_STATUS
#define GL_SYNC_STATUS 0x9114
#endif

#ifndef GL_SYNC_FLAGS
#define GL_SYNC_FLAGS 0x9115
#endif

#ifndef GL_SYNC_FENCE
#define GL_SYNC_FENCE 0x9116
#endif

#ifndef GL_SYNC_GPU_COMMANDS_COMPLETE
#define GL_SYNC_GPU_COMMANDS_COMPLETE 0x9117
#endif

#ifndef GL_UNSIGNALED
#define GL_UNSIGNALED 0x9118
#endif

#ifndef GL_SIGNALED
#define GL_SIGNALED 0x9119
#endif

#ifndef GL_ALREADY_SIGNALED
#define GL_ALREADY_SIGNALED 0x911A
#endif

#ifndef GL_TIMEOUT_EXPIRED
#define GL_TIMEOUT_EXPIRED 0x911B
#endif

#ifndef GL_CONDITION_SATISFIED
#define GL_CONDITION_SATISFIED 0x911C
#endif

#ifndef GL_WAIT_FAILED
#define GL_WAIT_FAILED 0x911D
#endif

#ifndef GL_SYNC_FLUSH_COMMANDS_BIT
#define GL_SYNC_FLUSH_COMMANDS_BIT 0x00000001
#endif

#ifndef GL_TIMEOUT_IGNORED
#define GL_TIMEOUT_IGNORED 0xFFFFFFFFFFFFFFFFull
#endif

#ifndef GL_SAMPLE_POSITION
#define GL_SAMPLE_POSITION 0x8E50
#endif

#ifndef GL_SAMPLE_MASK
#define GL_SAMPLE_MASK 0x8E51
#endif

#ifndef GL_SAMPLE_MASK_VALUE
#define GL_SAMPLE_MASK_VALUE 0x8E52
#endif

#ifndef GL_MAX_SAMPLE_MASK_WORDS
#define GL_MAX_SAMPLE_MASK_WORDS 0x8E59
#endif

#ifndef GL_TEXTURE_2D_MULTISAMPLE
#define GL_TEXTURE_2D_MULTISAMPLE 0x9100
#endif

#ifndef GL_PROXY_TEXTURE_2D_MULTISAMPLE
#define GL_PROXY_TEXTURE_2D_MULTISAMPLE 0x9101
#endif

#ifndef GL_TEXTURE_2D_MULTISAMPLE_ARRAY
#define GL_TEXTURE_2D_MULTISAMPLE_ARRAY 0x9102
#endif

#ifndef GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY
#define GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY 0x9103
#endif

#ifndef GL_TEXTURE_BINDING_2D_MULTISAMPLE
#define GL_TEXTURE_BINDING_2D_MULTISAMPLE 0x9104
#endif

#ifndef GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY
#define GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY 0x9105
#endif

#ifndef GL_TEXTURE_SAMPLES
#define GL_TEXTURE_SAMPLES 0x9106
#endif

#ifndef GL_TEXTURE_FIXED_SAMPLE_LOCATIONS
#define GL_TEXTURE_FIXED_SAMPLE_LOCATIONS 0x9107
#endif

#ifndef GL_SAMPLER_2D_MULTISAMPLE
#define GL_SAMPLER_2D_MULTISAMPLE 0x9108
#endif

#ifndef GL_INT_SAMPLER_2D_MULTISAMPLE
#define GL_INT_SAMPLER_2D_MULTISAMPLE 0x9109
#endif

#ifndef GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE
#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE 0x910A
#endif

#ifndef GL_SAMPLER_2D_MULTISAMPLE_ARRAY
#define GL_SAMPLER_2D_MULTISAMPLE_ARRAY 0x910B
#endif

#ifndef GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY
#define GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY 0x910C
#endif

#ifndef GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY
#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY 0x910D
#endif

#ifndef GL_MAX_COLOR_TEXTURE_SAMPLES
#define GL_MAX_COLOR_TEXTURE_SAMPLES 0x910E
#endif

#ifndef GL_MAX_DEPTH_TEXTURE_SAMPLES
#define GL_MAX_DEPTH_TEXTURE_SAMPLES 0x910F
#endif

#ifndef GL_MAX_INTEGER_SAMPLES
#define GL_MAX_INTEGER_SAMPLES 0x9110
#endif

#ifndef GL_SAMPLE_SHADING_ARB
#define GL_SAMPLE_SHADING_ARB 0x8C36
#endif

#ifndef GL_MIN_SAMPLE_SHADING_VALUE_ARB
#define GL_MIN_SAMPLE_SHADING_VALUE_ARB 0x8C37
#endif

#ifndef GL_TEXTURE_CUBE_MAP_ARRAY_ARB
#define GL_TEXTURE_CUBE_MAP_ARRAY_ARB 0x9009
#endif

#ifndef GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB
#define GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB 0x900A
#endif

#ifndef GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB
#define GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB 0x900B
#endif

#ifndef GL_SAMPLER_CUBE_MAP_ARRAY_ARB
#define GL_SAMPLER_CUBE_MAP_ARRAY_ARB 0x900C
#endif

#ifndef GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB
#define GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB 0x900D
#endif

#ifndef GL_INT_SAMPLER_CUBE_MAP_ARRAY_ARB
#define GL_INT_SAMPLER_CUBE_MAP_ARRAY_ARB 0x900E
#endif

#ifndef GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB
#define GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB 0x900F
#endif

#ifndef GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB
#define GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB 0x8E5E
#endif

#ifndef GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB
#define GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB 0x8E5F
#endif

#ifndef GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB
#define GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB 0x8F9F
#endif

#ifndef GL_SHADER_INCLUDE_ARB
#define GL_SHADER_INCLUDE_ARB 0x8DAE
#endif

#ifndef GL_NAMED_STRING_LENGTH_ARB
#define GL_NAMED_STRING_LENGTH_ARB 0x8DE9
#endif

#ifndef GL_NAMED_STRING_TYPE_ARB
#define GL_NAMED_STRING_TYPE_ARB 0x8DEA
#endif

#ifndef GL_COMPRESSED_RGBA_BPTC_UNORM_ARB
#define GL_COMPRESSED_RGBA_BPTC_UNORM_ARB 0x8E8C
#endif

#ifndef GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB
#define GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB 0x8E8D
#endif

#ifndef GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB
#define GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB 0x8E8E
#endif

#ifndef GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB
#define GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB 0x8E8F
#endif

#ifndef GL_SRC1_COLOR
#define GL_SRC1_COLOR 0x88F9
#endif

#ifndef GL_ONE_MINUS_SRC1_COLOR
#define GL_ONE_MINUS_SRC1_COLOR 0x88FA
#endif

#ifndef GL_ONE_MINUS_SRC1_ALPHA
#define GL_ONE_MINUS_SRC1_ALPHA 0x88FB
#endif

#ifndef GL_MAX_DUAL_SOURCE_DRAW_BUFFERS
#define GL_MAX_DUAL_SOURCE_DRAW_BUFFERS 0x88FC
#endif

#ifndef GL_ANY_SAMPLES_PASSED
#define GL_ANY_SAMPLES_PASSED 0x8C2F
#endif

#ifndef GL_SAMPLER_BINDING
#define GL_SAMPLER_BINDING 0x8919
#endif

#ifndef GL_RGB10_A2UI
#define GL_RGB10_A2UI 0x906F
#endif

#ifndef GL_TEXTURE_SWIZZLE_R
#define GL_TEXTURE_SWIZZLE_R 0x8E42
#endif

#ifndef GL_TEXTURE_SWIZZLE_G
#define GL_TEXTURE_SWIZZLE_G 0x8E43
#endif

#ifndef GL_TEXTURE_SWIZZLE_B
#define GL_TEXTURE_SWIZZLE_B 0x8E44
#endif

#ifndef GL_TEXTURE_SWIZZLE_A
#define GL_TEXTURE_SWIZZLE_A 0x8E45
#endif

#ifndef GL_TEXTURE_SWIZZLE_RGBA
#define GL_TEXTURE_SWIZZLE_RGBA 0x8E46
#endif

#ifndef GL_TIME_ELAPSED
#define GL_TIME_ELAPSED 0x88BF
#endif

#ifndef GL_TIMESTAMP
#define GL_TIMESTAMP 0x8E28
#endif

#ifndef GL_INT_2_10_10_10_REV
#define GL_INT_2_10_10_10_REV 0x8D9F
#endif

#ifndef GL_DRAW_INDIRECT_BUFFER
#define GL_DRAW_INDIRECT_BUFFER 0x8F3F
#endif

#ifndef GL_DRAW_INDIRECT_BUFFER_BINDING
#define GL_DRAW_INDIRECT_BUFFER_BINDING 0x8F43
#endif

#ifndef GL_GEOMETRY_SHADER_INVOCATIONS
#define GL_GEOMETRY_SHADER_INVOCATIONS 0x887F
#endif

#ifndef GL_MAX_GEOMETRY_SHADER_INVOCATIONS
#define GL_MAX_GEOMETRY_SHADER_INVOCATIONS 0x8E5A
#endif

#ifndef GL_MIN_FRAGMENT_INTERPOLATION_OFFSET
#define GL_MIN_FRAGMENT_INTERPOLATION_OFFSET 0x8E5B
#endif

#ifndef GL_MAX_FRAGMENT_INTERPOLATION_OFFSET
#define GL_MAX_FRAGMENT_INTERPOLATION_OFFSET 0x8E5C
#endif

#ifndef GL_FRAGMENT_INTERPOLATION_OFFSET_BITS
#define GL_FRAGMENT_INTERPOLATION_OFFSET_BITS 0x8E5D
#endif

#ifndef GL_DOUBLE_VEC2
#define GL_DOUBLE_VEC2 0x8FFC
#endif

#ifndef GL_DOUBLE_VEC3
#define GL_DOUBLE_VEC3 0x8FFD
#endif

#ifndef GL_DOUBLE_VEC4
#define GL_DOUBLE_VEC4 0x8FFE
#endif

#ifndef GL_DOUBLE_MAT2
#define GL_DOUBLE_MAT2 0x8F46
#endif

#ifndef GL_DOUBLE_MAT3
#define GL_DOUBLE_MAT3 0x8F47
#endif

#ifndef GL_DOUBLE_MAT4
#define GL_DOUBLE_MAT4 0x8F48
#endif

#ifndef GL_DOUBLE_MAT2x3
#define GL_DOUBLE_MAT2x3 0x8F49
#endif

#ifndef GL_DOUBLE_MAT2x4
#define GL_DOUBLE_MAT2x4 0x8F4A
#endif

#ifndef GL_DOUBLE_MAT3x2
#define GL_DOUBLE_MAT3x2 0x8F4B
#endif

#ifndef GL_DOUBLE_MAT3x4
#define GL_DOUBLE_MAT3x4 0x8F4C
#endif

#ifndef GL_DOUBLE_MAT4x2
#define GL_DOUBLE_MAT4x2 0x8F4D
#endif

#ifndef GL_DOUBLE_MAT4x3
#define GL_DOUBLE_MAT4x3 0x8F4E
#endif

#ifndef GL_ACTIVE_SUBROUTINES
#define GL_ACTIVE_SUBROUTINES 0x8DE5
#endif

#ifndef GL_ACTIVE_SUBROUTINE_UNIFORMS
#define GL_ACTIVE_SUBROUTINE_UNIFORMS 0x8DE6
#endif

#ifndef GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS
#define GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS 0x8E47
#endif

#ifndef GL_ACTIVE_SUBROUTINE_MAX_LENGTH
#define GL_ACTIVE_SUBROUTINE_MAX_LENGTH 0x8E48
#endif

#ifndef GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH
#define GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH 0x8E49
#endif

#ifndef GL_MAX_SUBROUTINES
#define GL_MAX_SUBROUTINES 0x8DE7
#endif

#ifndef GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS
#define GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS 0x8DE8
#endif

#ifndef GL_NUM_COMPATIBLE_SUBROUTINES
#define GL_NUM_COMPATIBLE_SUBROUTINES 0x8E4A
#endif

#ifndef GL_COMPATIBLE_SUBROUTINES
#define GL_COMPATIBLE_SUBROUTINES 0x8E4B
#endif

#ifndef GL_PATCHES
#define GL_PATCHES 0x000E
#endif

#ifndef GL_PATCH_VERTICES
#define GL_PATCH_VERTICES 0x8E72
#endif

#ifndef GL_PATCH_DEFAULT_INNER_LEVEL
#define GL_PATCH_DEFAULT_INNER_LEVEL 0x8E73
#endif

#ifndef GL_PATCH_DEFAULT_OUTER_LEVEL
#define GL_PATCH_DEFAULT_OUTER_LEVEL 0x8E74
#endif

#ifndef GL_TESS_CONTROL_OUTPUT_VERTICES
#define GL_TESS_CONTROL_OUTPUT_VERTICES 0x8E75
#endif

#ifndef GL_TESS_GEN_MODE
#define GL_TESS_GEN_MODE 0x8E76
#endif

#ifndef GL_TESS_GEN_SPACING
#define GL_TESS_GEN_SPACING 0x8E77
#endif

#ifndef GL_TESS_GEN_VERTEX_ORDER
#define GL_TESS_GEN_VERTEX_ORDER 0x8E78
#endif

#ifndef GL_TESS_GEN_POINT_MODE
#define GL_TESS_GEN_POINT_MODE 0x8E79
#endif

#ifndef GL_ISOLINES
#define GL_ISOLINES 0x8E7A
#endif

#ifndef GL_FRACTIONAL_ODD
#define GL_FRACTIONAL_ODD 0x8E7B
#endif

#ifndef GL_FRACTIONAL_EVEN
#define GL_FRACTIONAL_EVEN 0x8E7C
#endif

#ifndef GL_MAX_PATCH_VERTICES
#define GL_MAX_PATCH_VERTICES 0x8E7D
#endif

#ifndef GL_MAX_TESS_GEN_LEVEL
#define GL_MAX_TESS_GEN_LEVEL 0x8E7E
#endif

#ifndef GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS
#define GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E7F
#endif

#ifndef GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS
#define GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E80
#endif

#ifndef GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS
#define GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS 0x8E81
#endif

#ifndef GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS
#define GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS 0x8E82
#endif

#ifndef GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS
#define GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS 0x8E83
#endif

#ifndef GL_MAX_TESS_PATCH_COMPONENTS
#define GL_MAX_TESS_PATCH_COMPONENTS 0x8E84
#endif

#ifndef GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS
#define GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS 0x8E85
#endif

#ifndef GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS
#define GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS 0x8E86
#endif

#ifndef GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS
#define GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS 0x8E89
#endif

#ifndef GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS
#define GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS 0x8E8A
#endif

#ifndef GL_MAX_TESS_CONTROL_INPUT_COMPONENTS
#define GL_MAX_TESS_CONTROL_INPUT_COMPONENTS 0x886C
#endif

#ifndef GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS
#define GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS 0x886D
#endif

#ifndef GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS
#define GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E1E
#endif

#ifndef GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS
#define GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E1F
#endif

#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER
#define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER 0x84F0
#endif

#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER
#define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER 0x84F1
#endif

#ifndef GL_TESS_EVALUATION_SHADER
#define GL_TESS_EVALUATION_SHADER 0x8E87
#endif

#ifndef GL_TESS_CONTROL_SHADER
#define GL_TESS_CONTROL_SHADER 0x8E88
#endif

#ifndef GL_TRANSFORM_FEEDBACK
#define GL_TRANSFORM_FEEDBACK 0x8E22
#endif

#ifndef GL_TRANSFORM_FEEDBACK_PAUSED
#define GL_TRANSFORM_FEEDBACK_PAUSED 0x8E23
#endif

#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED
#define GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED GL_TRANSFORM_FEEDBACK_PAUSED
#endif

#ifndef GL_TRANSFORM_FEEDBACK_ACTIVE
#define GL_TRANSFORM_FEEDBACK_ACTIVE 0x8E24
#endif

#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE
#define GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE GL_TRANSFORM_FEEDBACK_ACTIVE
#endif

#ifndef GL_TRANSFORM_FEEDBACK_BINDING
#define GL_TRANSFORM_FEEDBACK_BINDING 0x8E25
#endif

#ifndef GL_MAX_TRANSFORM_FEEDBACK_BUFFERS
#define GL_MAX_TRANSFORM_FEEDBACK_BUFFERS 0x8E70
#endif

#ifndef GL_MAX_VERTEX_STREAMS
#define GL_MAX_VERTEX_STREAMS 0x8E71
#endif

#ifndef GL_FIXED
#define GL_FIXED 0x140C
#endif

#ifndef GL_IMPLEMENTATION_COLOR_READ_TYPE
#define GL_IMPLEMENTATION_COLOR_READ_TYPE 0x8B9A
#endif

#ifndef GL_IMPLEMENTATION_COLOR_READ_FORMAT
#define GL_IMPLEMENTATION_COLOR_READ_FORMAT 0x8B9B
#endif

#ifndef GL_LOW_FLOAT
#define GL_LOW_FLOAT 0x8DF0
#endif

#ifndef GL_MEDIUM_FLOAT
#define GL_MEDIUM_FLOAT 0x8DF1
#endif

#ifndef GL_HIGH_FLOAT
#define GL_HIGH_FLOAT 0x8DF2
#endif

#ifndef GL_LOW_INT
#define GL_LOW_INT 0x8DF3
#endif

#ifndef GL_MEDIUM_INT
#define GL_MEDIUM_INT 0x8DF4
#endif

#ifndef GL_HIGH_INT
#define GL_HIGH_INT 0x8DF5
#endif

#ifndef GL_SHADER_COMPILER
#define GL_SHADER_COMPILER 0x8DFA
#endif

#ifndef GL_SHADER_BINARY_FORMATS
#define GL_SHADER_BINARY_FORMATS 0x8DF8
#endif

#ifndef GL_NUM_SHADER_BINARY_FORMATS
#define GL_NUM_SHADER_BINARY_FORMATS 0x8DF9
#endif

#ifndef GL_MAX_VERTEX_UNIFORM_VECTORS
#define GL_MAX_VERTEX_UNIFORM_VECTORS 0x8DFB
#endif

#ifndef GL_MAX_VARYING_VECTORS
#define GL_MAX_VARYING_VECTORS 0x8DFC
#endif

#ifndef GL_MAX_FRAGMENT_UNIFORM_VECTORS
#define GL_MAX_FRAGMENT_UNIFORM_VECTORS 0x8DFD
#endif

#ifndef GL_RGB565
#define GL_RGB565 0x8D62
#endif

#ifndef GL_PROGRAM_BINARY_RETRIEVABLE_HINT
#define GL_PROGRAM_BINARY_RETRIEVABLE_HINT 0x8257
#endif

#ifndef GL_PROGRAM_BINARY_LENGTH
#define GL_PROGRAM_BINARY_LENGTH 0x8741
#endif

#ifndef GL_NUM_PROGRAM_BINARY_FORMATS
#define GL_NUM_PROGRAM_BINARY_FORMATS 0x87FE
#endif

#ifndef GL_PROGRAM_BINARY_FORMATS
#define GL_PROGRAM_BINARY_FORMATS 0x87FF
#endif

#ifndef GL_VERTEX_SHADER_BIT
#define GL_VERTEX_SHADER_BIT 0x00000001
#endif

#ifndef GL_FRAGMENT_SHADER_BIT
#define GL_FRAGMENT_SHADER_BIT 0x00000002
#endif

#ifndef GL_GEOMETRY_SHADER_BIT
#define GL_GEOMETRY_SHADER_BIT 0x00000004
#endif

#ifndef GL_TESS_CONTROL_SHADER_BIT
#define GL_TESS_CONTROL_SHADER_BIT 0x00000008
#endif

#ifndef GL_TESS_EVALUATION_SHADER_BIT
#define GL_TESS_EVALUATION_SHADER_BIT 0x00000010
#endif

#ifndef GL_ALL_SHADER_BITS
#define GL_ALL_SHADER_BITS 0xFFFFFFFF
#endif

#ifndef GL_PROGRAM_SEPARABLE
#define GL_PROGRAM_SEPARABLE 0x8258
#endif

#ifndef GL_ACTIVE_PROGRAM
#define GL_ACTIVE_PROGRAM 0x8259
#endif

#ifndef GL_PROGRAM_PIPELINE_BINDING
#define GL_PROGRAM_PIPELINE_BINDING 0x825A
#endif

#ifndef GL_MAX_VIEWPORTS
#define GL_MAX_VIEWPORTS 0x825B
#endif

#ifndef GL_VIEWPORT_SUBPIXEL_BITS
#define GL_VIEWPORT_SUBPIXEL_BITS 0x825C
#endif

#ifndef GL_VIEWPORT_BOUNDS_RANGE
#define GL_VIEWPORT_BOUNDS_RANGE 0x825D
#endif

#ifndef GL_LAYER_PROVOKING_VERTEX
#define GL_LAYER_PROVOKING_VERTEX 0x825E
#endif

#ifndef GL_VIEWPORT_INDEX_PROVOKING_VERTEX
#define GL_VIEWPORT_INDEX_PROVOKING_VERTEX 0x825F
#endif

#ifndef GL_UNDEFINED_VERTEX
#define GL_UNDEFINED_VERTEX 0x8260
#endif

#ifndef GL_SYNC_CL_EVENT_ARB
#define GL_SYNC_CL_EVENT_ARB 0x8240
#endif

#ifndef GL_SYNC_CL_EVENT_COMPLETE_ARB
#define GL_SYNC_CL_EVENT_COMPLETE_ARB 0x8241
#endif

#ifndef GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB
#define GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB 0x8242
#endif

#ifndef GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB
#define GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB 0x8243
#endif

#ifndef GL_DEBUG_CALLBACK_FUNCTION_ARB
#define GL_DEBUG_CALLBACK_FUNCTION_ARB 0x8244
#endif

#ifndef GL_DEBUG_CALLBACK_USER_PARAM_ARB
#define GL_DEBUG_CALLBACK_USER_PARAM_ARB 0x8245
#endif

#ifndef GL_DEBUG_SOURCE_API_ARB
#define GL_DEBUG_SOURCE_API_ARB 0x8246
#endif

#ifndef GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB
#define GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB 0x8247
#endif

#ifndef GL_DEBUG_SOURCE_SHADER_COMPILER_ARB
#define GL_DEBUG_SOURCE_SHADER_COMPILER_ARB 0x8248
#endif

#ifndef GL_DEBUG_SOURCE_THIRD_PARTY_ARB
#define GL_DEBUG_SOURCE_THIRD_PARTY_ARB 0x8249
#endif

#ifndef GL_DEBUG_SOURCE_APPLICATION_ARB
#define GL_DEBUG_SOURCE_APPLICATION_ARB 0x824A
#endif

#ifndef GL_DEBUG_SOURCE_OTHER_ARB
#define GL_DEBUG_SOURCE_OTHER_ARB 0x824B
#endif

#ifndef GL_DEBUG_TYPE_ERROR_ARB
#define GL_DEBUG_TYPE_ERROR_ARB 0x824C
#endif

#ifndef GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB
#define GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB 0x824D
#endif

#ifndef GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB
#define GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB 0x824E
#endif

#ifndef GL_DEBUG_TYPE_PORTABILITY_ARB
#define GL_DEBUG_TYPE_PORTABILITY_ARB 0x824F
#endif

#ifndef GL_DEBUG_TYPE_PERFORMANCE_ARB
#define GL_DEBUG_TYPE_PERFORMANCE_ARB 0x8250
#endif

#ifndef GL_DEBUG_TYPE_OTHER_ARB
#define GL_DEBUG_TYPE_OTHER_ARB 0x8251
#endif

#ifndef GL_MAX_DEBUG_MESSAGE_LENGTH_ARB
#define GL_MAX_DEBUG_MESSAGE_LENGTH_ARB 0x9143
#endif

#ifndef GL_MAX_DEBUG_LOGGED_MESSAGES_ARB
#define GL_MAX_DEBUG_LOGGED_MESSAGES_ARB 0x9144
#endif

#ifndef GL_DEBUG_LOGGED_MESSAGES_ARB
#define GL_DEBUG_LOGGED_MESSAGES_ARB 0x9145
#endif

#ifndef GL_DEBUG_SEVERITY_HIGH_ARB
#define GL_DEBUG_SEVERITY_HIGH_ARB 0x9146
#endif

#ifndef GL_DEBUG_SEVERITY_MEDIUM_ARB
#define GL_DEBUG_SEVERITY_MEDIUM_ARB 0x9147
#endif

#ifndef GL_DEBUG_SEVERITY_LOW_ARB
#define GL_DEBUG_SEVERITY_LOW_ARB 0x9148
#endif

#ifndef GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB
#define GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB 0x00000004
#endif

#ifndef GL_LOSE_CONTEXT_ON_RESET_ARB
#define GL_LOSE_CONTEXT_ON_RESET_ARB 0x8252
#endif

#ifndef GL_GUILTY_CONTEXT_RESET_ARB
#define GL_GUILTY_CONTEXT_RESET_ARB 0x8253
#endif

#ifndef GL_INNOCENT_CONTEXT_RESET_ARB
#define GL_INNOCENT_CONTEXT_RESET_ARB 0x8254
#endif

#ifndef GL_UNKNOWN_CONTEXT_RESET_ARB
#define GL_UNKNOWN_CONTEXT_RESET_ARB 0x8255
#endif

#ifndef GL_RESET_NOTIFICATION_STRATEGY_ARB
#define GL_RESET_NOTIFICATION_STRATEGY_ARB 0x8256
#endif

#ifndef GL_NO_RESET_NOTIFICATION_ARB
#define GL_NO_RESET_NOTIFICATION_ARB 0x8261
#endif

#ifndef GL_UNPACK_COMPRESSED_BLOCK_WIDTH
#define GL_UNPACK_COMPRESSED_BLOCK_WIDTH 0x9127
#endif

#ifndef GL_UNPACK_COMPRESSED_BLOCK_HEIGHT
#define GL_UNPACK_COMPRESSED_BLOCK_HEIGHT 0x9128
#endif

#ifndef GL_UNPACK_COMPRESSED_BLOCK_DEPTH
#define GL_UNPACK_COMPRESSED_BLOCK_DEPTH 0x9129
#endif

#ifndef GL_UNPACK_COMPRESSED_BLOCK_SIZE
#define GL_UNPACK_COMPRESSED_BLOCK_SIZE 0x912A
#endif

#ifndef GL_PACK_COMPRESSED_BLOCK_WIDTH
#define GL_PACK_COMPRESSED_BLOCK_WIDTH 0x912B
#endif

#ifndef GL_PACK_COMPRESSED_BLOCK_HEIGHT
#define GL_PACK_COMPRESSED_BLOCK_HEIGHT 0x912C
#endif

#ifndef GL_PACK_COMPRESSED_BLOCK_DEPTH
#define GL_PACK_COMPRESSED_BLOCK_DEPTH 0x912D
#endif

#ifndef GL_PACK_COMPRESSED_BLOCK_SIZE
#define GL_PACK_COMPRESSED_BLOCK_SIZE 0x912E
#endif

#ifndef GL_NUM_SAMPLE_COUNTS
#define GL_NUM_SAMPLE_COUNTS 0x9380
#endif

#ifndef GL_MIN_MAP_BUFFER_ALIGNMENT
#define GL_MIN_MAP_BUFFER_ALIGNMENT 0x90BC
#endif

#ifndef GL_ATOMIC_COUNTER_BUFFER
#define GL_ATOMIC_COUNTER_BUFFER 0x92C0
#endif

#ifndef GL_ATOMIC_COUNTER_BUFFER_BINDING
#define GL_ATOMIC_COUNTER_BUFFER_BINDING 0x92C1
#endif

#ifndef GL_ATOMIC_COUNTER_BUFFER_START
#define GL_ATOMIC_COUNTER_BUFFER_START 0x92C2
#endif

#ifndef GL_ATOMIC_COUNTER_BUFFER_SIZE
#define GL_ATOMIC_COUNTER_BUFFER_SIZE 0x92C3
#endif

#ifndef GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE
#define GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE 0x92C4
#endif

#ifndef GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS
#define GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS 0x92C5
#endif

#ifndef GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES
#define GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES 0x92C6
#endif

#ifndef GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER 0x92C7
#endif

#ifndef GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER 0x92C8
#endif

#ifndef GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER 0x92C9
#endif

#ifndef GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER 0x92CA
#endif

#ifndef GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER 0x92CB
#endif

#ifndef GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS
#define GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS 0x92CC
#endif

#ifndef GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS
#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS 0x92CD
#endif

#ifndef GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS
#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS 0x92CE
#endif

#ifndef GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS
#define GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS 0x92CF
#endif

#ifndef GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS
#define GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS 0x92D0
#endif

#ifndef GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS
#define GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS 0x92D1
#endif

#ifndef GL_MAX_VERTEX_ATOMIC_COUNTERS
#define GL_MAX_VERTEX_ATOMIC_COUNTERS 0x92D2
#endif

#ifndef GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS
#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS 0x92D3
#endif

#ifndef GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS
#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS 0x92D4
#endif

#ifndef GL_MAX_GEOMETRY_ATOMIC_COUNTERS
#define GL_MAX_GEOMETRY_ATOMIC_COUNTERS 0x92D5
#endif

#ifndef GL_MAX_FRAGMENT_ATOMIC_COUNTERS
#define GL_MAX_FRAGMENT_ATOMIC_COUNTERS 0x92D6
#endif

#ifndef GL_MAX_COMBINED_ATOMIC_COUNTERS
#define GL_MAX_COMBINED_ATOMIC_COUNTERS 0x92D7
#endif

#ifndef GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE
#define GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE 0x92D8
#endif

#ifndef GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS
#define GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS 0x92DC
#endif

#ifndef GL_ACTIVE_ATOMIC_COUNTER_BUFFERS
#define GL_ACTIVE_ATOMIC_COUNTER_BUFFERS 0x92D9
#endif

#ifndef GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX
#define GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX 0x92DA
#endif

#ifndef GL_UNSIGNED_INT_ATOMIC_COUNTER
#define GL_UNSIGNED_INT_ATOMIC_COUNTER 0x92DB
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT
#define GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT 0x00000001
#endif

#ifndef GL_ELEMENT_ARRAY_BARRIER_BIT
#define GL_ELEMENT_ARRAY_BARRIER_BIT 0x00000002
#endif

#ifndef GL_UNIFORM_BARRIER_BIT
#define GL_UNIFORM_BARRIER_BIT 0x00000004
#endif

#ifndef GL_TEXTURE_FETCH_BARRIER_BIT
#define GL_TEXTURE_FETCH_BARRIER_BIT 0x00000008
#endif

#ifndef GL_SHADER_IMAGE_ACCESS_BARRIER_BIT
#define GL_SHADER_IMAGE_ACCESS_BARRIER_BIT 0x00000020
#endif

#ifndef GL_COMMAND_BARRIER_BIT
#define GL_COMMAND_BARRIER_BIT 0x00000040
#endif

#ifndef GL_PIXEL_BUFFER_BARRIER_BIT
#define GL_PIXEL_BUFFER_BARRIER_BIT 0x00000080
#endif

#ifndef GL_TEXTURE_UPDATE_BARRIER_BIT
#define GL_TEXTURE_UPDATE_BARRIER_BIT 0x00000100
#endif

#ifndef GL_BUFFER_UPDATE_BARRIER_BIT
#define GL_BUFFER_UPDATE_BARRIER_BIT 0x00000200
#endif

#ifndef GL_FRAMEBUFFER_BARRIER_BIT
#define GL_FRAMEBUFFER_BARRIER_BIT 0x00000400
#endif

#ifndef GL_TRANSFORM_FEEDBACK_BARRIER_BIT
#define GL_TRANSFORM_FEEDBACK_BARRIER_BIT 0x00000800
#endif

#ifndef GL_ATOMIC_COUNTER_BARRIER_BIT
#define GL_ATOMIC_COUNTER_BARRIER_BIT 0x00001000
#endif

#ifndef GL_ALL_BARRIER_BITS
#define GL_ALL_BARRIER_BITS 0xFFFFFFFF
#endif

#ifndef GL_MAX_IMAGE_UNITS
#define GL_MAX_IMAGE_UNITS 0x8F38
#endif

#ifndef GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS
#define GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS 0x8F39
#endif

#ifndef GL_IMAGE_BINDING_NAME
#define GL_IMAGE_BINDING_NAME 0x8F3A
#endif

#ifndef GL_IMAGE_BINDING_LEVEL
#define GL_IMAGE_BINDING_LEVEL 0x8F3B
#endif

#ifndef GL_IMAGE_BINDING_LAYERED
#define GL_IMAGE_BINDING_LAYERED 0x8F3C
#endif

#ifndef GL_IMAGE_BINDING_LAYER
#define GL_IMAGE_BINDING_LAYER 0x8F3D
#endif

#ifndef GL_IMAGE_BINDING_ACCESS
#define GL_IMAGE_BINDING_ACCESS 0x8F3E
#endif

#ifndef GL_IMAGE_1D
#define GL_IMAGE_1D 0x904C
#endif

#ifndef GL_IMAGE_2D
#define GL_IMAGE_2D 0x904D
#endif

#ifndef GL_IMAGE_3D
#define GL_IMAGE_3D 0x904E
#endif

#ifndef GL_IMAGE_2D_RECT
#define GL_IMAGE_2D_RECT 0x904F
#endif

#ifndef GL_IMAGE_CUBE
#define GL_IMAGE_CUBE 0x9050
#endif

#ifndef GL_IMAGE_BUFFER
#define GL_IMAGE_BUFFER 0x9051
#endif

#ifndef GL_IMAGE_1D_ARRAY
#define GL_IMAGE_1D_ARRAY 0x9052
#endif

#ifndef GL_IMAGE_2D_ARRAY
#define GL_IMAGE_2D_ARRAY 0x9053
#endif

#ifndef GL_IMAGE_CUBE_MAP_ARRAY
#define GL_IMAGE_CUBE_MAP_ARRAY 0x9054
#endif

#ifndef GL_IMAGE_2D_MULTISAMPLE
#define GL_IMAGE_2D_MULTISAMPLE 0x9055
#endif

#ifndef GL_IMAGE_2D_MULTISAMPLE_ARRAY
#define GL_IMAGE_2D_MULTISAMPLE_ARRAY 0x9056
#endif

#ifndef GL_INT_IMAGE_1D
#define GL_INT_IMAGE_1D 0x9057
#endif

#ifndef GL_INT_IMAGE_2D
#define GL_INT_IMAGE_2D 0x9058
#endif

#ifndef GL_INT_IMAGE_3D
#define GL_INT_IMAGE_3D 0x9059
#endif

#ifndef GL_INT_IMAGE_2D_RECT
#define GL_INT_IMAGE_2D_RECT 0x905A
#endif

#ifndef GL_INT_IMAGE_CUBE
#define GL_INT_IMAGE_CUBE 0x905B
#endif

#ifndef GL_INT_IMAGE_BUFFER
#define GL_INT_IMAGE_BUFFER 0x905C
#endif

#ifndef GL_INT_IMAGE_1D_ARRAY
#define GL_INT_IMAGE_1D_ARRAY 0x905D
#endif

#ifndef GL_INT_IMAGE_2D_ARRAY
#define GL_INT_IMAGE_2D_ARRAY 0x905E
#endif

#ifndef GL_INT_IMAGE_CUBE_MAP_ARRAY
#define GL_INT_IMAGE_CUBE_MAP_ARRAY 0x905F
#endif

#ifndef GL_INT_IMAGE_2D_MULTISAMPLE
#define GL_INT_IMAGE_2D_MULTISAMPLE 0x9060
#endif

#ifndef GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY
#define GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY 0x9061
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_1D
#define GL_UNSIGNED_INT_IMAGE_1D 0x9062
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_2D
#define GL_UNSIGNED_INT_IMAGE_2D 0x9063
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_3D
#define GL_UNSIGNED_INT_IMAGE_3D 0x9064
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_2D_RECT
#define GL_UNSIGNED_INT_IMAGE_2D_RECT 0x9065
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_CUBE
#define GL_UNSIGNED_INT_IMAGE_CUBE 0x9066
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_BUFFER
#define GL_UNSIGNED_INT_IMAGE_BUFFER 0x9067
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_1D_ARRAY
#define GL_UNSIGNED_INT_IMAGE_1D_ARRAY 0x9068
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_2D_ARRAY
#define GL_UNSIGNED_INT_IMAGE_2D_ARRAY 0x9069
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY
#define GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY 0x906A
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE
#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE 0x906B
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY
#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY 0x906C
#endif

#ifndef GL_MAX_IMAGE_SAMPLES
#define GL_MAX_IMAGE_SAMPLES 0x906D
#endif

#ifndef GL_IMAGE_BINDING_FORMAT
#define GL_IMAGE_BINDING_FORMAT 0x906E
#endif

#ifndef GL_IMAGE_FORMAT_COMPATIBILITY_TYPE
#define GL_IMAGE_FORMAT_COMPATIBILITY_TYPE 0x90C7
#endif

#ifndef GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE
#define GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE 0x90C8
#endif

#ifndef GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS
#define GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS 0x90C9
#endif

#ifndef GL_MAX_VERTEX_IMAGE_UNIFORMS
#define GL_MAX_VERTEX_IMAGE_UNIFORMS 0x90CA
#endif

#ifndef GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS
#define GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS 0x90CB
#endif

#ifndef GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS
#define GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS 0x90CC
#endif

#ifndef GL_MAX_GEOMETRY_IMAGE_UNIFORMS
#define GL_MAX_GEOMETRY_IMAGE_UNIFORMS 0x90CD
#endif

#ifndef GL_MAX_FRAGMENT_IMAGE_UNIFORMS
#define GL_MAX_FRAGMENT_IMAGE_UNIFORMS 0x90CE
#endif

#ifndef GL_MAX_COMBINED_IMAGE_UNIFORMS
#define GL_MAX_COMBINED_IMAGE_UNIFORMS 0x90CF
#endif

#ifndef GL_TEXTURE_IMMUTABLE_FORMAT
#define GL_TEXTURE_IMMUTABLE_FORMAT 0x912F
#endif

#ifndef GL_COMPRESSED_RGBA_ASTC_4x4_KHR
#define GL_COMPRESSED_RGBA_ASTC_4x4_KHR 0x93B0
#endif

#ifndef GL_COMPRESSED_RGBA_ASTC_5x4_KHR
#define GL_COMPRESSED_RGBA_ASTC_5x4_KHR 0x93B1
#endif

#ifndef GL_COMPRESSED_RGBA_ASTC_5x5_KHR
#define GL_COMPRESSED_RGBA_ASTC_5x5_KHR 0x93B2
#endif

#ifndef GL_COMPRESSED_RGBA_ASTC_6x5_KHR
#define GL_COMPRESSED_RGBA_ASTC_6x5_KHR 0x93B3
#endif

#ifndef GL_COMPRESSED_RGBA_ASTC_6x6_KHR
#define GL_COMPRESSED_RGBA_ASTC_6x6_KHR 0x93B4
#endif

#ifndef GL_COMPRESSED_RGBA_ASTC_8x5_KHR
#define GL_COMPRESSED_RGBA_ASTC_8x5_KHR 0x93B5
#endif

#ifndef GL_COMPRESSED_RGBA_ASTC_8x6_KHR
#define GL_COMPRESSED_RGBA_ASTC_8x6_KHR 0x93B6
#endif

#ifndef GL_COMPRESSED_RGBA_ASTC_8x8_KHR
#define GL_COMPRESSED_RGBA_ASTC_8x8_KHR 0x93B7
#endif

#ifndef GL_COMPRESSED_RGBA_ASTC_10x5_KHR
#define GL_COMPRESSED_RGBA_ASTC_10x5_KHR 0x93B8
#endif

#ifndef GL_COMPRESSED_RGBA_ASTC_10x6_KHR
#define GL_COMPRESSED_RGBA_ASTC_10x6_KHR 0x93B9
#endif

#ifndef GL_COMPRESSED_RGBA_ASTC_10x8_KHR
#define GL_COMPRESSED_RGBA_ASTC_10x8_KHR 0x93BA
#endif

#ifndef GL_COMPRESSED_RGBA_ASTC_10x10_KHR
#define GL_COMPRESSED_RGBA_ASTC_10x10_KHR 0x93BB
#endif

#ifndef GL_COMPRESSED_RGBA_ASTC_12x10_KHR
#define GL_COMPRESSED_RGBA_ASTC_12x10_KHR 0x93BC
#endif

#ifndef GL_COMPRESSED_RGBA_ASTC_12x12_KHR
#define GL_COMPRESSED_RGBA_ASTC_12x12_KHR 0x93BD
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR 0x93D0
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR 0x93D1
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR 0x93D2
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR 0x93D3
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR 0x93D4
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR 0x93D5
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR 0x93D6
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR 0x93D7
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR 0x93D8
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR 0x93D9
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR 0x93DA
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR 0x93DB
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR 0x93DC
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR 0x93DD
#endif

#ifndef GL_DEBUG_OUTPUT_SYNCHRONOUS
#define GL_DEBUG_OUTPUT_SYNCHRONOUS 0x8242
#endif

#ifndef GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH
#define GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH 0x8243
#endif

#ifndef GL_DEBUG_CALLBACK_FUNCTION
#define GL_DEBUG_CALLBACK_FUNCTION 0x8244
#endif

#ifndef GL_DEBUG_CALLBACK_USER_PARAM
#define GL_DEBUG_CALLBACK_USER_PARAM 0x8245
#endif

#ifndef GL_DEBUG_SOURCE_API
#define GL_DEBUG_SOURCE_API 0x8246
#endif

#ifndef GL_DEBUG_SOURCE_WINDOW_SYSTEM
#define GL_DEBUG_SOURCE_WINDOW_SYSTEM 0x8247
#endif

#ifndef GL_DEBUG_SOURCE_SHADER_COMPILER
#define GL_DEBUG_SOURCE_SHADER_COMPILER 0x8248
#endif

#ifndef GL_DEBUG_SOURCE_THIRD_PARTY
#define GL_DEBUG_SOURCE_THIRD_PARTY 0x8249
#endif

#ifndef GL_DEBUG_SOURCE_APPLICATION
#define GL_DEBUG_SOURCE_APPLICATION 0x824A
#endif

#ifndef GL_DEBUG_SOURCE_OTHER
#define GL_DEBUG_SOURCE_OTHER 0x824B
#endif

#ifndef GL_DEBUG_TYPE_ERROR
#define GL_DEBUG_TYPE_ERROR 0x824C
#endif

#ifndef GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR
#define GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR 0x824D
#endif

#ifndef GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR
#define GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR 0x824E
#endif

#ifndef GL_DEBUG_TYPE_PORTABILITY
#define GL_DEBUG_TYPE_PORTABILITY 0x824F
#endif

#ifndef GL_DEBUG_TYPE_PERFORMANCE
#define GL_DEBUG_TYPE_PERFORMANCE 0x8250
#endif

#ifndef GL_DEBUG_TYPE_OTHER
#define GL_DEBUG_TYPE_OTHER 0x8251
#endif

#ifndef GL_DEBUG_TYPE_MARKER
#define GL_DEBUG_TYPE_MARKER 0x8268
#endif

#ifndef GL_DEBUG_TYPE_PUSH_GROUP
#define GL_DEBUG_TYPE_PUSH_GROUP 0x8269
#endif

#ifndef GL_DEBUG_TYPE_POP_GROUP
#define GL_DEBUG_TYPE_POP_GROUP 0x826A
#endif

#ifndef GL_DEBUG_SEVERITY_NOTIFICATION
#define GL_DEBUG_SEVERITY_NOTIFICATION 0x826B
#endif

#ifndef GL_MAX_DEBUG_GROUP_STACK_DEPTH
#define GL_MAX_DEBUG_GROUP_STACK_DEPTH 0x826C
#endif

#ifndef GL_DEBUG_GROUP_STACK_DEPTH
#define GL_DEBUG_GROUP_STACK_DEPTH 0x826D
#endif

#ifndef GL_BUFFER
#define GL_BUFFER 0x82E0
#endif

#ifndef GL_SHADER
#define GL_SHADER 0x82E1
#endif

#ifndef GL_PROGRAM
#define GL_PROGRAM 0x82E2
#endif

#ifndef GL_QUERY
#define GL_QUERY 0x82E3
#endif

#ifndef GL_PROGRAM_PIPELINE
#define GL_PROGRAM_PIPELINE 0x82E4
#endif

/* DISPLAY_LIST used in compatibility profile only */
#ifndef GL_MAX_LABEL_LENGTH
#define GL_MAX_LABEL_LENGTH 0x82E8
#endif

#ifndef GL_MAX_DEBUG_MESSAGE_LENGTH
#define GL_MAX_DEBUG_MESSAGE_LENGTH 0x9143
#endif

#ifndef GL_MAX_DEBUG_LOGGED_MESSAGES
#define GL_MAX_DEBUG_LOGGED_MESSAGES 0x9144
#endif

#ifndef GL_DEBUG_LOGGED_MESSAGES
#define GL_DEBUG_LOGGED_MESSAGES 0x9145
#endif

#ifndef GL_DEBUG_SEVERITY_HIGH
#define GL_DEBUG_SEVERITY_HIGH 0x9146
#endif

#ifndef GL_DEBUG_SEVERITY_MEDIUM
#define GL_DEBUG_SEVERITY_MEDIUM 0x9147
#endif

#ifndef GL_DEBUG_SEVERITY_LOW
#define GL_DEBUG_SEVERITY_LOW 0x9148
#endif

#ifndef GL_DEBUG_OUTPUT
#define GL_DEBUG_OUTPUT 0x92E0
#endif

#ifndef GL_CONTEXT_FLAG_DEBUG_BIT
#define GL_CONTEXT_FLAG_DEBUG_BIT 0x00000002
#endif

#ifndef GL_COMPUTE_SHADER
#define GL_COMPUTE_SHADER 0x91B9
#endif

#ifndef GL_MAX_COMPUTE_UNIFORM_BLOCKS
#define GL_MAX_COMPUTE_UNIFORM_BLOCKS 0x91BB
#endif

#ifndef GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS
#define GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS 0x91BC
#endif

#ifndef GL_MAX_COMPUTE_IMAGE_UNIFORMS
#define GL_MAX_COMPUTE_IMAGE_UNIFORMS 0x91BD
#endif

#ifndef GL_MAX_COMPUTE_SHARED_MEMORY_SIZE
#define GL_MAX_COMPUTE_SHARED_MEMORY_SIZE 0x8262
#endif

#ifndef GL_MAX_COMPUTE_UNIFORM_COMPONENTS
#define GL_MAX_COMPUTE_UNIFORM_COMPONENTS 0x8263
#endif

#ifndef GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS
#define GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS 0x8264
#endif

#ifndef GL_MAX_COMPUTE_ATOMIC_COUNTERS
#define GL_MAX_COMPUTE_ATOMIC_COUNTERS 0x8265
#endif

#ifndef GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS
#define GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS 0x8266
#endif

#ifndef GL_MAX_COMPUTE_LOCAL_INVOCATIONS
#define GL_MAX_COMPUTE_LOCAL_INVOCATIONS 0x90EB
#endif

#ifndef GL_MAX_COMPUTE_WORK_GROUP_COUNT
#define GL_MAX_COMPUTE_WORK_GROUP_COUNT 0x91BE
#endif

#ifndef GL_MAX_COMPUTE_WORK_GROUP_SIZE
#define GL_MAX_COMPUTE_WORK_GROUP_SIZE 0x91BF
#endif

#ifndef GL_COMPUTE_LOCAL_WORK_SIZE
#define GL_COMPUTE_LOCAL_WORK_SIZE 0x8267
#endif

#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER
#define GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER 0x90EC
#endif

#ifndef GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER 0x90ED
#endif

#ifndef GL_DISPATCH_INDIRECT_BUFFER
#define GL_DISPATCH_INDIRECT_BUFFER 0x90EE
#endif

#ifndef GL_DISPATCH_INDIRECT_BUFFER_BINDING
#define GL_DISPATCH_INDIRECT_BUFFER_BINDING 0x90EF
#endif

#ifndef GL_COMPUTE_SHADER_BIT
#define GL_COMPUTE_SHADER_BIT 0x00000020
#endif

#ifndef GL_TEXTURE_VIEW_MIN_LEVEL
#define GL_TEXTURE_VIEW_MIN_LEVEL 0x82DB
#endif

#ifndef GL_TEXTURE_VIEW_NUM_LEVELS
#define GL_TEXTURE_VIEW_NUM_LEVELS 0x82DC
#endif

#ifndef GL_TEXTURE_VIEW_MIN_LAYER
#define GL_TEXTURE_VIEW_MIN_LAYER 0x82DD
#endif

#ifndef GL_TEXTURE_VIEW_NUM_LAYERS
#define GL_TEXTURE_VIEW_NUM_LAYERS 0x82DE
#endif

#ifndef GL_TEXTURE_IMMUTABLE_LEVELS
#define GL_TEXTURE_IMMUTABLE_LEVELS 0x82DF
#endif

#ifndef GL_VERTEX_ATTRIB_BINDING
#define GL_VERTEX_ATTRIB_BINDING 0x82D4
#endif

#ifndef GL_VERTEX_ATTRIB_RELATIVE_OFFSET
#define GL_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D5
#endif

#ifndef GL_VERTEX_BINDING_DIVISOR
#define GL_VERTEX_BINDING_DIVISOR 0x82D6
#endif

#ifndef GL_VERTEX_BINDING_OFFSET
#define GL_VERTEX_BINDING_OFFSET 0x82D7
#endif

#ifndef GL_VERTEX_BINDING_STRIDE
#define GL_VERTEX_BINDING_STRIDE 0x82D8
#endif

#ifndef GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET
#define GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D9
#endif

#ifndef GL_MAX_VERTEX_ATTRIB_BINDINGS
#define GL_MAX_VERTEX_ATTRIB_BINDINGS 0x82DA
#endif

#ifndef GL_COMPRESSED_RGB8_ETC2
#define GL_COMPRESSED_RGB8_ETC2 0x9274
#endif

#ifndef GL_COMPRESSED_SRGB8_ETC2
#define GL_COMPRESSED_SRGB8_ETC2 0x9275
#endif

#ifndef GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2
#define GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 0x9276
#endif

#ifndef GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2
#define GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 0x9277
#endif

#ifndef GL_COMPRESSED_RGBA8_ETC2_EAC
#define GL_COMPRESSED_RGBA8_ETC2_EAC 0x9278
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC
#define GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC 0x9279
#endif

#ifndef GL_COMPRESSED_R11_EAC
#define GL_COMPRESSED_R11_EAC 0x9270
#endif

#ifndef GL_COMPRESSED_SIGNED_R11_EAC
#define GL_COMPRESSED_SIGNED_R11_EAC 0x9271
#endif

#ifndef GL_COMPRESSED_RG11_EAC
#define GL_COMPRESSED_RG11_EAC 0x9272
#endif

#ifndef GL_COMPRESSED_SIGNED_RG11_EAC
#define GL_COMPRESSED_SIGNED_RG11_EAC 0x9273
#endif

#ifndef GL_PRIMITIVE_RESTART_FIXED_INDEX
#define GL_PRIMITIVE_RESTART_FIXED_INDEX 0x8D69
#endif

#ifndef GL_ANY_SAMPLES_PASSED_CONSERVATIVE
#define GL_ANY_SAMPLES_PASSED_CONSERVATIVE 0x8D6A
#endif

#ifndef GL_MAX_ELEMENT_INDEX
#define GL_MAX_ELEMENT_INDEX 0x8D6B
#endif

#ifndef GL_MAX_UNIFORM_LOCATIONS
#define GL_MAX_UNIFORM_LOCATIONS 0x826E
#endif

#ifndef GL_FRAMEBUFFER_DEFAULT_WIDTH
#define GL_FRAMEBUFFER_DEFAULT_WIDTH 0x9310
#endif

#ifndef GL_FRAMEBUFFER_DEFAULT_HEIGHT
#define GL_FRAMEBUFFER_DEFAULT_HEIGHT 0x9311
#endif

#ifndef GL_FRAMEBUFFER_DEFAULT_LAYERS
#define GL_FRAMEBUFFER_DEFAULT_LAYERS 0x9312
#endif

#ifndef GL_FRAMEBUFFER_DEFAULT_SAMPLES
#define GL_FRAMEBUFFER_DEFAULT_SAMPLES 0x9313
#endif

#ifndef GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS
#define GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS 0x9314
#endif

#ifndef GL_MAX_FRAMEBUFFER_WIDTH
#define GL_MAX_FRAMEBUFFER_WIDTH 0x9315
#endif

#ifndef GL_MAX_FRAMEBUFFER_HEIGHT
#define GL_MAX_FRAMEBUFFER_HEIGHT 0x9316
#endif

#ifndef GL_MAX_FRAMEBUFFER_LAYERS
#define GL_MAX_FRAMEBUFFER_LAYERS 0x9317
#endif

#ifndef GL_MAX_FRAMEBUFFER_SAMPLES
#define GL_MAX_FRAMEBUFFER_SAMPLES 0x9318
#endif

#ifndef GL_INTERNALFORMAT_SUPPORTED
#define GL_INTERNALFORMAT_SUPPORTED 0x826F
#endif

#ifndef GL_INTERNALFORMAT_PREFERRED
#define GL_INTERNALFORMAT_PREFERRED 0x8270
#endif

#ifndef GL_INTERNALFORMAT_RED_SIZE
#define GL_INTERNALFORMAT_RED_SIZE 0x8271
#endif

#ifndef GL_INTERNALFORMAT_GREEN_SIZE
#define GL_INTERNALFORMAT_GREEN_SIZE 0x8272
#endif

#ifndef GL_INTERNALFORMAT_BLUE_SIZE
#define GL_INTERNALFORMAT_BLUE_SIZE 0x8273
#endif

#ifndef GL_INTERNALFORMAT_ALPHA_SIZE
#define GL_INTERNALFORMAT_ALPHA_SIZE 0x8274
#endif

#ifndef GL_INTERNALFORMAT_DEPTH_SIZE
#define GL_INTERNALFORMAT_DEPTH_SIZE 0x8275
#endif

#ifndef GL_INTERNALFORMAT_STENCIL_SIZE
#define GL_INTERNALFORMAT_STENCIL_SIZE 0x8276
#endif

#ifndef GL_INTERNALFORMAT_SHARED_SIZE
#define GL_INTERNALFORMAT_SHARED_SIZE 0x8277
#endif

#ifndef GL_INTERNALFORMAT_RED_TYPE
#define GL_INTERNALFORMAT_RED_TYPE 0x8278
#endif

#ifndef GL_INTERNALFORMAT_GREEN_TYPE
#define GL_INTERNALFORMAT_GREEN_TYPE 0x8279
#endif

#ifndef GL_INTERNALFORMAT_BLUE_TYPE
#define GL_INTERNALFORMAT_BLUE_TYPE 0x827A
#endif

#ifndef GL_INTERNALFORMAT_ALPHA_TYPE
#define GL_INTERNALFORMAT_ALPHA_TYPE 0x827B
#endif

#ifndef GL_INTERNALFORMAT_DEPTH_TYPE
#define GL_INTERNALFORMAT_DEPTH_TYPE 0x827C
#endif

#ifndef GL_INTERNALFORMAT_STENCIL_TYPE
#define GL_INTERNALFORMAT_STENCIL_TYPE 0x827D
#endif

#ifndef GL_MAX_WIDTH
#define GL_MAX_WIDTH 0x827E
#endif

#ifndef GL_MAX_HEIGHT
#define GL_MAX_HEIGHT 0x827F
#endif

#ifndef GL_MAX_DEPTH
#define GL_MAX_DEPTH 0x8280
#endif

#ifndef GL_MAX_LAYERS
#define GL_MAX_LAYERS 0x8281
#endif

#ifndef GL_MAX_COMBINED_DIMENSIONS
#define GL_MAX_COMBINED_DIMENSIONS 0x8282
#endif

#ifndef GL_COLOR_COMPONENTS
#define GL_COLOR_COMPONENTS 0x8283
#endif

#ifndef GL_DEPTH_COMPONENTS
#define GL_DEPTH_COMPONENTS 0x8284
#endif

#ifndef GL_STENCIL_COMPONENTS
#define GL_STENCIL_COMPONENTS 0x8285
#endif

#ifndef GL_COLOR_RENDERABLE
#define GL_COLOR_RENDERABLE 0x8286
#endif

#ifndef GL_DEPTH_RENDERABLE
#define GL_DEPTH_RENDERABLE 0x8287
#endif

#ifndef GL_STENCIL_RENDERABLE
#define GL_STENCIL_RENDERABLE 0x8288
#endif

#ifndef GL_FRAMEBUFFER_RENDERABLE
#define GL_FRAMEBUFFER_RENDERABLE 0x8289
#endif

#ifndef GL_FRAMEBUFFER_RENDERABLE_LAYERED
#define GL_FRAMEBUFFER_RENDERABLE_LAYERED 0x828A
#endif

#ifndef GL_FRAMEBUFFER_BLEND
#define GL_FRAMEBUFFER_BLEND 0x828B
#endif

#ifndef GL_READ_PIXELS
#define GL_READ_PIXELS 0x828C
#endif

#ifndef GL_READ_PIXELS_FORMAT
#define GL_READ_PIXELS_FORMAT 0x828D
#endif

#ifndef GL_READ_PIXELS_TYPE
#define GL_READ_PIXELS_TYPE 0x828E
#endif

#ifndef GL_TEXTURE_IMAGE_FORMAT
#define GL_TEXTURE_IMAGE_FORMAT 0x828F
#endif

#ifndef GL_TEXTURE_IMAGE_TYPE
#define GL_TEXTURE_IMAGE_TYPE 0x8290
#endif

#ifndef GL_GET_TEXTURE_IMAGE_FORMAT
#define GL_GET_TEXTURE_IMAGE_FORMAT 0x8291
#endif

#ifndef GL_GET_TEXTURE_IMAGE_TYPE
#define GL_GET_TEXTURE_IMAGE_TYPE 0x8292
#endif

#ifndef GL_MIPMAP
#define GL_MIPMAP 0x8293
#endif

#ifndef GL_MANUAL_GENERATE_MIPMAP
#define GL_MANUAL_GENERATE_MIPMAP 0x8294
#endif

#ifndef GL_UNIFORM
#define GL_UNIFORM 0x92E1
#endif

#ifndef GL_UNIFORM_BLOCK
#define GL_UNIFORM_BLOCK 0x92E2
#endif

#ifndef GL_PROGRAM_INPUT
#define GL_PROGRAM_INPUT 0x92E3
#endif

#ifndef GL_PROGRAM_OUTPUT
#define GL_PROGRAM_OUTPUT 0x92E4
#endif

#ifndef GL_BUFFER_VARIABLE
#define GL_BUFFER_VARIABLE 0x92E5
#endif

#ifndef GL_SHADER_STORAGE_BLOCK
#define GL_SHADER_STORAGE_BLOCK 0x92E6
#endif

#ifndef GL_VERTEX_SUBROUTINE
#define GL_VERTEX_SUBROUTINE 0x92E8
#endif

#ifndef GL_TESS_CONTROL_SUBROUTINE
#define GL_TESS_CONTROL_SUBROUTINE 0x92E9
#endif

#ifndef GL_TESS_EVALUATION_SUBROUTINE
#define GL_TESS_EVALUATION_SUBROUTINE 0x92EA
#endif

#ifndef GL_GEOMETRY_SUBROUTINE
#define GL_GEOMETRY_SUBROUTINE 0x92EB
#endif

#ifndef GL_FRAGMENT_SUBROUTINE
#define GL_FRAGMENT_SUBROUTINE 0x92EC
#endif

#ifndef GL_COMPUTE_SUBROUTINE
#define GL_COMPUTE_SUBROUTINE 0x92ED
#endif

#ifndef GL_VERTEX_SUBROUTINE_UNIFORM
#define GL_VERTEX_SUBROUTINE_UNIFORM 0x92EE
#endif

#ifndef GL_TESS_CONTROL_SUBROUTINE_UNIFORM
#define GL_TESS_CONTROL_SUBROUTINE_UNIFORM 0x92EF
#endif

#ifndef GL_TESS_EVALUATION_SUBROUTINE_UNIFORM
#define GL_TESS_EVALUATION_SUBROUTINE_UNIFORM 0x92F0
#endif

#ifndef GL_GEOMETRY_SUBROUTINE_UNIFORM
#define GL_GEOMETRY_SUBROUTINE_UNIFORM 0x92F1
#endif

#ifndef GL_FRAGMENT_SUBROUTINE_UNIFORM
#define GL_FRAGMENT_SUBROUTINE_UNIFORM 0x92F2
#endif

#ifndef GL_COMPUTE_SUBROUTINE_UNIFORM
#define GL_COMPUTE_SUBROUTINE_UNIFORM 0x92F3
#endif

#ifndef GL_TRANSFORM_FEEDBACK_VARYING
#define GL_TRANSFORM_FEEDBACK_VARYING 0x92F4
#endif

#ifndef GL_ACTIVE_RESOURCES
#define GL_ACTIVE_RESOURCES 0x92F5
#endif

#ifndef GL_MAX_NAME_LENGTH
#define GL_MAX_NAME_LENGTH 0x92F6
#endif

#ifndef GL_MAX_NUM_ACTIVE_VARIABLES
#define GL_MAX_NUM_ACTIVE_VARIABLES 0x92F7
#endif

#ifndef GL_MAX_NUM_COMPATIBLE_SUBROUTINES
#define GL_MAX_NUM_COMPATIBLE_SUBROUTINES 0x92F8
#endif

#ifndef GL_NAME_LENGTH
#define GL_NAME_LENGTH 0x92F9
#endif

#ifndef GL_TYPE
#define GL_TYPE 0x92FA
#endif

#ifndef GL_ARRAY_SIZE
#define GL_ARRAY_SIZE 0x92FB
#endif

#ifndef GL_OFFSET
#define GL_OFFSET 0x92FC
#endif

#ifndef GL_BLOCK_INDEX
#define GL_BLOCK_INDEX 0x92FD
#endif

#ifndef GL_ARRAY_STRIDE
#define GL_ARRAY_STRIDE 0x92FE
#endif

#ifndef GL_MATRIX_STRIDE
#define GL_MATRIX_STRIDE 0x92FF
#endif

#ifndef GL_IS_ROW_MAJOR
#define GL_IS_ROW_MAJOR 0x9300
#endif

#ifndef GL_ATOMIC_COUNTER_BUFFER_INDEX
#define GL_ATOMIC_COUNTER_BUFFER_INDEX 0x9301
#endif

#ifndef GL_BUFFER_BINDING
#define GL_BUFFER_BINDING 0x9302
#endif

#ifndef GL_BUFFER_DATA_SIZE
#define GL_BUFFER_DATA_SIZE 0x9303
#endif

#ifndef GL_NUM_ACTIVE_VARIABLES
#define GL_NUM_ACTIVE_VARIABLES 0x9304
#endif

#ifndef GL_ACTIVE_VARIABLES
#define GL_ACTIVE_VARIABLES 0x9305
#endif

#ifndef GL_REFERENCED_BY_VERTEX_SHADER
#define GL_REFERENCED_BY_VERTEX_SHADER 0x9306
#endif

#ifndef GL_REFERENCED_BY_TESS_CONTROL_SHADER
#define GL_REFERENCED_BY_TESS_CONTROL_SHADER 0x9307
#endif

#ifndef GL_REFERENCED_BY_TESS_EVALUATION_SHADER
#define GL_REFERENCED_BY_TESS_EVALUATION_SHADER 0x9308
#endif

#ifndef GL_REFERENCED_BY_GEOMETRY_SHADER
#define GL_REFERENCED_BY_GEOMETRY_SHADER 0x9309
#endif

#ifndef GL_REFERENCED_BY_FRAGMENT_SHADER
#define GL_REFERENCED_BY_FRAGMENT_SHADER 0x930A
#endif

#ifndef GL_REFERENCED_BY_COMPUTE_SHADER
#define GL_REFERENCED_BY_COMPUTE_SHADER 0x930B
#endif

#ifndef GL_TOP_LEVEL_ARRAY_SIZE
#define GL_TOP_LEVEL_ARRAY_SIZE 0x930C
#endif

#ifndef GL_TOP_LEVEL_ARRAY_STRIDE
#define GL_TOP_LEVEL_ARRAY_STRIDE 0x930D
#endif

#ifndef GL_LOCATION
#define GL_LOCATION 0x930E
#endif

#ifndef GL_LOCATION_INDEX
#define GL_LOCATION_INDEX 0x930F
#endif

#ifndef GL_IS_PER_PATCH
#define GL_IS_PER_PATCH 0x92E7
#endif

#ifndef GL_SHADER_STORAGE_BUFFER
#define GL_SHADER_STORAGE_BUFFER 0x90D2
#endif

#ifndef GL_SHADER_STORAGE_BUFFER_BINDING
#define GL_SHADER_STORAGE_BUFFER_BINDING 0x90D3
#endif

#ifndef GL_SHADER_STORAGE_BUFFER_START
#define GL_SHADER_STORAGE_BUFFER_START 0x90D4
#endif

#ifndef GL_SHADER_STORAGE_BUFFER_SIZE
#define GL_SHADER_STORAGE_BUFFER_SIZE 0x90D5
#endif

#ifndef GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS
#define GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS 0x90D6
#endif

#ifndef GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS
#define GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS 0x90D7
#endif

#ifndef GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS
#define GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS 0x90D8
#endif

#ifndef GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS
#define GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS 0x90D9
#endif

#ifndef GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS
#define GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS 0x90DA
#endif

#ifndef GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS
#define GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS 0x90DB
#endif

#ifndef GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS
#define GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS 0x90DC
#endif

#ifndef GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS
#define GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS 0x90DD
#endif

#ifndef GL_MAX_SHADER_STORAGE_BLOCK_SIZE
#define GL_MAX_SHADER_STORAGE_BLOCK_SIZE 0x90DE
#endif

#ifndef GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT
#define GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT 0x90DF
#endif

#ifndef GL_SHADER_STORAGE_BARRIER_BIT
#define GL_SHADER_STORAGE_BARRIER_BIT 0x2000
#endif

#ifndef GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES
#define GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS
#endif

#ifndef GL_DEPTH_STENCIL_TEXTURE_MODE
#define GL_DEPTH_STENCIL_TEXTURE_MODE 0x90EA
#endif

#ifndef GL_TEXTURE_BUFFER_OFFSET
#define GL_TEXTURE_BUFFER_OFFSET 0x919D
#endif

#ifndef GL_TEXTURE_BUFFER_SIZE
#define GL_TEXTURE_BUFFER_SIZE 0x919E
#endif

#ifndef GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT
#define GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT 0x919F
#endif

#ifndef GL_ABGR_EXT
#define GL_ABGR_EXT 0x8000
#endif

#ifndef GL_CONSTANT_COLOR_EXT
#define GL_CONSTANT_COLOR_EXT 0x8001
#endif

#ifndef GL_ONE_MINUS_CONSTANT_COLOR_EXT
#define GL_ONE_MINUS_CONSTANT_COLOR_EXT 0x8002
#endif

#ifndef GL_CONSTANT_ALPHA_EXT
#define GL_CONSTANT_ALPHA_EXT 0x8003
#endif

#ifndef GL_ONE_MINUS_CONSTANT_ALPHA_EXT
#define GL_ONE_MINUS_CONSTANT_ALPHA_EXT 0x8004
#endif

#ifndef GL_BLEND_COLOR_EXT
#define GL_BLEND_COLOR_EXT 0x8005
#endif

#ifndef GL_POLYGON_OFFSET_EXT
#define GL_POLYGON_OFFSET_EXT 0x8037
#endif

#ifndef GL_POLYGON_OFFSET_FACTOR_EXT
#define GL_POLYGON_OFFSET_FACTOR_EXT 0x8038
#endif

#ifndef GL_POLYGON_OFFSET_BIAS_EXT
#define GL_POLYGON_OFFSET_BIAS_EXT 0x8039
#endif

#ifndef GL_ALPHA4_EXT
#define GL_ALPHA4_EXT 0x803B
#endif

#ifndef GL_ALPHA8_EXT
#define GL_ALPHA8_EXT 0x803C
#endif

#ifndef GL_ALPHA12_EXT
#define GL_ALPHA12_EXT 0x803D
#endif

#ifndef GL_ALPHA16_EXT
#define GL_ALPHA16_EXT 0x803E
#endif

#ifndef GL_LUMINANCE4_EXT
#define GL_LUMINANCE4_EXT 0x803F
#endif

#ifndef GL_LUMINANCE8_EXT
#define GL_LUMINANCE8_EXT 0x8040
#endif

#ifndef GL_LUMINANCE12_EXT
#define GL_LUMINANCE12_EXT 0x8041
#endif

#ifndef GL_LUMINANCE16_EXT
#define GL_LUMINANCE16_EXT 0x8042
#endif

#ifndef GL_LUMINANCE4_ALPHA4_EXT
#define GL_LUMINANCE4_ALPHA4_EXT 0x8043
#endif

#ifndef GL_LUMINANCE6_ALPHA2_EXT
#define GL_LUMINANCE6_ALPHA2_EXT 0x8044
#endif

#ifndef GL_LUMINANCE8_ALPHA8_EXT
#define GL_LUMINANCE8_ALPHA8_EXT 0x8045
#endif

#ifndef GL_LUMINANCE12_ALPHA4_EXT
#define GL_LUMINANCE12_ALPHA4_EXT 0x8046
#endif

#ifndef GL_LUMINANCE12_ALPHA12_EXT
#define GL_LUMINANCE12_ALPHA12_EXT 0x8047
#endif

#ifndef GL_LUMINANCE16_ALPHA16_EXT
#define GL_LUMINANCE16_ALPHA16_EXT 0x8048
#endif

#ifndef GL_INTENSITY_EXT
#define GL_INTENSITY_EXT 0x8049
#endif

#ifndef GL_INTENSITY4_EXT
#define GL_INTENSITY4_EXT 0x804A
#endif

#ifndef GL_INTENSITY8_EXT
#define GL_INTENSITY8_EXT 0x804B
#endif

#ifndef GL_INTENSITY12_EXT
#define GL_INTENSITY12_EXT 0x804C
#endif

#ifndef GL_INTENSITY16_EXT
#define GL_INTENSITY16_EXT 0x804D
#endif

#ifndef GL_RGB2_EXT
#define GL_RGB2_EXT 0x804E
#endif

#ifndef GL_RGB4_EXT
#define GL_RGB4_EXT 0x804F
#endif

#ifndef GL_RGB5_EXT
#define GL_RGB5_EXT 0x8050
#endif

#ifndef GL_RGB8_EXT
#define GL_RGB8_EXT 0x8051
#endif

#ifndef GL_RGB10_EXT
#define GL_RGB10_EXT 0x8052
#endif

#ifndef GL_RGB12_EXT
#define GL_RGB12_EXT 0x8053
#endif

#ifndef GL_RGB16_EXT
#define GL_RGB16_EXT 0x8054
#endif

#ifndef GL_RGBA2_EXT
#define GL_RGBA2_EXT 0x8055
#endif

#ifndef GL_RGBA4_EXT
#define GL_RGBA4_EXT 0x8056
#endif

#ifndef GL_RGB5_A1_EXT
#define GL_RGB5_A1_EXT 0x8057
#endif

#ifndef GL_RGBA8_EXT
#define GL_RGBA8_EXT 0x8058
#endif

#ifndef GL_RGB10_A2_EXT
#define GL_RGB10_A2_EXT 0x8059
#endif

#ifndef GL_RGBA12_EXT
#define GL_RGBA12_EXT 0x805A
#endif

#ifndef GL_RGBA16_EXT
#define GL_RGBA16_EXT 0x805B
#endif

#ifndef GL_TEXTURE_RED_SIZE_EXT
#define GL_TEXTURE_RED_SIZE_EXT 0x805C
#endif

#ifndef GL_TEXTURE_GREEN_SIZE_EXT
#define GL_TEXTURE_GREEN_SIZE_EXT 0x805D
#endif

#ifndef GL_TEXTURE_BLUE_SIZE_EXT
#define GL_TEXTURE_BLUE_SIZE_EXT 0x805E
#endif

#ifndef GL_TEXTURE_ALPHA_SIZE_EXT
#define GL_TEXTURE_ALPHA_SIZE_EXT 0x805F
#endif

#ifndef GL_TEXTURE_LUMINANCE_SIZE_EXT
#define GL_TEXTURE_LUMINANCE_SIZE_EXT 0x8060
#endif

#ifndef GL_TEXTURE_INTENSITY_SIZE_EXT
#define GL_TEXTURE_INTENSITY_SIZE_EXT 0x8061
#endif

#ifndef GL_REPLACE_EXT
#define GL_REPLACE_EXT 0x8062
#endif

#ifndef GL_PROXY_TEXTURE_1D_EXT
#define GL_PROXY_TEXTURE_1D_EXT 0x8063
#endif

#ifndef GL_PROXY_TEXTURE_2D_EXT
#define GL_PROXY_TEXTURE_2D_EXT 0x8064
#endif

#ifndef GL_TEXTURE_TOO_LARGE_EXT
#define GL_TEXTURE_TOO_LARGE_EXT 0x8065
#endif

#ifndef GL_PACK_SKIP_IMAGES_EXT
#define GL_PACK_SKIP_IMAGES_EXT 0x806B
#endif

#ifndef GL_PACK_IMAGE_HEIGHT_EXT
#define GL_PACK_IMAGE_HEIGHT_EXT 0x806C
#endif

#ifndef GL_UNPACK_SKIP_IMAGES_EXT
#define GL_UNPACK_SKIP_IMAGES_EXT 0x806D
#endif

#ifndef GL_UNPACK_IMAGE_HEIGHT_EXT
#define GL_UNPACK_IMAGE_HEIGHT_EXT 0x806E
#endif

#ifndef GL_TEXTURE_3D_EXT
#define GL_TEXTURE_3D_EXT 0x806F
#endif

#ifndef GL_PROXY_TEXTURE_3D_EXT
#define GL_PROXY_TEXTURE_3D_EXT 0x8070
#endif

#ifndef GL_TEXTURE_DEPTH_EXT
#define GL_TEXTURE_DEPTH_EXT 0x8071
#endif

#ifndef GL_TEXTURE_WRAP_R_EXT
#define GL_TEXTURE_WRAP_R_EXT 0x8072
#endif

#ifndef GL_MAX_3D_TEXTURE_SIZE_EXT
#define GL_MAX_3D_TEXTURE_SIZE_EXT 0x8073
#endif

#ifndef GL_FILTER4_SGIS
#define GL_FILTER4_SGIS 0x8146
#endif

#ifndef GL_TEXTURE_FILTER4_SIZE_SGIS
#define GL_TEXTURE_FILTER4_SIZE_SGIS 0x8147
#endif

#ifndef GL_HISTOGRAM_EXT
#define GL_HISTOGRAM_EXT 0x8024
#endif

#ifndef GL_PROXY_HISTOGRAM_EXT
#define GL_PROXY_HISTOGRAM_EXT 0x8025
#endif

#ifndef GL_HISTOGRAM_WIDTH_EXT
#define GL_HISTOGRAM_WIDTH_EXT 0x8026
#endif

#ifndef GL_HISTOGRAM_FORMAT_EXT
#define GL_HISTOGRAM_FORMAT_EXT 0x8027
#endif

#ifndef GL_HISTOGRAM_RED_SIZE_EXT
#define GL_HISTOGRAM_RED_SIZE_EXT 0x8028
#endif

#ifndef GL_HISTOGRAM_GREEN_SIZE_EXT
#define GL_HISTOGRAM_GREEN_SIZE_EXT 0x8029
#endif

#ifndef GL_HISTOGRAM_BLUE_SIZE_EXT
#define GL_HISTOGRAM_BLUE_SIZE_EXT 0x802A
#endif

#ifndef GL_HISTOGRAM_ALPHA_SIZE_EXT
#define GL_HISTOGRAM_ALPHA_SIZE_EXT 0x802B
#endif

#ifndef GL_HISTOGRAM_LUMINANCE_SIZE_EXT
#define GL_HISTOGRAM_LUMINANCE_SIZE_EXT 0x802C
#endif

#ifndef GL_HISTOGRAM_SINK_EXT
#define GL_HISTOGRAM_SINK_EXT 0x802D
#endif

#ifndef GL_MINMAX_EXT
#define GL_MINMAX_EXT 0x802E
#endif

#ifndef GL_MINMAX_FORMAT_EXT
#define GL_MINMAX_FORMAT_EXT 0x802F
#endif

#ifndef GL_MINMAX_SINK_EXT
#define GL_MINMAX_SINK_EXT 0x8030
#endif

#ifndef GL_TABLE_TOO_LARGE_EXT
#define GL_TABLE_TOO_LARGE_EXT 0x8031
#endif

#ifndef GL_CONVOLUTION_1D_EXT
#define GL_CONVOLUTION_1D_EXT 0x8010
#endif

#ifndef GL_CONVOLUTION_2D_EXT
#define GL_CONVOLUTION_2D_EXT 0x8011
#endif

#ifndef GL_SEPARABLE_2D_EXT
#define GL_SEPARABLE_2D_EXT 0x8012
#endif

#ifndef GL_CONVOLUTION_BORDER_MODE_EXT
#define GL_CONVOLUTION_BORDER_MODE_EXT 0x8013
#endif

#ifndef GL_CONVOLUTION_FILTER_SCALE_EXT
#define GL_CONVOLUTION_FILTER_SCALE_EXT 0x8014
#endif

#ifndef GL_CONVOLUTION_FILTER_BIAS_EXT
#define GL_CONVOLUTION_FILTER_BIAS_EXT 0x8015
#endif

#ifndef GL_REDUCE_EXT
#define GL_REDUCE_EXT 0x8016
#endif

#ifndef GL_CONVOLUTION_FORMAT_EXT
#define GL_CONVOLUTION_FORMAT_EXT 0x8017
#endif

#ifndef GL_CONVOLUTION_WIDTH_EXT
#define GL_CONVOLUTION_WIDTH_EXT 0x8018
#endif

#ifndef GL_CONVOLUTION_HEIGHT_EXT
#define GL_CONVOLUTION_HEIGHT_EXT 0x8019
#endif

#ifndef GL_MAX_CONVOLUTION_WIDTH_EXT
#define GL_MAX_CONVOLUTION_WIDTH_EXT 0x801A
#endif

#ifndef GL_MAX_CONVOLUTION_HEIGHT_EXT
#define GL_MAX_CONVOLUTION_HEIGHT_EXT 0x801B
#endif

#ifndef GL_POST_CONVOLUTION_RED_SCALE_EXT
#define GL_POST_CONVOLUTION_RED_SCALE_EXT 0x801C
#endif

#ifndef GL_POST_CONVOLUTION_GREEN_SCALE_EXT
#define GL_POST_CONVOLUTION_GREEN_SCALE_EXT 0x801D
#endif

#ifndef GL_POST_CONVOLUTION_BLUE_SCALE_EXT
#define GL_POST_CONVOLUTION_BLUE_SCALE_EXT 0x801E
#endif

#ifndef GL_POST_CONVOLUTION_ALPHA_SCALE_EXT
#define GL_POST_CONVOLUTION_ALPHA_SCALE_EXT 0x801F
#endif

#ifndef GL_POST_CONVOLUTION_RED_BIAS_EXT
#define GL_POST_CONVOLUTION_RED_BIAS_EXT 0x8020
#endif

#ifndef GL_POST_CONVOLUTION_GREEN_BIAS_EXT
#define GL_POST_CONVOLUTION_GREEN_BIAS_EXT 0x8021
#endif

#ifndef GL_POST_CONVOLUTION_BLUE_BIAS_EXT
#define GL_POST_CONVOLUTION_BLUE_BIAS_EXT 0x8022
#endif

#ifndef GL_POST_CONVOLUTION_ALPHA_BIAS_EXT
#define GL_POST_CONVOLUTION_ALPHA_BIAS_EXT 0x8023
#endif

#ifndef GL_COLOR_MATRIX_SGI
#define GL_COLOR_MATRIX_SGI 0x80B1
#endif

#ifndef GL_COLOR_MATRIX_STACK_DEPTH_SGI
#define GL_COLOR_MATRIX_STACK_DEPTH_SGI 0x80B2
#endif

#ifndef GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI
#define GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI 0x80B3
#endif

#ifndef GL_POST_COLOR_MATRIX_RED_SCALE_SGI
#define GL_POST_COLOR_MATRIX_RED_SCALE_SGI 0x80B4
#endif

#ifndef GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI
#define GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI 0x80B5
#endif

#ifndef GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI
#define GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI 0x80B6
#endif

#ifndef GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI
#define GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI 0x80B7
#endif

#ifndef GL_POST_COLOR_MATRIX_RED_BIAS_SGI
#define GL_POST_COLOR_MATRIX_RED_BIAS_SGI 0x80B8
#endif

#ifndef GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI
#define GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI 0x80B9
#endif

#ifndef GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI
#define GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI 0x80BA
#endif

#ifndef GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI
#define GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI 0x80BB
#endif

#ifndef GL_COLOR_TABLE_SGI
#define GL_COLOR_TABLE_SGI 0x80D0
#endif

#ifndef GL_POST_CONVOLUTION_COLOR_TABLE_SGI
#define GL_POST_CONVOLUTION_COLOR_TABLE_SGI 0x80D1
#endif

#ifndef GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI
#define GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI 0x80D2
#endif

#ifndef GL_PROXY_COLOR_TABLE_SGI
#define GL_PROXY_COLOR_TABLE_SGI 0x80D3
#endif

#ifndef GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI
#define GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI 0x80D4
#endif

#ifndef GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI
#define GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI 0x80D5
#endif

#ifndef GL_COLOR_TABLE_SCALE_SGI
#define GL_COLOR_TABLE_SCALE_SGI 0x80D6
#endif

#ifndef GL_COLOR_TABLE_BIAS_SGI
#define GL_COLOR_TABLE_BIAS_SGI 0x80D7
#endif

#ifndef GL_COLOR_TABLE_FORMAT_SGI
#define GL_COLOR_TABLE_FORMAT_SGI 0x80D8
#endif

#ifndef GL_COLOR_TABLE_WIDTH_SGI
#define GL_COLOR_TABLE_WIDTH_SGI 0x80D9
#endif

#ifndef GL_COLOR_TABLE_RED_SIZE_SGI
#define GL_COLOR_TABLE_RED_SIZE_SGI 0x80DA
#endif

#ifndef GL_COLOR_TABLE_GREEN_SIZE_SGI
#define GL_COLOR_TABLE_GREEN_SIZE_SGI 0x80DB
#endif

#ifndef GL_COLOR_TABLE_BLUE_SIZE_SGI
#define GL_COLOR_TABLE_BLUE_SIZE_SGI 0x80DC
#endif

#ifndef GL_COLOR_TABLE_ALPHA_SIZE_SGI
#define GL_COLOR_TABLE_ALPHA_SIZE_SGI 0x80DD
#endif

#ifndef GL_COLOR_TABLE_LUMINANCE_SIZE_SGI
#define GL_COLOR_TABLE_LUMINANCE_SIZE_SGI 0x80DE
#endif

#ifndef GL_COLOR_TABLE_INTENSITY_SIZE_SGI
#define GL_COLOR_TABLE_INTENSITY_SIZE_SGI 0x80DF
#endif

#ifndef GL_PIXEL_TEXTURE_SGIS
#define GL_PIXEL_TEXTURE_SGIS 0x8353
#endif

#ifndef GL_PIXEL_FRAGMENT_RGB_SOURCE_SGIS
#define GL_PIXEL_FRAGMENT_RGB_SOURCE_SGIS 0x8354
#endif

#ifndef GL_PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS
#define GL_PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS 0x8355
#endif

#ifndef GL_PIXEL_GROUP_COLOR_SGIS
#define GL_PIXEL_GROUP_COLOR_SGIS 0x8356
#endif

#ifndef GL_PIXEL_TEX_GEN_SGIX
#define GL_PIXEL_TEX_GEN_SGIX 0x8139
#endif

#ifndef GL_PIXEL_TEX_GEN_MODE_SGIX
#define GL_PIXEL_TEX_GEN_MODE_SGIX 0x832B
#endif

#ifndef GL_PACK_SKIP_VOLUMES_SGIS
#define GL_PACK_SKIP_VOLUMES_SGIS 0x8130
#endif

#ifndef GL_PACK_IMAGE_DEPTH_SGIS
#define GL_PACK_IMAGE_DEPTH_SGIS 0x8131
#endif

#ifndef GL_UNPACK_SKIP_VOLUMES_SGIS
#define GL_UNPACK_SKIP_VOLUMES_SGIS 0x8132
#endif

#ifndef GL_UNPACK_IMAGE_DEPTH_SGIS
#define GL_UNPACK_IMAGE_DEPTH_SGIS 0x8133
#endif

#ifndef GL_TEXTURE_4D_SGIS
#define GL_TEXTURE_4D_SGIS 0x8134
#endif

#ifndef GL_PROXY_TEXTURE_4D_SGIS
#define GL_PROXY_TEXTURE_4D_SGIS 0x8135
#endif

#ifndef GL_TEXTURE_4DSIZE_SGIS
#define GL_TEXTURE_4DSIZE_SGIS 0x8136
#endif

#ifndef GL_TEXTURE_WRAP_Q_SGIS
#define GL_TEXTURE_WRAP_Q_SGIS 0x8137
#endif

#ifndef GL_MAX_4D_TEXTURE_SIZE_SGIS
#define GL_MAX_4D_TEXTURE_SIZE_SGIS 0x8138
#endif

#ifndef GL_TEXTURE_4D_BINDING_SGIS
#define GL_TEXTURE_4D_BINDING_SGIS 0x814F
#endif

#ifndef GL_TEXTURE_COLOR_TABLE_SGI
#define GL_TEXTURE_COLOR_TABLE_SGI 0x80BC
#endif

#ifndef GL_PROXY_TEXTURE_COLOR_TABLE_SGI
#define GL_PROXY_TEXTURE_COLOR_TABLE_SGI 0x80BD
#endif

#ifndef GL_CMYK_EXT
#define GL_CMYK_EXT 0x800C
#endif

#ifndef GL_CMYKA_EXT
#define GL_CMYKA_EXT 0x800D
#endif

#ifndef GL_PACK_CMYK_HINT_EXT
#define GL_PACK_CMYK_HINT_EXT 0x800E
#endif

#ifndef GL_UNPACK_CMYK_HINT_EXT
#define GL_UNPACK_CMYK_HINT_EXT 0x800F
#endif

#ifndef GL_TEXTURE_PRIORITY_EXT
#define GL_TEXTURE_PRIORITY_EXT 0x8066
#endif

#ifndef GL_TEXTURE_RESIDENT_EXT
#define GL_TEXTURE_RESIDENT_EXT 0x8067
#endif

#ifndef GL_TEXTURE_1D_BINDING_EXT
#define GL_TEXTURE_1D_BINDING_EXT 0x8068
#endif

#ifndef GL_TEXTURE_2D_BINDING_EXT
#define GL_TEXTURE_2D_BINDING_EXT 0x8069
#endif

#ifndef GL_TEXTURE_3D_BINDING_EXT
#define GL_TEXTURE_3D_BINDING_EXT 0x806A
#endif

#ifndef GL_DETAIL_TEXTURE_2D_SGIS
#define GL_DETAIL_TEXTURE_2D_SGIS 0x8095
#endif

#ifndef GL_DETAIL_TEXTURE_2D_BINDING_SGIS
#define GL_DETAIL_TEXTURE_2D_BINDING_SGIS 0x8096
#endif

#ifndef GL_LINEAR_DETAIL_SGIS
#define GL_LINEAR_DETAIL_SGIS 0x8097
#endif

#ifndef GL_LINEAR_DETAIL_ALPHA_SGIS
#define GL_LINEAR_DETAIL_ALPHA_SGIS 0x8098
#endif

#ifndef GL_LINEAR_DETAIL_COLOR_SGIS
#define GL_LINEAR_DETAIL_COLOR_SGIS 0x8099
#endif

#ifndef GL_DETAIL_TEXTURE_LEVEL_SGIS
#define GL_DETAIL_TEXTURE_LEVEL_SGIS 0x809A
#endif

#ifndef GL_DETAIL_TEXTURE_MODE_SGIS
#define GL_DETAIL_TEXTURE_MODE_SGIS 0x809B
#endif

#ifndef GL_DETAIL_TEXTURE_FUNC_POINTS_SGIS
#define GL_DETAIL_TEXTURE_FUNC_POINTS_SGIS 0x809C
#endif

#ifndef GL_LINEAR_SHARPEN_SGIS
#define GL_LINEAR_SHARPEN_SGIS 0x80AD
#endif

#ifndef GL_LINEAR_SHARPEN_ALPHA_SGIS
#define GL_LINEAR_SHARPEN_ALPHA_SGIS 0x80AE
#endif

#ifndef GL_LINEAR_SHARPEN_COLOR_SGIS
#define GL_LINEAR_SHARPEN_COLOR_SGIS 0x80AF
#endif

#ifndef GL_SHARPEN_TEXTURE_FUNC_POINTS_SGIS
#define GL_SHARPEN_TEXTURE_FUNC_POINTS_SGIS 0x80B0
#endif

#ifndef GL_UNSIGNED_BYTE_3_3_2_EXT
#define GL_UNSIGNED_BYTE_3_3_2_EXT 0x8032
#endif

#ifndef GL_UNSIGNED_SHORT_4_4_4_4_EXT
#define GL_UNSIGNED_SHORT_4_4_4_4_EXT 0x8033
#endif

#ifndef GL_UNSIGNED_SHORT_5_5_5_1_EXT
#define GL_UNSIGNED_SHORT_5_5_5_1_EXT 0x8034
#endif

#ifndef GL_UNSIGNED_INT_8_8_8_8_EXT
#define GL_UNSIGNED_INT_8_8_8_8_EXT 0x8035
#endif

#ifndef GL_UNSIGNED_INT_10_10_10_2_EXT
#define GL_UNSIGNED_INT_10_10_10_2_EXT 0x8036
#endif

#ifndef GL_TEXTURE_MIN_LOD_SGIS
#define GL_TEXTURE_MIN_LOD_SGIS 0x813A
#endif

#ifndef GL_TEXTURE_MAX_LOD_SGIS
#define GL_TEXTURE_MAX_LOD_SGIS 0x813B
#endif

#ifndef GL_TEXTURE_BASE_LEVEL_SGIS
#define GL_TEXTURE_BASE_LEVEL_SGIS 0x813C
#endif

#ifndef GL_TEXTURE_MAX_LEVEL_SGIS
#define GL_TEXTURE_MAX_LEVEL_SGIS 0x813D
#endif

#ifndef GL_MULTISAMPLE_SGIS
#define GL_MULTISAMPLE_SGIS 0x809D
#endif

#ifndef GL_SAMPLE_ALPHA_TO_MASK_SGIS
#define GL_SAMPLE_ALPHA_TO_MASK_SGIS 0x809E
#endif

#ifndef GL_SAMPLE_ALPHA_TO_ONE_SGIS
#define GL_SAMPLE_ALPHA_TO_ONE_SGIS 0x809F
#endif

#ifndef GL_SAMPLE_MASK_SGIS
#define GL_SAMPLE_MASK_SGIS 0x80A0
#endif

#ifndef GL_1PASS_SGIS
#define GL_1PASS_SGIS 0x80A1
#endif

#ifndef GL_2PASS_0_SGIS
#define GL_2PASS_0_SGIS 0x80A2
#endif

#ifndef GL_2PASS_1_SGIS
#define GL_2PASS_1_SGIS 0x80A3
#endif

#ifndef GL_4PASS_0_SGIS
#define GL_4PASS_0_SGIS 0x80A4
#endif

#ifndef GL_4PASS_1_SGIS
#define GL_4PASS_1_SGIS 0x80A5
#endif

#ifndef GL_4PASS_2_SGIS
#define GL_4PASS_2_SGIS 0x80A6
#endif

#ifndef GL_4PASS_3_SGIS
#define GL_4PASS_3_SGIS 0x80A7
#endif

#ifndef GL_SAMPLE_BUFFERS_SGIS
#define GL_SAMPLE_BUFFERS_SGIS 0x80A8
#endif

#ifndef GL_SAMPLES_SGIS
#define GL_SAMPLES_SGIS 0x80A9
#endif

#ifndef GL_SAMPLE_MASK_VALUE_SGIS
#define GL_SAMPLE_MASK_VALUE_SGIS 0x80AA
#endif

#ifndef GL_SAMPLE_MASK_INVERT_SGIS
#define GL_SAMPLE_MASK_INVERT_SGIS 0x80AB
#endif

#ifndef GL_SAMPLE_PATTERN_SGIS
#define GL_SAMPLE_PATTERN_SGIS 0x80AC
#endif

#ifndef GL_RESCALE_NORMAL_EXT
#define GL_RESCALE_NORMAL_EXT 0x803A
#endif

#ifndef GL_VERTEX_ARRAY_EXT
#define GL_VERTEX_ARRAY_EXT 0x8074
#endif

#ifndef GL_NORMAL_ARRAY_EXT
#define GL_NORMAL_ARRAY_EXT 0x8075
#endif

#ifndef GL_COLOR_ARRAY_EXT
#define GL_COLOR_ARRAY_EXT 0x8076
#endif

#ifndef GL_INDEX_ARRAY_EXT
#define GL_INDEX_ARRAY_EXT 0x8077
#endif

#ifndef GL_TEXTURE_COORD_ARRAY_EXT
#define GL_TEXTURE_COORD_ARRAY_EXT 0x8078
#endif

#ifndef GL_EDGE_FLAG_ARRAY_EXT
#define GL_EDGE_FLAG_ARRAY_EXT 0x8079
#endif

#ifndef GL_VERTEX_ARRAY_SIZE_EXT
#define GL_VERTEX_ARRAY_SIZE_EXT 0x807A
#endif

#ifndef GL_VERTEX_ARRAY_TYPE_EXT
#define GL_VERTEX_ARRAY_TYPE_EXT 0x807B
#endif

#ifndef GL_VERTEX_ARRAY_STRIDE_EXT
#define GL_VERTEX_ARRAY_STRIDE_EXT 0x807C
#endif

#ifndef GL_VERTEX_ARRAY_COUNT_EXT
#define GL_VERTEX_ARRAY_COUNT_EXT 0x807D
#endif

#ifndef GL_NORMAL_ARRAY_TYPE_EXT
#define GL_NORMAL_ARRAY_TYPE_EXT 0x807E
#endif

#ifndef GL_NORMAL_ARRAY_STRIDE_EXT
#define GL_NORMAL_ARRAY_STRIDE_EXT 0x807F
#endif

#ifndef GL_NORMAL_ARRAY_COUNT_EXT
#define GL_NORMAL_ARRAY_COUNT_EXT 0x8080
#endif

#ifndef GL_COLOR_ARRAY_SIZE_EXT
#define GL_COLOR_ARRAY_SIZE_EXT 0x8081
#endif

#ifndef GL_COLOR_ARRAY_TYPE_EXT
#define GL_COLOR_ARRAY_TYPE_EXT 0x8082
#endif

#ifndef GL_COLOR_ARRAY_STRIDE_EXT
#define GL_COLOR_ARRAY_STRIDE_EXT 0x8083
#endif

#ifndef GL_COLOR_ARRAY_COUNT_EXT
#define GL_COLOR_ARRAY_COUNT_EXT 0x8084
#endif

#ifndef GL_INDEX_ARRAY_TYPE_EXT
#define GL_INDEX_ARRAY_TYPE_EXT 0x8085
#endif

#ifndef GL_INDEX_ARRAY_STRIDE_EXT
#define GL_INDEX_ARRAY_STRIDE_EXT 0x8086
#endif

#ifndef GL_INDEX_ARRAY_COUNT_EXT
#define GL_INDEX_ARRAY_COUNT_EXT 0x8087
#endif

#ifndef GL_TEXTURE_COORD_ARRAY_SIZE_EXT
#define GL_TEXTURE_COORD_ARRAY_SIZE_EXT 0x8088
#endif

#ifndef GL_TEXTURE_COORD_ARRAY_TYPE_EXT
#define GL_TEXTURE_COORD_ARRAY_TYPE_EXT 0x8089
#endif

#ifndef GL_TEXTURE_COORD_ARRAY_STRIDE_EXT
#define GL_TEXTURE_COORD_ARRAY_STRIDE_EXT 0x808A
#endif

#ifndef GL_TEXTURE_COORD_ARRAY_COUNT_EXT
#define GL_TEXTURE_COORD_ARRAY_COUNT_EXT 0x808B
#endif

#ifndef GL_EDGE_FLAG_ARRAY_STRIDE_EXT
#define GL_EDGE_FLAG_ARRAY_STRIDE_EXT 0x808C
#endif

#ifndef GL_EDGE_FLAG_ARRAY_COUNT_EXT
#define GL_EDGE_FLAG_ARRAY_COUNT_EXT 0x808D
#endif

#ifndef GL_VERTEX_ARRAY_POINTER_EXT
#define GL_VERTEX_ARRAY_POINTER_EXT 0x808E
#endif

#ifndef GL_NORMAL_ARRAY_POINTER_EXT
#define GL_NORMAL_ARRAY_POINTER_EXT 0x808F
#endif

#ifndef GL_COLOR_ARRAY_POINTER_EXT
#define GL_COLOR_ARRAY_POINTER_EXT 0x8090
#endif

#ifndef GL_INDEX_ARRAY_POINTER_EXT
#define GL_INDEX_ARRAY_POINTER_EXT 0x8091
#endif

#ifndef GL_TEXTURE_COORD_ARRAY_POINTER_EXT
#define GL_TEXTURE_COORD_ARRAY_POINTER_EXT 0x8092
#endif

#ifndef GL_EDGE_FLAG_ARRAY_POINTER_EXT
#define GL_EDGE_FLAG_ARRAY_POINTER_EXT 0x8093
#endif

#ifndef GL_GENERATE_MIPMAP_SGIS
#define GL_GENERATE_MIPMAP_SGIS 0x8191
#endif

#ifndef GL_GENERATE_MIPMAP_HINT_SGIS
#define GL_GENERATE_MIPMAP_HINT_SGIS 0x8192
#endif

#ifndef GL_LINEAR_CLIPMAP_LINEAR_SGIX
#define GL_LINEAR_CLIPMAP_LINEAR_SGIX 0x8170
#endif

#ifndef GL_TEXTURE_CLIPMAP_CENTER_SGIX
#define GL_TEXTURE_CLIPMAP_CENTER_SGIX 0x8171
#endif

#ifndef GL_TEXTURE_CLIPMAP_FRAME_SGIX
#define GL_TEXTURE_CLIPMAP_FRAME_SGIX 0x8172
#endif

#ifndef GL_TEXTURE_CLIPMAP_OFFSET_SGIX
#define GL_TEXTURE_CLIPMAP_OFFSET_SGIX 0x8173
#endif

#ifndef GL_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX
#define GL_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX 0x8174
#endif

#ifndef GL_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX
#define GL_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX 0x8175
#endif

#ifndef GL_TEXTURE_CLIPMAP_DEPTH_SGIX
#define GL_TEXTURE_CLIPMAP_DEPTH_SGIX 0x8176
#endif

#ifndef GL_MAX_CLIPMAP_DEPTH_SGIX
#define GL_MAX_CLIPMAP_DEPTH_SGIX 0x8177
#endif

#ifndef GL_MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX
#define GL_MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX 0x8178
#endif

#ifndef GL_NEAREST_CLIPMAP_NEAREST_SGIX
#define GL_NEAREST_CLIPMAP_NEAREST_SGIX 0x844D
#endif

#ifndef GL_NEAREST_CLIPMAP_LINEAR_SGIX
#define GL_NEAREST_CLIPMAP_LINEAR_SGIX 0x844E
#endif

#ifndef GL_LINEAR_CLIPMAP_NEAREST_SGIX
#define GL_LINEAR_CLIPMAP_NEAREST_SGIX 0x844F
#endif

#ifndef GL_TEXTURE_COMPARE_SGIX
#define GL_TEXTURE_COMPARE_SGIX 0x819A
#endif

#ifndef GL_TEXTURE_COMPARE_OPERATOR_SGIX
#define GL_TEXTURE_COMPARE_OPERATOR_SGIX 0x819B
#endif

#ifndef GL_TEXTURE_LEQUAL_R_SGIX
#define GL_TEXTURE_LEQUAL_R_SGIX 0x819C
#endif

#ifndef GL_TEXTURE_GEQUAL_R_SGIX
#define GL_TEXTURE_GEQUAL_R_SGIX 0x819D
#endif

#ifndef GL_CLAMP_TO_EDGE_SGIS
#define GL_CLAMP_TO_EDGE_SGIS 0x812F
#endif

#ifndef GL_CLAMP_TO_BORDER_SGIS
#define GL_CLAMP_TO_BORDER_SGIS 0x812D
#endif

#ifndef GL_FUNC_ADD_EXT
#define GL_FUNC_ADD_EXT 0x8006
#endif

#ifndef GL_MIN_EXT
#define GL_MIN_EXT 0x8007
#endif

#ifndef GL_MAX_EXT
#define GL_MAX_EXT 0x8008
#endif

#ifndef GL_BLEND_EQUATION_EXT
#define GL_BLEND_EQUATION_EXT 0x8009
#endif

#ifndef GL_FUNC_SUBTRACT_EXT
#define GL_FUNC_SUBTRACT_EXT 0x800A
#endif

#ifndef GL_FUNC_REVERSE_SUBTRACT_EXT
#define GL_FUNC_REVERSE_SUBTRACT_EXT 0x800B
#endif

#ifndef GL_INTERLACE_SGIX
#define GL_INTERLACE_SGIX 0x8094
#endif

#ifndef GL_PIXEL_TILE_BEST_ALIGNMENT_SGIX
#define GL_PIXEL_TILE_BEST_ALIGNMENT_SGIX 0x813E
#endif

#ifndef GL_PIXEL_TILE_CACHE_INCREMENT_SGIX
#define GL_PIXEL_TILE_CACHE_INCREMENT_SGIX 0x813F
#endif

#ifndef GL_PIXEL_TILE_WIDTH_SGIX
#define GL_PIXEL_TILE_WIDTH_SGIX 0x8140
#endif

#ifndef GL_PIXEL_TILE_HEIGHT_SGIX
#define GL_PIXEL_TILE_HEIGHT_SGIX 0x8141
#endif

#ifndef GL_PIXEL_TILE_GRID_WIDTH_SGIX
#define GL_PIXEL_TILE_GRID_WIDTH_SGIX 0x8142
#endif

#ifndef GL_PIXEL_TILE_GRID_HEIGHT_SGIX
#define GL_PIXEL_TILE_GRID_HEIGHT_SGIX 0x8143
#endif

#ifndef GL_PIXEL_TILE_GRID_DEPTH_SGIX
#define GL_PIXEL_TILE_GRID_DEPTH_SGIX 0x8144
#endif

#ifndef GL_PIXEL_TILE_CACHE_SIZE_SGIX
#define GL_PIXEL_TILE_CACHE_SIZE_SGIX 0x8145
#endif

#ifndef GL_DUAL_ALPHA4_SGIS
#define GL_DUAL_ALPHA4_SGIS 0x8110
#endif

#ifndef GL_DUAL_ALPHA8_SGIS
#define GL_DUAL_ALPHA8_SGIS 0x8111
#endif

#ifndef GL_DUAL_ALPHA12_SGIS
#define GL_DUAL_ALPHA12_SGIS 0x8112
#endif

#ifndef GL_DUAL_ALPHA16_SGIS
#define GL_DUAL_ALPHA16_SGIS 0x8113
#endif

#ifndef GL_DUAL_LUMINANCE4_SGIS
#define GL_DUAL_LUMINANCE4_SGIS 0x8114
#endif

#ifndef GL_DUAL_LUMINANCE8_SGIS
#define GL_DUAL_LUMINANCE8_SGIS 0x8115
#endif

#ifndef GL_DUAL_LUMINANCE12_SGIS
#define GL_DUAL_LUMINANCE12_SGIS 0x8116
#endif

#ifndef GL_DUAL_LUMINANCE16_SGIS
#define GL_DUAL_LUMINANCE16_SGIS 0x8117
#endif

#ifndef GL_DUAL_INTENSITY4_SGIS
#define GL_DUAL_INTENSITY4_SGIS 0x8118
#endif

#ifndef GL_DUAL_INTENSITY8_SGIS
#define GL_DUAL_INTENSITY8_SGIS 0x8119
#endif

#ifndef GL_DUAL_INTENSITY12_SGIS
#define GL_DUAL_INTENSITY12_SGIS 0x811A
#endif

#ifndef GL_DUAL_INTENSITY16_SGIS
#define GL_DUAL_INTENSITY16_SGIS 0x811B
#endif

#ifndef GL_DUAL_LUMINANCE_ALPHA4_SGIS
#define GL_DUAL_LUMINANCE_ALPHA4_SGIS 0x811C
#endif

#ifndef GL_DUAL_LUMINANCE_ALPHA8_SGIS
#define GL_DUAL_LUMINANCE_ALPHA8_SGIS 0x811D
#endif

#ifndef GL_QUAD_ALPHA4_SGIS
#define GL_QUAD_ALPHA4_SGIS 0x811E
#endif

#ifndef GL_QUAD_ALPHA8_SGIS
#define GL_QUAD_ALPHA8_SGIS 0x811F
#endif

#ifndef GL_QUAD_LUMINANCE4_SGIS
#define GL_QUAD_LUMINANCE4_SGIS 0x8120
#endif

#ifndef GL_QUAD_LUMINANCE8_SGIS
#define GL_QUAD_LUMINANCE8_SGIS 0x8121
#endif

#ifndef GL_QUAD_INTENSITY4_SGIS
#define GL_QUAD_INTENSITY4_SGIS 0x8122
#endif

#ifndef GL_QUAD_INTENSITY8_SGIS
#define GL_QUAD_INTENSITY8_SGIS 0x8123
#endif

#ifndef GL_DUAL_TEXTURE_SELECT_SGIS
#define GL_DUAL_TEXTURE_SELECT_SGIS 0x8124
#endif

#ifndef GL_QUAD_TEXTURE_SELECT_SGIS
#define GL_QUAD_TEXTURE_SELECT_SGIS 0x8125
#endif

#ifndef GL_SPRITE_SGIX
#define GL_SPRITE_SGIX 0x8148
#endif

#ifndef GL_SPRITE_MODE_SGIX
#define GL_SPRITE_MODE_SGIX 0x8149
#endif

#ifndef GL_SPRITE_AXIS_SGIX
#define GL_SPRITE_AXIS_SGIX 0x814A
#endif

#ifndef GL_SPRITE_TRANSLATION_SGIX
#define GL_SPRITE_TRANSLATION_SGIX 0x814B
#endif

#ifndef GL_SPRITE_AXIAL_SGIX
#define GL_SPRITE_AXIAL_SGIX 0x814C
#endif

#ifndef GL_SPRITE_OBJECT_ALIGNED_SGIX
#define GL_SPRITE_OBJECT_ALIGNED_SGIX 0x814D
#endif

#ifndef GL_SPRITE_EYE_ALIGNED_SGIX
#define GL_SPRITE_EYE_ALIGNED_SGIX 0x814E
#endif

#ifndef GL_TEXTURE_MULTI_BUFFER_HINT_SGIX
#define GL_TEXTURE_MULTI_BUFFER_HINT_SGIX 0x812E
#endif

#ifndef GL_POINT_SIZE_MIN_EXT
#define GL_POINT_SIZE_MIN_EXT 0x8126
#endif

#ifndef GL_POINT_SIZE_MAX_EXT
#define GL_POINT_SIZE_MAX_EXT 0x8127
#endif

#ifndef GL_POINT_FADE_THRESHOLD_SIZE_EXT
#define GL_POINT_FADE_THRESHOLD_SIZE_EXT 0x8128
#endif

#ifndef GL_DISTANCE_ATTENUATION_EXT
#define GL_DISTANCE_ATTENUATION_EXT 0x8129
#endif

#ifndef GL_POINT_SIZE_MIN_SGIS
#define GL_POINT_SIZE_MIN_SGIS 0x8126
#endif

#ifndef GL_POINT_SIZE_MAX_SGIS
#define GL_POINT_SIZE_MAX_SGIS 0x8127
#endif

#ifndef GL_POINT_FADE_THRESHOLD_SIZE_SGIS
#define GL_POINT_FADE_THRESHOLD_SIZE_SGIS 0x8128
#endif

#ifndef GL_DISTANCE_ATTENUATION_SGIS
#define GL_DISTANCE_ATTENUATION_SGIS 0x8129
#endif

#ifndef GL_INSTRUMENT_BUFFER_POINTER_SGIX
#define GL_INSTRUMENT_BUFFER_POINTER_SGIX 0x8180
#endif

#ifndef GL_INSTRUMENT_MEASUREMENTS_SGIX
#define GL_INSTRUMENT_MEASUREMENTS_SGIX 0x8181
#endif

#ifndef GL_POST_TEXTURE_FILTER_BIAS_SGIX
#define GL_POST_TEXTURE_FILTER_BIAS_SGIX 0x8179
#endif

#ifndef GL_POST_TEXTURE_FILTER_SCALE_SGIX
#define GL_POST_TEXTURE_FILTER_SCALE_SGIX 0x817A
#endif

#ifndef GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX
#define GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX 0x817B
#endif

#ifndef GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX
#define GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX 0x817C
#endif

#ifndef GL_FRAMEZOOM_SGIX
#define GL_FRAMEZOOM_SGIX 0x818B
#endif

#ifndef GL_FRAMEZOOM_FACTOR_SGIX
#define GL_FRAMEZOOM_FACTOR_SGIX 0x818C
#endif

#ifndef GL_MAX_FRAMEZOOM_FACTOR_SGIX
#define GL_MAX_FRAMEZOOM_FACTOR_SGIX 0x818D
#endif

#ifndef GL_TEXTURE_DEFORMATION_BIT_SGIX
#define GL_TEXTURE_DEFORMATION_BIT_SGIX 0x00000001
#endif

#ifndef GL_GEOMETRY_DEFORMATION_BIT_SGIX
#define GL_GEOMETRY_DEFORMATION_BIT_SGIX 0x00000002
#endif

#ifndef GL_GEOMETRY_DEFORMATION_SGIX
#define GL_GEOMETRY_DEFORMATION_SGIX 0x8194
#endif

#ifndef GL_TEXTURE_DEFORMATION_SGIX
#define GL_TEXTURE_DEFORMATION_SGIX 0x8195
#endif

#ifndef GL_DEFORMATIONS_MASK_SGIX
#define GL_DEFORMATIONS_MASK_SGIX 0x8196
#endif

#ifndef GL_MAX_DEFORMATION_ORDER_SGIX
#define GL_MAX_DEFORMATION_ORDER_SGIX 0x8197
#endif

#ifndef GL_REFERENCE_PLANE_SGIX
#define GL_REFERENCE_PLANE_SGIX 0x817D
#endif

#ifndef GL_REFERENCE_PLANE_EQUATION_SGIX
#define GL_REFERENCE_PLANE_EQUATION_SGIX 0x817E
#endif

#ifndef GL_DEPTH_COMPONENT16_SGIX
#define GL_DEPTH_COMPONENT16_SGIX 0x81A5
#endif

#ifndef GL_DEPTH_COMPONENT24_SGIX
#define GL_DEPTH_COMPONENT24_SGIX 0x81A6
#endif

#ifndef GL_DEPTH_COMPONENT32_SGIX
#define GL_DEPTH_COMPONENT32_SGIX 0x81A7
#endif

#ifndef GL_FOG_FUNC_SGIS
#define GL_FOG_FUNC_SGIS 0x812A
#endif

#ifndef GL_FOG_FUNC_POINTS_SGIS
#define GL_FOG_FUNC_POINTS_SGIS 0x812B
#endif

#ifndef GL_MAX_FOG_FUNC_POINTS_SGIS
#define GL_MAX_FOG_FUNC_POINTS_SGIS 0x812C
#endif

#ifndef GL_FOG_OFFSET_SGIX
#define GL_FOG_OFFSET_SGIX 0x8198
#endif

#ifndef GL_FOG_OFFSET_VALUE_SGIX
#define GL_FOG_OFFSET_VALUE_SGIX 0x8199
#endif

#ifndef GL_IMAGE_SCALE_X_HP
#define GL_IMAGE_SCALE_X_HP 0x8155
#endif

#ifndef GL_IMAGE_SCALE_Y_HP
#define GL_IMAGE_SCALE_Y_HP 0x8156
#endif

#ifndef GL_IMAGE_TRANSLATE_X_HP
#define GL_IMAGE_TRANSLATE_X_HP 0x8157
#endif

#ifndef GL_IMAGE_TRANSLATE_Y_HP
#define GL_IMAGE_TRANSLATE_Y_HP 0x8158
#endif

#ifndef GL_IMAGE_ROTATE_ANGLE_HP
#define GL_IMAGE_ROTATE_ANGLE_HP 0x8159
#endif

#ifndef GL_IMAGE_ROTATE_ORIGIN_X_HP
#define GL_IMAGE_ROTATE_ORIGIN_X_HP 0x815A
#endif

#ifndef GL_IMAGE_ROTATE_ORIGIN_Y_HP
#define GL_IMAGE_ROTATE_ORIGIN_Y_HP 0x815B
#endif

#ifndef GL_IMAGE_MAG_FILTER_HP
#define GL_IMAGE_MAG_FILTER_HP 0x815C
#endif

#ifndef GL_IMAGE_MIN_FILTER_HP
#define GL_IMAGE_MIN_FILTER_HP 0x815D
#endif

#ifndef GL_IMAGE_CUBIC_WEIGHT_HP
#define GL_IMAGE_CUBIC_WEIGHT_HP 0x815E
#endif

#ifndef GL_CUBIC_HP
#define GL_CUBIC_HP 0x815F
#endif

#ifndef GL_AVERAGE_HP
#define GL_AVERAGE_HP 0x8160
#endif

#ifndef GL_IMAGE_TRANSFORM_2D_HP
#define GL_IMAGE_TRANSFORM_2D_HP 0x8161
#endif

#ifndef GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP
#define GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP 0x8162
#endif

#ifndef GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP
#define GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP 0x8163
#endif

#ifndef GL_IGNORE_BORDER_HP
#define GL_IGNORE_BORDER_HP 0x8150
#endif

#ifndef GL_CONSTANT_BORDER_HP
#define GL_CONSTANT_BORDER_HP 0x8151
#endif

#ifndef GL_REPLICATE_BORDER_HP
#define GL_REPLICATE_BORDER_HP 0x8153
#endif

#ifndef GL_CONVOLUTION_BORDER_COLOR_HP
#define GL_CONVOLUTION_BORDER_COLOR_HP 0x8154
#endif

#ifndef GL_TEXTURE_ENV_BIAS_SGIX
#define GL_TEXTURE_ENV_BIAS_SGIX 0x80BE
#endif

#ifndef GL_VERTEX_DATA_HINT_PGI
#define GL_VERTEX_DATA_HINT_PGI 0x1A22A
#endif

#ifndef GL_VERTEX_CONSISTENT_HINT_PGI
#define GL_VERTEX_CONSISTENT_HINT_PGI 0x1A22B
#endif

#ifndef GL_MATERIAL_SIDE_HINT_PGI
#define GL_MATERIAL_SIDE_HINT_PGI 0x1A22C
#endif

#ifndef GL_MAX_VERTEX_HINT_PGI
#define GL_MAX_VERTEX_HINT_PGI 0x1A22D
#endif

#ifndef GL_COLOR3_BIT_PGI
#define GL_COLOR3_BIT_PGI 0x00010000
#endif

#ifndef GL_COLOR4_BIT_PGI
#define GL_COLOR4_BIT_PGI 0x00020000
#endif

#ifndef GL_EDGEFLAG_BIT_PGI
#define GL_EDGEFLAG_BIT_PGI 0x00040000
#endif

#ifndef GL_INDEX_BIT_PGI
#define GL_INDEX_BIT_PGI 0x00080000
#endif

#ifndef GL_MAT_AMBIENT_BIT_PGI
#define GL_MAT_AMBIENT_BIT_PGI 0x00100000
#endif

#ifndef GL_MAT_AMBIENT_AND_DIFFUSE_BIT_PGI
#define GL_MAT_AMBIENT_AND_DIFFUSE_BIT_PGI 0x00200000
#endif

#ifndef GL_MAT_DIFFUSE_BIT_PGI
#define GL_MAT_DIFFUSE_BIT_PGI 0x00400000
#endif

#ifndef GL_MAT_EMISSION_BIT_PGI
#define GL_MAT_EMISSION_BIT_PGI 0x00800000
#endif

#ifndef GL_MAT_COLOR_INDEXES_BIT_PGI
#define GL_MAT_COLOR_INDEXES_BIT_PGI 0x01000000
#endif

#ifndef GL_MAT_SHININESS_BIT_PGI
#define GL_MAT_SHININESS_BIT_PGI 0x02000000
#endif

#ifndef GL_MAT_SPECULAR_BIT_PGI
#define GL_MAT_SPECULAR_BIT_PGI 0x04000000
#endif

#ifndef GL_NORMAL_BIT_PGI
#define GL_NORMAL_BIT_PGI 0x08000000
#endif

#ifndef GL_TEXCOORD1_BIT_PGI
#define GL_TEXCOORD1_BIT_PGI 0x10000000
#endif

#ifndef GL_TEXCOORD2_BIT_PGI
#define GL_TEXCOORD2_BIT_PGI 0x20000000
#endif

#ifndef GL_TEXCOORD3_BIT_PGI
#define GL_TEXCOORD3_BIT_PGI 0x40000000
#endif

#ifndef GL_TEXCOORD4_BIT_PGI
#define GL_TEXCOORD4_BIT_PGI 0x80000000
#endif

#ifndef GL_VERTEX23_BIT_PGI
#define GL_VERTEX23_BIT_PGI 0x00000004
#endif

#ifndef GL_VERTEX4_BIT_PGI
#define GL_VERTEX4_BIT_PGI 0x00000008
#endif

#ifndef GL_PREFER_DOUBLEBUFFER_HINT_PGI
#define GL_PREFER_DOUBLEBUFFER_HINT_PGI 0x1A1F8
#endif

#ifndef GL_CONSERVE_MEMORY_HINT_PGI
#define GL_CONSERVE_MEMORY_HINT_PGI 0x1A1FD
#endif

#ifndef GL_RECLAIM_MEMORY_HINT_PGI
#define GL_RECLAIM_MEMORY_HINT_PGI 0x1A1FE
#endif

#ifndef GL_NATIVE_GRAPHICS_HANDLE_PGI
#define GL_NATIVE_GRAPHICS_HANDLE_PGI 0x1A202
#endif

#ifndef GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI
#define GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI 0x1A203
#endif

#ifndef GL_NATIVE_GRAPHICS_END_HINT_PGI
#define GL_NATIVE_GRAPHICS_END_HINT_PGI 0x1A204
#endif

#ifndef GL_ALWAYS_FAST_HINT_PGI
#define GL_ALWAYS_FAST_HINT_PGI 0x1A20C
#endif

#ifndef GL_ALWAYS_SOFT_HINT_PGI
#define GL_ALWAYS_SOFT_HINT_PGI 0x1A20D
#endif

#ifndef GL_ALLOW_DRAW_OBJ_HINT_PGI
#define GL_ALLOW_DRAW_OBJ_HINT_PGI 0x1A20E
#endif

#ifndef GL_ALLOW_DRAW_WIN_HINT_PGI
#define GL_ALLOW_DRAW_WIN_HINT_PGI 0x1A20F
#endif

#ifndef GL_ALLOW_DRAW_FRG_HINT_PGI
#define GL_ALLOW_DRAW_FRG_HINT_PGI 0x1A210
#endif

#ifndef GL_ALLOW_DRAW_MEM_HINT_PGI
#define GL_ALLOW_DRAW_MEM_HINT_PGI 0x1A211
#endif

#ifndef GL_STRICT_DEPTHFUNC_HINT_PGI
#define GL_STRICT_DEPTHFUNC_HINT_PGI 0x1A216
#endif

#ifndef GL_STRICT_LIGHTING_HINT_PGI
#define GL_STRICT_LIGHTING_HINT_PGI 0x1A217
#endif

#ifndef GL_STRICT_SCISSOR_HINT_PGI
#define GL_STRICT_SCISSOR_HINT_PGI 0x1A218
#endif

#ifndef GL_FULL_STIPPLE_HINT_PGI
#define GL_FULL_STIPPLE_HINT_PGI 0x1A219
#endif

#ifndef GL_CLIP_NEAR_HINT_PGI
#define GL_CLIP_NEAR_HINT_PGI 0x1A220
#endif

#ifndef GL_CLIP_FAR_HINT_PGI
#define GL_CLIP_FAR_HINT_PGI 0x1A221
#endif

#ifndef GL_WIDE_LINE_HINT_PGI
#define GL_WIDE_LINE_HINT_PGI 0x1A222
#endif

#ifndef GL_BACK_NORMALS_HINT_PGI
#define GL_BACK_NORMALS_HINT_PGI 0x1A223
#endif

#ifndef GL_COLOR_INDEX1_EXT
#define GL_COLOR_INDEX1_EXT 0x80E2
#endif

#ifndef GL_COLOR_INDEX2_EXT
#define GL_COLOR_INDEX2_EXT 0x80E3
#endif

#ifndef GL_COLOR_INDEX4_EXT
#define GL_COLOR_INDEX4_EXT 0x80E4
#endif

#ifndef GL_COLOR_INDEX8_EXT
#define GL_COLOR_INDEX8_EXT 0x80E5
#endif

#ifndef GL_COLOR_INDEX12_EXT
#define GL_COLOR_INDEX12_EXT 0x80E6
#endif

#ifndef GL_COLOR_INDEX16_EXT
#define GL_COLOR_INDEX16_EXT 0x80E7
#endif

#ifndef GL_TEXTURE_INDEX_SIZE_EXT
#define GL_TEXTURE_INDEX_SIZE_EXT 0x80ED
#endif

#ifndef GL_CLIP_VOLUME_CLIPPING_HINT_EXT
#define GL_CLIP_VOLUME_CLIPPING_HINT_EXT 0x80F0
#endif

#ifndef GL_LIST_PRIORITY_SGIX
#define GL_LIST_PRIORITY_SGIX 0x8182
#endif

#ifndef GL_IR_INSTRUMENT1_SGIX
#define GL_IR_INSTRUMENT1_SGIX 0x817F
#endif

#ifndef GL_CALLIGRAPHIC_FRAGMENT_SGIX
#define GL_CALLIGRAPHIC_FRAGMENT_SGIX 0x8183
#endif

#ifndef GL_TEXTURE_LOD_BIAS_S_SGIX
#define GL_TEXTURE_LOD_BIAS_S_SGIX 0x818E
#endif

#ifndef GL_TEXTURE_LOD_BIAS_T_SGIX
#define GL_TEXTURE_LOD_BIAS_T_SGIX 0x818F
#endif

#ifndef GL_TEXTURE_LOD_BIAS_R_SGIX
#define GL_TEXTURE_LOD_BIAS_R_SGIX 0x8190
#endif

#ifndef GL_SHADOW_AMBIENT_SGIX
#define GL_SHADOW_AMBIENT_SGIX 0x80BF
#endif

#ifndef GL_INDEX_MATERIAL_EXT
#define GL_INDEX_MATERIAL_EXT 0x81B8
#endif

#ifndef GL_INDEX_MATERIAL_PARAMETER_EXT
#define GL_INDEX_MATERIAL_PARAMETER_EXT 0x81B9
#endif

#ifndef GL_INDEX_MATERIAL_FACE_EXT
#define GL_INDEX_MATERIAL_FACE_EXT 0x81BA
#endif

#ifndef GL_INDEX_TEST_EXT
#define GL_INDEX_TEST_EXT 0x81B5
#endif

#ifndef GL_INDEX_TEST_FUNC_EXT
#define GL_INDEX_TEST_FUNC_EXT 0x81B6
#endif

#ifndef GL_INDEX_TEST_REF_EXT
#define GL_INDEX_TEST_REF_EXT 0x81B7
#endif

#ifndef GL_IUI_V2F_EXT
#define GL_IUI_V2F_EXT 0x81AD
#endif

#ifndef GL_IUI_V3F_EXT
#define GL_IUI_V3F_EXT 0x81AE
#endif

#ifndef GL_IUI_N3F_V2F_EXT
#define GL_IUI_N3F_V2F_EXT 0x81AF
#endif

#ifndef GL_IUI_N3F_V3F_EXT
#define GL_IUI_N3F_V3F_EXT 0x81B0
#endif

#ifndef GL_T2F_IUI_V2F_EXT
#define GL_T2F_IUI_V2F_EXT 0x81B1
#endif

#ifndef GL_T2F_IUI_V3F_EXT
#define GL_T2F_IUI_V3F_EXT 0x81B2
#endif

#ifndef GL_T2F_IUI_N3F_V2F_EXT
#define GL_T2F_IUI_N3F_V2F_EXT 0x81B3
#endif

#ifndef GL_T2F_IUI_N3F_V3F_EXT
#define GL_T2F_IUI_N3F_V3F_EXT 0x81B4
#endif

#ifndef GL_ARRAY_ELEMENT_LOCK_FIRST_EXT
#define GL_ARRAY_ELEMENT_LOCK_FIRST_EXT 0x81A8
#endif

#ifndef GL_ARRAY_ELEMENT_LOCK_COUNT_EXT
#define GL_ARRAY_ELEMENT_LOCK_COUNT_EXT 0x81A9
#endif

#ifndef GL_CULL_VERTEX_EXT
#define GL_CULL_VERTEX_EXT 0x81AA
#endif

#ifndef GL_CULL_VERTEX_EYE_POSITION_EXT
#define GL_CULL_VERTEX_EYE_POSITION_EXT 0x81AB
#endif

#ifndef GL_CULL_VERTEX_OBJECT_POSITION_EXT
#define GL_CULL_VERTEX_OBJECT_POSITION_EXT 0x81AC
#endif

#ifndef GL_YCRCB_422_SGIX
#define GL_YCRCB_422_SGIX 0x81BB
#endif

#ifndef GL_YCRCB_444_SGIX
#define GL_YCRCB_444_SGIX 0x81BC
#endif

#ifndef GL_FRAGMENT_LIGHTING_SGIX
#define GL_FRAGMENT_LIGHTING_SGIX 0x8400
#endif

#ifndef GL_FRAGMENT_COLOR_MATERIAL_SGIX
#define GL_FRAGMENT_COLOR_MATERIAL_SGIX 0x8401
#endif

#ifndef GL_FRAGMENT_COLOR_MATERIAL_FACE_SGIX
#define GL_FRAGMENT_COLOR_MATERIAL_FACE_SGIX 0x8402
#endif

#ifndef GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX
#define GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX 0x8403
#endif

#ifndef GL_MAX_FRAGMENT_LIGHTS_SGIX
#define GL_MAX_FRAGMENT_LIGHTS_SGIX 0x8404
#endif

#ifndef GL_MAX_ACTIVE_LIGHTS_SGIX
#define GL_MAX_ACTIVE_LIGHTS_SGIX 0x8405
#endif

#ifndef GL_CURRENT_RASTER_NORMAL_SGIX
#define GL_CURRENT_RASTER_NORMAL_SGIX 0x8406
#endif

#ifndef GL_LIGHT_ENV_MODE_SGIX
#define GL_LIGHT_ENV_MODE_SGIX 0x8407
#endif

#ifndef GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX
#define GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX 0x8408
#endif

#ifndef GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX
#define GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX 0x8409
#endif

#ifndef GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX
#define GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX 0x840A
#endif

#ifndef GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX
#define GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX 0x840B
#endif

#ifndef GL_FRAGMENT_LIGHT0_SGIX
#define GL_FRAGMENT_LIGHT0_SGIX 0x840C
#endif

#ifndef GL_FRAGMENT_LIGHT1_SGIX
#define GL_FRAGMENT_LIGHT1_SGIX 0x840D
#endif

#ifndef GL_FRAGMENT_LIGHT2_SGIX
#define GL_FRAGMENT_LIGHT2_SGIX 0x840E
#endif

#ifndef GL_FRAGMENT_LIGHT3_SGIX
#define GL_FRAGMENT_LIGHT3_SGIX 0x840F
#endif

#ifndef GL_FRAGMENT_LIGHT4_SGIX
#define GL_FRAGMENT_LIGHT4_SGIX 0x8410
#endif

#ifndef GL_FRAGMENT_LIGHT5_SGIX
#define GL_FRAGMENT_LIGHT5_SGIX 0x8411
#endif

#ifndef GL_FRAGMENT_LIGHT6_SGIX
#define GL_FRAGMENT_LIGHT6_SGIX 0x8412
#endif

#ifndef GL_FRAGMENT_LIGHT7_SGIX
#define GL_FRAGMENT_LIGHT7_SGIX 0x8413
#endif

#ifndef GL_RASTER_POSITION_UNCLIPPED_IBM
#define GL_RASTER_POSITION_UNCLIPPED_IBM 0x19262
#endif

#ifndef GL_TEXTURE_LIGHTING_MODE_HP
#define GL_TEXTURE_LIGHTING_MODE_HP 0x8167
#endif

#ifndef GL_TEXTURE_POST_SPECULAR_HP
#define GL_TEXTURE_POST_SPECULAR_HP 0x8168
#endif

#ifndef GL_TEXTURE_PRE_SPECULAR_HP
#define GL_TEXTURE_PRE_SPECULAR_HP 0x8169
#endif

#ifndef GL_MAX_ELEMENTS_VERTICES_EXT
#define GL_MAX_ELEMENTS_VERTICES_EXT 0x80E8
#endif

#ifndef GL_MAX_ELEMENTS_INDICES_EXT
#define GL_MAX_ELEMENTS_INDICES_EXT 0x80E9
#endif

#ifndef GL_PHONG_WIN
#define GL_PHONG_WIN 0x80EA
#endif

#ifndef GL_PHONG_HINT_WIN
#define GL_PHONG_HINT_WIN 0x80EB
#endif

#ifndef GL_FOG_SPECULAR_TEXTURE_WIN
#define GL_FOG_SPECULAR_TEXTURE_WIN 0x80EC
#endif

#ifndef GL_FRAGMENT_MATERIAL_EXT
#define GL_FRAGMENT_MATERIAL_EXT 0x8349
#endif

#ifndef GL_FRAGMENT_NORMAL_EXT
#define GL_FRAGMENT_NORMAL_EXT 0x834A
#endif

#ifndef GL_FRAGMENT_COLOR_EXT
#define GL_FRAGMENT_COLOR_EXT 0x834C
#endif

#ifndef GL_ATTENUATION_EXT
#define GL_ATTENUATION_EXT 0x834D
#endif

#ifndef GL_SHADOW_ATTENUATION_EXT
#define GL_SHADOW_ATTENUATION_EXT 0x834E
#endif

#ifndef GL_TEXTURE_APPLICATION_MODE_EXT
#define GL_TEXTURE_APPLICATION_MODE_EXT 0x834F
#endif

#ifndef GL_TEXTURE_LIGHT_EXT
#define GL_TEXTURE_LIGHT_EXT 0x8350
#endif

#ifndef GL_TEXTURE_MATERIAL_FACE_EXT
#define GL_TEXTURE_MATERIAL_FACE_EXT 0x8351
#endif

#ifndef GL_TEXTURE_MATERIAL_PARAMETER_EXT
#define GL_TEXTURE_MATERIAL_PARAMETER_EXT 0x8352
#endif

#ifndef GL_ALPHA_MIN_SGIX
#define GL_ALPHA_MIN_SGIX 0x8320
#endif

#ifndef GL_ALPHA_MAX_SGIX
#define GL_ALPHA_MAX_SGIX 0x8321
#endif

#ifndef GL_PIXEL_TEX_GEN_Q_CEILING_SGIX
#define GL_PIXEL_TEX_GEN_Q_CEILING_SGIX 0x8184
#endif

#ifndef GL_PIXEL_TEX_GEN_Q_ROUND_SGIX
#define GL_PIXEL_TEX_GEN_Q_ROUND_SGIX 0x8185
#endif

#ifndef GL_PIXEL_TEX_GEN_Q_FLOOR_SGIX
#define GL_PIXEL_TEX_GEN_Q_FLOOR_SGIX 0x8186
#endif

#ifndef GL_PIXEL_TEX_GEN_ALPHA_REPLACE_SGIX
#define GL_PIXEL_TEX_GEN_ALPHA_REPLACE_SGIX 0x8187
#endif

#ifndef GL_PIXEL_TEX_GEN_ALPHA_NO_REPLACE_SGIX
#define GL_PIXEL_TEX_GEN_ALPHA_NO_REPLACE_SGIX 0x8188
#endif

#ifndef GL_PIXEL_TEX_GEN_ALPHA_LS_SGIX
#define GL_PIXEL_TEX_GEN_ALPHA_LS_SGIX 0x8189
#endif

#ifndef GL_PIXEL_TEX_GEN_ALPHA_MS_SGIX
#define GL_PIXEL_TEX_GEN_ALPHA_MS_SGIX 0x818A
#endif

#ifndef GL_BGR_EXT
#define GL_BGR_EXT 0x80E0
#endif

#ifndef GL_BGRA_EXT
#define GL_BGRA_EXT 0x80E1
#endif

#ifndef GL_ASYNC_MARKER_SGIX
#define GL_ASYNC_MARKER_SGIX 0x8329
#endif

#ifndef GL_ASYNC_TEX_IMAGE_SGIX
#define GL_ASYNC_TEX_IMAGE_SGIX 0x835C
#endif

#ifndef GL_ASYNC_DRAW_PIXELS_SGIX
#define GL_ASYNC_DRAW_PIXELS_SGIX 0x835D
#endif

#ifndef GL_ASYNC_READ_PIXELS_SGIX
#define GL_ASYNC_READ_PIXELS_SGIX 0x835E
#endif

#ifndef GL_MAX_ASYNC_TEX_IMAGE_SGIX
#define GL_MAX_ASYNC_TEX_IMAGE_SGIX 0x835F
#endif

#ifndef GL_MAX_ASYNC_DRAW_PIXELS_SGIX
#define GL_MAX_ASYNC_DRAW_PIXELS_SGIX 0x8360
#endif

#ifndef GL_MAX_ASYNC_READ_PIXELS_SGIX
#define GL_MAX_ASYNC_READ_PIXELS_SGIX 0x8361
#endif

#ifndef GL_ASYNC_HISTOGRAM_SGIX
#define GL_ASYNC_HISTOGRAM_SGIX 0x832C
#endif

#ifndef GL_MAX_ASYNC_HISTOGRAM_SGIX
#define GL_MAX_ASYNC_HISTOGRAM_SGIX 0x832D
#endif

#ifndef GL_PARALLEL_ARRAYS_INTEL
#define GL_PARALLEL_ARRAYS_INTEL 0x83F4
#endif

#ifndef GL_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL
#define GL_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL 0x83F5
#endif

#ifndef GL_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL
#define GL_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL 0x83F6
#endif

#ifndef GL_COLOR_ARRAY_PARALLEL_POINTERS_INTEL
#define GL_COLOR_ARRAY_PARALLEL_POINTERS_INTEL 0x83F7
#endif

#ifndef GL_TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL
#define GL_TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL 0x83F8
#endif

#ifndef GL_OCCLUSION_TEST_HP
#define GL_OCCLUSION_TEST_HP 0x8165
#endif

#ifndef GL_OCCLUSION_TEST_RESULT_HP
#define GL_OCCLUSION_TEST_RESULT_HP 0x8166
#endif

#ifndef GL_PIXEL_TRANSFORM_2D_EXT
#define GL_PIXEL_TRANSFORM_2D_EXT 0x8330
#endif

#ifndef GL_PIXEL_MAG_FILTER_EXT
#define GL_PIXEL_MAG_FILTER_EXT 0x8331
#endif

#ifndef GL_PIXEL_MIN_FILTER_EXT
#define GL_PIXEL_MIN_FILTER_EXT 0x8332
#endif

#ifndef GL_PIXEL_CUBIC_WEIGHT_EXT
#define GL_PIXEL_CUBIC_WEIGHT_EXT 0x8333
#endif

#ifndef GL_CUBIC_EXT
#define GL_CUBIC_EXT 0x8334
#endif

#ifndef GL_AVERAGE_EXT
#define GL_AVERAGE_EXT 0x8335
#endif

#ifndef GL_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT
#define GL_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT 0x8336
#endif

#ifndef GL_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT
#define GL_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT 0x8337
#endif

#ifndef GL_PIXEL_TRANSFORM_2D_MATRIX_EXT
#define GL_PIXEL_TRANSFORM_2D_MATRIX_EXT 0x8338
#endif

#ifndef GL_SHARED_TEXTURE_PALETTE_EXT
#define GL_SHARED_TEXTURE_PALETTE_EXT 0x81FB
#endif

#ifndef GL_LIGHT_MODEL_COLOR_CONTROL_EXT
#define GL_LIGHT_MODEL_COLOR_CONTROL_EXT 0x81F8
#endif

#ifndef GL_SINGLE_COLOR_EXT
#define GL_SINGLE_COLOR_EXT 0x81F9
#endif

#ifndef GL_SEPARATE_SPECULAR_COLOR_EXT
#define GL_SEPARATE_SPECULAR_COLOR_EXT 0x81FA
#endif

#ifndef GL_COLOR_SUM_EXT
#define GL_COLOR_SUM_EXT 0x8458
#endif

#ifndef GL_CURRENT_SECONDARY_COLOR_EXT
#define GL_CURRENT_SECONDARY_COLOR_EXT 0x8459
#endif

#ifndef GL_SECONDARY_COLOR_ARRAY_SIZE_EXT
#define GL_SECONDARY_COLOR_ARRAY_SIZE_EXT 0x845A
#endif

#ifndef GL_SECONDARY_COLOR_ARRAY_TYPE_EXT
#define GL_SECONDARY_COLOR_ARRAY_TYPE_EXT 0x845B
#endif

#ifndef GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT
#define GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT 0x845C
#endif

#ifndef GL_SECONDARY_COLOR_ARRAY_POINTER_EXT
#define GL_SECONDARY_COLOR_ARRAY_POINTER_EXT 0x845D
#endif

#ifndef GL_SECONDARY_COLOR_ARRAY_EXT
#define GL_SECONDARY_COLOR_ARRAY_EXT 0x845E
#endif

#ifndef GL_PERTURB_EXT
#define GL_PERTURB_EXT 0x85AE
#endif

#ifndef GL_TEXTURE_NORMAL_EXT
#define GL_TEXTURE_NORMAL_EXT 0x85AF
#endif

#ifndef GL_FOG_COORDINATE_SOURCE_EXT
#define GL_FOG_COORDINATE_SOURCE_EXT 0x8450
#endif

#ifndef GL_FOG_COORDINATE_EXT
#define GL_FOG_COORDINATE_EXT 0x8451
#endif

#ifndef GL_FRAGMENT_DEPTH_EXT
#define GL_FRAGMENT_DEPTH_EXT 0x8452
#endif

#ifndef GL_CURRENT_FOG_COORDINATE_EXT
#define GL_CURRENT_FOG_COORDINATE_EXT 0x8453
#endif

#ifndef GL_FOG_COORDINATE_ARRAY_TYPE_EXT
#define GL_FOG_COORDINATE_ARRAY_TYPE_EXT 0x8454
#endif

#ifndef GL_FOG_COORDINATE_ARRAY_STRIDE_EXT
#define GL_FOG_COORDINATE_ARRAY_STRIDE_EXT 0x8455
#endif

#ifndef GL_FOG_COORDINATE_ARRAY_POINTER_EXT
#define GL_FOG_COORDINATE_ARRAY_POINTER_EXT 0x8456
#endif

#ifndef GL_FOG_COORDINATE_ARRAY_EXT
#define GL_FOG_COORDINATE_ARRAY_EXT 0x8457
#endif

#ifndef GL_SCREEN_COORDINATES_REND
#define GL_SCREEN_COORDINATES_REND 0x8490
#endif

#ifndef GL_INVERTED_SCREEN_W_REND
#define GL_INVERTED_SCREEN_W_REND 0x8491
#endif

#ifndef GL_TANGENT_ARRAY_EXT
#define GL_TANGENT_ARRAY_EXT 0x8439
#endif

#ifndef GL_BINORMAL_ARRAY_EXT
#define GL_BINORMAL_ARRAY_EXT 0x843A
#endif

#ifndef GL_CURRENT_TANGENT_EXT
#define GL_CURRENT_TANGENT_EXT 0x843B
#endif

#ifndef GL_CURRENT_BINORMAL_EXT
#define GL_CURRENT_BINORMAL_EXT 0x843C
#endif

#ifndef GL_TANGENT_ARRAY_TYPE_EXT
#define GL_TANGENT_ARRAY_TYPE_EXT 0x843E
#endif

#ifndef GL_TANGENT_ARRAY_STRIDE_EXT
#define GL_TANGENT_ARRAY_STRIDE_EXT 0x843F
#endif

#ifndef GL_BINORMAL_ARRAY_TYPE_EXT
#define GL_BINORMAL_ARRAY_TYPE_EXT 0x8440
#endif

#ifndef GL_BINORMAL_ARRAY_STRIDE_EXT
#define GL_BINORMAL_ARRAY_STRIDE_EXT 0x8441
#endif

#ifndef GL_TANGENT_ARRAY_POINTER_EXT
#define GL_TANGENT_ARRAY_POINTER_EXT 0x8442
#endif

#ifndef GL_BINORMAL_ARRAY_POINTER_EXT
#define GL_BINORMAL_ARRAY_POINTER_EXT 0x8443
#endif

#ifndef GL_MAP1_TANGENT_EXT
#define GL_MAP1_TANGENT_EXT 0x8444
#endif

#ifndef GL_MAP2_TANGENT_EXT
#define GL_MAP2_TANGENT_EXT 0x8445
#endif

#ifndef GL_MAP1_BINORMAL_EXT
#define GL_MAP1_BINORMAL_EXT 0x8446
#endif

#ifndef GL_MAP2_BINORMAL_EXT
#define GL_MAP2_BINORMAL_EXT 0x8447
#endif

#ifndef GL_COMBINE_EXT
#define GL_COMBINE_EXT 0x8570
#endif

#ifndef GL_COMBINE_RGB_EXT
#define GL_COMBINE_RGB_EXT 0x8571
#endif

#ifndef GL_COMBINE_ALPHA_EXT
#define GL_COMBINE_ALPHA_EXT 0x8572
#endif

#ifndef GL_RGB_SCALE_EXT
#define GL_RGB_SCALE_EXT 0x8573
#endif

#ifndef GL_ADD_SIGNED_EXT
#define GL_ADD_SIGNED_EXT 0x8574
#endif

#ifndef GL_INTERPOLATE_EXT
#define GL_INTERPOLATE_EXT 0x8575
#endif

#ifndef GL_CONSTANT_EXT
#define GL_CONSTANT_EXT 0x8576
#endif

#ifndef GL_PRIMARY_COLOR_EXT
#define GL_PRIMARY_COLOR_EXT 0x8577
#endif

#ifndef GL_PREVIOUS_EXT
#define GL_PREVIOUS_EXT 0x8578
#endif

#ifndef GL_SOURCE0_RGB_EXT
#define GL_SOURCE0_RGB_EXT 0x8580
#endif

#ifndef GL_SOURCE1_RGB_EXT
#define GL_SOURCE1_RGB_EXT 0x8581
#endif

#ifndef GL_SOURCE2_RGB_EXT
#define GL_SOURCE2_RGB_EXT 0x8582
#endif

#ifndef GL_SOURCE0_ALPHA_EXT
#define GL_SOURCE0_ALPHA_EXT 0x8588
#endif

#ifndef GL_SOURCE1_ALPHA_EXT
#define GL_SOURCE1_ALPHA_EXT 0x8589
#endif

#ifndef GL_SOURCE2_ALPHA_EXT
#define GL_SOURCE2_ALPHA_EXT 0x858A
#endif

#ifndef GL_OPERAND0_RGB_EXT
#define GL_OPERAND0_RGB_EXT 0x8590
#endif

#ifndef GL_OPERAND1_RGB_EXT
#define GL_OPERAND1_RGB_EXT 0x8591
#endif

#ifndef GL_OPERAND2_RGB_EXT
#define GL_OPERAND2_RGB_EXT 0x8592
#endif

#ifndef GL_OPERAND0_ALPHA_EXT
#define GL_OPERAND0_ALPHA_EXT 0x8598
#endif

#ifndef GL_OPERAND1_ALPHA_EXT
#define GL_OPERAND1_ALPHA_EXT 0x8599
#endif

#ifndef GL_OPERAND2_ALPHA_EXT
#define GL_OPERAND2_ALPHA_EXT 0x859A
#endif

#ifndef GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE
#define GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE 0x85B0
#endif

#ifndef GL_TRANSFORM_HINT_APPLE
#define GL_TRANSFORM_HINT_APPLE 0x85B1
#endif

#ifndef GL_FOG_SCALE_SGIX
#define GL_FOG_SCALE_SGIX 0x81FC
#endif

#ifndef GL_FOG_SCALE_VALUE_SGIX
#define GL_FOG_SCALE_VALUE_SGIX 0x81FD
#endif

#ifndef GL_UNPACK_CONSTANT_DATA_SUNX
#define GL_UNPACK_CONSTANT_DATA_SUNX 0x81D5
#endif

#ifndef GL_TEXTURE_CONSTANT_DATA_SUNX
#define GL_TEXTURE_CONSTANT_DATA_SUNX 0x81D6
#endif

#ifndef GL_GLOBAL_ALPHA_SUN
#define GL_GLOBAL_ALPHA_SUN 0x81D9
#endif

#ifndef GL_GLOBAL_ALPHA_FACTOR_SUN
#define GL_GLOBAL_ALPHA_FACTOR_SUN 0x81DA
#endif

#ifndef GL_RESTART_SUN
#define GL_RESTART_SUN 0x0001
#endif

#ifndef GL_REPLACE_MIDDLE_SUN
#define GL_REPLACE_MIDDLE_SUN 0x0002
#endif

#ifndef GL_REPLACE_OLDEST_SUN
#define GL_REPLACE_OLDEST_SUN 0x0003
#endif

#ifndef GL_TRIANGLE_LIST_SUN
#define GL_TRIANGLE_LIST_SUN 0x81D7
#endif

#ifndef GL_REPLACEMENT_CODE_SUN
#define GL_REPLACEMENT_CODE_SUN 0x81D8
#endif

#ifndef GL_REPLACEMENT_CODE_ARRAY_SUN
#define GL_REPLACEMENT_CODE_ARRAY_SUN 0x85C0
#endif

#ifndef GL_REPLACEMENT_CODE_ARRAY_TYPE_SUN
#define GL_REPLACEMENT_CODE_ARRAY_TYPE_SUN 0x85C1
#endif

#ifndef GL_REPLACEMENT_CODE_ARRAY_STRIDE_SUN
#define GL_REPLACEMENT_CODE_ARRAY_STRIDE_SUN 0x85C2
#endif

#ifndef GL_REPLACEMENT_CODE_ARRAY_POINTER_SUN
#define GL_REPLACEMENT_CODE_ARRAY_POINTER_SUN 0x85C3
#endif

#ifndef GL_R1UI_V3F_SUN
#define GL_R1UI_V3F_SUN 0x85C4
#endif

#ifndef GL_R1UI_C4UB_V3F_SUN
#define GL_R1UI_C4UB_V3F_SUN 0x85C5
#endif

#ifndef GL_R1UI_C3F_V3F_SUN
#define GL_R1UI_C3F_V3F_SUN 0x85C6
#endif

#ifndef GL_R1UI_N3F_V3F_SUN
#define GL_R1UI_N3F_V3F_SUN 0x85C7
#endif

#ifndef GL_R1UI_C4F_N3F_V3F_SUN
#define GL_R1UI_C4F_N3F_V3F_SUN 0x85C8
#endif

#ifndef GL_R1UI_T2F_V3F_SUN
#define GL_R1UI_T2F_V3F_SUN 0x85C9
#endif

#ifndef GL_R1UI_T2F_N3F_V3F_SUN
#define GL_R1UI_T2F_N3F_V3F_SUN 0x85CA
#endif

#ifndef GL_R1UI_T2F_C4F_N3F_V3F_SUN
#define GL_R1UI_T2F_C4F_N3F_V3F_SUN 0x85CB
#endif

#ifndef GL_BLEND_DST_RGB_EXT
#define GL_BLEND_DST_RGB_EXT 0x80C8
#endif

#ifndef GL_BLEND_SRC_RGB_EXT
#define GL_BLEND_SRC_RGB_EXT 0x80C9
#endif

#ifndef GL_BLEND_DST_ALPHA_EXT
#define GL_BLEND_DST_ALPHA_EXT 0x80CA
#endif

#ifndef GL_BLEND_SRC_ALPHA_EXT
#define GL_BLEND_SRC_ALPHA_EXT 0x80CB
#endif

#ifndef GL_RED_MIN_CLAMP_INGR
#define GL_RED_MIN_CLAMP_INGR 0x8560
#endif

#ifndef GL_GREEN_MIN_CLAMP_INGR
#define GL_GREEN_MIN_CLAMP_INGR 0x8561
#endif

#ifndef GL_BLUE_MIN_CLAMP_INGR
#define GL_BLUE_MIN_CLAMP_INGR 0x8562
#endif

#ifndef GL_ALPHA_MIN_CLAMP_INGR
#define GL_ALPHA_MIN_CLAMP_INGR 0x8563
#endif

#ifndef GL_RED_MAX_CLAMP_INGR
#define GL_RED_MAX_CLAMP_INGR 0x8564
#endif

#ifndef GL_GREEN_MAX_CLAMP_INGR
#define GL_GREEN_MAX_CLAMP_INGR 0x8565
#endif

#ifndef GL_BLUE_MAX_CLAMP_INGR
#define GL_BLUE_MAX_CLAMP_INGR 0x8566
#endif

#ifndef GL_ALPHA_MAX_CLAMP_INGR
#define GL_ALPHA_MAX_CLAMP_INGR 0x8567
#endif

#ifndef GL_INTERLACE_READ_INGR
#define GL_INTERLACE_READ_INGR 0x8568
#endif

#ifndef GL_INCR_WRAP_EXT
#define GL_INCR_WRAP_EXT 0x8507
#endif

#ifndef GL_DECR_WRAP_EXT
#define GL_DECR_WRAP_EXT 0x8508
#endif

#ifndef GL_422_EXT
#define GL_422_EXT 0x80CC
#endif

#ifndef GL_422_REV_EXT
#define GL_422_REV_EXT 0x80CD
#endif

#ifndef GL_422_AVERAGE_EXT
#define GL_422_AVERAGE_EXT 0x80CE
#endif

#ifndef GL_422_REV_AVERAGE_EXT
#define GL_422_REV_AVERAGE_EXT 0x80CF
#endif

#ifndef GL_NORMAL_MAP_NV
#define GL_NORMAL_MAP_NV 0x8511
#endif

#ifndef GL_REFLECTION_MAP_NV
#define GL_REFLECTION_MAP_NV 0x8512
#endif

#ifndef GL_NORMAL_MAP_EXT
#define GL_NORMAL_MAP_EXT 0x8511
#endif

#ifndef GL_REFLECTION_MAP_EXT
#define GL_REFLECTION_MAP_EXT 0x8512
#endif

#ifndef GL_TEXTURE_CUBE_MAP_EXT
#define GL_TEXTURE_CUBE_MAP_EXT 0x8513
#endif

#ifndef GL_TEXTURE_BINDING_CUBE_MAP_EXT
#define GL_TEXTURE_BINDING_CUBE_MAP_EXT 0x8514
#endif

#ifndef GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT
#define GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT 0x8515
#endif

#ifndef GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT 0x8516
#endif

#ifndef GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT 0x8517
#endif

#ifndef GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT 0x8518
#endif

#ifndef GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT 0x8519
#endif

#ifndef GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT 0x851A
#endif

#ifndef GL_PROXY_TEXTURE_CUBE_MAP_EXT
#define GL_PROXY_TEXTURE_CUBE_MAP_EXT 0x851B
#endif

#ifndef GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT
#define GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT 0x851C
#endif

#ifndef GL_WRAP_BORDER_SUN
#define GL_WRAP_BORDER_SUN 0x81D4
#endif

#ifndef GL_MAX_TEXTURE_LOD_BIAS_EXT
#define GL_MAX_TEXTURE_LOD_BIAS_EXT 0x84FD
#endif

#ifndef GL_TEXTURE_FILTER_CONTROL_EXT
#define GL_TEXTURE_FILTER_CONTROL_EXT 0x8500
#endif

#ifndef GL_TEXTURE_LOD_BIAS_EXT
#define GL_TEXTURE_LOD_BIAS_EXT 0x8501
#endif

#ifndef GL_TEXTURE_MAX_ANISOTROPY_EXT
#define GL_TEXTURE_MAX_ANISOTROPY_EXT 0x84FE
#endif

#ifndef GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT
#define GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT 0x84FF
#endif

#ifndef GL_MODELVIEW0_STACK_DEPTH_EXT
#define GL_MODELVIEW0_STACK_DEPTH_EXT GL_MODELVIEW_STACK_DEPTH
#endif

#ifndef GL_MODELVIEW1_STACK_DEPTH_EXT
#define GL_MODELVIEW1_STACK_DEPTH_EXT 0x8502
#endif

#ifndef GL_MODELVIEW0_MATRIX_EXT
#define GL_MODELVIEW0_MATRIX_EXT GL_MODELVIEW_MATRIX
#endif

#ifndef GL_MODELVIEW1_MATRIX_EXT
#define GL_MODELVIEW1_MATRIX_EXT 0x8506
#endif

#ifndef GL_VERTEX_WEIGHTING_EXT
#define GL_VERTEX_WEIGHTING_EXT 0x8509
#endif

#ifndef GL_MODELVIEW0_EXT
#define GL_MODELVIEW0_EXT GL_MODELVIEW
#endif

#ifndef GL_MODELVIEW1_EXT
#define GL_MODELVIEW1_EXT 0x850A
#endif

#ifndef GL_CURRENT_VERTEX_WEIGHT_EXT
#define GL_CURRENT_VERTEX_WEIGHT_EXT 0x850B
#endif

#ifndef GL_VERTEX_WEIGHT_ARRAY_EXT
#define GL_VERTEX_WEIGHT_ARRAY_EXT 0x850C
#endif

#ifndef GL_VERTEX_WEIGHT_ARRAY_SIZE_EXT
#define GL_VERTEX_WEIGHT_ARRAY_SIZE_EXT 0x850D
#endif

#ifndef GL_VERTEX_WEIGHT_ARRAY_TYPE_EXT
#define GL_VERTEX_WEIGHT_ARRAY_TYPE_EXT 0x850E
#endif

#ifndef GL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT
#define GL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT 0x850F
#endif

#ifndef GL_VERTEX_WEIGHT_ARRAY_POINTER_EXT
#define GL_VERTEX_WEIGHT_ARRAY_POINTER_EXT 0x8510
#endif

#ifndef GL_MAX_SHININESS_NV
#define GL_MAX_SHININESS_NV 0x8504
#endif

#ifndef GL_MAX_SPOT_EXPONENT_NV
#define GL_MAX_SPOT_EXPONENT_NV 0x8505
#endif

#ifndef GL_VERTEX_ARRAY_RANGE_NV
#define GL_VERTEX_ARRAY_RANGE_NV 0x851D
#endif

#ifndef GL_VERTEX_ARRAY_RANGE_LENGTH_NV
#define GL_VERTEX_ARRAY_RANGE_LENGTH_NV 0x851E
#endif

#ifndef GL_VERTEX_ARRAY_RANGE_VALID_NV
#define GL_VERTEX_ARRAY_RANGE_VALID_NV 0x851F
#endif

#ifndef GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV
#define GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV 0x8520
#endif

#ifndef GL_VERTEX_ARRAY_RANGE_POINTER_NV
#define GL_VERTEX_ARRAY_RANGE_POINTER_NV 0x8521
#endif

#ifndef GL_REGISTER_COMBINERS_NV
#define GL_REGISTER_COMBINERS_NV 0x8522
#endif

#ifndef GL_VARIABLE_A_NV
#define GL_VARIABLE_A_NV 0x8523
#endif

#ifndef GL_VARIABLE_B_NV
#define GL_VARIABLE_B_NV 0x8524
#endif

#ifndef GL_VARIABLE_C_NV
#define GL_VARIABLE_C_NV 0x8525
#endif

#ifndef GL_VARIABLE_D_NV
#define GL_VARIABLE_D_NV 0x8526
#endif

#ifndef GL_VARIABLE_E_NV
#define GL_VARIABLE_E_NV 0x8527
#endif

#ifndef GL_VARIABLE_F_NV
#define GL_VARIABLE_F_NV 0x8528
#endif

#ifndef GL_VARIABLE_G_NV
#define GL_VARIABLE_G_NV 0x8529
#endif

#ifndef GL_CONSTANT_COLOR0_NV
#define GL_CONSTANT_COLOR0_NV 0x852A
#endif

#ifndef GL_CONSTANT_COLOR1_NV
#define GL_CONSTANT_COLOR1_NV 0x852B
#endif

#ifndef GL_PRIMARY_COLOR_NV
#define GL_PRIMARY_COLOR_NV 0x852C
#endif

#ifndef GL_SECONDARY_COLOR_NV
#define GL_SECONDARY_COLOR_NV 0x852D
#endif

#ifndef GL_SPARE0_NV
#define GL_SPARE0_NV 0x852E
#endif

#ifndef GL_SPARE1_NV
#define GL_SPARE1_NV 0x852F
#endif

#ifndef GL_DISCARD_NV
#define GL_DISCARD_NV 0x8530
#endif

#ifndef GL_E_TIMES_F_NV
#define GL_E_TIMES_F_NV 0x8531
#endif

#ifndef GL_SPARE0_PLUS_SECONDARY_COLOR_NV
#define GL_SPARE0_PLUS_SECONDARY_COLOR_NV 0x8532
#endif

#ifndef GL_UNSIGNED_IDENTITY_NV
#define GL_UNSIGNED_IDENTITY_NV 0x8536
#endif

#ifndef GL_UNSIGNED_INVERT_NV
#define GL_UNSIGNED_INVERT_NV 0x8537
#endif

#ifndef GL_EXPAND_NORMAL_NV
#define GL_EXPAND_NORMAL_NV 0x8538
#endif

#ifndef GL_EXPAND_NEGATE_NV
#define GL_EXPAND_NEGATE_NV 0x8539
#endif

#ifndef GL_HALF_BIAS_NORMAL_NV
#define GL_HALF_BIAS_NORMAL_NV 0x853A
#endif

#ifndef GL_HALF_BIAS_NEGATE_NV
#define GL_HALF_BIAS_NEGATE_NV 0x853B
#endif

#ifndef GL_SIGNED_IDENTITY_NV
#define GL_SIGNED_IDENTITY_NV 0x853C
#endif

#ifndef GL_SIGNED_NEGATE_NV
#define GL_SIGNED_NEGATE_NV 0x853D
#endif

#ifndef GL_SCALE_BY_TWO_NV
#define GL_SCALE_BY_TWO_NV 0x853E
#endif

#ifndef GL_SCALE_BY_FOUR_NV
#define GL_SCALE_BY_FOUR_NV 0x853F
#endif

#ifndef GL_SCALE_BY_ONE_HALF_NV
#define GL_SCALE_BY_ONE_HALF_NV 0x8540
#endif

#ifndef GL_BIAS_BY_NEGATIVE_ONE_HALF_NV
#define GL_BIAS_BY_NEGATIVE_ONE_HALF_NV 0x8541
#endif

#ifndef GL_COMBINER_INPUT_NV
#define GL_COMBINER_INPUT_NV 0x8542
#endif

#ifndef GL_COMBINER_MAPPING_NV
#define GL_COMBINER_MAPPING_NV 0x8543
#endif

#ifndef GL_COMBINER_COMPONENT_USAGE_NV
#define GL_COMBINER_COMPONENT_USAGE_NV 0x8544
#endif

#ifndef GL_COMBINER_AB_DOT_PRODUCT_NV
#define GL_COMBINER_AB_DOT_PRODUCT_NV 0x8545
#endif

#ifndef GL_COMBINER_CD_DOT_PRODUCT_NV
#define GL_COMBINER_CD_DOT_PRODUCT_NV 0x8546
#endif

#ifndef GL_COMBINER_MUX_SUM_NV
#define GL_COMBINER_MUX_SUM_NV 0x8547
#endif

#ifndef GL_COMBINER_SCALE_NV
#define GL_COMBINER_SCALE_NV 0x8548
#endif

#ifndef GL_COMBINER_BIAS_NV
#define GL_COMBINER_BIAS_NV 0x8549
#endif

#ifndef GL_COMBINER_AB_OUTPUT_NV
#define GL_COMBINER_AB_OUTPUT_NV 0x854A
#endif

#ifndef GL_COMBINER_CD_OUTPUT_NV
#define GL_COMBINER_CD_OUTPUT_NV 0x854B
#endif

#ifndef GL_COMBINER_SUM_OUTPUT_NV
#define GL_COMBINER_SUM_OUTPUT_NV 0x854C
#endif

#ifndef GL_MAX_GENERAL_COMBINERS_NV
#define GL_MAX_GENERAL_COMBINERS_NV 0x854D
#endif

#ifndef GL_NUM_GENERAL_COMBINERS_NV
#define GL_NUM_GENERAL_COMBINERS_NV 0x854E
#endif

#ifndef GL_COLOR_SUM_CLAMP_NV
#define GL_COLOR_SUM_CLAMP_NV 0x854F
#endif

#ifndef GL_COMBINER0_NV
#define GL_COMBINER0_NV 0x8550
#endif

#ifndef GL_COMBINER1_NV
#define GL_COMBINER1_NV 0x8551
#endif

#ifndef GL_COMBINER2_NV
#define GL_COMBINER2_NV 0x8552
#endif

#ifndef GL_COMBINER3_NV
#define GL_COMBINER3_NV 0x8553
#endif

#ifndef GL_COMBINER4_NV
#define GL_COMBINER4_NV 0x8554
#endif

#ifndef GL_COMBINER5_NV
#define GL_COMBINER5_NV 0x8555
#endif

#ifndef GL_COMBINER6_NV
#define GL_COMBINER6_NV 0x8556
#endif

#ifndef GL_COMBINER7_NV
#define GL_COMBINER7_NV 0x8557
#endif

#ifndef GL_FOG_DISTANCE_MODE_NV
#define GL_FOG_DISTANCE_MODE_NV 0x855A
#endif

#ifndef GL_EYE_RADIAL_NV
#define GL_EYE_RADIAL_NV 0x855B
#endif

#ifndef GL_EYE_PLANE_ABSOLUTE_NV
#define GL_EYE_PLANE_ABSOLUTE_NV 0x855C
#endif

#ifndef GL_EMBOSS_LIGHT_NV
#define GL_EMBOSS_LIGHT_NV 0x855D
#endif

#ifndef GL_EMBOSS_CONSTANT_NV
#define GL_EMBOSS_CONSTANT_NV 0x855E
#endif

#ifndef GL_EMBOSS_MAP_NV
#define GL_EMBOSS_MAP_NV 0x855F
#endif

#ifndef GL_COMBINE4_NV
#define GL_COMBINE4_NV 0x8503
#endif

#ifndef GL_SOURCE3_RGB_NV
#define GL_SOURCE3_RGB_NV 0x8583
#endif

#ifndef GL_SOURCE3_ALPHA_NV
#define GL_SOURCE3_ALPHA_NV 0x858B
#endif

#ifndef GL_OPERAND3_RGB_NV
#define GL_OPERAND3_RGB_NV 0x8593
#endif

#ifndef GL_OPERAND3_ALPHA_NV
#define GL_OPERAND3_ALPHA_NV 0x859B
#endif

#ifndef GL_COMPRESSED_RGB_S3TC_DXT1_EXT
#define GL_COMPRESSED_RGB_S3TC_DXT1_EXT 0x83F0
#endif

#ifndef GL_COMPRESSED_RGBA_S3TC_DXT1_EXT
#define GL_COMPRESSED_RGBA_S3TC_DXT1_EXT 0x83F1
#endif

#ifndef GL_COMPRESSED_RGBA_S3TC_DXT3_EXT
#define GL_COMPRESSED_RGBA_S3TC_DXT3_EXT 0x83F2
#endif

#ifndef GL_COMPRESSED_RGBA_S3TC_DXT5_EXT
#define GL_COMPRESSED_RGBA_S3TC_DXT5_EXT 0x83F3
#endif

#ifndef GL_CULL_VERTEX_IBM
#define GL_CULL_VERTEX_IBM 103050
#endif

#ifndef GL_VERTEX_ARRAY_LIST_IBM
#define GL_VERTEX_ARRAY_LIST_IBM 103070
#endif

#ifndef GL_NORMAL_ARRAY_LIST_IBM
#define GL_NORMAL_ARRAY_LIST_IBM 103071
#endif

#ifndef GL_COLOR_ARRAY_LIST_IBM
#define GL_COLOR_ARRAY_LIST_IBM 103072
#endif

#ifndef GL_INDEX_ARRAY_LIST_IBM
#define GL_INDEX_ARRAY_LIST_IBM 103073
#endif

#ifndef GL_TEXTURE_COORD_ARRAY_LIST_IBM
#define GL_TEXTURE_COORD_ARRAY_LIST_IBM 103074
#endif

#ifndef GL_EDGE_FLAG_ARRAY_LIST_IBM
#define GL_EDGE_FLAG_ARRAY_LIST_IBM 103075
#endif

#ifndef GL_FOG_COORDINATE_ARRAY_LIST_IBM
#define GL_FOG_COORDINATE_ARRAY_LIST_IBM 103076
#endif

#ifndef GL_SECONDARY_COLOR_ARRAY_LIST_IBM
#define GL_SECONDARY_COLOR_ARRAY_LIST_IBM 103077
#endif

#ifndef GL_VERTEX_ARRAY_LIST_STRIDE_IBM
#define GL_VERTEX_ARRAY_LIST_STRIDE_IBM 103080
#endif

#ifndef GL_NORMAL_ARRAY_LIST_STRIDE_IBM
#define GL_NORMAL_ARRAY_LIST_STRIDE_IBM 103081
#endif

#ifndef GL_COLOR_ARRAY_LIST_STRIDE_IBM
#define GL_COLOR_ARRAY_LIST_STRIDE_IBM 103082
#endif

#ifndef GL_INDEX_ARRAY_LIST_STRIDE_IBM
#define GL_INDEX_ARRAY_LIST_STRIDE_IBM 103083
#endif

#ifndef GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM
#define GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM 103084
#endif

#ifndef GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM
#define GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM 103085
#endif

#ifndef GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM
#define GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM 103086
#endif

#ifndef GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM
#define GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM 103087
#endif

#ifndef GL_PACK_SUBSAMPLE_RATE_SGIX
#define GL_PACK_SUBSAMPLE_RATE_SGIX 0x85A0
#endif

#ifndef GL_UNPACK_SUBSAMPLE_RATE_SGIX
#define GL_UNPACK_SUBSAMPLE_RATE_SGIX 0x85A1
#endif

#ifndef GL_PIXEL_SUBSAMPLE_4444_SGIX
#define GL_PIXEL_SUBSAMPLE_4444_SGIX 0x85A2
#endif

#ifndef GL_PIXEL_SUBSAMPLE_2424_SGIX
#define GL_PIXEL_SUBSAMPLE_2424_SGIX 0x85A3
#endif

#ifndef GL_PIXEL_SUBSAMPLE_4242_SGIX
#define GL_PIXEL_SUBSAMPLE_4242_SGIX 0x85A4
#endif

#ifndef GL_PACK_SUBSAMPLE_RATE_SGIX
#define GL_PACK_SUBSAMPLE_RATE_SGIX 0x85A0
#endif

#ifndef GL_UNPACK_SUBSAMPLE_RATE_SGIX
#define GL_UNPACK_SUBSAMPLE_RATE_SGIX 0x85A1
#endif

#ifndef GL_PIXEL_SUBSAMPLE_4444_SGIX
#define GL_PIXEL_SUBSAMPLE_4444_SGIX 0x85A2
#endif

#ifndef GL_PIXEL_SUBSAMPLE_2424_SGIX
#define GL_PIXEL_SUBSAMPLE_2424_SGIX 0x85A3
#endif

#ifndef GL_PIXEL_SUBSAMPLE_4242_SGIX
#define GL_PIXEL_SUBSAMPLE_4242_SGIX 0x85A4
#endif

#ifndef GL_YCRCB_SGIX
#define GL_YCRCB_SGIX 0x8318
#endif

#ifndef GL_YCRCBA_SGIX
#define GL_YCRCBA_SGIX 0x8319
#endif

#ifndef GL_DEPTH_PASS_INSTRUMENT_SGIX
#define GL_DEPTH_PASS_INSTRUMENT_SGIX 0x8310
#endif

#ifndef GL_DEPTH_PASS_INSTRUMENT_COUNTERS_SGIX
#define GL_DEPTH_PASS_INSTRUMENT_COUNTERS_SGIX 0x8311
#endif

#ifndef GL_DEPTH_PASS_INSTRUMENT_MAX_SGIX
#define GL_DEPTH_PASS_INSTRUMENT_MAX_SGIX 0x8312
#endif

#ifndef GL_COMPRESSED_RGB_FXT1_3DFX
#define GL_COMPRESSED_RGB_FXT1_3DFX 0x86B0
#endif

#ifndef GL_COMPRESSED_RGBA_FXT1_3DFX
#define GL_COMPRESSED_RGBA_FXT1_3DFX 0x86B1
#endif

#ifndef GL_MULTISAMPLE_3DFX
#define GL_MULTISAMPLE_3DFX 0x86B2
#endif

#ifndef GL_SAMPLE_BUFFERS_3DFX
#define GL_SAMPLE_BUFFERS_3DFX 0x86B3
#endif

#ifndef GL_SAMPLES_3DFX
#define GL_SAMPLES_3DFX 0x86B4
#endif

#ifndef GL_MULTISAMPLE_BIT_3DFX
#define GL_MULTISAMPLE_BIT_3DFX 0x20000000
#endif

#ifndef GL_MULTISAMPLE_EXT
#define GL_MULTISAMPLE_EXT 0x809D
#endif

#ifndef GL_SAMPLE_ALPHA_TO_MASK_EXT
#define GL_SAMPLE_ALPHA_TO_MASK_EXT 0x809E
#endif

#ifndef GL_SAMPLE_ALPHA_TO_ONE_EXT
#define GL_SAMPLE_ALPHA_TO_ONE_EXT 0x809F
#endif

#ifndef GL_SAMPLE_MASK_EXT
#define GL_SAMPLE_MASK_EXT 0x80A0
#endif

#ifndef GL_1PASS_EXT
#define GL_1PASS_EXT 0x80A1
#endif

#ifndef GL_2PASS_0_EXT
#define GL_2PASS_0_EXT 0x80A2
#endif

#ifndef GL_2PASS_1_EXT
#define GL_2PASS_1_EXT 0x80A3
#endif

#ifndef GL_4PASS_0_EXT
#define GL_4PASS_0_EXT 0x80A4
#endif

#ifndef GL_4PASS_1_EXT
#define GL_4PASS_1_EXT 0x80A5
#endif

#ifndef GL_4PASS_2_EXT
#define GL_4PASS_2_EXT 0x80A6
#endif

#ifndef GL_4PASS_3_EXT
#define GL_4PASS_3_EXT 0x80A7
#endif

#ifndef GL_SAMPLE_BUFFERS_EXT
#define GL_SAMPLE_BUFFERS_EXT 0x80A8
#endif

#ifndef GL_SAMPLES_EXT
#define GL_SAMPLES_EXT 0x80A9
#endif

#ifndef GL_SAMPLE_MASK_VALUE_EXT
#define GL_SAMPLE_MASK_VALUE_EXT 0x80AA
#endif

#ifndef GL_SAMPLE_MASK_INVERT_EXT
#define GL_SAMPLE_MASK_INVERT_EXT 0x80AB
#endif

#ifndef GL_SAMPLE_PATTERN_EXT
#define GL_SAMPLE_PATTERN_EXT 0x80AC
#endif

#ifndef GL_MULTISAMPLE_BIT_EXT
#define GL_MULTISAMPLE_BIT_EXT 0x20000000
#endif

#ifndef GL_VERTEX_PRECLIP_SGIX
#define GL_VERTEX_PRECLIP_SGIX 0x83EE
#endif

#ifndef GL_VERTEX_PRECLIP_HINT_SGIX
#define GL_VERTEX_PRECLIP_HINT_SGIX 0x83EF
#endif

#ifndef GL_CONVOLUTION_HINT_SGIX
#define GL_CONVOLUTION_HINT_SGIX 0x8316
#endif

#ifndef GL_PACK_RESAMPLE_SGIX
#define GL_PACK_RESAMPLE_SGIX 0x842C
#endif

#ifndef GL_UNPACK_RESAMPLE_SGIX
#define GL_UNPACK_RESAMPLE_SGIX 0x842D
#endif

#ifndef GL_RESAMPLE_REPLICATE_SGIX
#define GL_RESAMPLE_REPLICATE_SGIX 0x842E
#endif

#ifndef GL_RESAMPLE_ZERO_FILL_SGIX
#define GL_RESAMPLE_ZERO_FILL_SGIX 0x842F
#endif

#ifndef GL_RESAMPLE_DECIMATE_SGIX
#define GL_RESAMPLE_DECIMATE_SGIX 0x8430
#endif

#ifndef GL_EYE_DISTANCE_TO_POINT_SGIS
#define GL_EYE_DISTANCE_TO_POINT_SGIS 0x81F0
#endif

#ifndef GL_OBJECT_DISTANCE_TO_POINT_SGIS
#define GL_OBJECT_DISTANCE_TO_POINT_SGIS 0x81F1
#endif

#ifndef GL_EYE_DISTANCE_TO_LINE_SGIS
#define GL_EYE_DISTANCE_TO_LINE_SGIS 0x81F2
#endif

#ifndef GL_OBJECT_DISTANCE_TO_LINE_SGIS
#define GL_OBJECT_DISTANCE_TO_LINE_SGIS 0x81F3
#endif

#ifndef GL_EYE_POINT_SGIS
#define GL_EYE_POINT_SGIS 0x81F4
#endif

#ifndef GL_OBJECT_POINT_SGIS
#define GL_OBJECT_POINT_SGIS 0x81F5
#endif

#ifndef GL_EYE_LINE_SGIS
#define GL_EYE_LINE_SGIS 0x81F6
#endif

#ifndef GL_OBJECT_LINE_SGIS
#define GL_OBJECT_LINE_SGIS 0x81F7
#endif

#ifndef GL_TEXTURE_COLOR_WRITEMASK_SGIS
#define GL_TEXTURE_COLOR_WRITEMASK_SGIS 0x81EF
#endif

#ifndef GL_DOT3_RGB_EXT
#define GL_DOT3_RGB_EXT 0x8740
#endif

#ifndef GL_DOT3_RGBA_EXT
#define GL_DOT3_RGBA_EXT 0x8741
#endif

#ifndef GL_MIRROR_CLAMP_ATI
#define GL_MIRROR_CLAMP_ATI 0x8742
#endif

#ifndef GL_MIRROR_CLAMP_TO_EDGE_ATI
#define GL_MIRROR_CLAMP_TO_EDGE_ATI 0x8743
#endif

#ifndef GL_ALL_COMPLETED_NV
#define GL_ALL_COMPLETED_NV 0x84F2
#endif

#ifndef GL_FENCE_STATUS_NV
#define GL_FENCE_STATUS_NV 0x84F3
#endif

#ifndef GL_FENCE_CONDITION_NV
#define GL_FENCE_CONDITION_NV 0x84F4
#endif

#ifndef GL_MIRRORED_REPEAT_IBM
#define GL_MIRRORED_REPEAT_IBM 0x8370
#endif

#ifndef GL_EVAL_2D_NV
#define GL_EVAL_2D_NV 0x86C0
#endif

#ifndef GL_EVAL_TRIANGULAR_2D_NV
#define GL_EVAL_TRIANGULAR_2D_NV 0x86C1
#endif

#ifndef GL_MAP_TESSELLATION_NV
#define GL_MAP_TESSELLATION_NV 0x86C2
#endif

#ifndef GL_MAP_ATTRIB_U_ORDER_NV
#define GL_MAP_ATTRIB_U_ORDER_NV 0x86C3
#endif

#ifndef GL_MAP_ATTRIB_V_ORDER_NV
#define GL_MAP_ATTRIB_V_ORDER_NV 0x86C4
#endif

#ifndef GL_EVAL_FRACTIONAL_TESSELLATION_NV
#define GL_EVAL_FRACTIONAL_TESSELLATION_NV 0x86C5
#endif

#ifndef GL_EVAL_VERTEX_ATTRIB0_NV
#define GL_EVAL_VERTEX_ATTRIB0_NV 0x86C6
#endif

#ifndef GL_EVAL_VERTEX_ATTRIB1_NV
#define GL_EVAL_VERTEX_ATTRIB1_NV 0x86C7
#endif

#ifndef GL_EVAL_VERTEX_ATTRIB2_NV
#define GL_EVAL_VERTEX_ATTRIB2_NV 0x86C8
#endif

#ifndef GL_EVAL_VERTEX_ATTRIB3_NV
#define GL_EVAL_VERTEX_ATTRIB3_NV 0x86C9
#endif

#ifndef GL_EVAL_VERTEX_ATTRIB4_NV
#define GL_EVAL_VERTEX_ATTRIB4_NV 0x86CA
#endif

#ifndef GL_EVAL_VERTEX_ATTRIB5_NV
#define GL_EVAL_VERTEX_ATTRIB5_NV 0x86CB
#endif

#ifndef GL_EVAL_VERTEX_ATTRIB6_NV
#define GL_EVAL_VERTEX_ATTRIB6_NV 0x86CC
#endif

#ifndef GL_EVAL_VERTEX_ATTRIB7_NV
#define GL_EVAL_VERTEX_ATTRIB7_NV 0x86CD
#endif

#ifndef GL_EVAL_VERTEX_ATTRIB8_NV
#define GL_EVAL_VERTEX_ATTRIB8_NV 0x86CE
#endif

#ifndef GL_EVAL_VERTEX_ATTRIB9_NV
#define GL_EVAL_VERTEX_ATTRIB9_NV 0x86CF
#endif

#ifndef GL_EVAL_VERTEX_ATTRIB10_NV
#define GL_EVAL_VERTEX_ATTRIB10_NV 0x86D0
#endif

#ifndef GL_EVAL_VERTEX_ATTRIB11_NV
#define GL_EVAL_VERTEX_ATTRIB11_NV 0x86D1
#endif

#ifndef GL_EVAL_VERTEX_ATTRIB12_NV
#define GL_EVAL_VERTEX_ATTRIB12_NV 0x86D2
#endif

#ifndef GL_EVAL_VERTEX_ATTRIB13_NV
#define GL_EVAL_VERTEX_ATTRIB13_NV 0x86D3
#endif

#ifndef GL_EVAL_VERTEX_ATTRIB14_NV
#define GL_EVAL_VERTEX_ATTRIB14_NV 0x86D4
#endif

#ifndef GL_EVAL_VERTEX_ATTRIB15_NV
#define GL_EVAL_VERTEX_ATTRIB15_NV 0x86D5
#endif

#ifndef GL_MAX_MAP_TESSELLATION_NV
#define GL_MAX_MAP_TESSELLATION_NV 0x86D6
#endif

#ifndef GL_MAX_RATIONAL_EVAL_ORDER_NV
#define GL_MAX_RATIONAL_EVAL_ORDER_NV 0x86D7
#endif

#ifndef GL_DEPTH_STENCIL_NV
#define GL_DEPTH_STENCIL_NV 0x84F9
#endif

#ifndef GL_UNSIGNED_INT_24_8_NV
#define GL_UNSIGNED_INT_24_8_NV 0x84FA
#endif

#ifndef GL_PER_STAGE_CONSTANTS_NV
#define GL_PER_STAGE_CONSTANTS_NV 0x8535
#endif

#ifndef GL_TEXTURE_RECTANGLE_NV
#define GL_TEXTURE_RECTANGLE_NV 0x84F5
#endif

#ifndef GL_TEXTURE_BINDING_RECTANGLE_NV
#define GL_TEXTURE_BINDING_RECTANGLE_NV 0x84F6
#endif

#ifndef GL_PROXY_TEXTURE_RECTANGLE_NV
#define GL_PROXY_TEXTURE_RECTANGLE_NV 0x84F7
#endif

#ifndef GL_MAX_RECTANGLE_TEXTURE_SIZE_NV
#define GL_MAX_RECTANGLE_TEXTURE_SIZE_NV 0x84F8
#endif

#ifndef GL_OFFSET_TEXTURE_RECTANGLE_NV
#define GL_OFFSET_TEXTURE_RECTANGLE_NV 0x864C
#endif

#ifndef GL_OFFSET_TEXTURE_RECTANGLE_SCALE_NV
#define GL_OFFSET_TEXTURE_RECTANGLE_SCALE_NV 0x864D
#endif

#ifndef GL_DOT_PRODUCT_TEXTURE_RECTANGLE_NV
#define GL_DOT_PRODUCT_TEXTURE_RECTANGLE_NV 0x864E
#endif

#ifndef GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV
#define GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV 0x86D9
#endif

#ifndef GL_UNSIGNED_INT_S8_S8_8_8_NV
#define GL_UNSIGNED_INT_S8_S8_8_8_NV 0x86DA
#endif

#ifndef GL_UNSIGNED_INT_8_8_S8_S8_REV_NV
#define GL_UNSIGNED_INT_8_8_S8_S8_REV_NV 0x86DB
#endif

#ifndef GL_DSDT_MAG_INTENSITY_NV
#define GL_DSDT_MAG_INTENSITY_NV 0x86DC
#endif

#ifndef GL_SHADER_CONSISTENT_NV
#define GL_SHADER_CONSISTENT_NV 0x86DD
#endif

#ifndef GL_TEXTURE_SHADER_NV
#define GL_TEXTURE_SHADER_NV 0x86DE
#endif

#ifndef GL_SHADER_OPERATION_NV
#define GL_SHADER_OPERATION_NV 0x86DF
#endif

#ifndef GL_CULL_MODES_NV
#define GL_CULL_MODES_NV 0x86E0
#endif

#ifndef GL_OFFSET_TEXTURE_MATRIX_NV
#define GL_OFFSET_TEXTURE_MATRIX_NV 0x86E1
#endif

#ifndef GL_OFFSET_TEXTURE_SCALE_NV
#define GL_OFFSET_TEXTURE_SCALE_NV 0x86E2
#endif

#ifndef GL_OFFSET_TEXTURE_BIAS_NV
#define GL_OFFSET_TEXTURE_BIAS_NV 0x86E3
#endif

#ifndef GL_OFFSET_TEXTURE_2D_MATRIX_NV
#define GL_OFFSET_TEXTURE_2D_MATRIX_NV GL_OFFSET_TEXTURE_MATRIX_NV
#endif

#ifndef GL_OFFSET_TEXTURE_2D_SCALE_NV
#define GL_OFFSET_TEXTURE_2D_SCALE_NV GL_OFFSET_TEXTURE_SCALE_NV
#endif

#ifndef GL_OFFSET_TEXTURE_2D_BIAS_NV
#define GL_OFFSET_TEXTURE_2D_BIAS_NV GL_OFFSET_TEXTURE_BIAS_NV
#endif

#ifndef GL_PREVIOUS_TEXTURE_INPUT_NV
#define GL_PREVIOUS_TEXTURE_INPUT_NV 0x86E4
#endif

#ifndef GL_CONST_EYE_NV
#define GL_CONST_EYE_NV 0x86E5
#endif

#ifndef GL_PASS_THROUGH_NV
#define GL_PASS_THROUGH_NV 0x86E6
#endif

#ifndef GL_CULL_FRAGMENT_NV
#define GL_CULL_FRAGMENT_NV 0x86E7
#endif

#ifndef GL_OFFSET_TEXTURE_2D_NV
#define GL_OFFSET_TEXTURE_2D_NV 0x86E8
#endif

#ifndef GL_DEPENDENT_AR_TEXTURE_2D_NV
#define GL_DEPENDENT_AR_TEXTURE_2D_NV 0x86E9
#endif

#ifndef GL_DEPENDENT_GB_TEXTURE_2D_NV
#define GL_DEPENDENT_GB_TEXTURE_2D_NV 0x86EA
#endif

#ifndef GL_DOT_PRODUCT_NV
#define GL_DOT_PRODUCT_NV 0x86EC
#endif

#ifndef GL_DOT_PRODUCT_DEPTH_REPLACE_NV
#define GL_DOT_PRODUCT_DEPTH_REPLACE_NV 0x86ED
#endif

#ifndef GL_DOT_PRODUCT_TEXTURE_2D_NV
#define GL_DOT_PRODUCT_TEXTURE_2D_NV 0x86EE
#endif

#ifndef GL_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV
#define GL_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV 0x86F0
#endif

#ifndef GL_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV
#define GL_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV 0x86F1
#endif

#ifndef GL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV
#define GL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV 0x86F2
#endif

#ifndef GL_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV
#define GL_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV 0x86F3
#endif

#ifndef GL_HILO_NV
#define GL_HILO_NV 0x86F4
#endif

#ifndef GL_DSDT_NV
#define GL_DSDT_NV 0x86F5
#endif

#ifndef GL_DSDT_MAG_NV
#define GL_DSDT_MAG_NV 0x86F6
#endif

#ifndef GL_DSDT_MAG_VIB_NV
#define GL_DSDT_MAG_VIB_NV 0x86F7
#endif

#ifndef GL_HILO16_NV
#define GL_HILO16_NV 0x86F8
#endif

#ifndef GL_SIGNED_HILO_NV
#define GL_SIGNED_HILO_NV 0x86F9
#endif

#ifndef GL_SIGNED_HILO16_NV
#define GL_SIGNED_HILO16_NV 0x86FA
#endif

#ifndef GL_SIGNED_RGBA_NV
#define GL_SIGNED_RGBA_NV 0x86FB
#endif

#ifndef GL_SIGNED_RGBA8_NV
#define GL_SIGNED_RGBA8_NV 0x86FC
#endif

#ifndef GL_SIGNED_RGB_NV
#define GL_SIGNED_RGB_NV 0x86FE
#endif

#ifndef GL_SIGNED_RGB8_NV
#define GL_SIGNED_RGB8_NV 0x86FF
#endif

#ifndef GL_SIGNED_LUMINANCE_NV
#define GL_SIGNED_LUMINANCE_NV 0x8701
#endif

#ifndef GL_SIGNED_LUMINANCE8_NV
#define GL_SIGNED_LUMINANCE8_NV 0x8702
#endif

#ifndef GL_SIGNED_LUMINANCE_ALPHA_NV
#define GL_SIGNED_LUMINANCE_ALPHA_NV 0x8703
#endif

#ifndef GL_SIGNED_LUMINANCE8_ALPHA8_NV
#define GL_SIGNED_LUMINANCE8_ALPHA8_NV 0x8704
#endif

#ifndef GL_SIGNED_ALPHA_NV
#define GL_SIGNED_ALPHA_NV 0x8705
#endif

#ifndef GL_SIGNED_ALPHA8_NV
#define GL_SIGNED_ALPHA8_NV 0x8706
#endif

#ifndef GL_SIGNED_INTENSITY_NV
#define GL_SIGNED_INTENSITY_NV 0x8707
#endif

#ifndef GL_SIGNED_INTENSITY8_NV
#define GL_SIGNED_INTENSITY8_NV 0x8708
#endif

#ifndef GL_DSDT8_NV
#define GL_DSDT8_NV 0x8709
#endif

#ifndef GL_DSDT8_MAG8_NV
#define GL_DSDT8_MAG8_NV 0x870A
#endif

#ifndef GL_DSDT8_MAG8_INTENSITY8_NV
#define GL_DSDT8_MAG8_INTENSITY8_NV 0x870B
#endif

#ifndef GL_SIGNED_RGB_UNSIGNED_ALPHA_NV
#define GL_SIGNED_RGB_UNSIGNED_ALPHA_NV 0x870C
#endif

#ifndef GL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV
#define GL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV 0x870D
#endif

#ifndef GL_HI_SCALE_NV
#define GL_HI_SCALE_NV 0x870E
#endif

#ifndef GL_LO_SCALE_NV
#define GL_LO_SCALE_NV 0x870F
#endif

#ifndef GL_DS_SCALE_NV
#define GL_DS_SCALE_NV 0x8710
#endif

#ifndef GL_DT_SCALE_NV
#define GL_DT_SCALE_NV 0x8711
#endif

#ifndef GL_MAGNITUDE_SCALE_NV
#define GL_MAGNITUDE_SCALE_NV 0x8712
#endif

#ifndef GL_VIBRANCE_SCALE_NV
#define GL_VIBRANCE_SCALE_NV 0x8713
#endif

#ifndef GL_HI_BIAS_NV
#define GL_HI_BIAS_NV 0x8714
#endif

#ifndef GL_LO_BIAS_NV
#define GL_LO_BIAS_NV 0x8715
#endif

#ifndef GL_DS_BIAS_NV
#define GL_DS_BIAS_NV 0x8716
#endif

#ifndef GL_DT_BIAS_NV
#define GL_DT_BIAS_NV 0x8717
#endif

#ifndef GL_MAGNITUDE_BIAS_NV
#define GL_MAGNITUDE_BIAS_NV 0x8718
#endif

#ifndef GL_VIBRANCE_BIAS_NV
#define GL_VIBRANCE_BIAS_NV 0x8719
#endif

#ifndef GL_TEXTURE_BORDER_VALUES_NV
#define GL_TEXTURE_BORDER_VALUES_NV 0x871A
#endif

#ifndef GL_TEXTURE_HI_SIZE_NV
#define GL_TEXTURE_HI_SIZE_NV 0x871B
#endif

#ifndef GL_TEXTURE_LO_SIZE_NV
#define GL_TEXTURE_LO_SIZE_NV 0x871C
#endif

#ifndef GL_TEXTURE_DS_SIZE_NV
#define GL_TEXTURE_DS_SIZE_NV 0x871D
#endif

#ifndef GL_TEXTURE_DT_SIZE_NV
#define GL_TEXTURE_DT_SIZE_NV 0x871E
#endif

#ifndef GL_TEXTURE_MAG_SIZE_NV
#define GL_TEXTURE_MAG_SIZE_NV 0x871F
#endif

#ifndef GL_DOT_PRODUCT_TEXTURE_3D_NV
#define GL_DOT_PRODUCT_TEXTURE_3D_NV 0x86EF
#endif

#ifndef GL_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV
#define GL_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV 0x8533
#endif

#ifndef GL_VERTEX_PROGRAM_NV
#define GL_VERTEX_PROGRAM_NV 0x8620
#endif

#ifndef GL_VERTEX_STATE_PROGRAM_NV
#define GL_VERTEX_STATE_PROGRAM_NV 0x8621
#endif

#ifndef GL_ATTRIB_ARRAY_SIZE_NV
#define GL_ATTRIB_ARRAY_SIZE_NV 0x8623
#endif

#ifndef GL_ATTRIB_ARRAY_STRIDE_NV
#define GL_ATTRIB_ARRAY_STRIDE_NV 0x8624
#endif

#ifndef GL_ATTRIB_ARRAY_TYPE_NV
#define GL_ATTRIB_ARRAY_TYPE_NV 0x8625
#endif

#ifndef GL_CURRENT_ATTRIB_NV
#define GL_CURRENT_ATTRIB_NV 0x8626
#endif

#ifndef GL_PROGRAM_LENGTH_NV
#define GL_PROGRAM_LENGTH_NV 0x8627
#endif

#ifndef GL_PROGRAM_STRING_NV
#define GL_PROGRAM_STRING_NV 0x8628
#endif

#ifndef GL_MODELVIEW_PROJECTION_NV
#define GL_MODELVIEW_PROJECTION_NV 0x8629
#endif

#ifndef GL_IDENTITY_NV
#define GL_IDENTITY_NV 0x862A
#endif

#ifndef GL_INVERSE_NV
#define GL_INVERSE_NV 0x862B
#endif

#ifndef GL_TRANSPOSE_NV
#define GL_TRANSPOSE_NV 0x862C
#endif

#ifndef GL_INVERSE_TRANSPOSE_NV
#define GL_INVERSE_TRANSPOSE_NV 0x862D
#endif

#ifndef GL_MAX_TRACK_MATRIX_STACK_DEPTH_NV
#define GL_MAX_TRACK_MATRIX_STACK_DEPTH_NV 0x862E
#endif

#ifndef GL_MAX_TRACK_MATRICES_NV
#define GL_MAX_TRACK_MATRICES_NV 0x862F
#endif

#ifndef GL_MATRIX0_NV
#define GL_MATRIX0_NV 0x8630
#endif

#ifndef GL_MATRIX1_NV
#define GL_MATRIX1_NV 0x8631
#endif

#ifndef GL_MATRIX2_NV
#define GL_MATRIX2_NV 0x8632
#endif

#ifndef GL_MATRIX3_NV
#define GL_MATRIX3_NV 0x8633
#endif

#ifndef GL_MATRIX4_NV
#define GL_MATRIX4_NV 0x8634
#endif

#ifndef GL_MATRIX5_NV
#define GL_MATRIX5_NV 0x8635
#endif

#ifndef GL_MATRIX6_NV
#define GL_MATRIX6_NV 0x8636
#endif

#ifndef GL_MATRIX7_NV
#define GL_MATRIX7_NV 0x8637
#endif

#ifndef GL_TEXTURE_MAX_CLAMP_S_SGIX
#define GL_TEXTURE_MAX_CLAMP_S_SGIX 0x8369
#endif

#ifndef GL_TEXTURE_MAX_CLAMP_T_SGIX
#define GL_TEXTURE_MAX_CLAMP_T_SGIX 0x836A
#endif

#ifndef GL_TEXTURE_MAX_CLAMP_R_SGIX
#define GL_TEXTURE_MAX_CLAMP_R_SGIX 0x836B
#endif

#ifndef GL_SCALEBIAS_HINT_SGIX
#define GL_SCALEBIAS_HINT_SGIX 0x8322
#endif

#ifndef GL_INTERLACE_OML
#define GL_INTERLACE_OML 0x8980
#endif

#ifndef GL_INTERLACE_READ_OML
#define GL_INTERLACE_READ_OML 0x8981
#endif

#ifndef GL_FORMAT_SUBSAMPLE_24_24_OML
#define GL_FORMAT_SUBSAMPLE_24_24_OML 0x8982
#endif

#ifndef GL_FORMAT_SUBSAMPLE_244_244_OML
#define GL_FORMAT_SUBSAMPLE_244_244_OML 0x8983
#endif

#ifndef GL_PACK_RESAMPLE_OML
#define GL_PACK_RESAMPLE_OML 0x8984
#endif

#ifndef GL_UNPACK_RESAMPLE_OML
#define GL_UNPACK_RESAMPLE_OML 0x8985
#endif

#ifndef GL_RESAMPLE_REPLICATE_OML
#define GL_RESAMPLE_REPLICATE_OML 0x8986
#endif

#ifndef GL_RESAMPLE_ZERO_FILL_OML
#define GL_RESAMPLE_ZERO_FILL_OML 0x8987
#endif

#ifndef GL_RESAMPLE_AVERAGE_OML
#define GL_RESAMPLE_AVERAGE_OML 0x8988
#endif

#ifndef GL_RESAMPLE_DECIMATE_OML
#define GL_RESAMPLE_DECIMATE_OML 0x8989
#endif

#ifndef GL_DEPTH_STENCIL_TO_RGBA_NV
#define GL_DEPTH_STENCIL_TO_RGBA_NV 0x886E
#endif

#ifndef GL_DEPTH_STENCIL_TO_BGRA_NV
#define GL_DEPTH_STENCIL_TO_BGRA_NV 0x886F
#endif

#ifndef GL_BUMP_ROT_MATRIX_ATI
#define GL_BUMP_ROT_MATRIX_ATI 0x8775
#endif

#ifndef GL_BUMP_ROT_MATRIX_SIZE_ATI
#define GL_BUMP_ROT_MATRIX_SIZE_ATI 0x8776
#endif

#ifndef GL_BUMP_NUM_TEX_UNITS_ATI
#define GL_BUMP_NUM_TEX_UNITS_ATI 0x8777
#endif

#ifndef GL_BUMP_TEX_UNITS_ATI
#define GL_BUMP_TEX_UNITS_ATI 0x8778
#endif

#ifndef GL_DUDV_ATI
#define GL_DUDV_ATI 0x8779
#endif

#ifndef GL_DU8DV8_ATI
#define GL_DU8DV8_ATI 0x877A
#endif

#ifndef GL_BUMP_ENVMAP_ATI
#define GL_BUMP_ENVMAP_ATI 0x877B
#endif

#ifndef GL_BUMP_TARGET_ATI
#define GL_BUMP_TARGET_ATI 0x877C
#endif

#ifndef GL_FRAGMENT_SHADER_ATI
#define GL_FRAGMENT_SHADER_ATI 0x8920
#endif

#ifndef GL_REG_0_ATI
#define GL_REG_0_ATI 0x8921
#endif

#ifndef GL_REG_1_ATI
#define GL_REG_1_ATI 0x8922
#endif

#ifndef GL_REG_2_ATI
#define GL_REG_2_ATI 0x8923
#endif

#ifndef GL_REG_3_ATI
#define GL_REG_3_ATI 0x8924
#endif

#ifndef GL_REG_4_ATI
#define GL_REG_4_ATI 0x8925
#endif

#ifndef GL_REG_5_ATI
#define GL_REG_5_ATI 0x8926
#endif

#ifndef GL_REG_6_ATI
#define GL_REG_6_ATI 0x8927
#endif

#ifndef GL_REG_7_ATI
#define GL_REG_7_ATI 0x8928
#endif

#ifndef GL_REG_8_ATI
#define GL_REG_8_ATI 0x8929
#endif

#ifndef GL_REG_9_ATI
#define GL_REG_9_ATI 0x892A
#endif

#ifndef GL_REG_10_ATI
#define GL_REG_10_ATI 0x892B
#endif

#ifndef GL_REG_11_ATI
#define GL_REG_11_ATI 0x892C
#endif

#ifndef GL_REG_12_ATI
#define GL_REG_12_ATI 0x892D
#endif

#ifndef GL_REG_13_ATI
#define GL_REG_13_ATI 0x892E
#endif

#ifndef GL_REG_14_ATI
#define GL_REG_14_ATI 0x892F
#endif

#ifndef GL_REG_15_ATI
#define GL_REG_15_ATI 0x8930
#endif

#ifndef GL_REG_16_ATI
#define GL_REG_16_ATI 0x8931
#endif

#ifndef GL_REG_17_ATI
#define GL_REG_17_ATI 0x8932
#endif

#ifndef GL_REG_18_ATI
#define GL_REG_18_ATI 0x8933
#endif

#ifndef GL_REG_19_ATI
#define GL_REG_19_ATI 0x8934
#endif

#ifndef GL_REG_20_ATI
#define GL_REG_20_ATI 0x8935
#endif

#ifndef GL_REG_21_ATI
#define GL_REG_21_ATI 0x8936
#endif

#ifndef GL_REG_22_ATI
#define GL_REG_22_ATI 0x8937
#endif

#ifndef GL_REG_23_ATI
#define GL_REG_23_ATI 0x8938
#endif

#ifndef GL_REG_24_ATI
#define GL_REG_24_ATI 0x8939
#endif

#ifndef GL_REG_25_ATI
#define GL_REG_25_ATI 0x893A
#endif

#ifndef GL_REG_26_ATI
#define GL_REG_26_ATI 0x893B
#endif

#ifndef GL_REG_27_ATI
#define GL_REG_27_ATI 0x893C
#endif

#ifndef GL_REG_28_ATI
#define GL_REG_28_ATI 0x893D
#endif

#ifndef GL_REG_29_ATI
#define GL_REG_29_ATI 0x893E
#endif

#ifndef GL_REG_30_ATI
#define GL_REG_30_ATI 0x893F
#endif

#ifndef GL_REG_31_ATI
#define GL_REG_31_ATI 0x8940
#endif

#ifndef GL_CON_0_ATI
#define GL_CON_0_ATI 0x8941
#endif

#ifndef GL_CON_1_ATI
#define GL_CON_1_ATI 0x8942
#endif

#ifndef GL_CON_2_ATI
#define GL_CON_2_ATI 0x8943
#endif

#ifndef GL_CON_3_ATI
#define GL_CON_3_ATI 0x8944
#endif

#ifndef GL_CON_4_ATI
#define GL_CON_4_ATI 0x8945
#endif

#ifndef GL_CON_5_ATI
#define GL_CON_5_ATI 0x8946
#endif

#ifndef GL_CON_6_ATI
#define GL_CON_6_ATI 0x8947
#endif

#ifndef GL_CON_7_ATI
#define GL_CON_7_ATI 0x8948
#endif

#ifndef GL_CON_8_ATI
#define GL_CON_8_ATI 0x8949
#endif

#ifndef GL_CON_9_ATI
#define GL_CON_9_ATI 0x894A
#endif

#ifndef GL_CON_10_ATI
#define GL_CON_10_ATI 0x894B
#endif

#ifndef GL_CON_11_ATI
#define GL_CON_11_ATI 0x894C
#endif

#ifndef GL_CON_12_ATI
#define GL_CON_12_ATI 0x894D
#endif

#ifndef GL_CON_13_ATI
#define GL_CON_13_ATI 0x894E
#endif

#ifndef GL_CON_14_ATI
#define GL_CON_14_ATI 0x894F
#endif

#ifndef GL_CON_15_ATI
#define GL_CON_15_ATI 0x8950
#endif

#ifndef GL_CON_16_ATI
#define GL_CON_16_ATI 0x8951
#endif

#ifndef GL_CON_17_ATI
#define GL_CON_17_ATI 0x8952
#endif

#ifndef GL_CON_18_ATI
#define GL_CON_18_ATI 0x8953
#endif

#ifndef GL_CON_19_ATI
#define GL_CON_19_ATI 0x8954
#endif

#ifndef GL_CON_20_ATI
#define GL_CON_20_ATI 0x8955
#endif

#ifndef GL_CON_21_ATI
#define GL_CON_21_ATI 0x8956
#endif

#ifndef GL_CON_22_ATI
#define GL_CON_22_ATI 0x8957
#endif

#ifndef GL_CON_23_ATI
#define GL_CON_23_ATI 0x8958
#endif

#ifndef GL_CON_24_ATI
#define GL_CON_24_ATI 0x8959
#endif

#ifndef GL_CON_25_ATI
#define GL_CON_25_ATI 0x895A
#endif

#ifndef GL_CON_26_ATI
#define GL_CON_26_ATI 0x895B
#endif

#ifndef GL_CON_27_ATI
#define GL_CON_27_ATI 0x895C
#endif

#ifndef GL_CON_28_ATI
#define GL_CON_28_ATI 0x895D
#endif

#ifndef GL_CON_29_ATI
#define GL_CON_29_ATI 0x895E
#endif

#ifndef GL_CON_30_ATI
#define GL_CON_30_ATI 0x895F
#endif

#ifndef GL_CON_31_ATI
#define GL_CON_31_ATI 0x8960
#endif

#ifndef GL_MOV_ATI
#define GL_MOV_ATI 0x8961
#endif

#ifndef GL_ADD_ATI
#define GL_ADD_ATI 0x8963
#endif

#ifndef GL_MUL_ATI
#define GL_MUL_ATI 0x8964
#endif

#ifndef GL_SUB_ATI
#define GL_SUB_ATI 0x8965
#endif

#ifndef GL_DOT3_ATI
#define GL_DOT3_ATI 0x8966
#endif

#ifndef GL_DOT4_ATI
#define GL_DOT4_ATI 0x8967
#endif

#ifndef GL_MAD_ATI
#define GL_MAD_ATI 0x8968
#endif

#ifndef GL_LERP_ATI
#define GL_LERP_ATI 0x8969
#endif

#ifndef GL_CND_ATI
#define GL_CND_ATI 0x896A
#endif

#ifndef GL_CND0_ATI
#define GL_CND0_ATI 0x896B
#endif

#ifndef GL_DOT2_ADD_ATI
#define GL_DOT2_ADD_ATI 0x896C
#endif

#ifndef GL_SECONDARY_INTERPOLATOR_ATI
#define GL_SECONDARY_INTERPOLATOR_ATI 0x896D
#endif

#ifndef GL_NUM_FRAGMENT_REGISTERS_ATI
#define GL_NUM_FRAGMENT_REGISTERS_ATI 0x896E
#endif

#ifndef GL_NUM_FRAGMENT_CONSTANTS_ATI
#define GL_NUM_FRAGMENT_CONSTANTS_ATI 0x896F
#endif

#ifndef GL_NUM_PASSES_ATI
#define GL_NUM_PASSES_ATI 0x8970
#endif

#ifndef GL_NUM_INSTRUCTIONS_PER_PASS_ATI
#define GL_NUM_INSTRUCTIONS_PER_PASS_ATI 0x8971
#endif

#ifndef GL_NUM_INSTRUCTIONS_TOTAL_ATI
#define GL_NUM_INSTRUCTIONS_TOTAL_ATI 0x8972
#endif

#ifndef GL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI
#define GL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI 0x8973
#endif

#ifndef GL_NUM_LOOPBACK_COMPONENTS_ATI
#define GL_NUM_LOOPBACK_COMPONENTS_ATI 0x8974
#endif

#ifndef GL_COLOR_ALPHA_PAIRING_ATI
#define GL_COLOR_ALPHA_PAIRING_ATI 0x8975
#endif

#ifndef GL_SWIZZLE_STR_ATI
#define GL_SWIZZLE_STR_ATI 0x8976
#endif

#ifndef GL_SWIZZLE_STQ_ATI
#define GL_SWIZZLE_STQ_ATI 0x8977
#endif

#ifndef GL_SWIZZLE_STR_DR_ATI
#define GL_SWIZZLE_STR_DR_ATI 0x8978
#endif

#ifndef GL_SWIZZLE_STQ_DQ_ATI
#define GL_SWIZZLE_STQ_DQ_ATI 0x8979
#endif

#ifndef GL_SWIZZLE_STRQ_ATI
#define GL_SWIZZLE_STRQ_ATI 0x897A
#endif

#ifndef GL_SWIZZLE_STRQ_DQ_ATI
#define GL_SWIZZLE_STRQ_DQ_ATI 0x897B
#endif

#ifndef GL_RED_BIT_ATI
#define GL_RED_BIT_ATI 0x00000001
#endif

#ifndef GL_GREEN_BIT_ATI
#define GL_GREEN_BIT_ATI 0x00000002
#endif

#ifndef GL_BLUE_BIT_ATI
#define GL_BLUE_BIT_ATI 0x00000004
#endif

#ifndef GL_2X_BIT_ATI
#define GL_2X_BIT_ATI 0x00000001
#endif

#ifndef GL_4X_BIT_ATI
#define GL_4X_BIT_ATI 0x00000002
#endif

#ifndef GL_8X_BIT_ATI
#define GL_8X_BIT_ATI 0x00000004
#endif

#ifndef GL_HALF_BIT_ATI
#define GL_HALF_BIT_ATI 0x00000008
#endif

#ifndef GL_QUARTER_BIT_ATI
#define GL_QUARTER_BIT_ATI 0x00000010
#endif

#ifndef GL_EIGHTH_BIT_ATI
#define GL_EIGHTH_BIT_ATI 0x00000020
#endif

#ifndef GL_SATURATE_BIT_ATI
#define GL_SATURATE_BIT_ATI 0x00000040
#endif

#ifndef GL_2X_BIT_ATI
#define GL_2X_BIT_ATI 0x00000001
#endif

#ifndef GL_COMP_BIT_ATI
#define GL_COMP_BIT_ATI 0x00000002
#endif

#ifndef GL_NEGATE_BIT_ATI
#define GL_NEGATE_BIT_ATI 0x00000004
#endif

#ifndef GL_BIAS_BIT_ATI
#define GL_BIAS_BIT_ATI 0x00000008
#endif

#ifndef GL_PN_TRIANGLES_ATI
#define GL_PN_TRIANGLES_ATI 0x87F0
#endif

#ifndef GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI
#define GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI 0x87F1
#endif

#ifndef GL_PN_TRIANGLES_POINT_MODE_ATI
#define GL_PN_TRIANGLES_POINT_MODE_ATI 0x87F2
#endif

#ifndef GL_PN_TRIANGLES_NORMAL_MODE_ATI
#define GL_PN_TRIANGLES_NORMAL_MODE_ATI 0x87F3
#endif

#ifndef GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI
#define GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI 0x87F4
#endif

#ifndef GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI
#define GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI 0x87F5
#endif

#ifndef GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI
#define GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI 0x87F6
#endif

#ifndef GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI
#define GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI 0x87F7
#endif

#ifndef GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI
#define GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI 0x87F8
#endif

#ifndef GL_STATIC_ATI
#define GL_STATIC_ATI 0x8760
#endif

#ifndef GL_DYNAMIC_ATI
#define GL_DYNAMIC_ATI 0x8761
#endif

#ifndef GL_PRESERVE_ATI
#define GL_PRESERVE_ATI 0x8762
#endif

#ifndef GL_DISCARD_ATI
#define GL_DISCARD_ATI 0x8763
#endif

#ifndef GL_OBJECT_BUFFER_SIZE_ATI
#define GL_OBJECT_BUFFER_SIZE_ATI 0x8764
#endif

#ifndef GL_OBJECT_BUFFER_USAGE_ATI
#define GL_OBJECT_BUFFER_USAGE_ATI 0x8765
#endif

#ifndef GL_ARRAY_OBJECT_BUFFER_ATI
#define GL_ARRAY_OBJECT_BUFFER_ATI 0x8766
#endif

#ifndef GL_ARRAY_OBJECT_OFFSET_ATI
#define GL_ARRAY_OBJECT_OFFSET_ATI 0x8767
#endif

#ifndef GL_VERTEX_SHADER_EXT
#define GL_VERTEX_SHADER_EXT 0x8780
#endif

#ifndef GL_VERTEX_SHADER_BINDING_EXT
#define GL_VERTEX_SHADER_BINDING_EXT 0x8781
#endif

#ifndef GL_OP_INDEX_EXT
#define GL_OP_INDEX_EXT 0x8782
#endif

#ifndef GL_OP_NEGATE_EXT
#define GL_OP_NEGATE_EXT 0x8783
#endif

#ifndef GL_OP_DOT3_EXT
#define GL_OP_DOT3_EXT 0x8784
#endif

#ifndef GL_OP_DOT4_EXT
#define GL_OP_DOT4_EXT 0x8785
#endif

#ifndef GL_OP_MUL_EXT
#define GL_OP_MUL_EXT 0x8786
#endif

#ifndef GL_OP_ADD_EXT
#define GL_OP_ADD_EXT 0x8787
#endif

#ifndef GL_OP_MADD_EXT
#define GL_OP_MADD_EXT 0x8788
#endif

#ifndef GL_OP_FRAC_EXT
#define GL_OP_FRAC_EXT 0x8789
#endif

#ifndef GL_OP_MAX_EXT
#define GL_OP_MAX_EXT 0x878A
#endif

#ifndef GL_OP_MIN_EXT
#define GL_OP_MIN_EXT 0x878B
#endif

#ifndef GL_OP_SET_GE_EXT
#define GL_OP_SET_GE_EXT 0x878C
#endif

#ifndef GL_OP_SET_LT_EXT
#define GL_OP_SET_LT_EXT 0x878D
#endif

#ifndef GL_OP_CLAMP_EXT
#define GL_OP_CLAMP_EXT 0x878E
#endif

#ifndef GL_OP_FLOOR_EXT
#define GL_OP_FLOOR_EXT 0x878F
#endif

#ifndef GL_OP_ROUND_EXT
#define GL_OP_ROUND_EXT 0x8790
#endif

#ifndef GL_OP_EXP_BASE_2_EXT
#define GL_OP_EXP_BASE_2_EXT 0x8791
#endif

#ifndef GL_OP_LOG_BASE_2_EXT
#define GL_OP_LOG_BASE_2_EXT 0x8792
#endif

#ifndef GL_OP_POWER_EXT
#define GL_OP_POWER_EXT 0x8793
#endif

#ifndef GL_OP_RECIP_EXT
#define GL_OP_RECIP_EXT 0x8794
#endif

#ifndef GL_OP_RECIP_SQRT_EXT
#define GL_OP_RECIP_SQRT_EXT 0x8795
#endif

#ifndef GL_OP_SUB_EXT
#define GL_OP_SUB_EXT 0x8796
#endif

#ifndef GL_OP_CROSS_PRODUCT_EXT
#define GL_OP_CROSS_PRODUCT_EXT 0x8797
#endif

#ifndef GL_OP_MULTIPLY_MATRIX_EXT
#define GL_OP_MULTIPLY_MATRIX_EXT 0x8798
#endif

#ifndef GL_OP_MOV_EXT
#define GL_OP_MOV_EXT 0x8799
#endif

#ifndef GL_OUTPUT_VERTEX_EXT
#define GL_OUTPUT_VERTEX_EXT 0x879A
#endif

#ifndef GL_OUTPUT_COLOR0_EXT
#define GL_OUTPUT_COLOR0_EXT 0x879B
#endif

#ifndef GL_OUTPUT_COLOR1_EXT
#define GL_OUTPUT_COLOR1_EXT 0x879C
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD0_EXT
#define GL_OUTPUT_TEXTURE_COORD0_EXT 0x879D
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD1_EXT
#define GL_OUTPUT_TEXTURE_COORD1_EXT 0x879E
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD2_EXT
#define GL_OUTPUT_TEXTURE_COORD2_EXT 0x879F
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD3_EXT
#define GL_OUTPUT_TEXTURE_COORD3_EXT 0x87A0
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD4_EXT
#define GL_OUTPUT_TEXTURE_COORD4_EXT 0x87A1
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD5_EXT
#define GL_OUTPUT_TEXTURE_COORD5_EXT 0x87A2
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD6_EXT
#define GL_OUTPUT_TEXTURE_COORD6_EXT 0x87A3
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD7_EXT
#define GL_OUTPUT_TEXTURE_COORD7_EXT 0x87A4
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD8_EXT
#define GL_OUTPUT_TEXTURE_COORD8_EXT 0x87A5
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD9_EXT
#define GL_OUTPUT_TEXTURE_COORD9_EXT 0x87A6
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD10_EXT
#define GL_OUTPUT_TEXTURE_COORD10_EXT 0x87A7
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD11_EXT
#define GL_OUTPUT_TEXTURE_COORD11_EXT 0x87A8
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD12_EXT
#define GL_OUTPUT_TEXTURE_COORD12_EXT 0x87A9
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD13_EXT
#define GL_OUTPUT_TEXTURE_COORD13_EXT 0x87AA
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD14_EXT
#define GL_OUTPUT_TEXTURE_COORD14_EXT 0x87AB
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD15_EXT
#define GL_OUTPUT_TEXTURE_COORD15_EXT 0x87AC
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD16_EXT
#define GL_OUTPUT_TEXTURE_COORD16_EXT 0x87AD
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD17_EXT
#define GL_OUTPUT_TEXTURE_COORD17_EXT 0x87AE
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD18_EXT
#define GL_OUTPUT_TEXTURE_COORD18_EXT 0x87AF
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD19_EXT
#define GL_OUTPUT_TEXTURE_COORD19_EXT 0x87B0
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD20_EXT
#define GL_OUTPUT_TEXTURE_COORD20_EXT 0x87B1
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD21_EXT
#define GL_OUTPUT_TEXTURE_COORD21_EXT 0x87B2
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD22_EXT
#define GL_OUTPUT_TEXTURE_COORD22_EXT 0x87B3
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD23_EXT
#define GL_OUTPUT_TEXTURE_COORD23_EXT 0x87B4
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD24_EXT
#define GL_OUTPUT_TEXTURE_COORD24_EXT 0x87B5
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD25_EXT
#define GL_OUTPUT_TEXTURE_COORD25_EXT 0x87B6
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD26_EXT
#define GL_OUTPUT_TEXTURE_COORD26_EXT 0x87B7
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD27_EXT
#define GL_OUTPUT_TEXTURE_COORD27_EXT 0x87B8
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD28_EXT
#define GL_OUTPUT_TEXTURE_COORD28_EXT 0x87B9
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD29_EXT
#define GL_OUTPUT_TEXTURE_COORD29_EXT 0x87BA
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD30_EXT
#define GL_OUTPUT_TEXTURE_COORD30_EXT 0x87BB
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD31_EXT
#define GL_OUTPUT_TEXTURE_COORD31_EXT 0x87BC
#endif

#ifndef GL_OUTPUT_FOG_EXT
#define GL_OUTPUT_FOG_EXT 0x87BD
#endif

#ifndef GL_SCALAR_EXT
#define GL_SCALAR_EXT 0x87BE
#endif

#ifndef GL_VECTOR_EXT
#define GL_VECTOR_EXT 0x87BF
#endif

#ifndef GL_MATRIX_EXT
#define GL_MATRIX_EXT 0x87C0
#endif

#ifndef GL_VARIANT_EXT
#define GL_VARIANT_EXT 0x87C1
#endif

#ifndef GL_INVARIANT_EXT
#define GL_INVARIANT_EXT 0x87C2
#endif

#ifndef GL_LOCAL_CONSTANT_EXT
#define GL_LOCAL_CONSTANT_EXT 0x87C3
#endif

#ifndef GL_LOCAL_EXT
#define GL_LOCAL_EXT 0x87C4
#endif

#ifndef GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT
#define GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT 0x87C5
#endif

#ifndef GL_MAX_VERTEX_SHADER_VARIANTS_EXT
#define GL_MAX_VERTEX_SHADER_VARIANTS_EXT 0x87C6
#endif

#ifndef GL_MAX_VERTEX_SHADER_INVARIANTS_EXT
#define GL_MAX_VERTEX_SHADER_INVARIANTS_EXT 0x87C7
#endif

#ifndef GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT
#define GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT 0x87C8
#endif

#ifndef GL_MAX_VERTEX_SHADER_LOCALS_EXT
#define GL_MAX_VERTEX_SHADER_LOCALS_EXT 0x87C9
#endif

#ifndef GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT
#define GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT 0x87CA
#endif

#ifndef GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT
#define GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT 0x87CB
#endif

#ifndef GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT
#define GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT 0x87CC
#endif

#ifndef GL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT
#define GL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT 0x87CD
#endif

#ifndef GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT
#define GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT 0x87CE
#endif

#ifndef GL_VERTEX_SHADER_INSTRUCTIONS_EXT
#define GL_VERTEX_SHADER_INSTRUCTIONS_EXT 0x87CF
#endif

#ifndef GL_VERTEX_SHADER_VARIANTS_EXT
#define GL_VERTEX_SHADER_VARIANTS_EXT 0x87D0
#endif

#ifndef GL_VERTEX_SHADER_INVARIANTS_EXT
#define GL_VERTEX_SHADER_INVARIANTS_EXT 0x87D1
#endif

#ifndef GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT
#define GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT 0x87D2
#endif

#ifndef GL_VERTEX_SHADER_LOCALS_EXT
#define GL_VERTEX_SHADER_LOCALS_EXT 0x87D3
#endif

#ifndef GL_VERTEX_SHADER_OPTIMIZED_EXT
#define GL_VERTEX_SHADER_OPTIMIZED_EXT 0x87D4
#endif

#ifndef GL_X_EXT
#define GL_X_EXT 0x87D5
#endif

#ifndef GL_Y_EXT
#define GL_Y_EXT 0x87D6
#endif

#ifndef GL_Z_EXT
#define GL_Z_EXT 0x87D7
#endif

#ifndef GL_W_EXT
#define GL_W_EXT 0x87D8
#endif

#ifndef GL_NEGATIVE_X_EXT
#define GL_NEGATIVE_X_EXT 0x87D9
#endif

#ifndef GL_NEGATIVE_Y_EXT
#define GL_NEGATIVE_Y_EXT 0x87DA
#endif

#ifndef GL_NEGATIVE_Z_EXT
#define GL_NEGATIVE_Z_EXT 0x87DB
#endif

#ifndef GL_NEGATIVE_W_EXT
#define GL_NEGATIVE_W_EXT 0x87DC
#endif

#ifndef GL_ZERO_EXT
#define GL_ZERO_EXT 0x87DD
#endif

#ifndef GL_ONE_EXT
#define GL_ONE_EXT 0x87DE
#endif

#ifndef GL_NEGATIVE_ONE_EXT
#define GL_NEGATIVE_ONE_EXT 0x87DF
#endif

#ifndef GL_NORMALIZED_RANGE_EXT
#define GL_NORMALIZED_RANGE_EXT 0x87E0
#endif

#ifndef GL_FULL_RANGE_EXT
#define GL_FULL_RANGE_EXT 0x87E1
#endif

#ifndef GL_CURRENT_VERTEX_EXT
#define GL_CURRENT_VERTEX_EXT 0x87E2
#endif

#ifndef GL_MVP_MATRIX_EXT
#define GL_MVP_MATRIX_EXT 0x87E3
#endif

#ifndef GL_VARIANT_VALUE_EXT
#define GL_VARIANT_VALUE_EXT 0x87E4
#endif

#ifndef GL_VARIANT_DATATYPE_EXT
#define GL_VARIANT_DATATYPE_EXT 0x87E5
#endif

#ifndef GL_VARIANT_ARRAY_STRIDE_EXT
#define GL_VARIANT_ARRAY_STRIDE_EXT 0x87E6
#endif

#ifndef GL_VARIANT_ARRAY_TYPE_EXT
#define GL_VARIANT_ARRAY_TYPE_EXT 0x87E7
#endif

#ifndef GL_VARIANT_ARRAY_EXT
#define GL_VARIANT_ARRAY_EXT 0x87E8
#endif

#ifndef GL_VARIANT_ARRAY_POINTER_EXT
#define GL_VARIANT_ARRAY_POINTER_EXT 0x87E9
#endif

#ifndef GL_INVARIANT_VALUE_EXT
#define GL_INVARIANT_VALUE_EXT 0x87EA
#endif

#ifndef GL_INVARIANT_DATATYPE_EXT
#define GL_INVARIANT_DATATYPE_EXT 0x87EB
#endif

#ifndef GL_LOCAL_CONSTANT_VALUE_EXT
#define GL_LOCAL_CONSTANT_VALUE_EXT 0x87EC
#endif

#ifndef GL_LOCAL_CONSTANT_DATATYPE_EXT
#define GL_LOCAL_CONSTANT_DATATYPE_EXT 0x87ED
#endif

#ifndef GL_MAX_VERTEX_STREAMS_ATI
#define GL_MAX_VERTEX_STREAMS_ATI 0x876B
#endif

#ifndef GL_VERTEX_STREAM0_ATI
#define GL_VERTEX_STREAM0_ATI 0x876C
#endif

#ifndef GL_VERTEX_STREAM1_ATI
#define GL_VERTEX_STREAM1_ATI 0x876D
#endif

#ifndef GL_VERTEX_STREAM2_ATI
#define GL_VERTEX_STREAM2_ATI 0x876E
#endif

#ifndef GL_VERTEX_STREAM3_ATI
#define GL_VERTEX_STREAM3_ATI 0x876F
#endif

#ifndef GL_VERTEX_STREAM4_ATI
#define GL_VERTEX_STREAM4_ATI 0x8770
#endif

#ifndef GL_VERTEX_STREAM5_ATI
#define GL_VERTEX_STREAM5_ATI 0x8771
#endif

#ifndef GL_VERTEX_STREAM6_ATI
#define GL_VERTEX_STREAM6_ATI 0x8772
#endif

#ifndef GL_VERTEX_STREAM7_ATI
#define GL_VERTEX_STREAM7_ATI 0x8773
#endif

#ifndef GL_VERTEX_SOURCE_ATI
#define GL_VERTEX_SOURCE_ATI 0x8774
#endif

#ifndef GL_ELEMENT_ARRAY_ATI
#define GL_ELEMENT_ARRAY_ATI 0x8768
#endif

#ifndef GL_ELEMENT_ARRAY_TYPE_ATI
#define GL_ELEMENT_ARRAY_TYPE_ATI 0x8769
#endif

#ifndef GL_ELEMENT_ARRAY_POINTER_ATI
#define GL_ELEMENT_ARRAY_POINTER_ATI 0x876A
#endif

#ifndef GL_QUAD_MESH_SUN
#define GL_QUAD_MESH_SUN 0x8614
#endif

#ifndef GL_TRIANGLE_MESH_SUN
#define GL_TRIANGLE_MESH_SUN 0x8615
#endif

#ifndef GL_SLICE_ACCUM_SUN
#define GL_SLICE_ACCUM_SUN 0x85CC
#endif

#ifndef GL_MULTISAMPLE_FILTER_HINT_NV
#define GL_MULTISAMPLE_FILTER_HINT_NV 0x8534
#endif

#ifndef GL_DEPTH_CLAMP_NV
#define GL_DEPTH_CLAMP_NV 0x864F
#endif

#ifndef GL_PIXEL_COUNTER_BITS_NV
#define GL_PIXEL_COUNTER_BITS_NV 0x8864
#endif

#ifndef GL_CURRENT_OCCLUSION_QUERY_ID_NV
#define GL_CURRENT_OCCLUSION_QUERY_ID_NV 0x8865
#endif

#ifndef GL_PIXEL_COUNT_NV
#define GL_PIXEL_COUNT_NV 0x8866
#endif

#ifndef GL_PIXEL_COUNT_AVAILABLE_NV
#define GL_PIXEL_COUNT_AVAILABLE_NV 0x8867
#endif

#ifndef GL_POINT_SPRITE_NV
#define GL_POINT_SPRITE_NV 0x8861
#endif

#ifndef GL_COORD_REPLACE_NV
#define GL_COORD_REPLACE_NV 0x8862
#endif

#ifndef GL_POINT_SPRITE_R_MODE_NV
#define GL_POINT_SPRITE_R_MODE_NV 0x8863
#endif

#ifndef GL_OFFSET_PROJECTIVE_TEXTURE_2D_NV
#define GL_OFFSET_PROJECTIVE_TEXTURE_2D_NV 0x8850
#endif

#ifndef GL_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV
#define GL_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV 0x8851
#endif

#ifndef GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV
#define GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV 0x8852
#endif

#ifndef GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV
#define GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV 0x8853
#endif

#ifndef GL_OFFSET_HILO_TEXTURE_2D_NV
#define GL_OFFSET_HILO_TEXTURE_2D_NV 0x8854
#endif

#ifndef GL_OFFSET_HILO_TEXTURE_RECTANGLE_NV
#define GL_OFFSET_HILO_TEXTURE_RECTANGLE_NV 0x8855
#endif

#ifndef GL_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV
#define GL_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV 0x8856
#endif

#ifndef GL_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV
#define GL_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV 0x8857
#endif

#ifndef GL_DEPENDENT_HILO_TEXTURE_2D_NV
#define GL_DEPENDENT_HILO_TEXTURE_2D_NV 0x8858
#endif

#ifndef GL_DEPENDENT_RGB_TEXTURE_3D_NV
#define GL_DEPENDENT_RGB_TEXTURE_3D_NV 0x8859
#endif

#ifndef GL_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV
#define GL_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV 0x885A
#endif

#ifndef GL_DOT_PRODUCT_PASS_THROUGH_NV
#define GL_DOT_PRODUCT_PASS_THROUGH_NV 0x885B
#endif

#ifndef GL_DOT_PRODUCT_TEXTURE_1D_NV
#define GL_DOT_PRODUCT_TEXTURE_1D_NV 0x885C
#endif

#ifndef GL_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV
#define GL_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV 0x885D
#endif

#ifndef GL_HILO8_NV
#define GL_HILO8_NV 0x885E
#endif

#ifndef GL_SIGNED_HILO8_NV
#define GL_SIGNED_HILO8_NV 0x885F
#endif

#ifndef GL_FORCE_BLUE_TO_ONE_NV
#define GL_FORCE_BLUE_TO_ONE_NV 0x8860
#endif

#ifndef GL_STENCIL_TEST_TWO_SIDE_EXT
#define GL_STENCIL_TEST_TWO_SIDE_EXT 0x8910
#endif

#ifndef GL_ACTIVE_STENCIL_FACE_EXT
#define GL_ACTIVE_STENCIL_FACE_EXT 0x8911
#endif

#ifndef GL_TEXT_FRAGMENT_SHADER_ATI
#define GL_TEXT_FRAGMENT_SHADER_ATI 0x8200
#endif

#ifndef GL_UNPACK_CLIENT_STORAGE_APPLE
#define GL_UNPACK_CLIENT_STORAGE_APPLE 0x85B2
#endif

#ifndef GL_ELEMENT_ARRAY_APPLE
#define GL_ELEMENT_ARRAY_APPLE 0x8A0C
#endif

#ifndef GL_ELEMENT_ARRAY_TYPE_APPLE
#define GL_ELEMENT_ARRAY_TYPE_APPLE 0x8A0D
#endif

#ifndef GL_ELEMENT_ARRAY_POINTER_APPLE
#define GL_ELEMENT_ARRAY_POINTER_APPLE 0x8A0E
#endif

#ifndef GL_DRAW_PIXELS_APPLE
#define GL_DRAW_PIXELS_APPLE 0x8A0A
#endif

#ifndef GL_FENCE_APPLE
#define GL_FENCE_APPLE 0x8A0B
#endif

#ifndef GL_VERTEX_ARRAY_BINDING_APPLE
#define GL_VERTEX_ARRAY_BINDING_APPLE 0x85B5
#endif

#ifndef GL_VERTEX_ARRAY_RANGE_APPLE
#define GL_VERTEX_ARRAY_RANGE_APPLE 0x851D
#endif

#ifndef GL_VERTEX_ARRAY_RANGE_LENGTH_APPLE
#define GL_VERTEX_ARRAY_RANGE_LENGTH_APPLE 0x851E
#endif

#ifndef GL_VERTEX_ARRAY_STORAGE_HINT_APPLE
#define GL_VERTEX_ARRAY_STORAGE_HINT_APPLE 0x851F
#endif

#ifndef GL_VERTEX_ARRAY_RANGE_POINTER_APPLE
#define GL_VERTEX_ARRAY_RANGE_POINTER_APPLE 0x8521
#endif

#ifndef GL_STORAGE_CLIENT_APPLE
#define GL_STORAGE_CLIENT_APPLE 0x85B4
#endif

#ifndef GL_STORAGE_CACHED_APPLE
#define GL_STORAGE_CACHED_APPLE 0x85BE
#endif

#ifndef GL_STORAGE_SHARED_APPLE
#define GL_STORAGE_SHARED_APPLE 0x85BF
#endif

#ifndef GL_YCBCR_422_APPLE
#define GL_YCBCR_422_APPLE 0x85B9
#endif

#ifndef GL_UNSIGNED_SHORT_8_8_APPLE
#define GL_UNSIGNED_SHORT_8_8_APPLE 0x85BA
#endif

#ifndef GL_UNSIGNED_SHORT_8_8_REV_APPLE
#define GL_UNSIGNED_SHORT_8_8_REV_APPLE 0x85BB
#endif

#ifndef GL_RGB_S3TC
#define GL_RGB_S3TC 0x83A0
#endif

#ifndef GL_RGB4_S3TC
#define GL_RGB4_S3TC 0x83A1
#endif

#ifndef GL_RGBA_S3TC
#define GL_RGBA_S3TC 0x83A2
#endif

#ifndef GL_RGBA4_S3TC
#define GL_RGBA4_S3TC 0x83A3
#endif

#ifndef GL_RGBA_DXT5_S3TC
#define GL_RGBA_DXT5_S3TC 0x83A4
#endif

#ifndef GL_RGBA4_DXT5_S3TC
#define GL_RGBA4_DXT5_S3TC 0x83A5
#endif

#ifndef GL_MAX_DRAW_BUFFERS_ATI
#define GL_MAX_DRAW_BUFFERS_ATI 0x8824
#endif

#ifndef GL_DRAW_BUFFER0_ATI
#define GL_DRAW_BUFFER0_ATI 0x8825
#endif

#ifndef GL_DRAW_BUFFER1_ATI
#define GL_DRAW_BUFFER1_ATI 0x8826
#endif

#ifndef GL_DRAW_BUFFER2_ATI
#define GL_DRAW_BUFFER2_ATI 0x8827
#endif

#ifndef GL_DRAW_BUFFER3_ATI
#define GL_DRAW_BUFFER3_ATI 0x8828
#endif

#ifndef GL_DRAW_BUFFER4_ATI
#define GL_DRAW_BUFFER4_ATI 0x8829
#endif

#ifndef GL_DRAW_BUFFER5_ATI
#define GL_DRAW_BUFFER5_ATI 0x882A
#endif

#ifndef GL_DRAW_BUFFER6_ATI
#define GL_DRAW_BUFFER6_ATI 0x882B
#endif

#ifndef GL_DRAW_BUFFER7_ATI
#define GL_DRAW_BUFFER7_ATI 0x882C
#endif

#ifndef GL_DRAW_BUFFER8_ATI
#define GL_DRAW_BUFFER8_ATI 0x882D
#endif

#ifndef GL_DRAW_BUFFER9_ATI
#define GL_DRAW_BUFFER9_ATI 0x882E
#endif

#ifndef GL_DRAW_BUFFER10_ATI
#define GL_DRAW_BUFFER10_ATI 0x882F
#endif

#ifndef GL_DRAW_BUFFER11_ATI
#define GL_DRAW_BUFFER11_ATI 0x8830
#endif

#ifndef GL_DRAW_BUFFER12_ATI
#define GL_DRAW_BUFFER12_ATI 0x8831
#endif

#ifndef GL_DRAW_BUFFER13_ATI
#define GL_DRAW_BUFFER13_ATI 0x8832
#endif

#ifndef GL_DRAW_BUFFER14_ATI
#define GL_DRAW_BUFFER14_ATI 0x8833
#endif

#ifndef GL_DRAW_BUFFER15_ATI
#define GL_DRAW_BUFFER15_ATI 0x8834
#endif

#ifndef GL_RGBA_FLOAT_MODE_ATI
#define GL_RGBA_FLOAT_MODE_ATI 0x8820
#endif

#ifndef GL_COLOR_CLEAR_UNCLAMPED_VALUE_ATI
#define GL_COLOR_CLEAR_UNCLAMPED_VALUE_ATI 0x8835
#endif

#ifndef GL_MODULATE_ADD_ATI
#define GL_MODULATE_ADD_ATI 0x8744
#endif

#ifndef GL_MODULATE_SIGNED_ADD_ATI
#define GL_MODULATE_SIGNED_ADD_ATI 0x8745
#endif

#ifndef GL_MODULATE_SUBTRACT_ATI
#define GL_MODULATE_SUBTRACT_ATI 0x8746
#endif

#ifndef GL_RGBA_FLOAT32_ATI
#define GL_RGBA_FLOAT32_ATI 0x8814
#endif

#ifndef GL_RGB_FLOAT32_ATI
#define GL_RGB_FLOAT32_ATI 0x8815
#endif

#ifndef GL_ALPHA_FLOAT32_ATI
#define GL_ALPHA_FLOAT32_ATI 0x8816
#endif

#ifndef GL_INTENSITY_FLOAT32_ATI
#define GL_INTENSITY_FLOAT32_ATI 0x8817
#endif

#ifndef GL_LUMINANCE_FLOAT32_ATI
#define GL_LUMINANCE_FLOAT32_ATI 0x8818
#endif

#ifndef GL_LUMINANCE_ALPHA_FLOAT32_ATI
#define GL_LUMINANCE_ALPHA_FLOAT32_ATI 0x8819
#endif

#ifndef GL_RGBA_FLOAT16_ATI
#define GL_RGBA_FLOAT16_ATI 0x881A
#endif

#ifndef GL_RGB_FLOAT16_ATI
#define GL_RGB_FLOAT16_ATI 0x881B
#endif

#ifndef GL_ALPHA_FLOAT16_ATI
#define GL_ALPHA_FLOAT16_ATI 0x881C
#endif

#ifndef GL_INTENSITY_FLOAT16_ATI
#define GL_INTENSITY_FLOAT16_ATI 0x881D
#endif

#ifndef GL_LUMINANCE_FLOAT16_ATI
#define GL_LUMINANCE_FLOAT16_ATI 0x881E
#endif

#ifndef GL_LUMINANCE_ALPHA_FLOAT16_ATI
#define GL_LUMINANCE_ALPHA_FLOAT16_ATI 0x881F
#endif

#ifndef GL_FLOAT_R_NV
#define GL_FLOAT_R_NV 0x8880
#endif

#ifndef GL_FLOAT_RG_NV
#define GL_FLOAT_RG_NV 0x8881
#endif

#ifndef GL_FLOAT_RGB_NV
#define GL_FLOAT_RGB_NV 0x8882
#endif

#ifndef GL_FLOAT_RGBA_NV
#define GL_FLOAT_RGBA_NV 0x8883
#endif

#ifndef GL_FLOAT_R16_NV
#define GL_FLOAT_R16_NV 0x8884
#endif

#ifndef GL_FLOAT_R32_NV
#define GL_FLOAT_R32_NV 0x8885
#endif

#ifndef GL_FLOAT_RG16_NV
#define GL_FLOAT_RG16_NV 0x8886
#endif

#ifndef GL_FLOAT_RG32_NV
#define GL_FLOAT_RG32_NV 0x8887
#endif

#ifndef GL_FLOAT_RGB16_NV
#define GL_FLOAT_RGB16_NV 0x8888
#endif

#ifndef GL_FLOAT_RGB32_NV
#define GL_FLOAT_RGB32_NV 0x8889
#endif

#ifndef GL_FLOAT_RGBA16_NV
#define GL_FLOAT_RGBA16_NV 0x888A
#endif

#ifndef GL_FLOAT_RGBA32_NV
#define GL_FLOAT_RGBA32_NV 0x888B
#endif

#ifndef GL_TEXTURE_FLOAT_COMPONENTS_NV
#define GL_TEXTURE_FLOAT_COMPONENTS_NV 0x888C
#endif

#ifndef GL_FLOAT_CLEAR_COLOR_VALUE_NV
#define GL_FLOAT_CLEAR_COLOR_VALUE_NV 0x888D
#endif

#ifndef GL_FLOAT_RGBA_MODE_NV
#define GL_FLOAT_RGBA_MODE_NV 0x888E
#endif

#ifndef GL_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV
#define GL_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV 0x8868
#endif

#ifndef GL_FRAGMENT_PROGRAM_NV
#define GL_FRAGMENT_PROGRAM_NV 0x8870
#endif

#ifndef GL_MAX_TEXTURE_COORDS_NV
#define GL_MAX_TEXTURE_COORDS_NV 0x8871
#endif

#ifndef GL_MAX_TEXTURE_IMAGE_UNITS_NV
#define GL_MAX_TEXTURE_IMAGE_UNITS_NV 0x8872
#endif

#ifndef GL_FRAGMENT_PROGRAM_BINDING_NV
#define GL_FRAGMENT_PROGRAM_BINDING_NV 0x8873
#endif

#ifndef GL_PROGRAM_ERROR_STRING_NV
#define GL_PROGRAM_ERROR_STRING_NV 0x8874
#endif

#ifndef GL_HALF_FLOAT_NV
#define GL_HALF_FLOAT_NV 0x140B
#endif

#ifndef GL_WRITE_PIXEL_DATA_RANGE_NV
#define GL_WRITE_PIXEL_DATA_RANGE_NV 0x8878
#endif

#ifndef GL_READ_PIXEL_DATA_RANGE_NV
#define GL_READ_PIXEL_DATA_RANGE_NV 0x8879
#endif

#ifndef GL_WRITE_PIXEL_DATA_RANGE_LENGTH_NV
#define GL_WRITE_PIXEL_DATA_RANGE_LENGTH_NV 0x887A
#endif

#ifndef GL_READ_PIXEL_DATA_RANGE_LENGTH_NV
#define GL_READ_PIXEL_DATA_RANGE_LENGTH_NV 0x887B
#endif

#ifndef GL_WRITE_PIXEL_DATA_RANGE_POINTER_NV
#define GL_WRITE_PIXEL_DATA_RANGE_POINTER_NV 0x887C
#endif

#ifndef GL_READ_PIXEL_DATA_RANGE_POINTER_NV
#define GL_READ_PIXEL_DATA_RANGE_POINTER_NV 0x887D
#endif

#ifndef GL_PRIMITIVE_RESTART_NV
#define GL_PRIMITIVE_RESTART_NV 0x8558
#endif

#ifndef GL_PRIMITIVE_RESTART_INDEX_NV
#define GL_PRIMITIVE_RESTART_INDEX_NV 0x8559
#endif

#ifndef GL_TEXTURE_UNSIGNED_REMAP_MODE_NV
#define GL_TEXTURE_UNSIGNED_REMAP_MODE_NV 0x888F
#endif

#ifndef GL_STENCIL_BACK_FUNC_ATI
#define GL_STENCIL_BACK_FUNC_ATI 0x8800
#endif

#ifndef GL_STENCIL_BACK_FAIL_ATI
#define GL_STENCIL_BACK_FAIL_ATI 0x8801
#endif

#ifndef GL_STENCIL_BACK_PASS_DEPTH_FAIL_ATI
#define GL_STENCIL_BACK_PASS_DEPTH_FAIL_ATI 0x8802
#endif

#ifndef GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI
#define GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI 0x8803
#endif

#ifndef GL_IMPLEMENTATION_COLOR_READ_TYPE_OES
#define GL_IMPLEMENTATION_COLOR_READ_TYPE_OES 0x8B9A
#endif

#ifndef GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES
#define GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES 0x8B9B
#endif

#ifndef GL_DEPTH_BOUNDS_TEST_EXT
#define GL_DEPTH_BOUNDS_TEST_EXT 0x8890
#endif

#ifndef GL_DEPTH_BOUNDS_EXT
#define GL_DEPTH_BOUNDS_EXT 0x8891
#endif

#ifndef GL_MIRROR_CLAMP_EXT
#define GL_MIRROR_CLAMP_EXT 0x8742
#endif

#ifndef GL_MIRROR_CLAMP_TO_EDGE_EXT
#define GL_MIRROR_CLAMP_TO_EDGE_EXT 0x8743
#endif

#ifndef GL_MIRROR_CLAMP_TO_BORDER_EXT
#define GL_MIRROR_CLAMP_TO_BORDER_EXT 0x8912
#endif

#ifndef GL_BLEND_EQUATION_RGB_EXT
#define GL_BLEND_EQUATION_RGB_EXT 0x8009
#endif

#ifndef GL_BLEND_EQUATION_ALPHA_EXT
#define GL_BLEND_EQUATION_ALPHA_EXT 0x883D
#endif

#ifndef GL_PACK_INVERT_MESA
#define GL_PACK_INVERT_MESA 0x8758
#endif

#ifndef GL_UNSIGNED_SHORT_8_8_MESA
#define GL_UNSIGNED_SHORT_8_8_MESA 0x85BA
#endif

#ifndef GL_UNSIGNED_SHORT_8_8_REV_MESA
#define GL_UNSIGNED_SHORT_8_8_REV_MESA 0x85BB
#endif

#ifndef GL_YCBCR_MESA
#define GL_YCBCR_MESA 0x8757
#endif

#ifndef GL_PIXEL_PACK_BUFFER_EXT
#define GL_PIXEL_PACK_BUFFER_EXT 0x88EB
#endif

#ifndef GL_PIXEL_UNPACK_BUFFER_EXT
#define GL_PIXEL_UNPACK_BUFFER_EXT 0x88EC
#endif

#ifndef GL_PIXEL_PACK_BUFFER_BINDING_EXT
#define GL_PIXEL_PACK_BUFFER_BINDING_EXT 0x88ED
#endif

#ifndef GL_PIXEL_UNPACK_BUFFER_BINDING_EXT
#define GL_PIXEL_UNPACK_BUFFER_BINDING_EXT 0x88EF
#endif

#ifndef GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV
#define GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV 0x88F4
#endif

#ifndef GL_MAX_PROGRAM_CALL_DEPTH_NV
#define GL_MAX_PROGRAM_CALL_DEPTH_NV 0x88F5
#endif

#ifndef GL_MAX_PROGRAM_IF_DEPTH_NV
#define GL_MAX_PROGRAM_IF_DEPTH_NV 0x88F6
#endif

#ifndef GL_MAX_PROGRAM_LOOP_DEPTH_NV
#define GL_MAX_PROGRAM_LOOP_DEPTH_NV 0x88F7
#endif

#ifndef GL_MAX_PROGRAM_LOOP_COUNT_NV
#define GL_MAX_PROGRAM_LOOP_COUNT_NV 0x88F8
#endif

#ifndef GL_INVALID_FRAMEBUFFER_OPERATION_EXT
#define GL_INVALID_FRAMEBUFFER_OPERATION_EXT 0x0506
#endif

#ifndef GL_MAX_RENDERBUFFER_SIZE_EXT
#define GL_MAX_RENDERBUFFER_SIZE_EXT 0x84E8
#endif

#ifndef GL_FRAMEBUFFER_BINDING_EXT
#define GL_FRAMEBUFFER_BINDING_EXT 0x8CA6
#endif

#ifndef GL_RENDERBUFFER_BINDING_EXT
#define GL_RENDERBUFFER_BINDING_EXT 0x8CA7
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT
#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT 0x8CD0
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT
#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT 0x8CD1
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT 0x8CD2
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT 0x8CD3
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT 0x8CD4
#endif

#ifndef GL_FRAMEBUFFER_COMPLETE_EXT
#define GL_FRAMEBUFFER_COMPLETE_EXT 0x8CD5
#endif

#ifndef GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT
#define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT 0x8CD6
#endif

#ifndef GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT
#define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT 0x8CD7
#endif

#ifndef GL_DEPTH_STENCIL_EXT
#define GL_DEPTH_STENCIL_EXT 0x84F9
#endif

#ifndef GL_UNSIGNED_INT_24_8_EXT
#define GL_UNSIGNED_INT_24_8_EXT 0x84FA
#endif

#ifndef GL_DEPTH24_STENCIL8_EXT
#define GL_DEPTH24_STENCIL8_EXT 0x88F0
#endif

#ifndef GL_TEXTURE_STENCIL_SIZE_EXT
#define GL_TEXTURE_STENCIL_SIZE_EXT 0x88F1
#endif

#ifndef GL_STENCIL_TAG_BITS_EXT
#define GL_STENCIL_TAG_BITS_EXT 0x88F2
#endif

#ifndef GL_STENCIL_CLEAR_TAG_VALUE_EXT
#define GL_STENCIL_CLEAR_TAG_VALUE_EXT 0x88F3
#endif

#ifndef GL_SRGB_EXT
#define GL_SRGB_EXT 0x8C40
#endif

#ifndef GL_SRGB8_EXT
#define GL_SRGB8_EXT 0x8C41
#endif

#ifndef GL_SRGB_ALPHA_EXT
#define GL_SRGB_ALPHA_EXT 0x8C42
#endif

#ifndef GL_SRGB8_ALPHA8_EXT
#define GL_SRGB8_ALPHA8_EXT 0x8C43
#endif

#ifndef GL_SLUMINANCE_ALPHA_EXT
#define GL_SLUMINANCE_ALPHA_EXT 0x8C44
#endif

#ifndef GL_SLUMINANCE8_ALPHA8_EXT
#define GL_SLUMINANCE8_ALPHA8_EXT 0x8C45
#endif

#ifndef GL_SLUMINANCE_EXT
#define GL_SLUMINANCE_EXT 0x8C46
#endif

#ifndef GL_SLUMINANCE8_EXT
#define GL_SLUMINANCE8_EXT 0x8C47
#endif

#ifndef GL_COMPRESSED_SRGB_EXT
#define GL_COMPRESSED_SRGB_EXT 0x8C48
#endif

#ifndef GL_COMPRESSED_SRGB_ALPHA_EXT
#define GL_COMPRESSED_SRGB_ALPHA_EXT 0x8C49
#endif

#ifndef GL_COMPRESSED_SLUMINANCE_EXT
#define GL_COMPRESSED_SLUMINANCE_EXT 0x8C4A
#endif

#ifndef GL_COMPRESSED_SLUMINANCE_ALPHA_EXT
#define GL_COMPRESSED_SLUMINANCE_ALPHA_EXT 0x8C4B
#endif

#ifndef GL_COMPRESSED_SRGB_S3TC_DXT1_EXT
#define GL_COMPRESSED_SRGB_S3TC_DXT1_EXT 0x8C4C
#endif

#ifndef GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT
#define GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT 0x8C4D
#endif

#ifndef GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT
#define GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT 0x8C4E
#endif

#ifndef GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT
#define GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT 0x8C4F
#endif

#ifndef GL_READ_FRAMEBUFFER_EXT
#define GL_READ_FRAMEBUFFER_EXT 0x8CA8
#endif

#ifndef GL_DRAW_FRAMEBUFFER_EXT
#define GL_DRAW_FRAMEBUFFER_EXT 0x8CA9
#endif

#ifndef GL_DRAW_FRAMEBUFFER_BINDING_EXT
#define GL_DRAW_FRAMEBUFFER_BINDING_EXT GL_FRAMEBUFFER_BINDING_EXT
#endif

#ifndef GL_READ_FRAMEBUFFER_BINDING_EXT
#define GL_READ_FRAMEBUFFER_BINDING_EXT 0x8CAA
#endif

#ifndef GL_RENDERBUFFER_SAMPLES_EXT
#define GL_RENDERBUFFER_SAMPLES_EXT 0x8CAB
#endif

#ifndef GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT
#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT 0x8D56
#endif

#ifndef GL_MAX_SAMPLES_EXT
#define GL_MAX_SAMPLES_EXT 0x8D57
#endif

#ifndef GL_TEXTURE_1D_STACK_MESAX
#define GL_TEXTURE_1D_STACK_MESAX 0x8759
#endif

#ifndef GL_TEXTURE_2D_STACK_MESAX
#define GL_TEXTURE_2D_STACK_MESAX 0x875A
#endif

#ifndef GL_PROXY_TEXTURE_1D_STACK_MESAX
#define GL_PROXY_TEXTURE_1D_STACK_MESAX 0x875B
#endif

#ifndef GL_PROXY_TEXTURE_2D_STACK_MESAX
#define GL_PROXY_TEXTURE_2D_STACK_MESAX 0x875C
#endif

#ifndef GL_TEXTURE_1D_STACK_BINDING_MESAX
#define GL_TEXTURE_1D_STACK_BINDING_MESAX 0x875D
#endif

#ifndef GL_TEXTURE_2D_STACK_BINDING_MESAX
#define GL_TEXTURE_2D_STACK_BINDING_MESAX 0x875E
#endif

#ifndef GL_TIME_ELAPSED_EXT
#define GL_TIME_ELAPSED_EXT 0x88BF
#endif

#ifndef GL_BUFFER_SERIALIZED_MODIFY_APPLE
#define GL_BUFFER_SERIALIZED_MODIFY_APPLE 0x8A12
#endif

#ifndef GL_BUFFER_FLUSHING_UNMAP_APPLE
#define GL_BUFFER_FLUSHING_UNMAP_APPLE 0x8A13
#endif

#ifndef GL_MIN_PROGRAM_TEXEL_OFFSET_NV
#define GL_MIN_PROGRAM_TEXEL_OFFSET_NV 0x8904
#endif

#ifndef GL_MAX_PROGRAM_TEXEL_OFFSET_NV
#define GL_MAX_PROGRAM_TEXEL_OFFSET_NV 0x8905
#endif

#ifndef GL_PROGRAM_ATTRIB_COMPONENTS_NV
#define GL_PROGRAM_ATTRIB_COMPONENTS_NV 0x8906
#endif

#ifndef GL_PROGRAM_RESULT_COMPONENTS_NV
#define GL_PROGRAM_RESULT_COMPONENTS_NV 0x8907
#endif

#ifndef GL_MAX_PROGRAM_ATTRIB_COMPONENTS_NV
#define GL_MAX_PROGRAM_ATTRIB_COMPONENTS_NV 0x8908
#endif

#ifndef GL_MAX_PROGRAM_RESULT_COMPONENTS_NV
#define GL_MAX_PROGRAM_RESULT_COMPONENTS_NV 0x8909
#endif

#ifndef GL_MAX_PROGRAM_GENERIC_ATTRIBS_NV
#define GL_MAX_PROGRAM_GENERIC_ATTRIBS_NV 0x8DA5
#endif

#ifndef GL_MAX_PROGRAM_GENERIC_RESULTS_NV
#define GL_MAX_PROGRAM_GENERIC_RESULTS_NV 0x8DA6
#endif

#ifndef GL_LINES_ADJACENCY_EXT
#define GL_LINES_ADJACENCY_EXT 0x000A
#endif

#ifndef GL_LINE_STRIP_ADJACENCY_EXT
#define GL_LINE_STRIP_ADJACENCY_EXT 0x000B
#endif

#ifndef GL_TRIANGLES_ADJACENCY_EXT
#define GL_TRIANGLES_ADJACENCY_EXT 0x000C
#endif

#ifndef GL_TRIANGLE_STRIP_ADJACENCY_EXT
#define GL_TRIANGLE_STRIP_ADJACENCY_EXT 0x000D
#endif

#ifndef GL_GEOMETRY_PROGRAM_NV
#define GL_GEOMETRY_PROGRAM_NV 0x8C26
#endif

#ifndef GL_MAX_PROGRAM_OUTPUT_VERTICES_NV
#define GL_MAX_PROGRAM_OUTPUT_VERTICES_NV 0x8C27
#endif

#ifndef GL_MAX_PROGRAM_TOTAL_OUTPUT_COMPONENTS_NV
#define GL_MAX_PROGRAM_TOTAL_OUTPUT_COMPONENTS_NV 0x8C28
#endif

#ifndef GL_GEOMETRY_VERTICES_OUT_EXT
#define GL_GEOMETRY_VERTICES_OUT_EXT 0x8DDA
#endif

#ifndef GL_GEOMETRY_INPUT_TYPE_EXT
#define GL_GEOMETRY_INPUT_TYPE_EXT 0x8DDB
#endif

#ifndef GL_GEOMETRY_OUTPUT_TYPE_EXT
#define GL_GEOMETRY_OUTPUT_TYPE_EXT 0x8DDC
#endif

#ifndef GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT
#define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT 0x8C29
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT
#define GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT 0x8DA7
#endif

#ifndef GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT
#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT 0x8DA8
#endif

#ifndef GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT
#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT 0x8DA9
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT 0x8CD4
#endif

#ifndef GL_PROGRAM_POINT_SIZE_EXT
#define GL_PROGRAM_POINT_SIZE_EXT 0x8642
#endif

#ifndef GL_GEOMETRY_SHADER_EXT
#define GL_GEOMETRY_SHADER_EXT 0x8DD9
#endif

#ifndef GL_MAX_GEOMETRY_VARYING_COMPONENTS_EXT
#define GL_MAX_GEOMETRY_VARYING_COMPONENTS_EXT 0x8DDD
#endif

#ifndef GL_MAX_VERTEX_VARYING_COMPONENTS_EXT
#define GL_MAX_VERTEX_VARYING_COMPONENTS_EXT 0x8DDE
#endif

#ifndef GL_MAX_VARYING_COMPONENTS_EXT
#define GL_MAX_VARYING_COMPONENTS_EXT 0x8B4B
#endif

#ifndef GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT
#define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT 0x8DDF
#endif

#ifndef GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT
#define GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT 0x8DE0
#endif

#ifndef GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT
#define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT 0x8DE1
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY_INTEGER_NV
#define GL_VERTEX_ATTRIB_ARRAY_INTEGER_NV 0x88FD
#endif

#ifndef GL_SAMPLER_1D_ARRAY_EXT
#define GL_SAMPLER_1D_ARRAY_EXT 0x8DC0
#endif

#ifndef GL_SAMPLER_2D_ARRAY_EXT
#define GL_SAMPLER_2D_ARRAY_EXT 0x8DC1
#endif

#ifndef GL_SAMPLER_BUFFER_EXT
#define GL_SAMPLER_BUFFER_EXT 0x8DC2
#endif

#ifndef GL_SAMPLER_1D_ARRAY_SHADOW_EXT
#define GL_SAMPLER_1D_ARRAY_SHADOW_EXT 0x8DC3
#endif

#ifndef GL_SAMPLER_2D_ARRAY_SHADOW_EXT
#define GL_SAMPLER_2D_ARRAY_SHADOW_EXT 0x8DC4
#endif

#ifndef GL_SAMPLER_CUBE_SHADOW_EXT
#define GL_SAMPLER_CUBE_SHADOW_EXT 0x8DC5
#endif

#ifndef GL_UNSIGNED_INT_VEC2_EXT
#define GL_UNSIGNED_INT_VEC2_EXT 0x8DC6
#endif

#ifndef GL_UNSIGNED_INT_VEC3_EXT
#define GL_UNSIGNED_INT_VEC3_EXT 0x8DC7
#endif

#ifndef GL_UNSIGNED_INT_VEC4_EXT
#define GL_UNSIGNED_INT_VEC4_EXT 0x8DC8
#endif

#ifndef GL_INT_SAMPLER_1D_EXT
#define GL_INT_SAMPLER_1D_EXT 0x8DC9
#endif

#ifndef GL_INT_SAMPLER_2D_EXT
#define GL_INT_SAMPLER_2D_EXT 0x8DCA
#endif

#ifndef GL_INT_SAMPLER_3D_EXT
#define GL_INT_SAMPLER_3D_EXT 0x8DCB
#endif

#ifndef GL_INT_SAMPLER_CUBE_EXT
#define GL_INT_SAMPLER_CUBE_EXT 0x8DCC
#endif

#ifndef GL_INT_SAMPLER_2D_RECT_EXT
#define GL_INT_SAMPLER_2D_RECT_EXT 0x8DCD
#endif

#ifndef GL_INT_SAMPLER_1D_ARRAY_EXT
#define GL_INT_SAMPLER_1D_ARRAY_EXT 0x8DCE
#endif

#ifndef GL_INT_SAMPLER_2D_ARRAY_EXT
#define GL_INT_SAMPLER_2D_ARRAY_EXT 0x8DCF
#endif

#ifndef GL_INT_SAMPLER_BUFFER_EXT
#define GL_INT_SAMPLER_BUFFER_EXT 0x8DD0
#endif

#ifndef GL_UNSIGNED_INT_SAMPLER_1D_EXT
#define GL_UNSIGNED_INT_SAMPLER_1D_EXT 0x8DD1
#endif

#ifndef GL_UNSIGNED_INT_SAMPLER_2D_EXT
#define GL_UNSIGNED_INT_SAMPLER_2D_EXT 0x8DD2
#endif

#ifndef GL_UNSIGNED_INT_SAMPLER_3D_EXT
#define GL_UNSIGNED_INT_SAMPLER_3D_EXT 0x8DD3
#endif

#ifndef GL_UNSIGNED_INT_SAMPLER_CUBE_EXT
#define GL_UNSIGNED_INT_SAMPLER_CUBE_EXT 0x8DD4
#endif

#ifndef GL_UNSIGNED_INT_SAMPLER_2D_RECT_EXT
#define GL_UNSIGNED_INT_SAMPLER_2D_RECT_EXT 0x8DD5
#endif

#ifndef GL_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT
#define GL_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT 0x8DD6
#endif

#ifndef GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT
#define GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT 0x8DD7
#endif

#ifndef GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT
#define GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT 0x8DD8
#endif

#ifndef GL_R11F_G11F_B10F_EXT
#define GL_R11F_G11F_B10F_EXT 0x8C3A
#endif

#ifndef GL_UNSIGNED_INT_10F_11F_11F_REV_EXT
#define GL_UNSIGNED_INT_10F_11F_11F_REV_EXT 0x8C3B
#endif

#ifndef GL_RGBA_SIGNED_COMPONENTS_EXT
#define GL_RGBA_SIGNED_COMPONENTS_EXT 0x8C3C
#endif

#ifndef GL_TEXTURE_1D_ARRAY_EXT
#define GL_TEXTURE_1D_ARRAY_EXT 0x8C18
#endif

#ifndef GL_PROXY_TEXTURE_1D_ARRAY_EXT
#define GL_PROXY_TEXTURE_1D_ARRAY_EXT 0x8C19
#endif

#ifndef GL_TEXTURE_2D_ARRAY_EXT
#define GL_TEXTURE_2D_ARRAY_EXT 0x8C1A
#endif

#ifndef GL_PROXY_TEXTURE_2D_ARRAY_EXT
#define GL_PROXY_TEXTURE_2D_ARRAY_EXT 0x8C1B
#endif

#ifndef GL_TEXTURE_BINDING_1D_ARRAY_EXT
#define GL_TEXTURE_BINDING_1D_ARRAY_EXT 0x8C1C
#endif

#ifndef GL_TEXTURE_BINDING_2D_ARRAY_EXT
#define GL_TEXTURE_BINDING_2D_ARRAY_EXT 0x8C1D
#endif

#ifndef GL_MAX_ARRAY_TEXTURE_LAYERS_EXT
#define GL_MAX_ARRAY_TEXTURE_LAYERS_EXT 0x88FF
#endif

#ifndef GL_COMPARE_REF_DEPTH_TO_TEXTURE_EXT
#define GL_COMPARE_REF_DEPTH_TO_TEXTURE_EXT 0x884E
#endif

#ifndef GL_TEXTURE_BUFFER_EXT
#define GL_TEXTURE_BUFFER_EXT 0x8C2A
#endif

#ifndef GL_MAX_TEXTURE_BUFFER_SIZE_EXT
#define GL_MAX_TEXTURE_BUFFER_SIZE_EXT 0x8C2B
#endif

#ifndef GL_TEXTURE_BINDING_BUFFER_EXT
#define GL_TEXTURE_BINDING_BUFFER_EXT 0x8C2C
#endif

#ifndef GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT
#define GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT 0x8C2D
#endif

#ifndef GL_TEXTURE_BUFFER_FORMAT_EXT
#define GL_TEXTURE_BUFFER_FORMAT_EXT 0x8C2E
#endif

#ifndef GL_COMPRESSED_LUMINANCE_LATC1_EXT
#define GL_COMPRESSED_LUMINANCE_LATC1_EXT 0x8C70
#endif

#ifndef GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT
#define GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT 0x8C71
#endif

#ifndef GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT
#define GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT 0x8C72
#endif

#ifndef GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT
#define GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT 0x8C73
#endif

#ifndef GL_COMPRESSED_RED_RGTC1_EXT
#define GL_COMPRESSED_RED_RGTC1_EXT 0x8DBB
#endif

#ifndef GL_COMPRESSED_SIGNED_RED_RGTC1_EXT
#define GL_COMPRESSED_SIGNED_RED_RGTC1_EXT 0x8DBC
#endif

#ifndef GL_COMPRESSED_RED_GREEN_RGTC2_EXT
#define GL_COMPRESSED_RED_GREEN_RGTC2_EXT 0x8DBD
#endif

#ifndef GL_COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT
#define GL_COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT 0x8DBE
#endif

#ifndef GL_RGB9_E5_EXT
#define GL_RGB9_E5_EXT 0x8C3D
#endif

#ifndef GL_UNSIGNED_INT_5_9_9_9_REV_EXT
#define GL_UNSIGNED_INT_5_9_9_9_REV_EXT 0x8C3E
#endif

#ifndef GL_TEXTURE_SHARED_SIZE_EXT
#define GL_TEXTURE_SHARED_SIZE_EXT 0x8C3F
#endif

#ifndef GL_DEPTH_COMPONENT32F_NV
#define GL_DEPTH_COMPONENT32F_NV 0x8DAB
#endif

#ifndef GL_DEPTH32F_STENCIL8_NV
#define GL_DEPTH32F_STENCIL8_NV 0x8DAC
#endif

#ifndef GL_FLOAT_32_UNSIGNED_INT_24_8_REV_NV
#define GL_FLOAT_32_UNSIGNED_INT_24_8_REV_NV 0x8DAD
#endif

#ifndef GL_DEPTH_BUFFER_FLOAT_MODE_NV
#define GL_DEPTH_BUFFER_FLOAT_MODE_NV 0x8DAF
#endif

#ifndef GL_RENDERBUFFER_COVERAGE_SAMPLES_NV
#define GL_RENDERBUFFER_COVERAGE_SAMPLES_NV 0x8CAB
#endif

#ifndef GL_RENDERBUFFER_COLOR_SAMPLES_NV
#define GL_RENDERBUFFER_COLOR_SAMPLES_NV 0x8E10
#endif

#ifndef GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV
#define GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV 0x8E11
#endif

#ifndef GL_MULTISAMPLE_COVERAGE_MODES_NV
#define GL_MULTISAMPLE_COVERAGE_MODES_NV 0x8E12
#endif

#ifndef GL_FRAMEBUFFER_SRGB_EXT
#define GL_FRAMEBUFFER_SRGB_EXT 0x8DB9
#endif

#ifndef GL_FRAMEBUFFER_SRGB_CAPABLE_EXT
#define GL_FRAMEBUFFER_SRGB_CAPABLE_EXT 0x8DBA
#endif

#ifndef GL_MAX_PROGRAM_PARAMETER_BUFFER_BINDINGS_NV
#define GL_MAX_PROGRAM_PARAMETER_BUFFER_BINDINGS_NV 0x8DA0
#endif

#ifndef GL_MAX_PROGRAM_PARAMETER_BUFFER_SIZE_NV
#define GL_MAX_PROGRAM_PARAMETER_BUFFER_SIZE_NV 0x8DA1
#endif

#ifndef GL_VERTEX_PROGRAM_PARAMETER_BUFFER_NV
#define GL_VERTEX_PROGRAM_PARAMETER_BUFFER_NV 0x8DA2
#endif

#ifndef GL_GEOMETRY_PROGRAM_PARAMETER_BUFFER_NV
#define GL_GEOMETRY_PROGRAM_PARAMETER_BUFFER_NV 0x8DA3
#endif

#ifndef GL_FRAGMENT_PROGRAM_PARAMETER_BUFFER_NV
#define GL_FRAGMENT_PROGRAM_PARAMETER_BUFFER_NV 0x8DA4
#endif

#ifndef GL_BACK_PRIMARY_COLOR_NV
#define GL_BACK_PRIMARY_COLOR_NV 0x8C77
#endif

#ifndef GL_BACK_SECONDARY_COLOR_NV
#define GL_BACK_SECONDARY_COLOR_NV 0x8C78
#endif

#ifndef GL_TEXTURE_COORD_NV
#define GL_TEXTURE_COORD_NV 0x8C79
#endif

#ifndef GL_CLIP_DISTANCE_NV
#define GL_CLIP_DISTANCE_NV 0x8C7A
#endif

#ifndef GL_VERTEX_ID_NV
#define GL_VERTEX_ID_NV 0x8C7B
#endif

#ifndef GL_PRIMITIVE_ID_NV
#define GL_PRIMITIVE_ID_NV 0x8C7C
#endif

#ifndef GL_GENERIC_ATTRIB_NV
#define GL_GENERIC_ATTRIB_NV 0x8C7D
#endif

#ifndef GL_TRANSFORM_FEEDBACK_ATTRIBS_NV
#define GL_TRANSFORM_FEEDBACK_ATTRIBS_NV 0x8C7E
#endif

#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV
#define GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV 0x8C7F
#endif

#ifndef GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV 0x8C80
#endif

#ifndef GL_ACTIVE_VARYINGS_NV
#define GL_ACTIVE_VARYINGS_NV 0x8C81
#endif

#ifndef GL_ACTIVE_VARYING_MAX_LENGTH_NV
#define GL_ACTIVE_VARYING_MAX_LENGTH_NV 0x8C82
#endif

#ifndef GL_TRANSFORM_FEEDBACK_VARYINGS_NV
#define GL_TRANSFORM_FEEDBACK_VARYINGS_NV 0x8C83
#endif

#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_START_NV
#define GL_TRANSFORM_FEEDBACK_BUFFER_START_NV 0x8C84
#endif

#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV
#define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV 0x8C85
#endif

#ifndef GL_TRANSFORM_FEEDBACK_RECORD_NV
#define GL_TRANSFORM_FEEDBACK_RECORD_NV 0x8C86
#endif

#ifndef GL_PRIMITIVES_GENERATED_NV
#define GL_PRIMITIVES_GENERATED_NV 0x8C87
#endif

#ifndef GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV
#define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV 0x8C88
#endif

#ifndef GL_RASTERIZER_DISCARD_NV
#define GL_RASTERIZER_DISCARD_NV 0x8C89
#endif

#ifndef GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV
#define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV 0x8C8A
#endif

#ifndef GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV 0x8C8B
#endif

#ifndef GL_INTERLEAVED_ATTRIBS_NV
#define GL_INTERLEAVED_ATTRIBS_NV 0x8C8C
#endif

#ifndef GL_SEPARATE_ATTRIBS_NV
#define GL_SEPARATE_ATTRIBS_NV 0x8C8D
#endif

#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_NV
#define GL_TRANSFORM_FEEDBACK_BUFFER_NV 0x8C8E
#endif

#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV
#define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV 0x8C8F
#endif

#ifndef GL_LAYER_NV
#define GL_LAYER_NV 0x8DAA
#endif

#ifndef GL_NEXT_BUFFER_NV
#define GL_NEXT_BUFFER_NV -2
#endif

#ifndef GL_SKIP_COMPONENTS4_NV
#define GL_SKIP_COMPONENTS4_NV -3
#endif

#ifndef GL_SKIP_COMPONENTS3_NV
#define GL_SKIP_COMPONENTS3_NV -4
#endif

#ifndef GL_SKIP_COMPONENTS2_NV
#define GL_SKIP_COMPONENTS2_NV -5
#endif

#ifndef GL_SKIP_COMPONENTS1_NV
#define GL_SKIP_COMPONENTS1_NV -6
#endif

#ifndef GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT
#define GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT 0x8DE2
#endif

#ifndef GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT
#define GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT 0x8DE3
#endif

#ifndef GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT
#define GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT 0x8DE4
#endif

#ifndef GL_MAX_BINDABLE_UNIFORM_SIZE_EXT
#define GL_MAX_BINDABLE_UNIFORM_SIZE_EXT 0x8DED
#endif

#ifndef GL_UNIFORM_BUFFER_EXT
#define GL_UNIFORM_BUFFER_EXT 0x8DEE
#endif

#ifndef GL_UNIFORM_BUFFER_BINDING_EXT
#define GL_UNIFORM_BUFFER_BINDING_EXT 0x8DEF
#endif

#ifndef GL_RGBA32UI_EXT
#define GL_RGBA32UI_EXT 0x8D70
#endif

#ifndef GL_RGB32UI_EXT
#define GL_RGB32UI_EXT 0x8D71
#endif

#ifndef GL_ALPHA32UI_EXT
#define GL_ALPHA32UI_EXT 0x8D72
#endif

#ifndef GL_INTENSITY32UI_EXT
#define GL_INTENSITY32UI_EXT 0x8D73
#endif

#ifndef GL_LUMINANCE32UI_EXT
#define GL_LUMINANCE32UI_EXT 0x8D74
#endif

#ifndef GL_LUMINANCE_ALPHA32UI_EXT
#define GL_LUMINANCE_ALPHA32UI_EXT 0x8D75
#endif

#ifndef GL_RGBA16UI_EXT
#define GL_RGBA16UI_EXT 0x8D76
#endif

#ifndef GL_RGB16UI_EXT
#define GL_RGB16UI_EXT 0x8D77
#endif

#ifndef GL_ALPHA16UI_EXT
#define GL_ALPHA16UI_EXT 0x8D78
#endif

#ifndef GL_INTENSITY16UI_EXT
#define GL_INTENSITY16UI_EXT 0x8D79
#endif

#ifndef GL_LUMINANCE16UI_EXT
#define GL_LUMINANCE16UI_EXT 0x8D7A
#endif

#ifndef GL_LUMINANCE_ALPHA16UI_EXT
#define GL_LUMINANCE_ALPHA16UI_EXT 0x8D7B
#endif

#ifndef GL_RGBA8UI_EXT
#define GL_RGBA8UI_EXT 0x8D7C
#endif

#ifndef GL_RGB8UI_EXT
#define GL_RGB8UI_EXT 0x8D7D
#endif

#ifndef GL_ALPHA8UI_EXT
#define GL_ALPHA8UI_EXT 0x8D7E
#endif

#ifndef GL_INTENSITY8UI_EXT
#define GL_INTENSITY8UI_EXT 0x8D7F
#endif

#ifndef GL_LUMINANCE8UI_EXT
#define GL_LUMINANCE8UI_EXT 0x8D80
#endif

#ifndef GL_LUMINANCE_ALPHA8UI_EXT
#define GL_LUMINANCE_ALPHA8UI_EXT 0x8D81
#endif

#ifndef GL_RGBA32I_EXT
#define GL_RGBA32I_EXT 0x8D82
#endif

#ifndef GL_RGB32I_EXT
#define GL_RGB32I_EXT 0x8D83
#endif

#ifndef GL_ALPHA32I_EXT
#define GL_ALPHA32I_EXT 0x8D84
#endif

#ifndef GL_INTENSITY32I_EXT
#define GL_INTENSITY32I_EXT 0x8D85
#endif

#ifndef GL_LUMINANCE32I_EXT
#define GL_LUMINANCE32I_EXT 0x8D86
#endif

#ifndef GL_LUMINANCE_ALPHA32I_EXT
#define GL_LUMINANCE_ALPHA32I_EXT 0x8D87
#endif

#ifndef GL_RGBA16I_EXT
#define GL_RGBA16I_EXT 0x8D88
#endif

#ifndef GL_RGB16I_EXT
#define GL_RGB16I_EXT 0x8D89
#endif

#ifndef GL_ALPHA16I_EXT
#define GL_ALPHA16I_EXT 0x8D8A
#endif

#ifndef GL_INTENSITY16I_EXT
#define GL_INTENSITY16I_EXT 0x8D8B
#endif

#ifndef GL_LUMINANCE16I_EXT
#define GL_LUMINANCE16I_EXT 0x8D8C
#endif

#ifndef GL_LUMINANCE_ALPHA16I_EXT
#define GL_LUMINANCE_ALPHA16I_EXT 0x8D8D
#endif

#ifndef GL_RGBA8I_EXT
#define GL_RGBA8I_EXT 0x8D8E
#endif

#ifndef GL_RGB8I_EXT
#define GL_RGB8I_EXT 0x8D8F
#endif

#ifndef GL_ALPHA8I_EXT
#define GL_ALPHA8I_EXT 0x8D90
#endif

#ifndef GL_INTENSITY8I_EXT
#define GL_INTENSITY8I_EXT 0x8D91
#endif

#ifndef GL_LUMINANCE8I_EXT
#define GL_LUMINANCE8I_EXT 0x8D92
#endif

#ifndef GL_LUMINANCE_ALPHA8I_EXT
#define GL_LUMINANCE_ALPHA8I_EXT 0x8D93
#endif

#ifndef GL_RED_INTEGER_EXT
#define GL_RED_INTEGER_EXT 0x8D94
#endif

#ifndef GL_GREEN_INTEGER_EXT
#define GL_GREEN_INTEGER_EXT 0x8D95
#endif

#ifndef GL_BLUE_INTEGER_EXT
#define GL_BLUE_INTEGER_EXT 0x8D96
#endif

#ifndef GL_ALPHA_INTEGER_EXT
#define GL_ALPHA_INTEGER_EXT 0x8D97
#endif

#ifndef GL_RGB_INTEGER_EXT
#define GL_RGB_INTEGER_EXT 0x8D98
#endif

#ifndef GL_RGBA_INTEGER_EXT
#define GL_RGBA_INTEGER_EXT 0x8D99
#endif

#ifndef GL_BGR_INTEGER_EXT
#define GL_BGR_INTEGER_EXT 0x8D9A
#endif

#ifndef GL_BGRA_INTEGER_EXT
#define GL_BGRA_INTEGER_EXT 0x8D9B
#endif

#ifndef GL_LUMINANCE_INTEGER_EXT
#define GL_LUMINANCE_INTEGER_EXT 0x8D9C
#endif

#ifndef GL_LUMINANCE_ALPHA_INTEGER_EXT
#define GL_LUMINANCE_ALPHA_INTEGER_EXT 0x8D9D
#endif

#ifndef GL_RGBA_INTEGER_MODE_EXT
#define GL_RGBA_INTEGER_MODE_EXT 0x8D9E
#endif

#ifndef GL_QUERY_WAIT_NV
#define GL_QUERY_WAIT_NV 0x8E13
#endif

#ifndef GL_QUERY_NO_WAIT_NV
#define GL_QUERY_NO_WAIT_NV 0x8E14
#endif

#ifndef GL_QUERY_BY_REGION_WAIT_NV
#define GL_QUERY_BY_REGION_WAIT_NV 0x8E15
#endif

#ifndef GL_QUERY_BY_REGION_NO_WAIT_NV
#define GL_QUERY_BY_REGION_NO_WAIT_NV 0x8E16
#endif

#ifndef GL_FRAME_NV
#define GL_FRAME_NV 0x8E26
#endif

#ifndef GL_FIELDS_NV
#define GL_FIELDS_NV 0x8E27
#endif

#ifndef GL_CURRENT_TIME_NV
#define GL_CURRENT_TIME_NV 0x8E28
#endif

#ifndef GL_NUM_FILL_STREAMS_NV
#define GL_NUM_FILL_STREAMS_NV 0x8E29
#endif

#ifndef GL_PRESENT_TIME_NV
#define GL_PRESENT_TIME_NV 0x8E2A
#endif

#ifndef GL_PRESENT_DURATION_NV
#define GL_PRESENT_DURATION_NV 0x8E2B
#endif

#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_EXT
#define GL_TRANSFORM_FEEDBACK_BUFFER_EXT 0x8C8E
#endif

#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_START_EXT
#define GL_TRANSFORM_FEEDBACK_BUFFER_START_EXT 0x8C84
#endif

#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT
#define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT 0x8C85
#endif

#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT
#define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT 0x8C8F
#endif

#ifndef GL_INTERLEAVED_ATTRIBS_EXT
#define GL_INTERLEAVED_ATTRIBS_EXT 0x8C8C
#endif

#ifndef GL_SEPARATE_ATTRIBS_EXT
#define GL_SEPARATE_ATTRIBS_EXT 0x8C8D
#endif

#ifndef GL_PRIMITIVES_GENERATED_EXT
#define GL_PRIMITIVES_GENERATED_EXT 0x8C87
#endif

#ifndef GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT
#define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT 0x8C88
#endif

#ifndef GL_RASTERIZER_DISCARD_EXT
#define GL_RASTERIZER_DISCARD_EXT 0x8C89
#endif

#ifndef GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT
#define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT 0x8C8A
#endif

#ifndef GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT 0x8C8B
#endif

#ifndef GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT 0x8C80
#endif

#ifndef GL_TRANSFORM_FEEDBACK_VARYINGS_EXT
#define GL_TRANSFORM_FEEDBACK_VARYINGS_EXT 0x8C83
#endif

#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_MODE_EXT
#define GL_TRANSFORM_FEEDBACK_BUFFER_MODE_EXT 0x8C7F
#endif

#ifndef GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT
#define GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT 0x8C76
#endif

#ifndef GL_PROGRAM_MATRIX_EXT
#define GL_PROGRAM_MATRIX_EXT 0x8E2D
#endif

#ifndef GL_TRANSPOSE_PROGRAM_MATRIX_EXT
#define GL_TRANSPOSE_PROGRAM_MATRIX_EXT 0x8E2E
#endif

#ifndef GL_PROGRAM_MATRIX_STACK_DEPTH_EXT
#define GL_PROGRAM_MATRIX_STACK_DEPTH_EXT 0x8E2F
#endif

#ifndef GL_TEXTURE_SWIZZLE_R_EXT
#define GL_TEXTURE_SWIZZLE_R_EXT 0x8E42
#endif

#ifndef GL_TEXTURE_SWIZZLE_G_EXT
#define GL_TEXTURE_SWIZZLE_G_EXT 0x8E43
#endif

#ifndef GL_TEXTURE_SWIZZLE_B_EXT
#define GL_TEXTURE_SWIZZLE_B_EXT 0x8E44
#endif

#ifndef GL_TEXTURE_SWIZZLE_A_EXT
#define GL_TEXTURE_SWIZZLE_A_EXT 0x8E45
#endif

#ifndef GL_TEXTURE_SWIZZLE_RGBA_EXT
#define GL_TEXTURE_SWIZZLE_RGBA_EXT 0x8E46
#endif

#ifndef GL_SAMPLE_POSITION_NV
#define GL_SAMPLE_POSITION_NV 0x8E50
#endif

#ifndef GL_SAMPLE_MASK_NV
#define GL_SAMPLE_MASK_NV 0x8E51
#endif

#ifndef GL_SAMPLE_MASK_VALUE_NV
#define GL_SAMPLE_MASK_VALUE_NV 0x8E52
#endif

#ifndef GL_TEXTURE_BINDING_RENDERBUFFER_NV
#define GL_TEXTURE_BINDING_RENDERBUFFER_NV 0x8E53
#endif

#ifndef GL_TEXTURE_RENDERBUFFER_DATA_STORE_BINDING_NV
#define GL_TEXTURE_RENDERBUFFER_DATA_STORE_BINDING_NV 0x8E54
#endif

#ifndef GL_TEXTURE_RENDERBUFFER_NV
#define GL_TEXTURE_RENDERBUFFER_NV 0x8E55
#endif

#ifndef GL_SAMPLER_RENDERBUFFER_NV
#define GL_SAMPLER_RENDERBUFFER_NV 0x8E56
#endif

#ifndef GL_INT_SAMPLER_RENDERBUFFER_NV
#define GL_INT_SAMPLER_RENDERBUFFER_NV 0x8E57
#endif

#ifndef GL_UNSIGNED_INT_SAMPLER_RENDERBUFFER_NV
#define GL_UNSIGNED_INT_SAMPLER_RENDERBUFFER_NV 0x8E58
#endif

#ifndef GL_MAX_SAMPLE_MASK_WORDS_NV
#define GL_MAX_SAMPLE_MASK_WORDS_NV 0x8E59
#endif

#ifndef GL_TRANSFORM_FEEDBACK_NV
#define GL_TRANSFORM_FEEDBACK_NV 0x8E22
#endif

#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV
#define GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV 0x8E23
#endif

#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV
#define GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV 0x8E24
#endif

#ifndef GL_TRANSFORM_FEEDBACK_BINDING_NV
#define GL_TRANSFORM_FEEDBACK_BINDING_NV 0x8E25
#endif

#ifndef GL_VBO_FREE_MEMORY_ATI
#define GL_VBO_FREE_MEMORY_ATI 0x87FB
#endif

#ifndef GL_TEXTURE_FREE_MEMORY_ATI
#define GL_TEXTURE_FREE_MEMORY_ATI 0x87FC
#endif

#ifndef GL_RENDERBUFFER_FREE_MEMORY_ATI
#define GL_RENDERBUFFER_FREE_MEMORY_ATI 0x87FD
#endif

#ifndef GL_COUNTER_TYPE_AMD
#define GL_COUNTER_TYPE_AMD 0x8BC0
#endif

#ifndef GL_COUNTER_RANGE_AMD
#define GL_COUNTER_RANGE_AMD 0x8BC1
#endif

#ifndef GL_UNSIGNED_INT64_AMD
#define GL_UNSIGNED_INT64_AMD 0x8BC2
#endif

#ifndef GL_PERCENTAGE_AMD
#define GL_PERCENTAGE_AMD 0x8BC3
#endif

#ifndef GL_PERFMON_RESULT_AVAILABLE_AMD
#define GL_PERFMON_RESULT_AVAILABLE_AMD 0x8BC4
#endif

#ifndef GL_PERFMON_RESULT_SIZE_AMD
#define GL_PERFMON_RESULT_SIZE_AMD 0x8BC5
#endif

#ifndef GL_PERFMON_RESULT_AMD
#define GL_PERFMON_RESULT_AMD 0x8BC6
#endif

#ifndef GL_SAMPLER_BUFFER_AMD
#define GL_SAMPLER_BUFFER_AMD 0x9001
#endif

#ifndef GL_INT_SAMPLER_BUFFER_AMD
#define GL_INT_SAMPLER_BUFFER_AMD 0x9002
#endif

#ifndef GL_UNSIGNED_INT_SAMPLER_BUFFER_AMD
#define GL_UNSIGNED_INT_SAMPLER_BUFFER_AMD 0x9003
#endif

#ifndef GL_TESSELLATION_MODE_AMD
#define GL_TESSELLATION_MODE_AMD 0x9004
#endif

#ifndef GL_TESSELLATION_FACTOR_AMD
#define GL_TESSELLATION_FACTOR_AMD 0x9005
#endif

#ifndef GL_DISCRETE_AMD
#define GL_DISCRETE_AMD 0x9006
#endif

#ifndef GL_CONTINUOUS_AMD
#define GL_CONTINUOUS_AMD 0x9007
#endif

#ifndef GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION_EXT
#define GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION_EXT 0x8E4C
#endif

#ifndef GL_FIRST_VERTEX_CONVENTION_EXT
#define GL_FIRST_VERTEX_CONVENTION_EXT 0x8E4D
#endif

#ifndef GL_LAST_VERTEX_CONVENTION_EXT
#define GL_LAST_VERTEX_CONVENTION_EXT 0x8E4E
#endif

#ifndef GL_PROVOKING_VERTEX_EXT
#define GL_PROVOKING_VERTEX_EXT 0x8E4F
#endif

#ifndef GL_ALPHA_SNORM
#define GL_ALPHA_SNORM 0x9010
#endif

#ifndef GL_LUMINANCE_SNORM
#define GL_LUMINANCE_SNORM 0x9011
#endif

#ifndef GL_LUMINANCE_ALPHA_SNORM
#define GL_LUMINANCE_ALPHA_SNORM 0x9012
#endif

#ifndef GL_INTENSITY_SNORM
#define GL_INTENSITY_SNORM 0x9013
#endif

#ifndef GL_ALPHA8_SNORM
#define GL_ALPHA8_SNORM 0x9014
#endif

#ifndef GL_LUMINANCE8_SNORM
#define GL_LUMINANCE8_SNORM 0x9015
#endif

#ifndef GL_LUMINANCE8_ALPHA8_SNORM
#define GL_LUMINANCE8_ALPHA8_SNORM 0x9016
#endif

#ifndef GL_INTENSITY8_SNORM
#define GL_INTENSITY8_SNORM 0x9017
#endif

#ifndef GL_ALPHA16_SNORM
#define GL_ALPHA16_SNORM 0x9018
#endif

#ifndef GL_LUMINANCE16_SNORM
#define GL_LUMINANCE16_SNORM 0x9019
#endif

#ifndef GL_LUMINANCE16_ALPHA16_SNORM
#define GL_LUMINANCE16_ALPHA16_SNORM 0x901A
#endif

#ifndef GL_INTENSITY16_SNORM
#define GL_INTENSITY16_SNORM 0x901B
#endif

#ifndef GL_TEXTURE_RANGE_LENGTH_APPLE
#define GL_TEXTURE_RANGE_LENGTH_APPLE 0x85B7
#endif

#ifndef GL_TEXTURE_RANGE_POINTER_APPLE
#define GL_TEXTURE_RANGE_POINTER_APPLE 0x85B8
#endif

#ifndef GL_TEXTURE_STORAGE_HINT_APPLE
#define GL_TEXTURE_STORAGE_HINT_APPLE 0x85BC
#endif

#ifndef GL_STORAGE_PRIVATE_APPLE
#define GL_STORAGE_PRIVATE_APPLE 0x85BD
#endif

#ifndef GL_HALF_APPLE
#define GL_HALF_APPLE 0x140B
#endif

#ifndef GL_RGBA_FLOAT32_APPLE
#define GL_RGBA_FLOAT32_APPLE 0x8814
#endif

#ifndef GL_RGB_FLOAT32_APPLE
#define GL_RGB_FLOAT32_APPLE 0x8815
#endif

#ifndef GL_ALPHA_FLOAT32_APPLE
#define GL_ALPHA_FLOAT32_APPLE 0x8816
#endif

#ifndef GL_INTENSITY_FLOAT32_APPLE
#define GL_INTENSITY_FLOAT32_APPLE 0x8817
#endif

#ifndef GL_LUMINANCE_FLOAT32_APPLE
#define GL_LUMINANCE_FLOAT32_APPLE 0x8818
#endif

#ifndef GL_LUMINANCE_ALPHA_FLOAT32_APPLE
#define GL_LUMINANCE_ALPHA_FLOAT32_APPLE 0x8819
#endif

#ifndef GL_RGBA_FLOAT16_APPLE
#define GL_RGBA_FLOAT16_APPLE 0x881A
#endif

#ifndef GL_RGB_FLOAT16_APPLE
#define GL_RGB_FLOAT16_APPLE 0x881B
#endif

#ifndef GL_ALPHA_FLOAT16_APPLE
#define GL_ALPHA_FLOAT16_APPLE 0x881C
#endif

#ifndef GL_INTENSITY_FLOAT16_APPLE
#define GL_INTENSITY_FLOAT16_APPLE 0x881D
#endif

#ifndef GL_LUMINANCE_FLOAT16_APPLE
#define GL_LUMINANCE_FLOAT16_APPLE 0x881E
#endif

#ifndef GL_LUMINANCE_ALPHA_FLOAT16_APPLE
#define GL_LUMINANCE_ALPHA_FLOAT16_APPLE 0x881F
#endif

#ifndef GL_COLOR_FLOAT_APPLE
#define GL_COLOR_FLOAT_APPLE 0x8A0F
#endif

#ifndef GL_VERTEX_ATTRIB_MAP1_APPLE
#define GL_VERTEX_ATTRIB_MAP1_APPLE 0x8A00
#endif

#ifndef GL_VERTEX_ATTRIB_MAP2_APPLE
#define GL_VERTEX_ATTRIB_MAP2_APPLE 0x8A01
#endif

#ifndef GL_VERTEX_ATTRIB_MAP1_SIZE_APPLE
#define GL_VERTEX_ATTRIB_MAP1_SIZE_APPLE 0x8A02
#endif

#ifndef GL_VERTEX_ATTRIB_MAP1_COEFF_APPLE
#define GL_VERTEX_ATTRIB_MAP1_COEFF_APPLE 0x8A03
#endif

#ifndef GL_VERTEX_ATTRIB_MAP1_ORDER_APPLE
#define GL_VERTEX_ATTRIB_MAP1_ORDER_APPLE 0x8A04
#endif

#ifndef GL_VERTEX_ATTRIB_MAP1_DOMAIN_APPLE
#define GL_VERTEX_ATTRIB_MAP1_DOMAIN_APPLE 0x8A05
#endif

#ifndef GL_VERTEX_ATTRIB_MAP2_SIZE_APPLE
#define GL_VERTEX_ATTRIB_MAP2_SIZE_APPLE 0x8A06
#endif

#ifndef GL_VERTEX_ATTRIB_MAP2_COEFF_APPLE
#define GL_VERTEX_ATTRIB_MAP2_COEFF_APPLE 0x8A07
#endif

#ifndef GL_VERTEX_ATTRIB_MAP2_ORDER_APPLE
#define GL_VERTEX_ATTRIB_MAP2_ORDER_APPLE 0x8A08
#endif

#ifndef GL_VERTEX_ATTRIB_MAP2_DOMAIN_APPLE
#define GL_VERTEX_ATTRIB_MAP2_DOMAIN_APPLE 0x8A09
#endif

#ifndef GL_AUX_DEPTH_STENCIL_APPLE
#define GL_AUX_DEPTH_STENCIL_APPLE 0x8A14
#endif

#ifndef GL_BUFFER_OBJECT_APPLE
#define GL_BUFFER_OBJECT_APPLE 0x85B3
#endif

#ifndef GL_RELEASED_APPLE
#define GL_RELEASED_APPLE 0x8A19
#endif

#ifndef GL_VOLATILE_APPLE
#define GL_VOLATILE_APPLE 0x8A1A
#endif

#ifndef GL_RETAINED_APPLE
#define GL_RETAINED_APPLE 0x8A1B
#endif

#ifndef GL_UNDEFINED_APPLE
#define GL_UNDEFINED_APPLE 0x8A1C
#endif

#ifndef GL_PURGEABLE_APPLE
#define GL_PURGEABLE_APPLE 0x8A1D
#endif

#ifndef GL_PACK_ROW_BYTES_APPLE
#define GL_PACK_ROW_BYTES_APPLE 0x8A15
#endif

#ifndef GL_UNPACK_ROW_BYTES_APPLE
#define GL_UNPACK_ROW_BYTES_APPLE 0x8A16
#endif

#ifndef GL_RGB_422_APPLE
#define GL_RGB_422_APPLE 0x8A1F
#endif

#ifndef GL_VIDEO_BUFFER_NV
#define GL_VIDEO_BUFFER_NV 0x9020
#endif

#ifndef GL_VIDEO_BUFFER_BINDING_NV
#define GL_VIDEO_BUFFER_BINDING_NV 0x9021
#endif

#ifndef GL_FIELD_UPPER_NV
#define GL_FIELD_UPPER_NV 0x9022
#endif

#ifndef GL_FIELD_LOWER_NV
#define GL_FIELD_LOWER_NV 0x9023
#endif

#ifndef GL_NUM_VIDEO_CAPTURE_STREAMS_NV
#define GL_NUM_VIDEO_CAPTURE_STREAMS_NV 0x9024
#endif

#ifndef GL_NEXT_VIDEO_CAPTURE_BUFFER_STATUS_NV
#define GL_NEXT_VIDEO_CAPTURE_BUFFER_STATUS_NV 0x9025
#endif

#ifndef GL_VIDEO_CAPTURE_TO_422_SUPPORTED_NV
#define GL_VIDEO_CAPTURE_TO_422_SUPPORTED_NV 0x9026
#endif

#ifndef GL_LAST_VIDEO_CAPTURE_STATUS_NV
#define GL_LAST_VIDEO_CAPTURE_STATUS_NV 0x9027
#endif

#ifndef GL_VIDEO_BUFFER_PITCH_NV
#define GL_VIDEO_BUFFER_PITCH_NV 0x9028
#endif

#ifndef GL_VIDEO_COLOR_CONVERSION_MATRIX_NV
#define GL_VIDEO_COLOR_CONVERSION_MATRIX_NV 0x9029
#endif

#ifndef GL_VIDEO_COLOR_CONVERSION_MAX_NV
#define GL_VIDEO_COLOR_CONVERSION_MAX_NV 0x902A
#endif

#ifndef GL_VIDEO_COLOR_CONVERSION_MIN_NV
#define GL_VIDEO_COLOR_CONVERSION_MIN_NV 0x902B
#endif

#ifndef GL_VIDEO_COLOR_CONVERSION_OFFSET_NV
#define GL_VIDEO_COLOR_CONVERSION_OFFSET_NV 0x902C
#endif

#ifndef GL_VIDEO_BUFFER_INTERNAL_FORMAT_NV
#define GL_VIDEO_BUFFER_INTERNAL_FORMAT_NV 0x902D
#endif

#ifndef GL_PARTIAL_SUCCESS_NV
#define GL_PARTIAL_SUCCESS_NV 0x902E
#endif

#ifndef GL_SUCCESS_NV
#define GL_SUCCESS_NV 0x902F
#endif

#ifndef GL_FAILURE_NV
#define GL_FAILURE_NV 0x9030
#endif

#ifndef GL_YCBYCR8_422_NV
#define GL_YCBYCR8_422_NV 0x9031
#endif

#ifndef GL_YCBAYCR8A_4224_NV
#define GL_YCBAYCR8A_4224_NV 0x9032
#endif

#ifndef GL_Z6Y10Z6CB10Z6Y10Z6CR10_422_NV
#define GL_Z6Y10Z6CB10Z6Y10Z6CR10_422_NV 0x9033
#endif

#ifndef GL_Z6Y10Z6CB10Z6A10Z6Y10Z6CR10Z6A10_4224_NV
#define GL_Z6Y10Z6CB10Z6A10Z6Y10Z6CR10Z6A10_4224_NV 0x9034
#endif

#ifndef GL_Z4Y12Z4CB12Z4Y12Z4CR12_422_NV
#define GL_Z4Y12Z4CB12Z4Y12Z4CR12_422_NV 0x9035
#endif

#ifndef GL_Z4Y12Z4CB12Z4A12Z4Y12Z4CR12Z4A12_4224_NV
#define GL_Z4Y12Z4CB12Z4A12Z4Y12Z4CR12Z4A12_4224_NV 0x9036
#endif

#ifndef GL_Z4Y12Z4CB12Z4CR12_444_NV
#define GL_Z4Y12Z4CB12Z4CR12_444_NV 0x9037
#endif

#ifndef GL_VIDEO_CAPTURE_FRAME_WIDTH_NV
#define GL_VIDEO_CAPTURE_FRAME_WIDTH_NV 0x9038
#endif

#ifndef GL_VIDEO_CAPTURE_FRAME_HEIGHT_NV
#define GL_VIDEO_CAPTURE_FRAME_HEIGHT_NV 0x9039
#endif

#ifndef GL_VIDEO_CAPTURE_FIELD_UPPER_HEIGHT_NV
#define GL_VIDEO_CAPTURE_FIELD_UPPER_HEIGHT_NV 0x903A
#endif

#ifndef GL_VIDEO_CAPTURE_FIELD_LOWER_HEIGHT_NV
#define GL_VIDEO_CAPTURE_FIELD_LOWER_HEIGHT_NV 0x903B
#endif

#ifndef GL_VIDEO_CAPTURE_SURFACE_ORIGIN_NV
#define GL_VIDEO_CAPTURE_SURFACE_ORIGIN_NV 0x903C
#endif

#ifndef GL_ACTIVE_PROGRAM_EXT
#define GL_ACTIVE_PROGRAM_EXT 0x8B8D
#endif

#ifndef GL_BUFFER_GPU_ADDRESS_NV
#define GL_BUFFER_GPU_ADDRESS_NV 0x8F1D
#endif

#ifndef GL_GPU_ADDRESS_NV
#define GL_GPU_ADDRESS_NV 0x8F34
#endif

#ifndef GL_MAX_SHADER_BUFFER_ADDRESS_NV
#define GL_MAX_SHADER_BUFFER_ADDRESS_NV 0x8F35
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV
#define GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV 0x8F1E
#endif

#ifndef GL_ELEMENT_ARRAY_UNIFIED_NV
#define GL_ELEMENT_ARRAY_UNIFIED_NV 0x8F1F
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV
#define GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV 0x8F20
#endif

#ifndef GL_VERTEX_ARRAY_ADDRESS_NV
#define GL_VERTEX_ARRAY_ADDRESS_NV 0x8F21
#endif

#ifndef GL_NORMAL_ARRAY_ADDRESS_NV
#define GL_NORMAL_ARRAY_ADDRESS_NV 0x8F22
#endif

#ifndef GL_COLOR_ARRAY_ADDRESS_NV
#define GL_COLOR_ARRAY_ADDRESS_NV 0x8F23
#endif

#ifndef GL_INDEX_ARRAY_ADDRESS_NV
#define GL_INDEX_ARRAY_ADDRESS_NV 0x8F24
#endif

#ifndef GL_TEXTURE_COORD_ARRAY_ADDRESS_NV
#define GL_TEXTURE_COORD_ARRAY_ADDRESS_NV 0x8F25
#endif

#ifndef GL_EDGE_FLAG_ARRAY_ADDRESS_NV
#define GL_EDGE_FLAG_ARRAY_ADDRESS_NV 0x8F26
#endif

#ifndef GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV
#define GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV 0x8F27
#endif

#ifndef GL_FOG_COORD_ARRAY_ADDRESS_NV
#define GL_FOG_COORD_ARRAY_ADDRESS_NV 0x8F28
#endif

#ifndef GL_ELEMENT_ARRAY_ADDRESS_NV
#define GL_ELEMENT_ARRAY_ADDRESS_NV 0x8F29
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV
#define GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV 0x8F2A
#endif

#ifndef GL_VERTEX_ARRAY_LENGTH_NV
#define GL_VERTEX_ARRAY_LENGTH_NV 0x8F2B
#endif

#ifndef GL_NORMAL_ARRAY_LENGTH_NV
#define GL_NORMAL_ARRAY_LENGTH_NV 0x8F2C
#endif

#ifndef GL_COLOR_ARRAY_LENGTH_NV
#define GL_COLOR_ARRAY_LENGTH_NV 0x8F2D
#endif

#ifndef GL_INDEX_ARRAY_LENGTH_NV
#define GL_INDEX_ARRAY_LENGTH_NV 0x8F2E
#endif

#ifndef GL_TEXTURE_COORD_ARRAY_LENGTH_NV
#define GL_TEXTURE_COORD_ARRAY_LENGTH_NV 0x8F2F
#endif

#ifndef GL_EDGE_FLAG_ARRAY_LENGTH_NV
#define GL_EDGE_FLAG_ARRAY_LENGTH_NV 0x8F30
#endif

#ifndef GL_SECONDARY_COLOR_ARRAY_LENGTH_NV
#define GL_SECONDARY_COLOR_ARRAY_LENGTH_NV 0x8F31
#endif

#ifndef GL_FOG_COORD_ARRAY_LENGTH_NV
#define GL_FOG_COORD_ARRAY_LENGTH_NV 0x8F32
#endif

#ifndef GL_ELEMENT_ARRAY_LENGTH_NV
#define GL_ELEMENT_ARRAY_LENGTH_NV 0x8F33
#endif

#ifndef GL_DRAW_INDIRECT_UNIFIED_NV
#define GL_DRAW_INDIRECT_UNIFIED_NV 0x8F40
#endif

#ifndef GL_DRAW_INDIRECT_ADDRESS_NV
#define GL_DRAW_INDIRECT_ADDRESS_NV 0x8F41
#endif

#ifndef GL_DRAW_INDIRECT_LENGTH_NV
#define GL_DRAW_INDIRECT_LENGTH_NV 0x8F42
#endif

#ifndef GL_MAX_IMAGE_UNITS_EXT
#define GL_MAX_IMAGE_UNITS_EXT 0x8F38
#endif

#ifndef GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS_EXT
#define GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS_EXT 0x8F39
#endif

#ifndef GL_IMAGE_BINDING_NAME_EXT
#define GL_IMAGE_BINDING_NAME_EXT 0x8F3A
#endif

#ifndef GL_IMAGE_BINDING_LEVEL_EXT
#define GL_IMAGE_BINDING_LEVEL_EXT 0x8F3B
#endif

#ifndef GL_IMAGE_BINDING_LAYERED_EXT
#define GL_IMAGE_BINDING_LAYERED_EXT 0x8F3C
#endif

#ifndef GL_IMAGE_BINDING_LAYER_EXT
#define GL_IMAGE_BINDING_LAYER_EXT 0x8F3D
#endif

#ifndef GL_IMAGE_BINDING_ACCESS_EXT
#define GL_IMAGE_BINDING_ACCESS_EXT 0x8F3E
#endif

#ifndef GL_IMAGE_1D_EXT
#define GL_IMAGE_1D_EXT 0x904C
#endif

#ifndef GL_IMAGE_2D_EXT
#define GL_IMAGE_2D_EXT 0x904D
#endif

#ifndef GL_IMAGE_3D_EXT
#define GL_IMAGE_3D_EXT 0x904E
#endif

#ifndef GL_IMAGE_2D_RECT_EXT
#define GL_IMAGE_2D_RECT_EXT 0x904F
#endif

#ifndef GL_IMAGE_CUBE_EXT
#define GL_IMAGE_CUBE_EXT 0x9050
#endif

#ifndef GL_IMAGE_BUFFER_EXT
#define GL_IMAGE_BUFFER_EXT 0x9051
#endif

#ifndef GL_IMAGE_1D_ARRAY_EXT
#define GL_IMAGE_1D_ARRAY_EXT 0x9052
#endif

#ifndef GL_IMAGE_2D_ARRAY_EXT
#define GL_IMAGE_2D_ARRAY_EXT 0x9053
#endif

#ifndef GL_IMAGE_CUBE_MAP_ARRAY_EXT
#define GL_IMAGE_CUBE_MAP_ARRAY_EXT 0x9054
#endif

#ifndef GL_IMAGE_2D_MULTISAMPLE_EXT
#define GL_IMAGE_2D_MULTISAMPLE_EXT 0x9055
#endif

#ifndef GL_IMAGE_2D_MULTISAMPLE_ARRAY_EXT
#define GL_IMAGE_2D_MULTISAMPLE_ARRAY_EXT 0x9056
#endif

#ifndef GL_INT_IMAGE_1D_EXT
#define GL_INT_IMAGE_1D_EXT 0x9057
#endif

#ifndef GL_INT_IMAGE_2D_EXT
#define GL_INT_IMAGE_2D_EXT 0x9058
#endif

#ifndef GL_INT_IMAGE_3D_EXT
#define GL_INT_IMAGE_3D_EXT 0x9059
#endif

#ifndef GL_INT_IMAGE_2D_RECT_EXT
#define GL_INT_IMAGE_2D_RECT_EXT 0x905A
#endif

#ifndef GL_INT_IMAGE_CUBE_EXT
#define GL_INT_IMAGE_CUBE_EXT 0x905B
#endif

#ifndef GL_INT_IMAGE_BUFFER_EXT
#define GL_INT_IMAGE_BUFFER_EXT 0x905C
#endif

#ifndef GL_INT_IMAGE_1D_ARRAY_EXT
#define GL_INT_IMAGE_1D_ARRAY_EXT 0x905D
#endif

#ifndef GL_INT_IMAGE_2D_ARRAY_EXT
#define GL_INT_IMAGE_2D_ARRAY_EXT 0x905E
#endif

#ifndef GL_INT_IMAGE_CUBE_MAP_ARRAY_EXT
#define GL_INT_IMAGE_CUBE_MAP_ARRAY_EXT 0x905F
#endif

#ifndef GL_INT_IMAGE_2D_MULTISAMPLE_EXT
#define GL_INT_IMAGE_2D_MULTISAMPLE_EXT 0x9060
#endif

#ifndef GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT
#define GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT 0x9061
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_1D_EXT
#define GL_UNSIGNED_INT_IMAGE_1D_EXT 0x9062
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_2D_EXT
#define GL_UNSIGNED_INT_IMAGE_2D_EXT 0x9063
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_3D_EXT
#define GL_UNSIGNED_INT_IMAGE_3D_EXT 0x9064
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_2D_RECT_EXT
#define GL_UNSIGNED_INT_IMAGE_2D_RECT_EXT 0x9065
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_CUBE_EXT
#define GL_UNSIGNED_INT_IMAGE_CUBE_EXT 0x9066
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_BUFFER_EXT
#define GL_UNSIGNED_INT_IMAGE_BUFFER_EXT 0x9067
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_1D_ARRAY_EXT
#define GL_UNSIGNED_INT_IMAGE_1D_ARRAY_EXT 0x9068
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_2D_ARRAY_EXT
#define GL_UNSIGNED_INT_IMAGE_2D_ARRAY_EXT 0x9069
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT
#define GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT 0x906A
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_EXT
#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_EXT 0x906B
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT
#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT 0x906C
#endif

#ifndef GL_MAX_IMAGE_SAMPLES_EXT
#define GL_MAX_IMAGE_SAMPLES_EXT 0x906D
#endif

#ifndef GL_IMAGE_BINDING_FORMAT_EXT
#define GL_IMAGE_BINDING_FORMAT_EXT 0x906E
#endif

#ifndef GL_DOUBLE_VEC2_EXT
#define GL_DOUBLE_VEC2_EXT 0x8FFC
#endif

#ifndef GL_DOUBLE_VEC3_EXT
#define GL_DOUBLE_VEC3_EXT 0x8FFD
#endif

#ifndef GL_DOUBLE_VEC4_EXT
#define GL_DOUBLE_VEC4_EXT 0x8FFE
#endif

#ifndef GL_DOUBLE_MAT2_EXT
#define GL_DOUBLE_MAT2_EXT 0x8F46
#endif

#ifndef GL_DOUBLE_MAT3_EXT
#define GL_DOUBLE_MAT3_EXT 0x8F47
#endif

#ifndef GL_DOUBLE_MAT4_EXT
#define GL_DOUBLE_MAT4_EXT 0x8F48
#endif

#ifndef GL_DOUBLE_MAT2x3_EXT
#define GL_DOUBLE_MAT2x3_EXT 0x8F49
#endif

#ifndef GL_DOUBLE_MAT2x4_EXT
#define GL_DOUBLE_MAT2x4_EXT 0x8F4A
#endif

#ifndef GL_DOUBLE_MAT3x2_EXT
#define GL_DOUBLE_MAT3x2_EXT 0x8F4B
#endif

#ifndef GL_DOUBLE_MAT3x4_EXT
#define GL_DOUBLE_MAT3x4_EXT 0x8F4C
#endif

#ifndef GL_DOUBLE_MAT4x2_EXT
#define GL_DOUBLE_MAT4x2_EXT 0x8F4D
#endif

#ifndef GL_DOUBLE_MAT4x3_EXT
#define GL_DOUBLE_MAT4x3_EXT 0x8F4E
#endif

#ifndef GL_MAX_GEOMETRY_PROGRAM_INVOCATIONS_NV
#define GL_MAX_GEOMETRY_PROGRAM_INVOCATIONS_NV 0x8E5A
#endif

#ifndef GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_NV
#define GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_NV 0x8E5B
#endif

#ifndef GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_NV
#define GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_NV 0x8E5C
#endif

#ifndef GL_FRAGMENT_PROGRAM_INTERPOLATION_OFFSET_BITS_NV
#define GL_FRAGMENT_PROGRAM_INTERPOLATION_OFFSET_BITS_NV 0x8E5D
#endif

#ifndef GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_NV
#define GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_NV 0x8E5E
#endif

#ifndef GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_NV
#define GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_NV 0x8E5F
#endif

#ifndef GL_MAX_PROGRAM_SUBROUTINE_PARAMETERS_NV
#define GL_MAX_PROGRAM_SUBROUTINE_PARAMETERS_NV 0x8F44
#endif

#ifndef GL_MAX_PROGRAM_SUBROUTINE_NUM_NV
#define GL_MAX_PROGRAM_SUBROUTINE_NUM_NV 0x8F45
#endif

#ifndef GL_INT64_NV
#define GL_INT64_NV 0x140E
#endif

#ifndef GL_UNSIGNED_INT64_NV
#define GL_UNSIGNED_INT64_NV 0x140F
#endif

#ifndef GL_INT8_NV
#define GL_INT8_NV 0x8FE0
#endif

#ifndef GL_INT8_VEC2_NV
#define GL_INT8_VEC2_NV 0x8FE1
#endif

#ifndef GL_INT8_VEC3_NV
#define GL_INT8_VEC3_NV 0x8FE2
#endif

#ifndef GL_INT8_VEC4_NV
#define GL_INT8_VEC4_NV 0x8FE3
#endif

#ifndef GL_INT16_NV
#define GL_INT16_NV 0x8FE4
#endif

#ifndef GL_INT16_VEC2_NV
#define GL_INT16_VEC2_NV 0x8FE5
#endif

#ifndef GL_INT16_VEC3_NV
#define GL_INT16_VEC3_NV 0x8FE6
#endif

#ifndef GL_INT16_VEC4_NV
#define GL_INT16_VEC4_NV 0x8FE7
#endif

#ifndef GL_INT64_VEC2_NV
#define GL_INT64_VEC2_NV 0x8FE9
#endif

#ifndef GL_INT64_VEC3_NV
#define GL_INT64_VEC3_NV 0x8FEA
#endif

#ifndef GL_INT64_VEC4_NV
#define GL_INT64_VEC4_NV 0x8FEB
#endif

#ifndef GL_UNSIGNED_INT8_NV
#define GL_UNSIGNED_INT8_NV 0x8FEC
#endif

#ifndef GL_UNSIGNED_INT8_VEC2_NV
#define GL_UNSIGNED_INT8_VEC2_NV 0x8FED
#endif

#ifndef GL_UNSIGNED_INT8_VEC3_NV
#define GL_UNSIGNED_INT8_VEC3_NV 0x8FEE
#endif

#ifndef GL_UNSIGNED_INT8_VEC4_NV
#define GL_UNSIGNED_INT8_VEC4_NV 0x8FEF
#endif

#ifndef GL_UNSIGNED_INT16_NV
#define GL_UNSIGNED_INT16_NV 0x8FF0
#endif

#ifndef GL_UNSIGNED_INT16_VEC2_NV
#define GL_UNSIGNED_INT16_VEC2_NV 0x8FF1
#endif

#ifndef GL_UNSIGNED_INT16_VEC3_NV
#define GL_UNSIGNED_INT16_VEC3_NV 0x8FF2
#endif

#ifndef GL_UNSIGNED_INT16_VEC4_NV
#define GL_UNSIGNED_INT16_VEC4_NV 0x8FF3
#endif

#ifndef GL_UNSIGNED_INT64_VEC2_NV
#define GL_UNSIGNED_INT64_VEC2_NV 0x8FF5
#endif

#ifndef GL_UNSIGNED_INT64_VEC3_NV
#define GL_UNSIGNED_INT64_VEC3_NV 0x8FF6
#endif

#ifndef GL_UNSIGNED_INT64_VEC4_NV
#define GL_UNSIGNED_INT64_VEC4_NV 0x8FF7
#endif

#ifndef GL_FLOAT16_NV
#define GL_FLOAT16_NV 0x8FF8
#endif

#ifndef GL_FLOAT16_VEC2_NV
#define GL_FLOAT16_VEC2_NV 0x8FF9
#endif

#ifndef GL_FLOAT16_VEC3_NV
#define GL_FLOAT16_VEC3_NV 0x8FFA
#endif

#ifndef GL_FLOAT16_VEC4_NV
#define GL_FLOAT16_VEC4_NV 0x8FFB
#endif

#ifndef GL_SHADER_GLOBAL_ACCESS_BARRIER_BIT_NV
#define GL_SHADER_GLOBAL_ACCESS_BARRIER_BIT_NV 0x00000010
#endif

#ifndef GL_MAX_PROGRAM_PATCH_ATTRIBS_NV
#define GL_MAX_PROGRAM_PATCH_ATTRIBS_NV 0x86D8
#endif

#ifndef GL_TESS_CONTROL_PROGRAM_NV
#define GL_TESS_CONTROL_PROGRAM_NV 0x891E
#endif

#ifndef GL_TESS_EVALUATION_PROGRAM_NV
#define GL_TESS_EVALUATION_PROGRAM_NV 0x891F
#endif

#ifndef GL_TESS_CONTROL_PROGRAM_PARAMETER_BUFFER_NV
#define GL_TESS_CONTROL_PROGRAM_PARAMETER_BUFFER_NV 0x8C74
#endif

#ifndef GL_TESS_EVALUATION_PROGRAM_PARAMETER_BUFFER_NV
#define GL_TESS_EVALUATION_PROGRAM_PARAMETER_BUFFER_NV 0x8C75
#endif

#ifndef GL_COVERAGE_SAMPLES_NV
#define GL_COVERAGE_SAMPLES_NV 0x80A9
#endif

#ifndef GL_COLOR_SAMPLES_NV
#define GL_COLOR_SAMPLES_NV 0x8E20
#endif

#ifndef GL_DATA_BUFFER_AMD
#define GL_DATA_BUFFER_AMD 0x9151
#endif

#ifndef GL_PERFORMANCE_MONITOR_AMD
#define GL_PERFORMANCE_MONITOR_AMD 0x9152
#endif

#ifndef GL_QUERY_OBJECT_AMD
#define GL_QUERY_OBJECT_AMD 0x9153
#endif

#ifndef GL_VERTEX_ARRAY_OBJECT_AMD
#define GL_VERTEX_ARRAY_OBJECT_AMD 0x9154
#endif

#ifndef GL_SAMPLER_OBJECT_AMD
#define GL_SAMPLER_OBJECT_AMD 0x9155
#endif

#ifndef GL_MAX_DEBUG_MESSAGE_LENGTH_AMD
#define GL_MAX_DEBUG_MESSAGE_LENGTH_AMD 0x9143
#endif

#ifndef GL_MAX_DEBUG_LOGGED_MESSAGES_AMD
#define GL_MAX_DEBUG_LOGGED_MESSAGES_AMD 0x9144
#endif

#ifndef GL_DEBUG_LOGGED_MESSAGES_AMD
#define GL_DEBUG_LOGGED_MESSAGES_AMD 0x9145
#endif

#ifndef GL_DEBUG_SEVERITY_HIGH_AMD
#define GL_DEBUG_SEVERITY_HIGH_AMD 0x9146
#endif

#ifndef GL_DEBUG_SEVERITY_MEDIUM_AMD
#define GL_DEBUG_SEVERITY_MEDIUM_AMD 0x9147
#endif

#ifndef GL_DEBUG_SEVERITY_LOW_AMD
#define GL_DEBUG_SEVERITY_LOW_AMD 0x9148
#endif

#ifndef GL_DEBUG_CATEGORY_API_ERROR_AMD
#define GL_DEBUG_CATEGORY_API_ERROR_AMD 0x9149
#endif

#ifndef GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD
#define GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD 0x914A
#endif

#ifndef GL_DEBUG_CATEGORY_DEPRECATION_AMD
#define GL_DEBUG_CATEGORY_DEPRECATION_AMD 0x914B
#endif

#ifndef GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD
#define GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD 0x914C
#endif

#ifndef GL_DEBUG_CATEGORY_PERFORMANCE_AMD
#define GL_DEBUG_CATEGORY_PERFORMANCE_AMD 0x914D
#endif

#ifndef GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD
#define GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD 0x914E
#endif

#ifndef GL_DEBUG_CATEGORY_APPLICATION_AMD
#define GL_DEBUG_CATEGORY_APPLICATION_AMD 0x914F
#endif

#ifndef GL_DEBUG_CATEGORY_OTHER_AMD
#define GL_DEBUG_CATEGORY_OTHER_AMD 0x9150
#endif

#ifndef GL_SURFACE_STATE_NV
#define GL_SURFACE_STATE_NV 0x86EB
#endif

#ifndef GL_SURFACE_REGISTERED_NV
#define GL_SURFACE_REGISTERED_NV 0x86FD
#endif

#ifndef GL_SURFACE_MAPPED_NV
#define GL_SURFACE_MAPPED_NV 0x8700
#endif

#ifndef GL_WRITE_DISCARD_NV
#define GL_WRITE_DISCARD_NV 0x88BE
#endif

#ifndef GL_DEPTH_CLAMP_NEAR_AMD
#define GL_DEPTH_CLAMP_NEAR_AMD 0x901E
#endif

#ifndef GL_DEPTH_CLAMP_FAR_AMD
#define GL_DEPTH_CLAMP_FAR_AMD 0x901F
#endif

#ifndef GL_TEXTURE_SRGB_DECODE_EXT
#define GL_TEXTURE_SRGB_DECODE_EXT 0x8A48
#endif

#ifndef GL_DECODE_EXT
#define GL_DECODE_EXT 0x8A49
#endif

#ifndef GL_SKIP_DECODE_EXT
#define GL_SKIP_DECODE_EXT 0x8A4A
#endif

#ifndef GL_TEXTURE_COVERAGE_SAMPLES_NV
#define GL_TEXTURE_COVERAGE_SAMPLES_NV 0x9045
#endif

#ifndef GL_TEXTURE_COLOR_SAMPLES_NV
#define GL_TEXTURE_COLOR_SAMPLES_NV 0x9046
#endif

#ifndef GL_FACTOR_MIN_AMD
#define GL_FACTOR_MIN_AMD 0x901C
#endif

#ifndef GL_FACTOR_MAX_AMD
#define GL_FACTOR_MAX_AMD 0x901D
#endif

#ifndef GL_SUBSAMPLE_DISTANCE_AMD
#define GL_SUBSAMPLE_DISTANCE_AMD 0x883F
#endif

#ifndef GL_SYNC_X11_FENCE_EXT
#define GL_SYNC_X11_FENCE_EXT 0x90E1
#endif

#ifndef GL_SCALED_RESOLVE_FASTEST_EXT
#define GL_SCALED_RESOLVE_FASTEST_EXT 0x90BA
#endif

#ifndef GL_SCALED_RESOLVE_NICEST_EXT
#define GL_SCALED_RESOLVE_NICEST_EXT 0x90BB
#endif

#ifndef GL_PATH_FORMAT_SVG_NV
#define GL_PATH_FORMAT_SVG_NV 0x9070
#endif

#ifndef GL_PATH_FORMAT_PS_NV
#define GL_PATH_FORMAT_PS_NV 0x9071
#endif

#ifndef GL_STANDARD_FONT_NAME_NV
#define GL_STANDARD_FONT_NAME_NV 0x9072
#endif

#ifndef GL_SYSTEM_FONT_NAME_NV
#define GL_SYSTEM_FONT_NAME_NV 0x9073
#endif

#ifndef GL_FILE_NAME_NV
#define GL_FILE_NAME_NV 0x9074
#endif

#ifndef GL_PATH_STROKE_WIDTH_NV
#define GL_PATH_STROKE_WIDTH_NV 0x9075
#endif

#ifndef GL_PATH_END_CAPS_NV
#define GL_PATH_END_CAPS_NV 0x9076
#endif

#ifndef GL_PATH_INITIAL_END_CAP_NV
#define GL_PATH_INITIAL_END_CAP_NV 0x9077
#endif

#ifndef GL_PATH_TERMINAL_END_CAP_NV
#define GL_PATH_TERMINAL_END_CAP_NV 0x9078
#endif

#ifndef GL_PATH_JOIN_STYLE_NV
#define GL_PATH_JOIN_STYLE_NV 0x9079
#endif

#ifndef GL_PATH_MITER_LIMIT_NV
#define GL_PATH_MITER_LIMIT_NV 0x907A
#endif

#ifndef GL_PATH_DASH_CAPS_NV
#define GL_PATH_DASH_CAPS_NV 0x907B
#endif

#ifndef GL_PATH_INITIAL_DASH_CAP_NV
#define GL_PATH_INITIAL_DASH_CAP_NV 0x907C
#endif

#ifndef GL_PATH_TERMINAL_DASH_CAP_NV
#define GL_PATH_TERMINAL_DASH_CAP_NV 0x907D
#endif

#ifndef GL_PATH_DASH_OFFSET_NV
#define GL_PATH_DASH_OFFSET_NV 0x907E
#endif

#ifndef GL_PATH_CLIENT_LENGTH_NV
#define GL_PATH_CLIENT_LENGTH_NV 0x907F
#endif

#ifndef GL_PATH_FILL_MODE_NV
#define GL_PATH_FILL_MODE_NV 0x9080
#endif

#ifndef GL_PATH_FILL_MASK_NV
#define GL_PATH_FILL_MASK_NV 0x9081
#endif

#ifndef GL_PATH_FILL_COVER_MODE_NV
#define GL_PATH_FILL_COVER_MODE_NV 0x9082
#endif

#ifndef GL_PATH_STROKE_COVER_MODE_NV
#define GL_PATH_STROKE_COVER_MODE_NV 0x9083
#endif

#ifndef GL_PATH_STROKE_MASK_NV
#define GL_PATH_STROKE_MASK_NV 0x9084
#endif

#ifndef GL_PATH_SAMPLE_QUALITY_NV
#define GL_PATH_SAMPLE_QUALITY_NV 0x9085
#endif

#ifndef GL_PATH_STROKE_BOUND_NV
#define GL_PATH_STROKE_BOUND_NV 0x9086
#endif

#ifndef GL_PATH_STROKE_OVERSAMPLE_COUNT_NV
#define GL_PATH_STROKE_OVERSAMPLE_COUNT_NV 0x9087
#endif

#ifndef GL_COUNT_UP_NV
#define GL_COUNT_UP_NV 0x9088
#endif

#ifndef GL_COUNT_DOWN_NV
#define GL_COUNT_DOWN_NV 0x9089
#endif

#ifndef GL_PATH_OBJECT_BOUNDING_BOX_NV
#define GL_PATH_OBJECT_BOUNDING_BOX_NV 0x908A
#endif

#ifndef GL_CONVEX_HULL_NV
#define GL_CONVEX_HULL_NV 0x908B
#endif

#ifndef GL_MULTI_HULLS_NV
#define GL_MULTI_HULLS_NV 0x908C
#endif

#ifndef GL_BOUNDING_BOX_NV
#define GL_BOUNDING_BOX_NV 0x908D
#endif

#ifndef GL_TRANSLATE_X_NV
#define GL_TRANSLATE_X_NV 0x908E
#endif

#ifndef GL_TRANSLATE_Y_NV
#define GL_TRANSLATE_Y_NV 0x908F
#endif

#ifndef GL_TRANSLATE_2D_NV
#define GL_TRANSLATE_2D_NV 0x9090
#endif

#ifndef GL_TRANSLATE_3D_NV
#define GL_TRANSLATE_3D_NV 0x9091
#endif

#ifndef GL_AFFINE_2D_NV
#define GL_AFFINE_2D_NV 0x9092
#endif

#ifndef GL_PROJECTIVE_2D_NV
#define GL_PROJECTIVE_2D_NV 0x9093
#endif

#ifndef GL_AFFINE_3D_NV
#define GL_AFFINE_3D_NV 0x9094
#endif

#ifndef GL_PROJECTIVE_3D_NV
#define GL_PROJECTIVE_3D_NV 0x9095
#endif

#ifndef GL_TRANSPOSE_AFFINE_2D_NV
#define GL_TRANSPOSE_AFFINE_2D_NV 0x9096
#endif

#ifndef GL_TRANSPOSE_PROJECTIVE_2D_NV
#define GL_TRANSPOSE_PROJECTIVE_2D_NV 0x9097
#endif

#ifndef GL_TRANSPOSE_AFFINE_3D_NV
#define GL_TRANSPOSE_AFFINE_3D_NV 0x9098
#endif

#ifndef GL_TRANSPOSE_PROJECTIVE_3D_NV
#define GL_TRANSPOSE_PROJECTIVE_3D_NV 0x9099
#endif

#ifndef GL_UTF8_NV
#define GL_UTF8_NV 0x909A
#endif

#ifndef GL_UTF16_NV
#define GL_UTF16_NV 0x909B
#endif

#ifndef GL_BOUNDING_BOX_OF_BOUNDING_BOXES_NV
#define GL_BOUNDING_BOX_OF_BOUNDING_BOXES_NV 0x909C
#endif

#ifndef GL_PATH_COMMAND_COUNT_NV
#define GL_PATH_COMMAND_COUNT_NV 0x909D
#endif

#ifndef GL_PATH_COORD_COUNT_NV
#define GL_PATH_COORD_COUNT_NV 0x909E
#endif

#ifndef GL_PATH_DASH_ARRAY_COUNT_NV
#define GL_PATH_DASH_ARRAY_COUNT_NV 0x909F
#endif

#ifndef GL_PATH_COMPUTED_LENGTH_NV
#define GL_PATH_COMPUTED_LENGTH_NV 0x90A0
#endif

#ifndef GL_PATH_FILL_BOUNDING_BOX_NV
#define GL_PATH_FILL_BOUNDING_BOX_NV 0x90A1
#endif

#ifndef GL_PATH_STROKE_BOUNDING_BOX_NV
#define GL_PATH_STROKE_BOUNDING_BOX_NV 0x90A2
#endif

#ifndef GL_SQUARE_NV
#define GL_SQUARE_NV 0x90A3
#endif

#ifndef GL_ROUND_NV
#define GL_ROUND_NV 0x90A4
#endif

#ifndef GL_TRIANGULAR_NV
#define GL_TRIANGULAR_NV 0x90A5
#endif

#ifndef GL_BEVEL_NV
#define GL_BEVEL_NV 0x90A6
#endif

#ifndef GL_MITER_REVERT_NV
#define GL_MITER_REVERT_NV 0x90A7
#endif

#ifndef GL_MITER_TRUNCATE_NV
#define GL_MITER_TRUNCATE_NV 0x90A8
#endif

#ifndef GL_SKIP_MISSING_GLYPH_NV
#define GL_SKIP_MISSING_GLYPH_NV 0x90A9
#endif

#ifndef GL_USE_MISSING_GLYPH_NV
#define GL_USE_MISSING_GLYPH_NV 0x90AA
#endif

#ifndef GL_PATH_ERROR_POSITION_NV
#define GL_PATH_ERROR_POSITION_NV 0x90AB
#endif

#ifndef GL_PATH_FOG_GEN_MODE_NV
#define GL_PATH_FOG_GEN_MODE_NV 0x90AC
#endif

#ifndef GL_ACCUM_ADJACENT_PAIRS_NV
#define GL_ACCUM_ADJACENT_PAIRS_NV 0x90AD
#endif

#ifndef GL_ADJACENT_PAIRS_NV
#define GL_ADJACENT_PAIRS_NV 0x90AE
#endif

#ifndef GL_FIRST_TO_REST_NV
#define GL_FIRST_TO_REST_NV 0x90AF
#endif

#ifndef GL_PATH_GEN_MODE_NV
#define GL_PATH_GEN_MODE_NV 0x90B0
#endif

#ifndef GL_PATH_GEN_COEFF_NV
#define GL_PATH_GEN_COEFF_NV 0x90B1
#endif

#ifndef GL_PATH_GEN_COLOR_FORMAT_NV
#define GL_PATH_GEN_COLOR_FORMAT_NV 0x90B2
#endif

#ifndef GL_PATH_GEN_COMPONENTS_NV
#define GL_PATH_GEN_COMPONENTS_NV 0x90B3
#endif

#ifndef GL_PATH_STENCIL_FUNC_NV
#define GL_PATH_STENCIL_FUNC_NV 0x90B7
#endif

#ifndef GL_PATH_STENCIL_REF_NV
#define GL_PATH_STENCIL_REF_NV 0x90B8
#endif

#ifndef GL_PATH_STENCIL_VALUE_MASK_NV
#define GL_PATH_STENCIL_VALUE_MASK_NV 0x90B9
#endif

#ifndef GL_PATH_STENCIL_DEPTH_OFFSET_FACTOR_NV
#define GL_PATH_STENCIL_DEPTH_OFFSET_FACTOR_NV 0x90BD
#endif

#ifndef GL_PATH_STENCIL_DEPTH_OFFSET_UNITS_NV
#define GL_PATH_STENCIL_DEPTH_OFFSET_UNITS_NV 0x90BE
#endif

#ifndef GL_PATH_COVER_DEPTH_FUNC_NV
#define GL_PATH_COVER_DEPTH_FUNC_NV 0x90BF
#endif

#ifndef GL_PATH_DASH_OFFSET_RESET_NV
#define GL_PATH_DASH_OFFSET_RESET_NV 0x90B4
#endif

#ifndef GL_MOVE_TO_RESETS_NV
#define GL_MOVE_TO_RESETS_NV 0x90B5
#endif

#ifndef GL_MOVE_TO_CONTINUES_NV
#define GL_MOVE_TO_CONTINUES_NV 0x90B6
#endif

#ifndef GL_CLOSE_PATH_NV
#define GL_CLOSE_PATH_NV 0x00
#endif

#ifndef GL_MOVE_TO_NV
#define GL_MOVE_TO_NV 0x02
#endif

#ifndef GL_RELATIVE_MOVE_TO_NV
#define GL_RELATIVE_MOVE_TO_NV 0x03
#endif

#ifndef GL_LINE_TO_NV
#define GL_LINE_TO_NV 0x04
#endif

#ifndef GL_RELATIVE_LINE_TO_NV
#define GL_RELATIVE_LINE_TO_NV 0x05
#endif

#ifndef GL_HORIZONTAL_LINE_TO_NV
#define GL_HORIZONTAL_LINE_TO_NV 0x06
#endif

#ifndef GL_RELATIVE_HORIZONTAL_LINE_TO_NV
#define GL_RELATIVE_HORIZONTAL_LINE_TO_NV 0x07
#endif

#ifndef GL_VERTICAL_LINE_TO_NV
#define GL_VERTICAL_LINE_TO_NV 0x08
#endif

#ifndef GL_RELATIVE_VERTICAL_LINE_TO_NV
#define GL_RELATIVE_VERTICAL_LINE_TO_NV 0x09
#endif

#ifndef GL_QUADRATIC_CURVE_TO_NV
#define GL_QUADRATIC_CURVE_TO_NV 0x0A
#endif

#ifndef GL_RELATIVE_QUADRATIC_CURVE_TO_NV
#define GL_RELATIVE_QUADRATIC_CURVE_TO_NV 0x0B
#endif

#ifndef GL_CUBIC_CURVE_TO_NV
#define GL_CUBIC_CURVE_TO_NV 0x0C
#endif

#ifndef GL_RELATIVE_CUBIC_CURVE_TO_NV
#define GL_RELATIVE_CUBIC_CURVE_TO_NV 0x0D
#endif

#ifndef GL_SMOOTH_QUADRATIC_CURVE_TO_NV
#define GL_SMOOTH_QUADRATIC_CURVE_TO_NV 0x0E
#endif

#ifndef GL_RELATIVE_SMOOTH_QUADRATIC_CURVE_TO_NV
#define GL_RELATIVE_SMOOTH_QUADRATIC_CURVE_TO_NV 0x0F
#endif

#ifndef GL_SMOOTH_CUBIC_CURVE_TO_NV
#define GL_SMOOTH_CUBIC_CURVE_TO_NV 0x10
#endif

#ifndef GL_RELATIVE_SMOOTH_CUBIC_CURVE_TO_NV
#define GL_RELATIVE_SMOOTH_CUBIC_CURVE_TO_NV 0x11
#endif

#ifndef GL_SMALL_CCW_ARC_TO_NV
#define GL_SMALL_CCW_ARC_TO_NV 0x12
#endif

#ifndef GL_RELATIVE_SMALL_CCW_ARC_TO_NV
#define GL_RELATIVE_SMALL_CCW_ARC_TO_NV 0x13
#endif

#ifndef GL_SMALL_CW_ARC_TO_NV
#define GL_SMALL_CW_ARC_TO_NV 0x14
#endif

#ifndef GL_RELATIVE_SMALL_CW_ARC_TO_NV
#define GL_RELATIVE_SMALL_CW_ARC_TO_NV 0x15
#endif

#ifndef GL_LARGE_CCW_ARC_TO_NV
#define GL_LARGE_CCW_ARC_TO_NV 0x16
#endif

#ifndef GL_RELATIVE_LARGE_CCW_ARC_TO_NV
#define GL_RELATIVE_LARGE_CCW_ARC_TO_NV 0x17
#endif

#ifndef GL_LARGE_CW_ARC_TO_NV
#define GL_LARGE_CW_ARC_TO_NV 0x18
#endif

#ifndef GL_RELATIVE_LARGE_CW_ARC_TO_NV
#define GL_RELATIVE_LARGE_CW_ARC_TO_NV 0x19
#endif

#ifndef GL_RESTART_PATH_NV
#define GL_RESTART_PATH_NV 0xF0
#endif

#ifndef GL_DUP_FIRST_CUBIC_CURVE_TO_NV
#define GL_DUP_FIRST_CUBIC_CURVE_TO_NV 0xF2
#endif

#ifndef GL_DUP_LAST_CUBIC_CURVE_TO_NV
#define GL_DUP_LAST_CUBIC_CURVE_TO_NV 0xF4
#endif

#ifndef GL_RECT_NV
#define GL_RECT_NV 0xF6
#endif

#ifndef GL_CIRCULAR_CCW_ARC_TO_NV
#define GL_CIRCULAR_CCW_ARC_TO_NV 0xF8
#endif

#ifndef GL_CIRCULAR_CW_ARC_TO_NV
#define GL_CIRCULAR_CW_ARC_TO_NV 0xFA
#endif

#ifndef GL_CIRCULAR_TANGENT_ARC_TO_NV
#define GL_CIRCULAR_TANGENT_ARC_TO_NV 0xFC
#endif

#ifndef GL_ARC_TO_NV
#define GL_ARC_TO_NV 0xFE
#endif

#ifndef GL_RELATIVE_ARC_TO_NV
#define GL_RELATIVE_ARC_TO_NV 0xFF
#endif

#ifndef GL_BOLD_BIT_NV
#define GL_BOLD_BIT_NV 0x01
#endif

#ifndef GL_ITALIC_BIT_NV
#define GL_ITALIC_BIT_NV 0x02
#endif

#ifndef GL_GLYPH_WIDTH_BIT_NV
#define GL_GLYPH_WIDTH_BIT_NV 0x01
#endif

#ifndef GL_GLYPH_HEIGHT_BIT_NV
#define GL_GLYPH_HEIGHT_BIT_NV 0x02
#endif

#ifndef GL_GLYPH_HORIZONTAL_BEARING_X_BIT_NV
#define GL_GLYPH_HORIZONTAL_BEARING_X_BIT_NV 0x04
#endif

#ifndef GL_GLYPH_HORIZONTAL_BEARING_Y_BIT_NV
#define GL_GLYPH_HORIZONTAL_BEARING_Y_BIT_NV 0x08
#endif

#ifndef GL_GLYPH_HORIZONTAL_BEARING_ADVANCE_BIT_NV
#define GL_GLYPH_HORIZONTAL_BEARING_ADVANCE_BIT_NV 0x10
#endif

#ifndef GL_GLYPH_VERTICAL_BEARING_X_BIT_NV
#define GL_GLYPH_VERTICAL_BEARING_X_BIT_NV 0x20
#endif

#ifndef GL_GLYPH_VERTICAL_BEARING_Y_BIT_NV
#define GL_GLYPH_VERTICAL_BEARING_Y_BIT_NV 0x40
#endif

#ifndef GL_GLYPH_VERTICAL_BEARING_ADVANCE_BIT_NV
#define GL_GLYPH_VERTICAL_BEARING_ADVANCE_BIT_NV 0x80
#endif

#ifndef GL_GLYPH_HAS_KERNING_NV
#define GL_GLYPH_HAS_KERNING_NV 0x100
#endif

#ifndef GL_FONT_X_MIN_BOUNDS_NV
#define GL_FONT_X_MIN_BOUNDS_NV 0x00010000
#endif

#ifndef GL_FONT_Y_MIN_BOUNDS_NV
#define GL_FONT_Y_MIN_BOUNDS_NV 0x00020000
#endif

#ifndef GL_FONT_X_MAX_BOUNDS_NV
#define GL_FONT_X_MAX_BOUNDS_NV 0x00040000
#endif

#ifndef GL_FONT_Y_MAX_BOUNDS_NV
#define GL_FONT_Y_MAX_BOUNDS_NV 0x00080000
#endif

#ifndef GL_FONT_UNITS_PER_EM_NV
#define GL_FONT_UNITS_PER_EM_NV 0x00100000
#endif

#ifndef GL_FONT_ASCENDER_NV
#define GL_FONT_ASCENDER_NV 0x00200000
#endif

#ifndef GL_FONT_DESCENDER_NV
#define GL_FONT_DESCENDER_NV 0x00400000
#endif

#ifndef GL_FONT_HEIGHT_NV
#define GL_FONT_HEIGHT_NV 0x00800000
#endif

#ifndef GL_FONT_MAX_ADVANCE_WIDTH_NV
#define GL_FONT_MAX_ADVANCE_WIDTH_NV 0x01000000
#endif

#ifndef GL_FONT_MAX_ADVANCE_HEIGHT_NV
#define GL_FONT_MAX_ADVANCE_HEIGHT_NV 0x02000000
#endif

#ifndef GL_FONT_UNDERLINE_POSITION_NV
#define GL_FONT_UNDERLINE_POSITION_NV 0x04000000
#endif

#ifndef GL_FONT_UNDERLINE_THICKNESS_NV
#define GL_FONT_UNDERLINE_THICKNESS_NV 0x08000000
#endif

#ifndef GL_FONT_HAS_KERNING_NV
#define GL_FONT_HAS_KERNING_NV 0x10000000
#endif

#ifndef GL_EXTERNAL_VIRTUAL_MEMORY_BUFFER_AMD
#define GL_EXTERNAL_VIRTUAL_MEMORY_BUFFER_AMD 0x9160
#endif

#ifndef GL_SET_AMD
#define GL_SET_AMD 0x874A
#endif

#ifndef GL_REPLACE_VALUE_AMD
#define GL_REPLACE_VALUE_AMD 0x874B
#endif

#ifndef GL_STENCIL_OP_VALUE_AMD
#define GL_STENCIL_OP_VALUE_AMD 0x874C
#endif

#ifndef GL_STENCIL_BACK_OP_VALUE_AMD
#define GL_STENCIL_BACK_OP_VALUE_AMD 0x874D
#endif

#ifndef GL_QUERY_BUFFER_AMD
#define GL_QUERY_BUFFER_AMD 0x9192
#endif

#ifndef GL_QUERY_BUFFER_BINDING_AMD
#define GL_QUERY_BUFFER_BINDING_AMD 0x9193
#endif

#ifndef GL_QUERY_RESULT_NO_WAIT_AMD
#define GL_QUERY_RESULT_NO_WAIT_AMD 0x9194
#endif

#ifndef GL_VIRTUAL_PAGE_SIZE_X_AMD
#define GL_VIRTUAL_PAGE_SIZE_X_AMD 0x9195
#endif

#ifndef GL_VIRTUAL_PAGE_SIZE_Y_AMD
#define GL_VIRTUAL_PAGE_SIZE_Y_AMD 0x9196
#endif

#ifndef GL_VIRTUAL_PAGE_SIZE_Z_AMD
#define GL_VIRTUAL_PAGE_SIZE_Z_AMD 0x9197
#endif

#ifndef GL_MAX_SPARSE_TEXTURE_SIZE_AMD
#define GL_MAX_SPARSE_TEXTURE_SIZE_AMD 0x9198
#endif

#ifndef GL_MAX_SPARSE_3D_TEXTURE_SIZE_AMD
#define GL_MAX_SPARSE_3D_TEXTURE_SIZE_AMD 0x9199
#endif

#ifndef GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS
#define GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS 0x919A
#endif

#ifndef GL_MIN_SPARSE_LEVEL_AMD
#define GL_MIN_SPARSE_LEVEL_AMD 0x919B
#endif

#ifndef GL_MIN_LOD_WARNING_AMD
#define GL_MIN_LOD_WARNING_AMD 0x919C
#endif

#ifndef GL_TEXTURE_STORAGE_SPARSE_BIT_AMD
#define GL_TEXTURE_STORAGE_SPARSE_BIT_AMD 0x00000001
#endif

#include <stddef.h>
#ifndef GL_VERSION_2_0
/* GL type for program/shader text */
typedef char GLchar;
#endif

#ifndef GL_VERSION_1_5
/* GL types for handling large vertex buffer objects */
typedef ptrdiff_t GLintptr;
typedef ptrdiff_t GLsizeiptr;
#endif

#ifndef GL_ARB_vertex_buffer_object
/* GL types for handling large vertex buffer objects */
typedef ptrdiff_t GLintptrARB;
typedef ptrdiff_t GLsizeiptrARB;
#endif

#ifndef GL_ARB_shader_objects
/* GL types for program/shader text and shader object handles */
typedef char GLcharARB;
typedef unsigned int GLhandleARB;
#endif

/* GL type for "half" precision (s10e5) float data in host memory */
#ifndef GL_ARB_half_float_pixel
typedef unsigned short GLhalfARB;
#endif

#ifndef GL_NV_half_float
typedef unsigned short GLhalfNV;
#endif

#ifndef GLEXT_64_TYPES_DEFINED
/* This code block is duplicated in glxext.h, so must be protected */
#define GLEXT_64_TYPES_DEFINED
/* Define int32_t, int64_t, and uint64_t types for UST/MSC */
/* (as used in the GL_EXT_timer_query extension). */
#if defined(__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
#include <inttypes.h>
#elif defined(__sun__) || defined(__digital__)
#include <inttypes.h>
#if defined(__STDC__)
#if defined(__arch64__) || defined(_LP64)
typedef long int int64_t;
typedef unsigned long int uint64_t;
#else
typedef long long int int64_t;
typedef unsigned long long int uint64_t;
#endif /* __arch64__ */
#endif /* __STDC__ */
#elif defined( __VMS ) || defined(__sgi)
#include <inttypes.h>
#elif defined(__SCO__) || defined(__USLC__)
#include <stdint.h>
#elif defined(__UNIXOS2__) || defined(__SOL64__)
typedef long int int32_t;
typedef long long int int64_t;
typedef unsigned long long int uint64_t;
#elif defined(_WIN32) && defined(__GNUC__)
#include <stdint.h>
#elif defined(_WIN32)
typedef __int32 int32_t;
typedef __int64 int64_t;
typedef unsigned __int64 uint64_t;
#else
/* Fallback if nothing above works */
#include <inttypes.h>
#endif
#endif

#ifndef GL_EXT_timer_query
typedef int64_t GLint64EXT;
typedef uint64_t GLuint64EXT;
#endif

#ifndef GL_ARB_sync
typedef int64_t GLint64;
typedef uint64_t GLuint64;
typedef struct __GLsync *GLsync;
#endif

#ifndef GL_ARB_cl_event
/* These incomplete types let us declare types compatible with OpenCL's cl_context and cl_event */
struct _cl_context;
struct _cl_event;
#endif

#ifndef GL_ARB_debug_output
typedef void (APIENTRY *GLDEBUGPROCARB)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,GLvoid *userParam);
#endif

#ifndef GL_AMD_debug_output
typedef void (APIENTRY *GLDEBUGPROCAMD)(GLuint id,GLenum category,GLenum severity,GLsizei length,const GLchar *message,GLvoid *userParam);
#endif

#ifndef GL_KHR_debug
typedef void (APIENTRY *GLDEBUGPROC)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,GLvoid *userParam);
#endif

#ifndef GL_NV_vdpau_interop
typedef GLintptr GLvdpauSurfaceNV;
#endif

typedef void (APIENTRY *glCullFaceFunc)(GLenum mode);
extern glCullFaceFunc _glCullFace;
#define glCullFace VE_ASSERT(_glCullFace);_glCullFace
typedef void (APIENTRY *glFrontFaceFunc)(GLenum mode);
extern glFrontFaceFunc _glFrontFace;
#define glFrontFace VE_ASSERT(_glFrontFace);_glFrontFace
typedef void (APIENTRY *glHintFunc)(GLenum target, GLenum mode);
extern glHintFunc _glHint;
#define glHint VE_ASSERT(_glHint);_glHint
typedef void (APIENTRY *glLineWidthFunc)(GLfloat width);
extern glLineWidthFunc _glLineWidth;
#define glLineWidth VE_ASSERT(_glLineWidth);_glLineWidth
typedef void (APIENTRY *glPointSizeFunc)(GLfloat size);
extern glPointSizeFunc _glPointSize;
#define glPointSize VE_ASSERT(_glPointSize);_glPointSize
typedef void (APIENTRY *glPolygonModeFunc)(GLenum face, GLenum mode);
extern glPolygonModeFunc _glPolygonMode;
#define glPolygonMode VE_ASSERT(_glPolygonMode);_glPolygonMode
typedef void (APIENTRY *glScissorFunc)(GLint x, GLint y, GLsizei width, GLsizei height);
extern glScissorFunc _glScissor;
#define glScissor VE_ASSERT(_glScissor);_glScissor
typedef void (APIENTRY *glTexParameterfFunc)(GLenum target, GLenum pname, GLfloat param);
extern glTexParameterfFunc _glTexParameterf;
#define glTexParameterf VE_ASSERT(_glTexParameterf);_glTexParameterf
typedef void (APIENTRY *glTexParameterfvFunc)(GLenum target, GLenum pname, GLfloat* params);
extern glTexParameterfvFunc _glTexParameterfv;
#define glTexParameterfv VE_ASSERT(_glTexParameterfv);_glTexParameterfv
typedef void (APIENTRY *glTexParameteriFunc)(GLenum target, GLenum pname, GLint param);
extern glTexParameteriFunc _glTexParameteri;
#define glTexParameteri VE_ASSERT(_glTexParameteri);_glTexParameteri
typedef void (APIENTRY *glTexParameterivFunc)(GLenum target, GLenum pname, GLint* params);
extern glTexParameterivFunc _glTexParameteriv;
#define glTexParameteriv VE_ASSERT(_glTexParameteriv);_glTexParameteriv
typedef void (APIENTRY *glTexImage1DFunc)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, GLvoid* pixels);
extern glTexImage1DFunc _glTexImage1D;
#define glTexImage1D VE_ASSERT(_glTexImage1D);_glTexImage1D
typedef void (APIENTRY *glTexImage2DFunc)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, GLvoid* pixels);
extern glTexImage2DFunc _glTexImage2D;
#define glTexImage2D VE_ASSERT(_glTexImage2D);_glTexImage2D
typedef void (APIENTRY *glDrawBufferFunc)(GLenum mode);
extern glDrawBufferFunc _glDrawBuffer;
#define glDrawBuffer VE_ASSERT(_glDrawBuffer);_glDrawBuffer
typedef void (APIENTRY *glClearFunc)(GLbitfield mask);
extern glClearFunc _glClear;
#define glClear VE_ASSERT(_glClear);_glClear
typedef void (APIENTRY *glClearColorFunc)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
extern glClearColorFunc _glClearColor;
#define glClearColor VE_ASSERT(_glClearColor);_glClearColor
typedef void (APIENTRY *glClearStencilFunc)(GLint s);
extern glClearStencilFunc _glClearStencil;
#define glClearStencil VE_ASSERT(_glClearStencil);_glClearStencil
typedef void (APIENTRY *glClearDepthFunc)(GLdouble depth);
extern glClearDepthFunc _glClearDepth;
#define glClearDepth VE_ASSERT(_glClearDepth);_glClearDepth
typedef void (APIENTRY *glStencilMaskFunc)(GLuint mask);
extern glStencilMaskFunc _glStencilMask;
#define glStencilMask VE_ASSERT(_glStencilMask);_glStencilMask
typedef void (APIENTRY *glColorMaskFunc)(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
extern glColorMaskFunc _glColorMask;
#define glColorMask VE_ASSERT(_glColorMask);_glColorMask
typedef void (APIENTRY *glDepthMaskFunc)(GLboolean flag);
extern glDepthMaskFunc _glDepthMask;
#define glDepthMask VE_ASSERT(_glDepthMask);_glDepthMask
typedef void (APIENTRY *glDisableFunc)(GLenum cap);
extern glDisableFunc _glDisable;
#define glDisable VE_ASSERT(_glDisable);_glDisable
typedef void (APIENTRY *glEnableFunc)(GLenum cap);
extern glEnableFunc _glEnable;
#define glEnable VE_ASSERT(_glEnable);_glEnable
typedef void (APIENTRY *glFinishFunc)();
extern glFinishFunc _glFinish;
#define glFinish VE_ASSERT(_glFinish);_glFinish
typedef void (APIENTRY *glFlushFunc)();
extern glFlushFunc _glFlush;
#define glFlush VE_ASSERT(_glFlush);_glFlush
typedef void (APIENTRY *glBlendFuncFunc)(GLenum sfactor, GLenum dfactor);
extern glBlendFuncFunc _glBlendFunc;
#define glBlendFunc VE_ASSERT(_glBlendFunc);_glBlendFunc
typedef void (APIENTRY *glLogicOpFunc)(GLenum opcode);
extern glLogicOpFunc _glLogicOp;
#define glLogicOp VE_ASSERT(_glLogicOp);_glLogicOp
typedef void (APIENTRY *glStencilFuncFunc)(GLenum func, GLint ref, GLuint mask);
extern glStencilFuncFunc _glStencilFunc;
#define glStencilFunc VE_ASSERT(_glStencilFunc);_glStencilFunc
typedef void (APIENTRY *glStencilOpFunc)(GLenum fail, GLenum zfail, GLenum zpass);
extern glStencilOpFunc _glStencilOp;
#define glStencilOp VE_ASSERT(_glStencilOp);_glStencilOp
typedef void (APIENTRY *glDepthFuncFunc)(GLenum func);
extern glDepthFuncFunc _glDepthFunc;
#define glDepthFunc VE_ASSERT(_glDepthFunc);_glDepthFunc
typedef void (APIENTRY *glPixelStorefFunc)(GLenum pname, GLfloat param);
extern glPixelStorefFunc _glPixelStoref;
#define glPixelStoref VE_ASSERT(_glPixelStoref);_glPixelStoref
typedef void (APIENTRY *glPixelStoreiFunc)(GLenum pname, GLint param);
extern glPixelStoreiFunc _glPixelStorei;
#define glPixelStorei VE_ASSERT(_glPixelStorei);_glPixelStorei
typedef void (APIENTRY *glReadBufferFunc)(GLenum mode);
extern glReadBufferFunc _glReadBuffer;
#define glReadBuffer VE_ASSERT(_glReadBuffer);_glReadBuffer
typedef void (APIENTRY *glReadPixelsFunc)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid* pixels);
extern glReadPixelsFunc _glReadPixels;
#define glReadPixels VE_ASSERT(_glReadPixels);_glReadPixels
typedef void (APIENTRY *glGetBooleanvFunc)(GLenum pname, GLboolean* params);
extern glGetBooleanvFunc _glGetBooleanv;
#define glGetBooleanv VE_ASSERT(_glGetBooleanv);_glGetBooleanv
typedef void (APIENTRY *glGetDoublevFunc)(GLenum pname, GLdouble* params);
extern glGetDoublevFunc _glGetDoublev;
#define glGetDoublev VE_ASSERT(_glGetDoublev);_glGetDoublev
typedef GLenum (APIENTRY *glGetErrorFunc)();
extern glGetErrorFunc _glGetError;
#define glGetError _glGetError
typedef void (APIENTRY *glGetFloatvFunc)(GLenum pname, GLfloat* params);
extern glGetFloatvFunc _glGetFloatv;
#define glGetFloatv VE_ASSERT(_glGetFloatv);_glGetFloatv
typedef void (APIENTRY *glGetIntegervFunc)(GLenum pname, GLint* params);
extern glGetIntegervFunc _glGetIntegerv;
#define glGetIntegerv VE_ASSERT(_glGetIntegerv);_glGetIntegerv
typedef const GLubyte * (APIENTRY *glGetStringFunc)(GLenum name);
extern glGetStringFunc _glGetString;
#define glGetString _glGetString
typedef void (APIENTRY *glGetTexImageFunc)(GLenum target, GLint level, GLenum format, GLenum type, GLvoid* pixels);
extern glGetTexImageFunc _glGetTexImage;
#define glGetTexImage VE_ASSERT(_glGetTexImage);_glGetTexImage
typedef void (APIENTRY *glGetTexParameterfvFunc)(GLenum target, GLenum pname, GLfloat* params);
extern glGetTexParameterfvFunc _glGetTexParameterfv;
#define glGetTexParameterfv VE_ASSERT(_glGetTexParameterfv);_glGetTexParameterfv
typedef void (APIENTRY *glGetTexParameterivFunc)(GLenum target, GLenum pname, GLint* params);
extern glGetTexParameterivFunc _glGetTexParameteriv;
#define glGetTexParameteriv VE_ASSERT(_glGetTexParameteriv);_glGetTexParameteriv
typedef void (APIENTRY *glGetTexLevelParameterfvFunc)(GLenum target, GLint level, GLenum pname, GLfloat* params);
extern glGetTexLevelParameterfvFunc _glGetTexLevelParameterfv;
#define glGetTexLevelParameterfv VE_ASSERT(_glGetTexLevelParameterfv);_glGetTexLevelParameterfv
typedef void (APIENTRY *glGetTexLevelParameterivFunc)(GLenum target, GLint level, GLenum pname, GLint* params);
extern glGetTexLevelParameterivFunc _glGetTexLevelParameteriv;
#define glGetTexLevelParameteriv VE_ASSERT(_glGetTexLevelParameteriv);_glGetTexLevelParameteriv
typedef GLboolean (APIENTRY *glIsEnabledFunc)(GLenum cap);
extern glIsEnabledFunc _glIsEnabled;
#define glIsEnabled _glIsEnabled
typedef void (APIENTRY *glDepthRangeFunc)(GLdouble near, GLdouble far);
extern glDepthRangeFunc _glDepthRange;
#define glDepthRange VE_ASSERT(_glDepthRange);_glDepthRange
typedef void (APIENTRY *glViewportFunc)(GLint x, GLint y, GLsizei width, GLsizei height);
extern glViewportFunc _glViewport;
#define glViewport VE_ASSERT(_glViewport);_glViewport
typedef void (APIENTRY *glNewListFunc)(GLuint list, GLenum mode);
extern glNewListFunc _glNewList;
#define glNewList VE_ASSERT(_glNewList);_glNewList
typedef void (APIENTRY *glEndListFunc)();
extern glEndListFunc _glEndList;
#define glEndList VE_ASSERT(_glEndList);_glEndList
typedef void (APIENTRY *glCallListFunc)(GLuint list);
extern glCallListFunc _glCallList;
#define glCallList VE_ASSERT(_glCallList);_glCallList
typedef void (APIENTRY *glCallListsFunc)(GLsizei n, GLenum type, GLvoid* lists);
extern glCallListsFunc _glCallLists;
#define glCallLists VE_ASSERT(_glCallLists);_glCallLists
typedef void (APIENTRY *glDeleteListsFunc)(GLuint list, GLsizei range);
extern glDeleteListsFunc _glDeleteLists;
#define glDeleteLists VE_ASSERT(_glDeleteLists);_glDeleteLists
typedef GLuint (APIENTRY *glGenListsFunc)(GLsizei range);
extern glGenListsFunc _glGenLists;
#define glGenLists _glGenLists
typedef void (APIENTRY *glListBaseFunc)(GLuint base);
extern glListBaseFunc _glListBase;
#define glListBase VE_ASSERT(_glListBase);_glListBase
typedef void (APIENTRY *glBeginFunc)(GLenum mode);
extern glBeginFunc _glBegin;
#define glBegin VE_ASSERT(_glBegin);_glBegin
typedef void (APIENTRY *glBitmapFunc)(GLsizei width, GLsizei height, GLfloat xorig, GLfloat yorig, GLfloat xmove, GLfloat ymove, GLubyte* bitmap);
extern glBitmapFunc _glBitmap;
#define glBitmap VE_ASSERT(_glBitmap);_glBitmap
typedef void (APIENTRY *glColor3bFunc)(GLbyte red, GLbyte green, GLbyte blue);
extern glColor3bFunc _glColor3b;
#define glColor3b VE_ASSERT(_glColor3b);_glColor3b
typedef void (APIENTRY *glColor3bvFunc)(GLbyte* v);
extern glColor3bvFunc _glColor3bv;
#define glColor3bv VE_ASSERT(_glColor3bv);_glColor3bv
typedef void (APIENTRY *glColor3dFunc)(GLdouble red, GLdouble green, GLdouble blue);
extern glColor3dFunc _glColor3d;
#define glColor3d VE_ASSERT(_glColor3d);_glColor3d
typedef void (APIENTRY *glColor3dvFunc)(GLdouble* v);
extern glColor3dvFunc _glColor3dv;
#define glColor3dv VE_ASSERT(_glColor3dv);_glColor3dv
typedef void (APIENTRY *glColor3fFunc)(GLfloat red, GLfloat green, GLfloat blue);
extern glColor3fFunc _glColor3f;
#define glColor3f VE_ASSERT(_glColor3f);_glColor3f
typedef void (APIENTRY *glColor3fvFunc)(GLfloat* v);
extern glColor3fvFunc _glColor3fv;
#define glColor3fv VE_ASSERT(_glColor3fv);_glColor3fv
typedef void (APIENTRY *glColor3iFunc)(GLint red, GLint green, GLint blue);
extern glColor3iFunc _glColor3i;
#define glColor3i VE_ASSERT(_glColor3i);_glColor3i
typedef void (APIENTRY *glColor3ivFunc)(GLint* v);
extern glColor3ivFunc _glColor3iv;
#define glColor3iv VE_ASSERT(_glColor3iv);_glColor3iv
typedef void (APIENTRY *glColor3sFunc)(GLshort red, GLshort green, GLshort blue);
extern glColor3sFunc _glColor3s;
#define glColor3s VE_ASSERT(_glColor3s);_glColor3s
typedef void (APIENTRY *glColor3svFunc)(GLshort* v);
extern glColor3svFunc _glColor3sv;
#define glColor3sv VE_ASSERT(_glColor3sv);_glColor3sv
typedef void (APIENTRY *glColor3ubFunc)(GLubyte red, GLubyte green, GLubyte blue);
extern glColor3ubFunc _glColor3ub;
#define glColor3ub VE_ASSERT(_glColor3ub);_glColor3ub
typedef void (APIENTRY *glColor3ubvFunc)(GLubyte* v);
extern glColor3ubvFunc _glColor3ubv;
#define glColor3ubv VE_ASSERT(_glColor3ubv);_glColor3ubv
typedef void (APIENTRY *glColor3uiFunc)(GLuint red, GLuint green, GLuint blue);
extern glColor3uiFunc _glColor3ui;
#define glColor3ui VE_ASSERT(_glColor3ui);_glColor3ui
typedef void (APIENTRY *glColor3uivFunc)(GLuint* v);
extern glColor3uivFunc _glColor3uiv;
#define glColor3uiv VE_ASSERT(_glColor3uiv);_glColor3uiv
typedef void (APIENTRY *glColor3usFunc)(GLushort red, GLushort green, GLushort blue);
extern glColor3usFunc _glColor3us;
#define glColor3us VE_ASSERT(_glColor3us);_glColor3us
typedef void (APIENTRY *glColor3usvFunc)(GLushort* v);
extern glColor3usvFunc _glColor3usv;
#define glColor3usv VE_ASSERT(_glColor3usv);_glColor3usv
typedef void (APIENTRY *glColor4bFunc)(GLbyte red, GLbyte green, GLbyte blue, GLbyte alpha);
extern glColor4bFunc _glColor4b;
#define glColor4b VE_ASSERT(_glColor4b);_glColor4b
typedef void (APIENTRY *glColor4bvFunc)(GLbyte* v);
extern glColor4bvFunc _glColor4bv;
#define glColor4bv VE_ASSERT(_glColor4bv);_glColor4bv
typedef void (APIENTRY *glColor4dFunc)(GLdouble red, GLdouble green, GLdouble blue, GLdouble alpha);
extern glColor4dFunc _glColor4d;
#define glColor4d VE_ASSERT(_glColor4d);_glColor4d
typedef void (APIENTRY *glColor4dvFunc)(GLdouble* v);
extern glColor4dvFunc _glColor4dv;
#define glColor4dv VE_ASSERT(_glColor4dv);_glColor4dv
typedef void (APIENTRY *glColor4fFunc)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
extern glColor4fFunc _glColor4f;
#define glColor4f VE_ASSERT(_glColor4f);_glColor4f
typedef void (APIENTRY *glColor4fvFunc)(GLfloat* v);
extern glColor4fvFunc _glColor4fv;
#define glColor4fv VE_ASSERT(_glColor4fv);_glColor4fv
typedef void (APIENTRY *glColor4iFunc)(GLint red, GLint green, GLint blue, GLint alpha);
extern glColor4iFunc _glColor4i;
#define glColor4i VE_ASSERT(_glColor4i);_glColor4i
typedef void (APIENTRY *glColor4ivFunc)(GLint* v);
extern glColor4ivFunc _glColor4iv;
#define glColor4iv VE_ASSERT(_glColor4iv);_glColor4iv
typedef void (APIENTRY *glColor4sFunc)(GLshort red, GLshort green, GLshort blue, GLshort alpha);
extern glColor4sFunc _glColor4s;
#define glColor4s VE_ASSERT(_glColor4s);_glColor4s
typedef void (APIENTRY *glColor4svFunc)(GLshort* v);
extern glColor4svFunc _glColor4sv;
#define glColor4sv VE_ASSERT(_glColor4sv);_glColor4sv
typedef void (APIENTRY *glColor4ubFunc)(GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha);
extern glColor4ubFunc _glColor4ub;
#define glColor4ub VE_ASSERT(_glColor4ub);_glColor4ub
typedef void (APIENTRY *glColor4ubvFunc)(GLubyte* v);
extern glColor4ubvFunc _glColor4ubv;
#define glColor4ubv VE_ASSERT(_glColor4ubv);_glColor4ubv
typedef void (APIENTRY *glColor4uiFunc)(GLuint red, GLuint green, GLuint blue, GLuint alpha);
extern glColor4uiFunc _glColor4ui;
#define glColor4ui VE_ASSERT(_glColor4ui);_glColor4ui
typedef void (APIENTRY *glColor4uivFunc)(GLuint* v);
extern glColor4uivFunc _glColor4uiv;
#define glColor4uiv VE_ASSERT(_glColor4uiv);_glColor4uiv
typedef void (APIENTRY *glColor4usFunc)(GLushort red, GLushort green, GLushort blue, GLushort alpha);
extern glColor4usFunc _glColor4us;
#define glColor4us VE_ASSERT(_glColor4us);_glColor4us
typedef void (APIENTRY *glColor4usvFunc)(GLushort* v);
extern glColor4usvFunc _glColor4usv;
#define glColor4usv VE_ASSERT(_glColor4usv);_glColor4usv
typedef void (APIENTRY *glEdgeFlagFunc)(GLboolean flag);
extern glEdgeFlagFunc _glEdgeFlag;
#define glEdgeFlag VE_ASSERT(_glEdgeFlag);_glEdgeFlag
typedef void (APIENTRY *glEdgeFlagvFunc)(GLboolean* flag);
extern glEdgeFlagvFunc _glEdgeFlagv;
#define glEdgeFlagv VE_ASSERT(_glEdgeFlagv);_glEdgeFlagv
typedef void (APIENTRY *glEndFunc)();
extern glEndFunc _glEnd;
#define glEnd VE_ASSERT(_glEnd);_glEnd
typedef void (APIENTRY *glIndexdFunc)(GLdouble c);
extern glIndexdFunc _glIndexd;
#define glIndexd VE_ASSERT(_glIndexd);_glIndexd
typedef void (APIENTRY *glIndexdvFunc)(GLdouble* c);
extern glIndexdvFunc _glIndexdv;
#define glIndexdv VE_ASSERT(_glIndexdv);_glIndexdv
typedef void (APIENTRY *glIndexfFunc)(GLfloat c);
extern glIndexfFunc _glIndexf;
#define glIndexf VE_ASSERT(_glIndexf);_glIndexf
typedef void (APIENTRY *glIndexfvFunc)(GLfloat* c);
extern glIndexfvFunc _glIndexfv;
#define glIndexfv VE_ASSERT(_glIndexfv);_glIndexfv
typedef void (APIENTRY *glIndexiFunc)(GLint c);
extern glIndexiFunc _glIndexi;
#define glIndexi VE_ASSERT(_glIndexi);_glIndexi
typedef void (APIENTRY *glIndexivFunc)(GLint* c);
extern glIndexivFunc _glIndexiv;
#define glIndexiv VE_ASSERT(_glIndexiv);_glIndexiv
typedef void (APIENTRY *glIndexsFunc)(GLshort c);
extern glIndexsFunc _glIndexs;
#define glIndexs VE_ASSERT(_glIndexs);_glIndexs
typedef void (APIENTRY *glIndexsvFunc)(GLshort* c);
extern glIndexsvFunc _glIndexsv;
#define glIndexsv VE_ASSERT(_glIndexsv);_glIndexsv
typedef void (APIENTRY *glNormal3bFunc)(GLbyte nx, GLbyte ny, GLbyte nz);
extern glNormal3bFunc _glNormal3b;
#define glNormal3b VE_ASSERT(_glNormal3b);_glNormal3b
typedef void (APIENTRY *glNormal3bvFunc)(GLbyte* v);
extern glNormal3bvFunc _glNormal3bv;
#define glNormal3bv VE_ASSERT(_glNormal3bv);_glNormal3bv
typedef void (APIENTRY *glNormal3dFunc)(GLdouble nx, GLdouble ny, GLdouble nz);
extern glNormal3dFunc _glNormal3d;
#define glNormal3d VE_ASSERT(_glNormal3d);_glNormal3d
typedef void (APIENTRY *glNormal3dvFunc)(GLdouble* v);
extern glNormal3dvFunc _glNormal3dv;
#define glNormal3dv VE_ASSERT(_glNormal3dv);_glNormal3dv
typedef void (APIENTRY *glNormal3fFunc)(GLfloat nx, GLfloat ny, GLfloat nz);
extern glNormal3fFunc _glNormal3f;
#define glNormal3f VE_ASSERT(_glNormal3f);_glNormal3f
typedef void (APIENTRY *glNormal3fvFunc)(GLfloat* v);
extern glNormal3fvFunc _glNormal3fv;
#define glNormal3fv VE_ASSERT(_glNormal3fv);_glNormal3fv
typedef void (APIENTRY *glNormal3iFunc)(GLint nx, GLint ny, GLint nz);
extern glNormal3iFunc _glNormal3i;
#define glNormal3i VE_ASSERT(_glNormal3i);_glNormal3i
typedef void (APIENTRY *glNormal3ivFunc)(GLint* v);
extern glNormal3ivFunc _glNormal3iv;
#define glNormal3iv VE_ASSERT(_glNormal3iv);_glNormal3iv
typedef void (APIENTRY *glNormal3sFunc)(GLshort nx, GLshort ny, GLshort nz);
extern glNormal3sFunc _glNormal3s;
#define glNormal3s VE_ASSERT(_glNormal3s);_glNormal3s
typedef void (APIENTRY *glNormal3svFunc)(GLshort* v);
extern glNormal3svFunc _glNormal3sv;
#define glNormal3sv VE_ASSERT(_glNormal3sv);_glNormal3sv
typedef void (APIENTRY *glRasterPos2dFunc)(GLdouble x, GLdouble y);
extern glRasterPos2dFunc _glRasterPos2d;
#define glRasterPos2d VE_ASSERT(_glRasterPos2d);_glRasterPos2d
typedef void (APIENTRY *glRasterPos2dvFunc)(GLdouble* v);
extern glRasterPos2dvFunc _glRasterPos2dv;
#define glRasterPos2dv VE_ASSERT(_glRasterPos2dv);_glRasterPos2dv
typedef void (APIENTRY *glRasterPos2fFunc)(GLfloat x, GLfloat y);
extern glRasterPos2fFunc _glRasterPos2f;
#define glRasterPos2f VE_ASSERT(_glRasterPos2f);_glRasterPos2f
typedef void (APIENTRY *glRasterPos2fvFunc)(GLfloat* v);
extern glRasterPos2fvFunc _glRasterPos2fv;
#define glRasterPos2fv VE_ASSERT(_glRasterPos2fv);_glRasterPos2fv
typedef void (APIENTRY *glRasterPos2iFunc)(GLint x, GLint y);
extern glRasterPos2iFunc _glRasterPos2i;
#define glRasterPos2i VE_ASSERT(_glRasterPos2i);_glRasterPos2i
typedef void (APIENTRY *glRasterPos2ivFunc)(GLint* v);
extern glRasterPos2ivFunc _glRasterPos2iv;
#define glRasterPos2iv VE_ASSERT(_glRasterPos2iv);_glRasterPos2iv
typedef void (APIENTRY *glRasterPos2sFunc)(GLshort x, GLshort y);
extern glRasterPos2sFunc _glRasterPos2s;
#define glRasterPos2s VE_ASSERT(_glRasterPos2s);_glRasterPos2s
typedef void (APIENTRY *glRasterPos2svFunc)(GLshort* v);
extern glRasterPos2svFunc _glRasterPos2sv;
#define glRasterPos2sv VE_ASSERT(_glRasterPos2sv);_glRasterPos2sv
typedef void (APIENTRY *glRasterPos3dFunc)(GLdouble x, GLdouble y, GLdouble z);
extern glRasterPos3dFunc _glRasterPos3d;
#define glRasterPos3d VE_ASSERT(_glRasterPos3d);_glRasterPos3d
typedef void (APIENTRY *glRasterPos3dvFunc)(GLdouble* v);
extern glRasterPos3dvFunc _glRasterPos3dv;
#define glRasterPos3dv VE_ASSERT(_glRasterPos3dv);_glRasterPos3dv
typedef void (APIENTRY *glRasterPos3fFunc)(GLfloat x, GLfloat y, GLfloat z);
extern glRasterPos3fFunc _glRasterPos3f;
#define glRasterPos3f VE_ASSERT(_glRasterPos3f);_glRasterPos3f
typedef void (APIENTRY *glRasterPos3fvFunc)(GLfloat* v);
extern glRasterPos3fvFunc _glRasterPos3fv;
#define glRasterPos3fv VE_ASSERT(_glRasterPos3fv);_glRasterPos3fv
typedef void (APIENTRY *glRasterPos3iFunc)(GLint x, GLint y, GLint z);
extern glRasterPos3iFunc _glRasterPos3i;
#define glRasterPos3i VE_ASSERT(_glRasterPos3i);_glRasterPos3i
typedef void (APIENTRY *glRasterPos3ivFunc)(GLint* v);
extern glRasterPos3ivFunc _glRasterPos3iv;
#define glRasterPos3iv VE_ASSERT(_glRasterPos3iv);_glRasterPos3iv
typedef void (APIENTRY *glRasterPos3sFunc)(GLshort x, GLshort y, GLshort z);
extern glRasterPos3sFunc _glRasterPos3s;
#define glRasterPos3s VE_ASSERT(_glRasterPos3s);_glRasterPos3s
typedef void (APIENTRY *glRasterPos3svFunc)(GLshort* v);
extern glRasterPos3svFunc _glRasterPos3sv;
#define glRasterPos3sv VE_ASSERT(_glRasterPos3sv);_glRasterPos3sv
typedef void (APIENTRY *glRasterPos4dFunc)(GLdouble x, GLdouble y, GLdouble z, GLdouble w);
extern glRasterPos4dFunc _glRasterPos4d;
#define glRasterPos4d VE_ASSERT(_glRasterPos4d);_glRasterPos4d
typedef void (APIENTRY *glRasterPos4dvFunc)(GLdouble* v);
extern glRasterPos4dvFunc _glRasterPos4dv;
#define glRasterPos4dv VE_ASSERT(_glRasterPos4dv);_glRasterPos4dv
typedef void (APIENTRY *glRasterPos4fFunc)(GLfloat x, GLfloat y, GLfloat z, GLfloat w);
extern glRasterPos4fFunc _glRasterPos4f;
#define glRasterPos4f VE_ASSERT(_glRasterPos4f);_glRasterPos4f
typedef void (APIENTRY *glRasterPos4fvFunc)(GLfloat* v);
extern glRasterPos4fvFunc _glRasterPos4fv;
#define glRasterPos4fv VE_ASSERT(_glRasterPos4fv);_glRasterPos4fv
typedef void (APIENTRY *glRasterPos4iFunc)(GLint x, GLint y, GLint z, GLint w);
extern glRasterPos4iFunc _glRasterPos4i;
#define glRasterPos4i VE_ASSERT(_glRasterPos4i);_glRasterPos4i
typedef void (APIENTRY *glRasterPos4ivFunc)(GLint* v);
extern glRasterPos4ivFunc _glRasterPos4iv;
#define glRasterPos4iv VE_ASSERT(_glRasterPos4iv);_glRasterPos4iv
typedef void (APIENTRY *glRasterPos4sFunc)(GLshort x, GLshort y, GLshort z, GLshort w);
extern glRasterPos4sFunc _glRasterPos4s;
#define glRasterPos4s VE_ASSERT(_glRasterPos4s);_glRasterPos4s
typedef void (APIENTRY *glRasterPos4svFunc)(GLshort* v);
extern glRasterPos4svFunc _glRasterPos4sv;
#define glRasterPos4sv VE_ASSERT(_glRasterPos4sv);_glRasterPos4sv
typedef void (APIENTRY *glRectdFunc)(GLdouble x1, GLdouble y1, GLdouble x2, GLdouble y2);
extern glRectdFunc _glRectd;
#define glRectd VE_ASSERT(_glRectd);_glRectd
typedef void (APIENTRY *glRectdvFunc)(GLdouble* v1, GLdouble* v2);
extern glRectdvFunc _glRectdv;
#define glRectdv VE_ASSERT(_glRectdv);_glRectdv
typedef void (APIENTRY *glRectfFunc)(GLfloat x1, GLfloat y1, GLfloat x2, GLfloat y2);
extern glRectfFunc _glRectf;
#define glRectf VE_ASSERT(_glRectf);_glRectf
typedef void (APIENTRY *glRectfvFunc)(GLfloat* v1, GLfloat* v2);
extern glRectfvFunc _glRectfv;
#define glRectfv VE_ASSERT(_glRectfv);_glRectfv
typedef void (APIENTRY *glRectiFunc)(GLint x1, GLint y1, GLint x2, GLint y2);
extern glRectiFunc _glRecti;
#define glRecti VE_ASSERT(_glRecti);_glRecti
typedef void (APIENTRY *glRectivFunc)(GLint* v1, GLint* v2);
extern glRectivFunc _glRectiv;
#define glRectiv VE_ASSERT(_glRectiv);_glRectiv
typedef void (APIENTRY *glRectsFunc)(GLshort x1, GLshort y1, GLshort x2, GLshort y2);
extern glRectsFunc _glRects;
#define glRects VE_ASSERT(_glRects);_glRects
typedef void (APIENTRY *glRectsvFunc)(GLshort* v1, GLshort* v2);
extern glRectsvFunc _glRectsv;
#define glRectsv VE_ASSERT(_glRectsv);_glRectsv
typedef void (APIENTRY *glTexCoord1dFunc)(GLdouble s);
extern glTexCoord1dFunc _glTexCoord1d;
#define glTexCoord1d VE_ASSERT(_glTexCoord1d);_glTexCoord1d
typedef void (APIENTRY *glTexCoord1dvFunc)(GLdouble* v);
extern glTexCoord1dvFunc _glTexCoord1dv;
#define glTexCoord1dv VE_ASSERT(_glTexCoord1dv);_glTexCoord1dv
typedef void (APIENTRY *glTexCoord1fFunc)(GLfloat s);
extern glTexCoord1fFunc _glTexCoord1f;
#define glTexCoord1f VE_ASSERT(_glTexCoord1f);_glTexCoord1f
typedef void (APIENTRY *glTexCoord1fvFunc)(GLfloat* v);
extern glTexCoord1fvFunc _glTexCoord1fv;
#define glTexCoord1fv VE_ASSERT(_glTexCoord1fv);_glTexCoord1fv
typedef void (APIENTRY *glTexCoord1iFunc)(GLint s);
extern glTexCoord1iFunc _glTexCoord1i;
#define glTexCoord1i VE_ASSERT(_glTexCoord1i);_glTexCoord1i
typedef void (APIENTRY *glTexCoord1ivFunc)(GLint* v);
extern glTexCoord1ivFunc _glTexCoord1iv;
#define glTexCoord1iv VE_ASSERT(_glTexCoord1iv);_glTexCoord1iv
typedef void (APIENTRY *glTexCoord1sFunc)(GLshort s);
extern glTexCoord1sFunc _glTexCoord1s;
#define glTexCoord1s VE_ASSERT(_glTexCoord1s);_glTexCoord1s
typedef void (APIENTRY *glTexCoord1svFunc)(GLshort* v);
extern glTexCoord1svFunc _glTexCoord1sv;
#define glTexCoord1sv VE_ASSERT(_glTexCoord1sv);_glTexCoord1sv
typedef void (APIENTRY *glTexCoord2dFunc)(GLdouble s, GLdouble t);
extern glTexCoord2dFunc _glTexCoord2d;
#define glTexCoord2d VE_ASSERT(_glTexCoord2d);_glTexCoord2d
typedef void (APIENTRY *glTexCoord2dvFunc)(GLdouble* v);
extern glTexCoord2dvFunc _glTexCoord2dv;
#define glTexCoord2dv VE_ASSERT(_glTexCoord2dv);_glTexCoord2dv
typedef void (APIENTRY *glTexCoord2fFunc)(GLfloat s, GLfloat t);
extern glTexCoord2fFunc _glTexCoord2f;
#define glTexCoord2f VE_ASSERT(_glTexCoord2f);_glTexCoord2f
typedef void (APIENTRY *glTexCoord2fvFunc)(GLfloat* v);
extern glTexCoord2fvFunc _glTexCoord2fv;
#define glTexCoord2fv VE_ASSERT(_glTexCoord2fv);_glTexCoord2fv
typedef void (APIENTRY *glTexCoord2iFunc)(GLint s, GLint t);
extern glTexCoord2iFunc _glTexCoord2i;
#define glTexCoord2i VE_ASSERT(_glTexCoord2i);_glTexCoord2i
typedef void (APIENTRY *glTexCoord2ivFunc)(GLint* v);
extern glTexCoord2ivFunc _glTexCoord2iv;
#define glTexCoord2iv VE_ASSERT(_glTexCoord2iv);_glTexCoord2iv
typedef void (APIENTRY *glTexCoord2sFunc)(GLshort s, GLshort t);
extern glTexCoord2sFunc _glTexCoord2s;
#define glTexCoord2s VE_ASSERT(_glTexCoord2s);_glTexCoord2s
typedef void (APIENTRY *glTexCoord2svFunc)(GLshort* v);
extern glTexCoord2svFunc _glTexCoord2sv;
#define glTexCoord2sv VE_ASSERT(_glTexCoord2sv);_glTexCoord2sv
typedef void (APIENTRY *glTexCoord3dFunc)(GLdouble s, GLdouble t, GLdouble r);
extern glTexCoord3dFunc _glTexCoord3d;
#define glTexCoord3d VE_ASSERT(_glTexCoord3d);_glTexCoord3d
typedef void (APIENTRY *glTexCoord3dvFunc)(GLdouble* v);
extern glTexCoord3dvFunc _glTexCoord3dv;
#define glTexCoord3dv VE_ASSERT(_glTexCoord3dv);_glTexCoord3dv
typedef void (APIENTRY *glTexCoord3fFunc)(GLfloat s, GLfloat t, GLfloat r);
extern glTexCoord3fFunc _glTexCoord3f;
#define glTexCoord3f VE_ASSERT(_glTexCoord3f);_glTexCoord3f
typedef void (APIENTRY *glTexCoord3fvFunc)(GLfloat* v);
extern glTexCoord3fvFunc _glTexCoord3fv;
#define glTexCoord3fv VE_ASSERT(_glTexCoord3fv);_glTexCoord3fv
typedef void (APIENTRY *glTexCoord3iFunc)(GLint s, GLint t, GLint r);
extern glTexCoord3iFunc _glTexCoord3i;
#define glTexCoord3i VE_ASSERT(_glTexCoord3i);_glTexCoord3i
typedef void (APIENTRY *glTexCoord3ivFunc)(GLint* v);
extern glTexCoord3ivFunc _glTexCoord3iv;
#define glTexCoord3iv VE_ASSERT(_glTexCoord3iv);_glTexCoord3iv
typedef void (APIENTRY *glTexCoord3sFunc)(GLshort s, GLshort t, GLshort r);
extern glTexCoord3sFunc _glTexCoord3s;
#define glTexCoord3s VE_ASSERT(_glTexCoord3s);_glTexCoord3s
typedef void (APIENTRY *glTexCoord3svFunc)(GLshort* v);
extern glTexCoord3svFunc _glTexCoord3sv;
#define glTexCoord3sv VE_ASSERT(_glTexCoord3sv);_glTexCoord3sv
typedef void (APIENTRY *glTexCoord4dFunc)(GLdouble s, GLdouble t, GLdouble r, GLdouble q);
extern glTexCoord4dFunc _glTexCoord4d;
#define glTexCoord4d VE_ASSERT(_glTexCoord4d);_glTexCoord4d
typedef void (APIENTRY *glTexCoord4dvFunc)(GLdouble* v);
extern glTexCoord4dvFunc _glTexCoord4dv;
#define glTexCoord4dv VE_ASSERT(_glTexCoord4dv);_glTexCoord4dv
typedef void (APIENTRY *glTexCoord4fFunc)(GLfloat s, GLfloat t, GLfloat r, GLfloat q);
extern glTexCoord4fFunc _glTexCoord4f;
#define glTexCoord4f VE_ASSERT(_glTexCoord4f);_glTexCoord4f
typedef void (APIENTRY *glTexCoord4fvFunc)(GLfloat* v);
extern glTexCoord4fvFunc _glTexCoord4fv;
#define glTexCoord4fv VE_ASSERT(_glTexCoord4fv);_glTexCoord4fv
typedef void (APIENTRY *glTexCoord4iFunc)(GLint s, GLint t, GLint r, GLint q);
extern glTexCoord4iFunc _glTexCoord4i;
#define glTexCoord4i VE_ASSERT(_glTexCoord4i);_glTexCoord4i
typedef void (APIENTRY *glTexCoord4ivFunc)(GLint* v);
extern glTexCoord4ivFunc _glTexCoord4iv;
#define glTexCoord4iv VE_ASSERT(_glTexCoord4iv);_glTexCoord4iv
typedef void (APIENTRY *glTexCoord4sFunc)(GLshort s, GLshort t, GLshort r, GLshort q);
extern glTexCoord4sFunc _glTexCoord4s;
#define glTexCoord4s VE_ASSERT(_glTexCoord4s);_glTexCoord4s
typedef void (APIENTRY *glTexCoord4svFunc)(GLshort* v);
extern glTexCoord4svFunc _glTexCoord4sv;
#define glTexCoord4sv VE_ASSERT(_glTexCoord4sv);_glTexCoord4sv
typedef void (APIENTRY *glVertex2dFunc)(GLdouble x, GLdouble y);
extern glVertex2dFunc _glVertex2d;
#define glVertex2d VE_ASSERT(_glVertex2d);_glVertex2d
typedef void (APIENTRY *glVertex2dvFunc)(GLdouble* v);
extern glVertex2dvFunc _glVertex2dv;
#define glVertex2dv VE_ASSERT(_glVertex2dv);_glVertex2dv
typedef void (APIENTRY *glVertex2fFunc)(GLfloat x, GLfloat y);
extern glVertex2fFunc _glVertex2f;
#define glVertex2f VE_ASSERT(_glVertex2f);_glVertex2f
typedef void (APIENTRY *glVertex2fvFunc)(GLfloat* v);
extern glVertex2fvFunc _glVertex2fv;
#define glVertex2fv VE_ASSERT(_glVertex2fv);_glVertex2fv
typedef void (APIENTRY *glVertex2iFunc)(GLint x, GLint y);
extern glVertex2iFunc _glVertex2i;
#define glVertex2i VE_ASSERT(_glVertex2i);_glVertex2i
typedef void (APIENTRY *glVertex2ivFunc)(GLint* v);
extern glVertex2ivFunc _glVertex2iv;
#define glVertex2iv VE_ASSERT(_glVertex2iv);_glVertex2iv
typedef void (APIENTRY *glVertex2sFunc)(GLshort x, GLshort y);
extern glVertex2sFunc _glVertex2s;
#define glVertex2s VE_ASSERT(_glVertex2s);_glVertex2s
typedef void (APIENTRY *glVertex2svFunc)(GLshort* v);
extern glVertex2svFunc _glVertex2sv;
#define glVertex2sv VE_ASSERT(_glVertex2sv);_glVertex2sv
typedef void (APIENTRY *glVertex3dFunc)(GLdouble x, GLdouble y, GLdouble z);
extern glVertex3dFunc _glVertex3d;
#define glVertex3d VE_ASSERT(_glVertex3d);_glVertex3d
typedef void (APIENTRY *glVertex3dvFunc)(GLdouble* v);
extern glVertex3dvFunc _glVertex3dv;
#define glVertex3dv VE_ASSERT(_glVertex3dv);_glVertex3dv
typedef void (APIENTRY *glVertex3fFunc)(GLfloat x, GLfloat y, GLfloat z);
extern glVertex3fFunc _glVertex3f;
#define glVertex3f VE_ASSERT(_glVertex3f);_glVertex3f
typedef void (APIENTRY *glVertex3fvFunc)(GLfloat* v);
extern glVertex3fvFunc _glVertex3fv;
#define glVertex3fv VE_ASSERT(_glVertex3fv);_glVertex3fv
typedef void (APIENTRY *glVertex3iFunc)(GLint x, GLint y, GLint z);
extern glVertex3iFunc _glVertex3i;
#define glVertex3i VE_ASSERT(_glVertex3i);_glVertex3i
typedef void (APIENTRY *glVertex3ivFunc)(GLint* v);
extern glVertex3ivFunc _glVertex3iv;
#define glVertex3iv VE_ASSERT(_glVertex3iv);_glVertex3iv
typedef void (APIENTRY *glVertex3sFunc)(GLshort x, GLshort y, GLshort z);
extern glVertex3sFunc _glVertex3s;
#define glVertex3s VE_ASSERT(_glVertex3s);_glVertex3s
typedef void (APIENTRY *glVertex3svFunc)(GLshort* v);
extern glVertex3svFunc _glVertex3sv;
#define glVertex3sv VE_ASSERT(_glVertex3sv);_glVertex3sv
typedef void (APIENTRY *glVertex4dFunc)(GLdouble x, GLdouble y, GLdouble z, GLdouble w);
extern glVertex4dFunc _glVertex4d;
#define glVertex4d VE_ASSERT(_glVertex4d);_glVertex4d
typedef void (APIENTRY *glVertex4dvFunc)(GLdouble* v);
extern glVertex4dvFunc _glVertex4dv;
#define glVertex4dv VE_ASSERT(_glVertex4dv);_glVertex4dv
typedef void (APIENTRY *glVertex4fFunc)(GLfloat x, GLfloat y, GLfloat z, GLfloat w);
extern glVertex4fFunc _glVertex4f;
#define glVertex4f VE_ASSERT(_glVertex4f);_glVertex4f
typedef void (APIENTRY *glVertex4fvFunc)(GLfloat* v);
extern glVertex4fvFunc _glVertex4fv;
#define glVertex4fv VE_ASSERT(_glVertex4fv);_glVertex4fv
typedef void (APIENTRY *glVertex4iFunc)(GLint x, GLint y, GLint z, GLint w);
extern glVertex4iFunc _glVertex4i;
#define glVertex4i VE_ASSERT(_glVertex4i);_glVertex4i
typedef void (APIENTRY *glVertex4ivFunc)(GLint* v);
extern glVertex4ivFunc _glVertex4iv;
#define glVertex4iv VE_ASSERT(_glVertex4iv);_glVertex4iv
typedef void (APIENTRY *glVertex4sFunc)(GLshort x, GLshort y, GLshort z, GLshort w);
extern glVertex4sFunc _glVertex4s;
#define glVertex4s VE_ASSERT(_glVertex4s);_glVertex4s
typedef void (APIENTRY *glVertex4svFunc)(GLshort* v);
extern glVertex4svFunc _glVertex4sv;
#define glVertex4sv VE_ASSERT(_glVertex4sv);_glVertex4sv
typedef void (APIENTRY *glClipPlaneFunc)(GLenum plane, GLdouble* equation);
extern glClipPlaneFunc _glClipPlane;
#define glClipPlane VE_ASSERT(_glClipPlane);_glClipPlane
typedef void (APIENTRY *glColorMaterialFunc)(GLenum face, GLenum mode);
extern glColorMaterialFunc _glColorMaterial;
#define glColorMaterial VE_ASSERT(_glColorMaterial);_glColorMaterial
typedef void (APIENTRY *glFogfFunc)(GLenum pname, GLfloat param);
extern glFogfFunc _glFogf;
#define glFogf VE_ASSERT(_glFogf);_glFogf
typedef void (APIENTRY *glFogfvFunc)(GLenum pname, GLfloat* params);
extern glFogfvFunc _glFogfv;
#define glFogfv VE_ASSERT(_glFogfv);_glFogfv
typedef void (APIENTRY *glFogiFunc)(GLenum pname, GLint param);
extern glFogiFunc _glFogi;
#define glFogi VE_ASSERT(_glFogi);_glFogi
typedef void (APIENTRY *glFogivFunc)(GLenum pname, GLint* params);
extern glFogivFunc _glFogiv;
#define glFogiv VE_ASSERT(_glFogiv);_glFogiv
typedef void (APIENTRY *glLightfFunc)(GLenum light, GLenum pname, GLfloat param);
extern glLightfFunc _glLightf;
#define glLightf VE_ASSERT(_glLightf);_glLightf
typedef void (APIENTRY *glLightfvFunc)(GLenum light, GLenum pname, GLfloat* params);
extern glLightfvFunc _glLightfv;
#define glLightfv VE_ASSERT(_glLightfv);_glLightfv
typedef void (APIENTRY *glLightiFunc)(GLenum light, GLenum pname, GLint param);
extern glLightiFunc _glLighti;
#define glLighti VE_ASSERT(_glLighti);_glLighti
typedef void (APIENTRY *glLightivFunc)(GLenum light, GLenum pname, GLint* params);
extern glLightivFunc _glLightiv;
#define glLightiv VE_ASSERT(_glLightiv);_glLightiv
typedef void (APIENTRY *glLightModelfFunc)(GLenum pname, GLfloat param);
extern glLightModelfFunc _glLightModelf;
#define glLightModelf VE_ASSERT(_glLightModelf);_glLightModelf
typedef void (APIENTRY *glLightModelfvFunc)(GLenum pname, GLfloat* params);
extern glLightModelfvFunc _glLightModelfv;
#define glLightModelfv VE_ASSERT(_glLightModelfv);_glLightModelfv
typedef void (APIENTRY *glLightModeliFunc)(GLenum pname, GLint param);
extern glLightModeliFunc _glLightModeli;
#define glLightModeli VE_ASSERT(_glLightModeli);_glLightModeli
typedef void (APIENTRY *glLightModelivFunc)(GLenum pname, GLint* params);
extern glLightModelivFunc _glLightModeliv;
#define glLightModeliv VE_ASSERT(_glLightModeliv);_glLightModeliv
typedef void (APIENTRY *glLineStippleFunc)(GLint factor, GLushort pattern);
extern glLineStippleFunc _glLineStipple;
#define glLineStipple VE_ASSERT(_glLineStipple);_glLineStipple
typedef void (APIENTRY *glMaterialfFunc)(GLenum face, GLenum pname, GLfloat param);
extern glMaterialfFunc _glMaterialf;
#define glMaterialf VE_ASSERT(_glMaterialf);_glMaterialf
typedef void (APIENTRY *glMaterialfvFunc)(GLenum face, GLenum pname, GLfloat* params);
extern glMaterialfvFunc _glMaterialfv;
#define glMaterialfv VE_ASSERT(_glMaterialfv);_glMaterialfv
typedef void (APIENTRY *glMaterialiFunc)(GLenum face, GLenum pname, GLint param);
extern glMaterialiFunc _glMateriali;
#define glMateriali VE_ASSERT(_glMateriali);_glMateriali
typedef void (APIENTRY *glMaterialivFunc)(GLenum face, GLenum pname, GLint* params);
extern glMaterialivFunc _glMaterialiv;
#define glMaterialiv VE_ASSERT(_glMaterialiv);_glMaterialiv
typedef void (APIENTRY *glPolygonStippleFunc)(GLubyte* mask);
extern glPolygonStippleFunc _glPolygonStipple;
#define glPolygonStipple VE_ASSERT(_glPolygonStipple);_glPolygonStipple
typedef void (APIENTRY *glShadeModelFunc)(GLenum mode);
extern glShadeModelFunc _glShadeModel;
#define glShadeModel VE_ASSERT(_glShadeModel);_glShadeModel
typedef void (APIENTRY *glTexEnvfFunc)(GLenum target, GLenum pname, GLfloat param);
extern glTexEnvfFunc _glTexEnvf;
#define glTexEnvf VE_ASSERT(_glTexEnvf);_glTexEnvf
typedef void (APIENTRY *glTexEnvfvFunc)(GLenum target, GLenum pname, GLfloat* params);
extern glTexEnvfvFunc _glTexEnvfv;
#define glTexEnvfv VE_ASSERT(_glTexEnvfv);_glTexEnvfv
typedef void (APIENTRY *glTexEnviFunc)(GLenum target, GLenum pname, GLint param);
extern glTexEnviFunc _glTexEnvi;
#define glTexEnvi VE_ASSERT(_glTexEnvi);_glTexEnvi
typedef void (APIENTRY *glTexEnvivFunc)(GLenum target, GLenum pname, GLint* params);
extern glTexEnvivFunc _glTexEnviv;
#define glTexEnviv VE_ASSERT(_glTexEnviv);_glTexEnviv
typedef void (APIENTRY *glTexGendFunc)(GLenum coord, GLenum pname, GLdouble param);
extern glTexGendFunc _glTexGend;
#define glTexGend VE_ASSERT(_glTexGend);_glTexGend
typedef void (APIENTRY *glTexGendvFunc)(GLenum coord, GLenum pname, GLdouble* params);
extern glTexGendvFunc _glTexGendv;
#define glTexGendv VE_ASSERT(_glTexGendv);_glTexGendv
typedef void (APIENTRY *glTexGenfFunc)(GLenum coord, GLenum pname, GLfloat param);
extern glTexGenfFunc _glTexGenf;
#define glTexGenf VE_ASSERT(_glTexGenf);_glTexGenf
typedef void (APIENTRY *glTexGenfvFunc)(GLenum coord, GLenum pname, GLfloat* params);
extern glTexGenfvFunc _glTexGenfv;
#define glTexGenfv VE_ASSERT(_glTexGenfv);_glTexGenfv
typedef void (APIENTRY *glTexGeniFunc)(GLenum coord, GLenum pname, GLint param);
extern glTexGeniFunc _glTexGeni;
#define glTexGeni VE_ASSERT(_glTexGeni);_glTexGeni
typedef void (APIENTRY *glTexGenivFunc)(GLenum coord, GLenum pname, GLint* params);
extern glTexGenivFunc _glTexGeniv;
#define glTexGeniv VE_ASSERT(_glTexGeniv);_glTexGeniv
typedef void (APIENTRY *glFeedbackBufferFunc)(GLsizei size, GLenum type, GLfloat* buffer);
extern glFeedbackBufferFunc _glFeedbackBuffer;
#define glFeedbackBuffer VE_ASSERT(_glFeedbackBuffer);_glFeedbackBuffer
typedef void (APIENTRY *glSelectBufferFunc)(GLsizei size, GLuint* buffer);
extern glSelectBufferFunc _glSelectBuffer;
#define glSelectBuffer VE_ASSERT(_glSelectBuffer);_glSelectBuffer
typedef GLint (APIENTRY *glRenderModeFunc)(GLenum mode);
extern glRenderModeFunc _glRenderMode;
#define glRenderMode _glRenderMode
typedef void (APIENTRY *glInitNamesFunc)();
extern glInitNamesFunc _glInitNames;
#define glInitNames VE_ASSERT(_glInitNames);_glInitNames
typedef void (APIENTRY *glLoadNameFunc)(GLuint name);
extern glLoadNameFunc _glLoadName;
#define glLoadName VE_ASSERT(_glLoadName);_glLoadName
typedef void (APIENTRY *glPassThroughFunc)(GLfloat token);
extern glPassThroughFunc _glPassThrough;
#define glPassThrough VE_ASSERT(_glPassThrough);_glPassThrough
typedef void (APIENTRY *glPopNameFunc)();
extern glPopNameFunc _glPopName;
#define glPopName VE_ASSERT(_glPopName);_glPopName
typedef void (APIENTRY *glPushNameFunc)(GLuint name);
extern glPushNameFunc _glPushName;
#define glPushName VE_ASSERT(_glPushName);_glPushName
typedef void (APIENTRY *glClearAccumFunc)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
extern glClearAccumFunc _glClearAccum;
#define glClearAccum VE_ASSERT(_glClearAccum);_glClearAccum
typedef void (APIENTRY *glClearIndexFunc)(GLfloat c);
extern glClearIndexFunc _glClearIndex;
#define glClearIndex VE_ASSERT(_glClearIndex);_glClearIndex
typedef void (APIENTRY *glIndexMaskFunc)(GLuint mask);
extern glIndexMaskFunc _glIndexMask;
#define glIndexMask VE_ASSERT(_glIndexMask);_glIndexMask
typedef void (APIENTRY *glAccumFunc)(GLenum op, GLfloat value);
extern glAccumFunc _glAccum;
#define glAccum VE_ASSERT(_glAccum);_glAccum
typedef void (APIENTRY *glPopAttribFunc)();
extern glPopAttribFunc _glPopAttrib;
#define glPopAttrib VE_ASSERT(_glPopAttrib);_glPopAttrib
typedef void (APIENTRY *glPushAttribFunc)(GLbitfield mask);
extern glPushAttribFunc _glPushAttrib;
#define glPushAttrib VE_ASSERT(_glPushAttrib);_glPushAttrib
typedef void (APIENTRY *glMap1dFunc)(GLenum target, GLdouble u1, GLdouble u2, GLint stride, GLint order, GLdouble* points);
extern glMap1dFunc _glMap1d;
#define glMap1d VE_ASSERT(_glMap1d);_glMap1d
typedef void (APIENTRY *glMap1fFunc)(GLenum target, GLfloat u1, GLfloat u2, GLint stride, GLint order, GLfloat* points);
extern glMap1fFunc _glMap1f;
#define glMap1f VE_ASSERT(_glMap1f);_glMap1f
typedef void (APIENTRY *glMap2dFunc)(GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, GLdouble* points);
extern glMap2dFunc _glMap2d;
#define glMap2d VE_ASSERT(_glMap2d);_glMap2d
typedef void (APIENTRY *glMap2fFunc)(GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, GLfloat* points);
extern glMap2fFunc _glMap2f;
#define glMap2f VE_ASSERT(_glMap2f);_glMap2f
typedef void (APIENTRY *glMapGrid1dFunc)(GLint un, GLdouble u1, GLdouble u2);
extern glMapGrid1dFunc _glMapGrid1d;
#define glMapGrid1d VE_ASSERT(_glMapGrid1d);_glMapGrid1d
typedef void (APIENTRY *glMapGrid1fFunc)(GLint un, GLfloat u1, GLfloat u2);
extern glMapGrid1fFunc _glMapGrid1f;
#define glMapGrid1f VE_ASSERT(_glMapGrid1f);_glMapGrid1f
typedef void (APIENTRY *glMapGrid2dFunc)(GLint un, GLdouble u1, GLdouble u2, GLint vn, GLdouble v1, GLdouble v2);
extern glMapGrid2dFunc _glMapGrid2d;
#define glMapGrid2d VE_ASSERT(_glMapGrid2d);_glMapGrid2d
typedef void (APIENTRY *glMapGrid2fFunc)(GLint un, GLfloat u1, GLfloat u2, GLint vn, GLfloat v1, GLfloat v2);
extern glMapGrid2fFunc _glMapGrid2f;
#define glMapGrid2f VE_ASSERT(_glMapGrid2f);_glMapGrid2f
typedef void (APIENTRY *glEvalCoord1dFunc)(GLdouble u);
extern glEvalCoord1dFunc _glEvalCoord1d;
#define glEvalCoord1d VE_ASSERT(_glEvalCoord1d);_glEvalCoord1d
typedef void (APIENTRY *glEvalCoord1dvFunc)(GLdouble* u);
extern glEvalCoord1dvFunc _glEvalCoord1dv;
#define glEvalCoord1dv VE_ASSERT(_glEvalCoord1dv);_glEvalCoord1dv
typedef void (APIENTRY *glEvalCoord1fFunc)(GLfloat u);
extern glEvalCoord1fFunc _glEvalCoord1f;
#define glEvalCoord1f VE_ASSERT(_glEvalCoord1f);_glEvalCoord1f
typedef void (APIENTRY *glEvalCoord1fvFunc)(GLfloat* u);
extern glEvalCoord1fvFunc _glEvalCoord1fv;
#define glEvalCoord1fv VE_ASSERT(_glEvalCoord1fv);_glEvalCoord1fv
typedef void (APIENTRY *glEvalCoord2dFunc)(GLdouble u, GLdouble v);
extern glEvalCoord2dFunc _glEvalCoord2d;
#define glEvalCoord2d VE_ASSERT(_glEvalCoord2d);_glEvalCoord2d
typedef void (APIENTRY *glEvalCoord2dvFunc)(GLdouble* u);
extern glEvalCoord2dvFunc _glEvalCoord2dv;
#define glEvalCoord2dv VE_ASSERT(_glEvalCoord2dv);_glEvalCoord2dv
typedef void (APIENTRY *glEvalCoord2fFunc)(GLfloat u, GLfloat v);
extern glEvalCoord2fFunc _glEvalCoord2f;
#define glEvalCoord2f VE_ASSERT(_glEvalCoord2f);_glEvalCoord2f
typedef void (APIENTRY *glEvalCoord2fvFunc)(GLfloat* u);
extern glEvalCoord2fvFunc _glEvalCoord2fv;
#define glEvalCoord2fv VE_ASSERT(_glEvalCoord2fv);_glEvalCoord2fv
typedef void (APIENTRY *glEvalMesh1Func)(GLenum mode, GLint i1, GLint i2);
extern glEvalMesh1Func _glEvalMesh1;
#define glEvalMesh1 VE_ASSERT(_glEvalMesh1);_glEvalMesh1
typedef void (APIENTRY *glEvalPoint1Func)(GLint i);
extern glEvalPoint1Func _glEvalPoint1;
#define glEvalPoint1 VE_ASSERT(_glEvalPoint1);_glEvalPoint1
typedef void (APIENTRY *glEvalMesh2Func)(GLenum mode, GLint i1, GLint i2, GLint j1, GLint j2);
extern glEvalMesh2Func _glEvalMesh2;
#define glEvalMesh2 VE_ASSERT(_glEvalMesh2);_glEvalMesh2
typedef void (APIENTRY *glEvalPoint2Func)(GLint i, GLint j);
extern glEvalPoint2Func _glEvalPoint2;
#define glEvalPoint2 VE_ASSERT(_glEvalPoint2);_glEvalPoint2
typedef void (APIENTRY *glAlphaFuncFunc)(GLenum func, GLfloat ref);
extern glAlphaFuncFunc _glAlphaFunc;
#define glAlphaFunc VE_ASSERT(_glAlphaFunc);_glAlphaFunc
typedef void (APIENTRY *glPixelZoomFunc)(GLfloat xfactor, GLfloat yfactor);
extern glPixelZoomFunc _glPixelZoom;
#define glPixelZoom VE_ASSERT(_glPixelZoom);_glPixelZoom
typedef void (APIENTRY *glPixelTransferfFunc)(GLenum pname, GLfloat param);
extern glPixelTransferfFunc _glPixelTransferf;
#define glPixelTransferf VE_ASSERT(_glPixelTransferf);_glPixelTransferf
typedef void (APIENTRY *glPixelTransferiFunc)(GLenum pname, GLint param);
extern glPixelTransferiFunc _glPixelTransferi;
#define glPixelTransferi VE_ASSERT(_glPixelTransferi);_glPixelTransferi
typedef void (APIENTRY *glPixelMapfvFunc)(GLenum map, GLint mapsize, GLfloat* values);
extern glPixelMapfvFunc _glPixelMapfv;
#define glPixelMapfv VE_ASSERT(_glPixelMapfv);_glPixelMapfv
typedef void (APIENTRY *glPixelMapuivFunc)(GLenum map, GLint mapsize, GLuint* values);
extern glPixelMapuivFunc _glPixelMapuiv;
#define glPixelMapuiv VE_ASSERT(_glPixelMapuiv);_glPixelMapuiv
typedef void (APIENTRY *glPixelMapusvFunc)(GLenum map, GLint mapsize, GLushort* values);
extern glPixelMapusvFunc _glPixelMapusv;
#define glPixelMapusv VE_ASSERT(_glPixelMapusv);_glPixelMapusv
typedef void (APIENTRY *glCopyPixelsFunc)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum type);
extern glCopyPixelsFunc _glCopyPixels;
#define glCopyPixels VE_ASSERT(_glCopyPixels);_glCopyPixels
typedef void (APIENTRY *glDrawPixelsFunc)(GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid* pixels);
extern glDrawPixelsFunc _glDrawPixels;
#define glDrawPixels VE_ASSERT(_glDrawPixels);_glDrawPixels
typedef void (APIENTRY *glGetClipPlaneFunc)(GLenum plane, GLdouble* equation);
extern glGetClipPlaneFunc _glGetClipPlane;
#define glGetClipPlane VE_ASSERT(_glGetClipPlane);_glGetClipPlane
typedef void (APIENTRY *glGetLightfvFunc)(GLenum light, GLenum pname, GLfloat* params);
extern glGetLightfvFunc _glGetLightfv;
#define glGetLightfv VE_ASSERT(_glGetLightfv);_glGetLightfv
typedef void (APIENTRY *glGetLightivFunc)(GLenum light, GLenum pname, GLint* params);
extern glGetLightivFunc _glGetLightiv;
#define glGetLightiv VE_ASSERT(_glGetLightiv);_glGetLightiv
typedef void (APIENTRY *glGetMapdvFunc)(GLenum target, GLenum query, GLdouble* v);
extern glGetMapdvFunc _glGetMapdv;
#define glGetMapdv VE_ASSERT(_glGetMapdv);_glGetMapdv
typedef void (APIENTRY *glGetMapfvFunc)(GLenum target, GLenum query, GLfloat* v);
extern glGetMapfvFunc _glGetMapfv;
#define glGetMapfv VE_ASSERT(_glGetMapfv);_glGetMapfv
typedef void (APIENTRY *glGetMapivFunc)(GLenum target, GLenum query, GLint* v);
extern glGetMapivFunc _glGetMapiv;
#define glGetMapiv VE_ASSERT(_glGetMapiv);_glGetMapiv
typedef void (APIENTRY *glGetMaterialfvFunc)(GLenum face, GLenum pname, GLfloat* params);
extern glGetMaterialfvFunc _glGetMaterialfv;
#define glGetMaterialfv VE_ASSERT(_glGetMaterialfv);_glGetMaterialfv
typedef void (APIENTRY *glGetMaterialivFunc)(GLenum face, GLenum pname, GLint* params);
extern glGetMaterialivFunc _glGetMaterialiv;
#define glGetMaterialiv VE_ASSERT(_glGetMaterialiv);_glGetMaterialiv
typedef void (APIENTRY *glGetPixelMapfvFunc)(GLenum map, GLfloat* values);
extern glGetPixelMapfvFunc _glGetPixelMapfv;
#define glGetPixelMapfv VE_ASSERT(_glGetPixelMapfv);_glGetPixelMapfv
typedef void (APIENTRY *glGetPixelMapuivFunc)(GLenum map, GLuint* values);
extern glGetPixelMapuivFunc _glGetPixelMapuiv;
#define glGetPixelMapuiv VE_ASSERT(_glGetPixelMapuiv);_glGetPixelMapuiv
typedef void (APIENTRY *glGetPixelMapusvFunc)(GLenum map, GLushort* values);
extern glGetPixelMapusvFunc _glGetPixelMapusv;
#define glGetPixelMapusv VE_ASSERT(_glGetPixelMapusv);_glGetPixelMapusv
typedef void (APIENTRY *glGetPolygonStippleFunc)(GLubyte* mask);
extern glGetPolygonStippleFunc _glGetPolygonStipple;
#define glGetPolygonStipple VE_ASSERT(_glGetPolygonStipple);_glGetPolygonStipple
typedef void (APIENTRY *glGetTexEnvfvFunc)(GLenum target, GLenum pname, GLfloat* params);
extern glGetTexEnvfvFunc _glGetTexEnvfv;
#define glGetTexEnvfv VE_ASSERT(_glGetTexEnvfv);_glGetTexEnvfv
typedef void (APIENTRY *glGetTexEnvivFunc)(GLenum target, GLenum pname, GLint* params);
extern glGetTexEnvivFunc _glGetTexEnviv;
#define glGetTexEnviv VE_ASSERT(_glGetTexEnviv);_glGetTexEnviv
typedef void (APIENTRY *glGetTexGendvFunc)(GLenum coord, GLenum pname, GLdouble* params);
extern glGetTexGendvFunc _glGetTexGendv;
#define glGetTexGendv VE_ASSERT(_glGetTexGendv);_glGetTexGendv
typedef void (APIENTRY *glGetTexGenfvFunc)(GLenum coord, GLenum pname, GLfloat* params);
extern glGetTexGenfvFunc _glGetTexGenfv;
#define glGetTexGenfv VE_ASSERT(_glGetTexGenfv);_glGetTexGenfv
typedef void (APIENTRY *glGetTexGenivFunc)(GLenum coord, GLenum pname, GLint* params);
extern glGetTexGenivFunc _glGetTexGeniv;
#define glGetTexGeniv VE_ASSERT(_glGetTexGeniv);_glGetTexGeniv
typedef GLboolean (APIENTRY *glIsListFunc)(GLuint list);
extern glIsListFunc _glIsList;
#define glIsList _glIsList
typedef void (APIENTRY *glFrustumFunc)(GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
extern glFrustumFunc _glFrustum;
#define glFrustum VE_ASSERT(_glFrustum);_glFrustum
typedef void (APIENTRY *glLoadIdentityFunc)();
extern glLoadIdentityFunc _glLoadIdentity;
#define glLoadIdentity VE_ASSERT(_glLoadIdentity);_glLoadIdentity
typedef void (APIENTRY *glLoadMatrixfFunc)(GLfloat* m);
extern glLoadMatrixfFunc _glLoadMatrixf;
#define glLoadMatrixf VE_ASSERT(_glLoadMatrixf);_glLoadMatrixf
typedef void (APIENTRY *glLoadMatrixdFunc)(GLdouble* m);
extern glLoadMatrixdFunc _glLoadMatrixd;
#define glLoadMatrixd VE_ASSERT(_glLoadMatrixd);_glLoadMatrixd
typedef void (APIENTRY *glMatrixModeFunc)(GLenum mode);
extern glMatrixModeFunc _glMatrixMode;
#define glMatrixMode VE_ASSERT(_glMatrixMode);_glMatrixMode
typedef void (APIENTRY *glMultMatrixfFunc)(GLfloat* m);
extern glMultMatrixfFunc _glMultMatrixf;
#define glMultMatrixf VE_ASSERT(_glMultMatrixf);_glMultMatrixf
typedef void (APIENTRY *glMultMatrixdFunc)(GLdouble* m);
extern glMultMatrixdFunc _glMultMatrixd;
#define glMultMatrixd VE_ASSERT(_glMultMatrixd);_glMultMatrixd
typedef void (APIENTRY *glOrthoFunc)(GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
extern glOrthoFunc _glOrtho;
#define glOrtho VE_ASSERT(_glOrtho);_glOrtho
typedef void (APIENTRY *glPopMatrixFunc)();
extern glPopMatrixFunc _glPopMatrix;
#define glPopMatrix VE_ASSERT(_glPopMatrix);_glPopMatrix
typedef void (APIENTRY *glPushMatrixFunc)();
extern glPushMatrixFunc _glPushMatrix;
#define glPushMatrix VE_ASSERT(_glPushMatrix);_glPushMatrix
typedef void (APIENTRY *glRotatedFunc)(GLdouble angle, GLdouble x, GLdouble y, GLdouble z);
extern glRotatedFunc _glRotated;
#define glRotated VE_ASSERT(_glRotated);_glRotated
typedef void (APIENTRY *glRotatefFunc)(GLfloat angle, GLfloat x, GLfloat y, GLfloat z);
extern glRotatefFunc _glRotatef;
#define glRotatef VE_ASSERT(_glRotatef);_glRotatef
typedef void (APIENTRY *glScaledFunc)(GLdouble x, GLdouble y, GLdouble z);
extern glScaledFunc _glScaled;
#define glScaled VE_ASSERT(_glScaled);_glScaled
typedef void (APIENTRY *glScalefFunc)(GLfloat x, GLfloat y, GLfloat z);
extern glScalefFunc _glScalef;
#define glScalef VE_ASSERT(_glScalef);_glScalef
typedef void (APIENTRY *glTranslatedFunc)(GLdouble x, GLdouble y, GLdouble z);
extern glTranslatedFunc _glTranslated;
#define glTranslated VE_ASSERT(_glTranslated);_glTranslated
typedef void (APIENTRY *glTranslatefFunc)(GLfloat x, GLfloat y, GLfloat z);
extern glTranslatefFunc _glTranslatef;
#define glTranslatef VE_ASSERT(_glTranslatef);_glTranslatef
typedef void (APIENTRY *glDrawArraysFunc)(GLenum mode, GLint first, GLsizei count);
extern glDrawArraysFunc _glDrawArrays;
#define glDrawArrays VE_ASSERT(_glDrawArrays);_glDrawArrays
typedef void (APIENTRY *glDrawElementsFunc)(GLenum mode, GLsizei count, GLenum type, GLvoid* indices);
extern glDrawElementsFunc _glDrawElements;
#define glDrawElements VE_ASSERT(_glDrawElements);_glDrawElements
typedef void (APIENTRY *glGetPointervFunc)(GLenum pname, GLvoid** params);
extern glGetPointervFunc _glGetPointerv;
#define glGetPointerv VE_ASSERT(_glGetPointerv);_glGetPointerv
typedef void (APIENTRY *glPolygonOffsetFunc)(GLfloat factor, GLfloat units);
extern glPolygonOffsetFunc _glPolygonOffset;
#define glPolygonOffset VE_ASSERT(_glPolygonOffset);_glPolygonOffset
typedef void (APIENTRY *glCopyTexImage1DFunc)(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
extern glCopyTexImage1DFunc _glCopyTexImage1D;
#define glCopyTexImage1D VE_ASSERT(_glCopyTexImage1D);_glCopyTexImage1D
typedef void (APIENTRY *glCopyTexImage2DFunc)(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
extern glCopyTexImage2DFunc _glCopyTexImage2D;
#define glCopyTexImage2D VE_ASSERT(_glCopyTexImage2D);_glCopyTexImage2D
typedef void (APIENTRY *glCopyTexSubImage1DFunc)(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
extern glCopyTexSubImage1DFunc _glCopyTexSubImage1D;
#define glCopyTexSubImage1D VE_ASSERT(_glCopyTexSubImage1D);_glCopyTexSubImage1D
typedef void (APIENTRY *glCopyTexSubImage2DFunc)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
extern glCopyTexSubImage2DFunc _glCopyTexSubImage2D;
#define glCopyTexSubImage2D VE_ASSERT(_glCopyTexSubImage2D);_glCopyTexSubImage2D
typedef void (APIENTRY *glTexSubImage1DFunc)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, GLvoid* pixels);
extern glTexSubImage1DFunc _glTexSubImage1D;
#define glTexSubImage1D VE_ASSERT(_glTexSubImage1D);_glTexSubImage1D
typedef void (APIENTRY *glTexSubImage2DFunc)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid* pixels);
extern glTexSubImage2DFunc _glTexSubImage2D;
#define glTexSubImage2D VE_ASSERT(_glTexSubImage2D);_glTexSubImage2D
typedef void (APIENTRY *glBindTextureFunc)(GLenum target, GLuint texture);
extern glBindTextureFunc _glBindTexture;
#define glBindTexture VE_ASSERT(_glBindTexture);_glBindTexture
typedef void (APIENTRY *glDeleteTexturesFunc)(GLsizei n, GLuint* textures);
extern glDeleteTexturesFunc _glDeleteTextures;
#define glDeleteTextures VE_ASSERT(_glDeleteTextures);_glDeleteTextures
typedef void (APIENTRY *glGenTexturesFunc)(GLsizei n, GLuint* textures);
extern glGenTexturesFunc _glGenTextures;
#define glGenTextures VE_ASSERT(_glGenTextures);_glGenTextures
typedef GLboolean (APIENTRY *glIsTextureFunc)(GLuint texture);
extern glIsTextureFunc _glIsTexture;
#define glIsTexture _glIsTexture
typedef void (APIENTRY *glArrayElementFunc)(GLint i);
extern glArrayElementFunc _glArrayElement;
#define glArrayElement VE_ASSERT(_glArrayElement);_glArrayElement
typedef void (APIENTRY *glColorPointerFunc)(GLint size, GLenum type, GLsizei stride, GLvoid* pointer);
extern glColorPointerFunc _glColorPointer;
#define glColorPointer VE_ASSERT(_glColorPointer);_glColorPointer
typedef void (APIENTRY *glDisableClientStateFunc)(GLenum array);
extern glDisableClientStateFunc _glDisableClientState;
#define glDisableClientState VE_ASSERT(_glDisableClientState);_glDisableClientState
typedef void (APIENTRY *glEdgeFlagPointerFunc)(GLsizei stride, GLvoid* pointer);
extern glEdgeFlagPointerFunc _glEdgeFlagPointer;
#define glEdgeFlagPointer VE_ASSERT(_glEdgeFlagPointer);_glEdgeFlagPointer
typedef void (APIENTRY *glEnableClientStateFunc)(GLenum array);
extern glEnableClientStateFunc _glEnableClientState;
#define glEnableClientState VE_ASSERT(_glEnableClientState);_glEnableClientState
typedef void (APIENTRY *glIndexPointerFunc)(GLenum type, GLsizei stride, GLvoid* pointer);
extern glIndexPointerFunc _glIndexPointer;
#define glIndexPointer VE_ASSERT(_glIndexPointer);_glIndexPointer
typedef void (APIENTRY *glInterleavedArraysFunc)(GLenum format, GLsizei stride, GLvoid* pointer);
extern glInterleavedArraysFunc _glInterleavedArrays;
#define glInterleavedArrays VE_ASSERT(_glInterleavedArrays);_glInterleavedArrays
typedef void (APIENTRY *glNormalPointerFunc)(GLenum type, GLsizei stride, GLvoid* pointer);
extern glNormalPointerFunc _glNormalPointer;
#define glNormalPointer VE_ASSERT(_glNormalPointer);_glNormalPointer
typedef void (APIENTRY *glTexCoordPointerFunc)(GLint size, GLenum type, GLsizei stride, GLvoid* pointer);
extern glTexCoordPointerFunc _glTexCoordPointer;
#define glTexCoordPointer VE_ASSERT(_glTexCoordPointer);_glTexCoordPointer
typedef void (APIENTRY *glVertexPointerFunc)(GLint size, GLenum type, GLsizei stride, GLvoid* pointer);
extern glVertexPointerFunc _glVertexPointer;
#define glVertexPointer VE_ASSERT(_glVertexPointer);_glVertexPointer
typedef GLboolean (APIENTRY *glAreTexturesResidentFunc)(GLsizei n, GLuint* textures, GLboolean* residences);
extern glAreTexturesResidentFunc _glAreTexturesResident;
#define glAreTexturesResident _glAreTexturesResident
typedef void (APIENTRY *glPrioritizeTexturesFunc)(GLsizei n, GLuint* textures, GLfloat* priorities);
extern glPrioritizeTexturesFunc _glPrioritizeTextures;
#define glPrioritizeTextures VE_ASSERT(_glPrioritizeTextures);_glPrioritizeTextures
typedef void (APIENTRY *glIndexubFunc)(GLubyte c);
extern glIndexubFunc _glIndexub;
#define glIndexub VE_ASSERT(_glIndexub);_glIndexub
typedef void (APIENTRY *glIndexubvFunc)(GLubyte* c);
extern glIndexubvFunc _glIndexubv;
#define glIndexubv VE_ASSERT(_glIndexubv);_glIndexubv
typedef void (APIENTRY *glPopClientAttribFunc)();
extern glPopClientAttribFunc _glPopClientAttrib;
#define glPopClientAttrib VE_ASSERT(_glPopClientAttrib);_glPopClientAttrib
typedef void (APIENTRY *glPushClientAttribFunc)(GLbitfield mask);
extern glPushClientAttribFunc _glPushClientAttrib;
#define glPushClientAttrib VE_ASSERT(_glPushClientAttrib);_glPushClientAttrib
typedef void (APIENTRY *glBlendColorFunc)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
extern glBlendColorFunc _glBlendColor;
#define glBlendColor VE_ASSERT(_glBlendColor);_glBlendColor
typedef void (APIENTRY *glBlendEquationFunc)(GLenum mode);
extern glBlendEquationFunc _glBlendEquation;
#define glBlendEquation VE_ASSERT(_glBlendEquation);_glBlendEquation
typedef void (APIENTRY *glDrawRangeElementsFunc)(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, GLvoid* indices);
extern glDrawRangeElementsFunc _glDrawRangeElements;
#define glDrawRangeElements VE_ASSERT(_glDrawRangeElements);_glDrawRangeElements
typedef void (APIENTRY *glTexImage3DFunc)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, GLvoid* pixels);
extern glTexImage3DFunc _glTexImage3D;
#define glTexImage3D VE_ASSERT(_glTexImage3D);_glTexImage3D
typedef void (APIENTRY *glTexSubImage3DFunc)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLvoid* pixels);
extern glTexSubImage3DFunc _glTexSubImage3D;
#define glTexSubImage3D VE_ASSERT(_glTexSubImage3D);_glTexSubImage3D
typedef void (APIENTRY *glCopyTexSubImage3DFunc)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
extern glCopyTexSubImage3DFunc _glCopyTexSubImage3D;
#define glCopyTexSubImage3D VE_ASSERT(_glCopyTexSubImage3D);_glCopyTexSubImage3D
typedef void (APIENTRY *glColorTableFunc)(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, GLvoid* table);
extern glColorTableFunc _glColorTable;
#define glColorTable VE_ASSERT(_glColorTable);_glColorTable
typedef void (APIENTRY *glColorTableParameterfvFunc)(GLenum target, GLenum pname, GLfloat* params);
extern glColorTableParameterfvFunc _glColorTableParameterfv;
#define glColorTableParameterfv VE_ASSERT(_glColorTableParameterfv);_glColorTableParameterfv
typedef void (APIENTRY *glColorTableParameterivFunc)(GLenum target, GLenum pname, GLint* params);
extern glColorTableParameterivFunc _glColorTableParameteriv;
#define glColorTableParameteriv VE_ASSERT(_glColorTableParameteriv);_glColorTableParameteriv
typedef void (APIENTRY *glCopyColorTableFunc)(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
extern glCopyColorTableFunc _glCopyColorTable;
#define glCopyColorTable VE_ASSERT(_glCopyColorTable);_glCopyColorTable
typedef void (APIENTRY *glGetColorTableFunc)(GLenum target, GLenum format, GLenum type, GLvoid* table);
extern glGetColorTableFunc _glGetColorTable;
#define glGetColorTable VE_ASSERT(_glGetColorTable);_glGetColorTable
typedef void (APIENTRY *glGetColorTableParameterfvFunc)(GLenum target, GLenum pname, GLfloat* params);
extern glGetColorTableParameterfvFunc _glGetColorTableParameterfv;
#define glGetColorTableParameterfv VE_ASSERT(_glGetColorTableParameterfv);_glGetColorTableParameterfv
typedef void (APIENTRY *glGetColorTableParameterivFunc)(GLenum target, GLenum pname, GLint* params);
extern glGetColorTableParameterivFunc _glGetColorTableParameteriv;
#define glGetColorTableParameteriv VE_ASSERT(_glGetColorTableParameteriv);_glGetColorTableParameteriv
typedef void (APIENTRY *glColorSubTableFunc)(GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, GLvoid* data);
extern glColorSubTableFunc _glColorSubTable;
#define glColorSubTable VE_ASSERT(_glColorSubTable);_glColorSubTable
typedef void (APIENTRY *glCopyColorSubTableFunc)(GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);
extern glCopyColorSubTableFunc _glCopyColorSubTable;
#define glCopyColorSubTable VE_ASSERT(_glCopyColorSubTable);_glCopyColorSubTable
typedef void (APIENTRY *glConvolutionFilter1DFunc)(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, GLvoid* image);
extern glConvolutionFilter1DFunc _glConvolutionFilter1D;
#define glConvolutionFilter1D VE_ASSERT(_glConvolutionFilter1D);_glConvolutionFilter1D
typedef void (APIENTRY *glConvolutionFilter2DFunc)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid* image);
extern glConvolutionFilter2DFunc _glConvolutionFilter2D;
#define glConvolutionFilter2D VE_ASSERT(_glConvolutionFilter2D);_glConvolutionFilter2D
typedef void (APIENTRY *glConvolutionParameterfFunc)(GLenum target, GLenum pname, GLfloat params);
extern glConvolutionParameterfFunc _glConvolutionParameterf;
#define glConvolutionParameterf VE_ASSERT(_glConvolutionParameterf);_glConvolutionParameterf
typedef void (APIENTRY *glConvolutionParameterfvFunc)(GLenum target, GLenum pname, GLfloat* params);
extern glConvolutionParameterfvFunc _glConvolutionParameterfv;
#define glConvolutionParameterfv VE_ASSERT(_glConvolutionParameterfv);_glConvolutionParameterfv
typedef void (APIENTRY *glConvolutionParameteriFunc)(GLenum target, GLenum pname, GLint params);
extern glConvolutionParameteriFunc _glConvolutionParameteri;
#define glConvolutionParameteri VE_ASSERT(_glConvolutionParameteri);_glConvolutionParameteri
typedef void (APIENTRY *glConvolutionParameterivFunc)(GLenum target, GLenum pname, GLint* params);
extern glConvolutionParameterivFunc _glConvolutionParameteriv;
#define glConvolutionParameteriv VE_ASSERT(_glConvolutionParameteriv);_glConvolutionParameteriv
typedef void (APIENTRY *glCopyConvolutionFilter1DFunc)(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
extern glCopyConvolutionFilter1DFunc _glCopyConvolutionFilter1D;
#define glCopyConvolutionFilter1D VE_ASSERT(_glCopyConvolutionFilter1D);_glCopyConvolutionFilter1D
typedef void (APIENTRY *glCopyConvolutionFilter2DFunc)(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);
extern glCopyConvolutionFilter2DFunc _glCopyConvolutionFilter2D;
#define glCopyConvolutionFilter2D VE_ASSERT(_glCopyConvolutionFilter2D);_glCopyConvolutionFilter2D
typedef void (APIENTRY *glGetConvolutionFilterFunc)(GLenum target, GLenum format, GLenum type, GLvoid* image);
extern glGetConvolutionFilterFunc _glGetConvolutionFilter;
#define glGetConvolutionFilter VE_ASSERT(_glGetConvolutionFilter);_glGetConvolutionFilter
typedef void (APIENTRY *glGetConvolutionParameterfvFunc)(GLenum target, GLenum pname, GLfloat* params);
extern glGetConvolutionParameterfvFunc _glGetConvolutionParameterfv;
#define glGetConvolutionParameterfv VE_ASSERT(_glGetConvolutionParameterfv);_glGetConvolutionParameterfv
typedef void (APIENTRY *glGetConvolutionParameterivFunc)(GLenum target, GLenum pname, GLint* params);
extern glGetConvolutionParameterivFunc _glGetConvolutionParameteriv;
#define glGetConvolutionParameteriv VE_ASSERT(_glGetConvolutionParameteriv);_glGetConvolutionParameteriv
typedef void (APIENTRY *glGetSeparableFilterFunc)(GLenum target, GLenum format, GLenum type, GLvoid* row, GLvoid* column, GLvoid* span);
extern glGetSeparableFilterFunc _glGetSeparableFilter;
#define glGetSeparableFilter VE_ASSERT(_glGetSeparableFilter);_glGetSeparableFilter
typedef void (APIENTRY *glSeparableFilter2DFunc)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid* row, GLvoid* column);
extern glSeparableFilter2DFunc _glSeparableFilter2D;
#define glSeparableFilter2D VE_ASSERT(_glSeparableFilter2D);_glSeparableFilter2D
typedef void (APIENTRY *glGetHistogramFunc)(GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid* values);
extern glGetHistogramFunc _glGetHistogram;
#define glGetHistogram VE_ASSERT(_glGetHistogram);_glGetHistogram
typedef void (APIENTRY *glGetHistogramParameterfvFunc)(GLenum target, GLenum pname, GLfloat* params);
extern glGetHistogramParameterfvFunc _glGetHistogramParameterfv;
#define glGetHistogramParameterfv VE_ASSERT(_glGetHistogramParameterfv);_glGetHistogramParameterfv
typedef void (APIENTRY *glGetHistogramParameterivFunc)(GLenum target, GLenum pname, GLint* params);
extern glGetHistogramParameterivFunc _glGetHistogramParameteriv;
#define glGetHistogramParameteriv VE_ASSERT(_glGetHistogramParameteriv);_glGetHistogramParameteriv
typedef void (APIENTRY *glGetMinmaxFunc)(GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid* values);
extern glGetMinmaxFunc _glGetMinmax;
#define glGetMinmax VE_ASSERT(_glGetMinmax);_glGetMinmax
typedef void (APIENTRY *glGetMinmaxParameterfvFunc)(GLenum target, GLenum pname, GLfloat* params);
extern glGetMinmaxParameterfvFunc _glGetMinmaxParameterfv;
#define glGetMinmaxParameterfv VE_ASSERT(_glGetMinmaxParameterfv);_glGetMinmaxParameterfv
typedef void (APIENTRY *glGetMinmaxParameterivFunc)(GLenum target, GLenum pname, GLint* params);
extern glGetMinmaxParameterivFunc _glGetMinmaxParameteriv;
#define glGetMinmaxParameteriv VE_ASSERT(_glGetMinmaxParameteriv);_glGetMinmaxParameteriv
typedef void (APIENTRY *glHistogramFunc)(GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);
extern glHistogramFunc _glHistogram;
#define glHistogram VE_ASSERT(_glHistogram);_glHistogram
typedef void (APIENTRY *glMinmaxFunc)(GLenum target, GLenum internalformat, GLboolean sink);
extern glMinmaxFunc _glMinmax;
#define glMinmax VE_ASSERT(_glMinmax);_glMinmax
typedef void (APIENTRY *glResetHistogramFunc)(GLenum target);
extern glResetHistogramFunc _glResetHistogram;
#define glResetHistogram VE_ASSERT(_glResetHistogram);_glResetHistogram
typedef void (APIENTRY *glResetMinmaxFunc)(GLenum target);
extern glResetMinmaxFunc _glResetMinmax;
#define glResetMinmax VE_ASSERT(_glResetMinmax);_glResetMinmax
typedef void (APIENTRY *glActiveTextureFunc)(GLenum texture);
extern glActiveTextureFunc _glActiveTexture;
#define glActiveTexture VE_ASSERT(_glActiveTexture);_glActiveTexture
typedef void (APIENTRY *glSampleCoverageFunc)(GLfloat value, GLboolean invert);
extern glSampleCoverageFunc _glSampleCoverage;
#define glSampleCoverage VE_ASSERT(_glSampleCoverage);_glSampleCoverage
typedef void (APIENTRY *glCompressedTexImage3DFunc)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, GLvoid* data);
extern glCompressedTexImage3DFunc _glCompressedTexImage3D;
#define glCompressedTexImage3D VE_ASSERT(_glCompressedTexImage3D);_glCompressedTexImage3D
typedef void (APIENTRY *glCompressedTexImage2DFunc)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, GLvoid* data);
extern glCompressedTexImage2DFunc _glCompressedTexImage2D;
#define glCompressedTexImage2D VE_ASSERT(_glCompressedTexImage2D);_glCompressedTexImage2D
typedef void (APIENTRY *glCompressedTexImage1DFunc)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, GLvoid* data);
extern glCompressedTexImage1DFunc _glCompressedTexImage1D;
#define glCompressedTexImage1D VE_ASSERT(_glCompressedTexImage1D);_glCompressedTexImage1D
typedef void (APIENTRY *glCompressedTexSubImage3DFunc)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, GLvoid* data);
extern glCompressedTexSubImage3DFunc _glCompressedTexSubImage3D;
#define glCompressedTexSubImage3D VE_ASSERT(_glCompressedTexSubImage3D);_glCompressedTexSubImage3D
typedef void (APIENTRY *glCompressedTexSubImage2DFunc)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, GLvoid* data);
extern glCompressedTexSubImage2DFunc _glCompressedTexSubImage2D;
#define glCompressedTexSubImage2D VE_ASSERT(_glCompressedTexSubImage2D);_glCompressedTexSubImage2D
typedef void (APIENTRY *glCompressedTexSubImage1DFunc)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, GLvoid* data);
extern glCompressedTexSubImage1DFunc _glCompressedTexSubImage1D;
#define glCompressedTexSubImage1D VE_ASSERT(_glCompressedTexSubImage1D);_glCompressedTexSubImage1D
typedef void (APIENTRY *glGetCompressedTexImageFunc)(GLenum target, GLint level, GLvoid* img);
extern glGetCompressedTexImageFunc _glGetCompressedTexImage;
#define glGetCompressedTexImage VE_ASSERT(_glGetCompressedTexImage);_glGetCompressedTexImage
typedef void (APIENTRY *glClientActiveTextureFunc)(GLenum texture);
extern glClientActiveTextureFunc _glClientActiveTexture;
#define glClientActiveTexture VE_ASSERT(_glClientActiveTexture);_glClientActiveTexture
typedef void (APIENTRY *glMultiTexCoord1dFunc)(GLenum target, GLdouble s);
extern glMultiTexCoord1dFunc _glMultiTexCoord1d;
#define glMultiTexCoord1d VE_ASSERT(_glMultiTexCoord1d);_glMultiTexCoord1d
typedef void (APIENTRY *glMultiTexCoord1dvFunc)(GLenum target, GLdouble* v);
extern glMultiTexCoord1dvFunc _glMultiTexCoord1dv;
#define glMultiTexCoord1dv VE_ASSERT(_glMultiTexCoord1dv);_glMultiTexCoord1dv
typedef void (APIENTRY *glMultiTexCoord1fFunc)(GLenum target, GLfloat s);
extern glMultiTexCoord1fFunc _glMultiTexCoord1f;
#define glMultiTexCoord1f VE_ASSERT(_glMultiTexCoord1f);_glMultiTexCoord1f
typedef void (APIENTRY *glMultiTexCoord1fvFunc)(GLenum target, GLfloat* v);
extern glMultiTexCoord1fvFunc _glMultiTexCoord1fv;
#define glMultiTexCoord1fv VE_ASSERT(_glMultiTexCoord1fv);_glMultiTexCoord1fv
typedef void (APIENTRY *glMultiTexCoord1iFunc)(GLenum target, GLint s);
extern glMultiTexCoord1iFunc _glMultiTexCoord1i;
#define glMultiTexCoord1i VE_ASSERT(_glMultiTexCoord1i);_glMultiTexCoord1i
typedef void (APIENTRY *glMultiTexCoord1ivFunc)(GLenum target, GLint* v);
extern glMultiTexCoord1ivFunc _glMultiTexCoord1iv;
#define glMultiTexCoord1iv VE_ASSERT(_glMultiTexCoord1iv);_glMultiTexCoord1iv
typedef void (APIENTRY *glMultiTexCoord1sFunc)(GLenum target, GLshort s);
extern glMultiTexCoord1sFunc _glMultiTexCoord1s;
#define glMultiTexCoord1s VE_ASSERT(_glMultiTexCoord1s);_glMultiTexCoord1s
typedef void (APIENTRY *glMultiTexCoord1svFunc)(GLenum target, GLshort* v);
extern glMultiTexCoord1svFunc _glMultiTexCoord1sv;
#define glMultiTexCoord1sv VE_ASSERT(_glMultiTexCoord1sv);_glMultiTexCoord1sv
typedef void (APIENTRY *glMultiTexCoord2dFunc)(GLenum target, GLdouble s, GLdouble t);
extern glMultiTexCoord2dFunc _glMultiTexCoord2d;
#define glMultiTexCoord2d VE_ASSERT(_glMultiTexCoord2d);_glMultiTexCoord2d
typedef void (APIENTRY *glMultiTexCoord2dvFunc)(GLenum target, GLdouble* v);
extern glMultiTexCoord2dvFunc _glMultiTexCoord2dv;
#define glMultiTexCoord2dv VE_ASSERT(_glMultiTexCoord2dv);_glMultiTexCoord2dv
typedef void (APIENTRY *glMultiTexCoord2fFunc)(GLenum target, GLfloat s, GLfloat t);
extern glMultiTexCoord2fFunc _glMultiTexCoord2f;
#define glMultiTexCoord2f VE_ASSERT(_glMultiTexCoord2f);_glMultiTexCoord2f
typedef void (APIENTRY *glMultiTexCoord2fvFunc)(GLenum target, GLfloat* v);
extern glMultiTexCoord2fvFunc _glMultiTexCoord2fv;
#define glMultiTexCoord2fv VE_ASSERT(_glMultiTexCoord2fv);_glMultiTexCoord2fv
typedef void (APIENTRY *glMultiTexCoord2iFunc)(GLenum target, GLint s, GLint t);
extern glMultiTexCoord2iFunc _glMultiTexCoord2i;
#define glMultiTexCoord2i VE_ASSERT(_glMultiTexCoord2i);_glMultiTexCoord2i
typedef void (APIENTRY *glMultiTexCoord2ivFunc)(GLenum target, GLint* v);
extern glMultiTexCoord2ivFunc _glMultiTexCoord2iv;
#define glMultiTexCoord2iv VE_ASSERT(_glMultiTexCoord2iv);_glMultiTexCoord2iv
typedef void (APIENTRY *glMultiTexCoord2sFunc)(GLenum target, GLshort s, GLshort t);
extern glMultiTexCoord2sFunc _glMultiTexCoord2s;
#define glMultiTexCoord2s VE_ASSERT(_glMultiTexCoord2s);_glMultiTexCoord2s
typedef void (APIENTRY *glMultiTexCoord2svFunc)(GLenum target, GLshort* v);
extern glMultiTexCoord2svFunc _glMultiTexCoord2sv;
#define glMultiTexCoord2sv VE_ASSERT(_glMultiTexCoord2sv);_glMultiTexCoord2sv
typedef void (APIENTRY *glMultiTexCoord3dFunc)(GLenum target, GLdouble s, GLdouble t, GLdouble r);
extern glMultiTexCoord3dFunc _glMultiTexCoord3d;
#define glMultiTexCoord3d VE_ASSERT(_glMultiTexCoord3d);_glMultiTexCoord3d
typedef void (APIENTRY *glMultiTexCoord3dvFunc)(GLenum target, GLdouble* v);
extern glMultiTexCoord3dvFunc _glMultiTexCoord3dv;
#define glMultiTexCoord3dv VE_ASSERT(_glMultiTexCoord3dv);_glMultiTexCoord3dv
typedef void (APIENTRY *glMultiTexCoord3fFunc)(GLenum target, GLfloat s, GLfloat t, GLfloat r);
extern glMultiTexCoord3fFunc _glMultiTexCoord3f;
#define glMultiTexCoord3f VE_ASSERT(_glMultiTexCoord3f);_glMultiTexCoord3f
typedef void (APIENTRY *glMultiTexCoord3fvFunc)(GLenum target, GLfloat* v);
extern glMultiTexCoord3fvFunc _glMultiTexCoord3fv;
#define glMultiTexCoord3fv VE_ASSERT(_glMultiTexCoord3fv);_glMultiTexCoord3fv
typedef void (APIENTRY *glMultiTexCoord3iFunc)(GLenum target, GLint s, GLint t, GLint r);
extern glMultiTexCoord3iFunc _glMultiTexCoord3i;
#define glMultiTexCoord3i VE_ASSERT(_glMultiTexCoord3i);_glMultiTexCoord3i
typedef void (APIENTRY *glMultiTexCoord3ivFunc)(GLenum target, GLint* v);
extern glMultiTexCoord3ivFunc _glMultiTexCoord3iv;
#define glMultiTexCoord3iv VE_ASSERT(_glMultiTexCoord3iv);_glMultiTexCoord3iv
typedef void (APIENTRY *glMultiTexCoord3sFunc)(GLenum target, GLshort s, GLshort t, GLshort r);
extern glMultiTexCoord3sFunc _glMultiTexCoord3s;
#define glMultiTexCoord3s VE_ASSERT(_glMultiTexCoord3s);_glMultiTexCoord3s
typedef void (APIENTRY *glMultiTexCoord3svFunc)(GLenum target, GLshort* v);
extern glMultiTexCoord3svFunc _glMultiTexCoord3sv;
#define glMultiTexCoord3sv VE_ASSERT(_glMultiTexCoord3sv);_glMultiTexCoord3sv
typedef void (APIENTRY *glMultiTexCoord4dFunc)(GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
extern glMultiTexCoord4dFunc _glMultiTexCoord4d;
#define glMultiTexCoord4d VE_ASSERT(_glMultiTexCoord4d);_glMultiTexCoord4d
typedef void (APIENTRY *glMultiTexCoord4dvFunc)(GLenum target, GLdouble* v);
extern glMultiTexCoord4dvFunc _glMultiTexCoord4dv;
#define glMultiTexCoord4dv VE_ASSERT(_glMultiTexCoord4dv);_glMultiTexCoord4dv
typedef void (APIENTRY *glMultiTexCoord4fFunc)(GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
extern glMultiTexCoord4fFunc _glMultiTexCoord4f;
#define glMultiTexCoord4f VE_ASSERT(_glMultiTexCoord4f);_glMultiTexCoord4f
typedef void (APIENTRY *glMultiTexCoord4fvFunc)(GLenum target, GLfloat* v);
extern glMultiTexCoord4fvFunc _glMultiTexCoord4fv;
#define glMultiTexCoord4fv VE_ASSERT(_glMultiTexCoord4fv);_glMultiTexCoord4fv
typedef void (APIENTRY *glMultiTexCoord4iFunc)(GLenum target, GLint s, GLint t, GLint r, GLint q);
extern glMultiTexCoord4iFunc _glMultiTexCoord4i;
#define glMultiTexCoord4i VE_ASSERT(_glMultiTexCoord4i);_glMultiTexCoord4i
typedef void (APIENTRY *glMultiTexCoord4ivFunc)(GLenum target, GLint* v);
extern glMultiTexCoord4ivFunc _glMultiTexCoord4iv;
#define glMultiTexCoord4iv VE_ASSERT(_glMultiTexCoord4iv);_glMultiTexCoord4iv
typedef void (APIENTRY *glMultiTexCoord4sFunc)(GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
extern glMultiTexCoord4sFunc _glMultiTexCoord4s;
#define glMultiTexCoord4s VE_ASSERT(_glMultiTexCoord4s);_glMultiTexCoord4s
typedef void (APIENTRY *glMultiTexCoord4svFunc)(GLenum target, GLshort* v);
extern glMultiTexCoord4svFunc _glMultiTexCoord4sv;
#define glMultiTexCoord4sv VE_ASSERT(_glMultiTexCoord4sv);_glMultiTexCoord4sv
typedef void (APIENTRY *glLoadTransposeMatrixfFunc)(GLfloat* m);
extern glLoadTransposeMatrixfFunc _glLoadTransposeMatrixf;
#define glLoadTransposeMatrixf VE_ASSERT(_glLoadTransposeMatrixf);_glLoadTransposeMatrixf
typedef void (APIENTRY *glLoadTransposeMatrixdFunc)(GLdouble* m);
extern glLoadTransposeMatrixdFunc _glLoadTransposeMatrixd;
#define glLoadTransposeMatrixd VE_ASSERT(_glLoadTransposeMatrixd);_glLoadTransposeMatrixd
typedef void (APIENTRY *glMultTransposeMatrixfFunc)(GLfloat* m);
extern glMultTransposeMatrixfFunc _glMultTransposeMatrixf;
#define glMultTransposeMatrixf VE_ASSERT(_glMultTransposeMatrixf);_glMultTransposeMatrixf
typedef void (APIENTRY *glMultTransposeMatrixdFunc)(GLdouble* m);
extern glMultTransposeMatrixdFunc _glMultTransposeMatrixd;
#define glMultTransposeMatrixd VE_ASSERT(_glMultTransposeMatrixd);_glMultTransposeMatrixd
typedef void (APIENTRY *glBlendFuncSeparateFunc)(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
extern glBlendFuncSeparateFunc _glBlendFuncSeparate;
#define glBlendFuncSeparate VE_ASSERT(_glBlendFuncSeparate);_glBlendFuncSeparate
typedef void (APIENTRY *glMultiDrawArraysFunc)(GLenum mode, GLint* first, GLsizei* count, GLsizei drawcount);
extern glMultiDrawArraysFunc _glMultiDrawArrays;
#define glMultiDrawArrays VE_ASSERT(_glMultiDrawArrays);_glMultiDrawArrays
typedef void (APIENTRY *glMultiDrawElementsFunc)(GLenum mode, GLsizei* count, GLenum type, GLvoid* const* indices, GLsizei drawcount);
extern glMultiDrawElementsFunc _glMultiDrawElements;
#define glMultiDrawElements VE_ASSERT(_glMultiDrawElements);_glMultiDrawElements
typedef void (APIENTRY *glPointParameterfFunc)(GLenum pname, GLfloat param);
extern glPointParameterfFunc _glPointParameterf;
#define glPointParameterf VE_ASSERT(_glPointParameterf);_glPointParameterf
typedef void (APIENTRY *glPointParameterfvFunc)(GLenum pname, GLfloat* params);
extern glPointParameterfvFunc _glPointParameterfv;
#define glPointParameterfv VE_ASSERT(_glPointParameterfv);_glPointParameterfv
typedef void (APIENTRY *glPointParameteriFunc)(GLenum pname, GLint param);
extern glPointParameteriFunc _glPointParameteri;
#define glPointParameteri VE_ASSERT(_glPointParameteri);_glPointParameteri
typedef void (APIENTRY *glPointParameterivFunc)(GLenum pname, GLint* params);
extern glPointParameterivFunc _glPointParameteriv;
#define glPointParameteriv VE_ASSERT(_glPointParameteriv);_glPointParameteriv
typedef void (APIENTRY *glFogCoordfFunc)(GLfloat coord);
extern glFogCoordfFunc _glFogCoordf;
#define glFogCoordf VE_ASSERT(_glFogCoordf);_glFogCoordf
typedef void (APIENTRY *glFogCoordfvFunc)(GLfloat* coord);
extern glFogCoordfvFunc _glFogCoordfv;
#define glFogCoordfv VE_ASSERT(_glFogCoordfv);_glFogCoordfv
typedef void (APIENTRY *glFogCoorddFunc)(GLdouble coord);
extern glFogCoorddFunc _glFogCoordd;
#define glFogCoordd VE_ASSERT(_glFogCoordd);_glFogCoordd
typedef void (APIENTRY *glFogCoorddvFunc)(GLdouble* coord);
extern glFogCoorddvFunc _glFogCoorddv;
#define glFogCoorddv VE_ASSERT(_glFogCoorddv);_glFogCoorddv
typedef void (APIENTRY *glFogCoordPointerFunc)(GLenum type, GLsizei stride, GLvoid* pointer);
extern glFogCoordPointerFunc _glFogCoordPointer;
#define glFogCoordPointer VE_ASSERT(_glFogCoordPointer);_glFogCoordPointer
typedef void (APIENTRY *glSecondaryColor3bFunc)(GLbyte red, GLbyte green, GLbyte blue);
extern glSecondaryColor3bFunc _glSecondaryColor3b;
#define glSecondaryColor3b VE_ASSERT(_glSecondaryColor3b);_glSecondaryColor3b
typedef void (APIENTRY *glSecondaryColor3bvFunc)(GLbyte* v);
extern glSecondaryColor3bvFunc _glSecondaryColor3bv;
#define glSecondaryColor3bv VE_ASSERT(_glSecondaryColor3bv);_glSecondaryColor3bv
typedef void (APIENTRY *glSecondaryColor3dFunc)(GLdouble red, GLdouble green, GLdouble blue);
extern glSecondaryColor3dFunc _glSecondaryColor3d;
#define glSecondaryColor3d VE_ASSERT(_glSecondaryColor3d);_glSecondaryColor3d
typedef void (APIENTRY *glSecondaryColor3dvFunc)(GLdouble* v);
extern glSecondaryColor3dvFunc _glSecondaryColor3dv;
#define glSecondaryColor3dv VE_ASSERT(_glSecondaryColor3dv);_glSecondaryColor3dv
typedef void (APIENTRY *glSecondaryColor3fFunc)(GLfloat red, GLfloat green, GLfloat blue);
extern glSecondaryColor3fFunc _glSecondaryColor3f;
#define glSecondaryColor3f VE_ASSERT(_glSecondaryColor3f);_glSecondaryColor3f
typedef void (APIENTRY *glSecondaryColor3fvFunc)(GLfloat* v);
extern glSecondaryColor3fvFunc _glSecondaryColor3fv;
#define glSecondaryColor3fv VE_ASSERT(_glSecondaryColor3fv);_glSecondaryColor3fv
typedef void (APIENTRY *glSecondaryColor3iFunc)(GLint red, GLint green, GLint blue);
extern glSecondaryColor3iFunc _glSecondaryColor3i;
#define glSecondaryColor3i VE_ASSERT(_glSecondaryColor3i);_glSecondaryColor3i
typedef void (APIENTRY *glSecondaryColor3ivFunc)(GLint* v);
extern glSecondaryColor3ivFunc _glSecondaryColor3iv;
#define glSecondaryColor3iv VE_ASSERT(_glSecondaryColor3iv);_glSecondaryColor3iv
typedef void (APIENTRY *glSecondaryColor3sFunc)(GLshort red, GLshort green, GLshort blue);
extern glSecondaryColor3sFunc _glSecondaryColor3s;
#define glSecondaryColor3s VE_ASSERT(_glSecondaryColor3s);_glSecondaryColor3s
typedef void (APIENTRY *glSecondaryColor3svFunc)(GLshort* v);
extern glSecondaryColor3svFunc _glSecondaryColor3sv;
#define glSecondaryColor3sv VE_ASSERT(_glSecondaryColor3sv);_glSecondaryColor3sv
typedef void (APIENTRY *glSecondaryColor3ubFunc)(GLubyte red, GLubyte green, GLubyte blue);
extern glSecondaryColor3ubFunc _glSecondaryColor3ub;
#define glSecondaryColor3ub VE_ASSERT(_glSecondaryColor3ub);_glSecondaryColor3ub
typedef void (APIENTRY *glSecondaryColor3ubvFunc)(GLubyte* v);
extern glSecondaryColor3ubvFunc _glSecondaryColor3ubv;
#define glSecondaryColor3ubv VE_ASSERT(_glSecondaryColor3ubv);_glSecondaryColor3ubv
typedef void (APIENTRY *glSecondaryColor3uiFunc)(GLuint red, GLuint green, GLuint blue);
extern glSecondaryColor3uiFunc _glSecondaryColor3ui;
#define glSecondaryColor3ui VE_ASSERT(_glSecondaryColor3ui);_glSecondaryColor3ui
typedef void (APIENTRY *glSecondaryColor3uivFunc)(GLuint* v);
extern glSecondaryColor3uivFunc _glSecondaryColor3uiv;
#define glSecondaryColor3uiv VE_ASSERT(_glSecondaryColor3uiv);_glSecondaryColor3uiv
typedef void (APIENTRY *glSecondaryColor3usFunc)(GLushort red, GLushort green, GLushort blue);
extern glSecondaryColor3usFunc _glSecondaryColor3us;
#define glSecondaryColor3us VE_ASSERT(_glSecondaryColor3us);_glSecondaryColor3us
typedef void (APIENTRY *glSecondaryColor3usvFunc)(GLushort* v);
extern glSecondaryColor3usvFunc _glSecondaryColor3usv;
#define glSecondaryColor3usv VE_ASSERT(_glSecondaryColor3usv);_glSecondaryColor3usv
typedef void (APIENTRY *glSecondaryColorPointerFunc)(GLint size, GLenum type, GLsizei stride, GLvoid* pointer);
extern glSecondaryColorPointerFunc _glSecondaryColorPointer;
#define glSecondaryColorPointer VE_ASSERT(_glSecondaryColorPointer);_glSecondaryColorPointer
typedef void (APIENTRY *glWindowPos2dFunc)(GLdouble x, GLdouble y);
extern glWindowPos2dFunc _glWindowPos2d;
#define glWindowPos2d VE_ASSERT(_glWindowPos2d);_glWindowPos2d
typedef void (APIENTRY *glWindowPos2dvFunc)(GLdouble* v);
extern glWindowPos2dvFunc _glWindowPos2dv;
#define glWindowPos2dv VE_ASSERT(_glWindowPos2dv);_glWindowPos2dv
typedef void (APIENTRY *glWindowPos2fFunc)(GLfloat x, GLfloat y);
extern glWindowPos2fFunc _glWindowPos2f;
#define glWindowPos2f VE_ASSERT(_glWindowPos2f);_glWindowPos2f
typedef void (APIENTRY *glWindowPos2fvFunc)(GLfloat* v);
extern glWindowPos2fvFunc _glWindowPos2fv;
#define glWindowPos2fv VE_ASSERT(_glWindowPos2fv);_glWindowPos2fv
typedef void (APIENTRY *glWindowPos2iFunc)(GLint x, GLint y);
extern glWindowPos2iFunc _glWindowPos2i;
#define glWindowPos2i VE_ASSERT(_glWindowPos2i);_glWindowPos2i
typedef void (APIENTRY *glWindowPos2ivFunc)(GLint* v);
extern glWindowPos2ivFunc _glWindowPos2iv;
#define glWindowPos2iv VE_ASSERT(_glWindowPos2iv);_glWindowPos2iv
typedef void (APIENTRY *glWindowPos2sFunc)(GLshort x, GLshort y);
extern glWindowPos2sFunc _glWindowPos2s;
#define glWindowPos2s VE_ASSERT(_glWindowPos2s);_glWindowPos2s
typedef void (APIENTRY *glWindowPos2svFunc)(GLshort* v);
extern glWindowPos2svFunc _glWindowPos2sv;
#define glWindowPos2sv VE_ASSERT(_glWindowPos2sv);_glWindowPos2sv
typedef void (APIENTRY *glWindowPos3dFunc)(GLdouble x, GLdouble y, GLdouble z);
extern glWindowPos3dFunc _glWindowPos3d;
#define glWindowPos3d VE_ASSERT(_glWindowPos3d);_glWindowPos3d
typedef void (APIENTRY *glWindowPos3dvFunc)(GLdouble* v);
extern glWindowPos3dvFunc _glWindowPos3dv;
#define glWindowPos3dv VE_ASSERT(_glWindowPos3dv);_glWindowPos3dv
typedef void (APIENTRY *glWindowPos3fFunc)(GLfloat x, GLfloat y, GLfloat z);
extern glWindowPos3fFunc _glWindowPos3f;
#define glWindowPos3f VE_ASSERT(_glWindowPos3f);_glWindowPos3f
typedef void (APIENTRY *glWindowPos3fvFunc)(GLfloat* v);
extern glWindowPos3fvFunc _glWindowPos3fv;
#define glWindowPos3fv VE_ASSERT(_glWindowPos3fv);_glWindowPos3fv
typedef void (APIENTRY *glWindowPos3iFunc)(GLint x, GLint y, GLint z);
extern glWindowPos3iFunc _glWindowPos3i;
#define glWindowPos3i VE_ASSERT(_glWindowPos3i);_glWindowPos3i
typedef void (APIENTRY *glWindowPos3ivFunc)(GLint* v);
extern glWindowPos3ivFunc _glWindowPos3iv;
#define glWindowPos3iv VE_ASSERT(_glWindowPos3iv);_glWindowPos3iv
typedef void (APIENTRY *glWindowPos3sFunc)(GLshort x, GLshort y, GLshort z);
extern glWindowPos3sFunc _glWindowPos3s;
#define glWindowPos3s VE_ASSERT(_glWindowPos3s);_glWindowPos3s
typedef void (APIENTRY *glWindowPos3svFunc)(GLshort* v);
extern glWindowPos3svFunc _glWindowPos3sv;
#define glWindowPos3sv VE_ASSERT(_glWindowPos3sv);_glWindowPos3sv
typedef void (APIENTRY *glGenQueriesFunc)(GLsizei n, GLuint* ids);
extern glGenQueriesFunc _glGenQueries;
#define glGenQueries VE_ASSERT(_glGenQueries);_glGenQueries
typedef void (APIENTRY *glDeleteQueriesFunc)(GLsizei n, GLuint* ids);
extern glDeleteQueriesFunc _glDeleteQueries;
#define glDeleteQueries VE_ASSERT(_glDeleteQueries);_glDeleteQueries
typedef GLboolean (APIENTRY *glIsQueryFunc)(GLuint id);
extern glIsQueryFunc _glIsQuery;
#define glIsQuery _glIsQuery
typedef void (APIENTRY *glBeginQueryFunc)(GLenum target, GLuint id);
extern glBeginQueryFunc _glBeginQuery;
#define glBeginQuery VE_ASSERT(_glBeginQuery);_glBeginQuery
typedef void (APIENTRY *glEndQueryFunc)(GLenum target);
extern glEndQueryFunc _glEndQuery;
#define glEndQuery VE_ASSERT(_glEndQuery);_glEndQuery
typedef void (APIENTRY *glGetQueryivFunc)(GLenum target, GLenum pname, GLint* params);
extern glGetQueryivFunc _glGetQueryiv;
#define glGetQueryiv VE_ASSERT(_glGetQueryiv);_glGetQueryiv
typedef void (APIENTRY *glGetQueryObjectivFunc)(GLuint id, GLenum pname, GLint* params);
extern glGetQueryObjectivFunc _glGetQueryObjectiv;
#define glGetQueryObjectiv VE_ASSERT(_glGetQueryObjectiv);_glGetQueryObjectiv
typedef void (APIENTRY *glGetQueryObjectuivFunc)(GLuint id, GLenum pname, GLuint* params);
extern glGetQueryObjectuivFunc _glGetQueryObjectuiv;
#define glGetQueryObjectuiv VE_ASSERT(_glGetQueryObjectuiv);_glGetQueryObjectuiv
typedef void (APIENTRY *glBindBufferFunc)(GLenum target, GLuint buffer);
extern glBindBufferFunc _glBindBuffer;
#define glBindBuffer VE_ASSERT(_glBindBuffer);_glBindBuffer
typedef void (APIENTRY *glDeleteBuffersFunc)(GLsizei n, GLuint* buffers);
extern glDeleteBuffersFunc _glDeleteBuffers;
#define glDeleteBuffers VE_ASSERT(_glDeleteBuffers);_glDeleteBuffers
typedef void (APIENTRY *glGenBuffersFunc)(GLsizei n, GLuint* buffers);
extern glGenBuffersFunc _glGenBuffers;
#define glGenBuffers VE_ASSERT(_glGenBuffers);_glGenBuffers
typedef GLboolean (APIENTRY *glIsBufferFunc)(GLuint buffer);
extern glIsBufferFunc _glIsBuffer;
#define glIsBuffer _glIsBuffer
typedef void (APIENTRY *glBufferDataFunc)(GLenum target, GLsizeiptr size, GLvoid* data, GLenum usage);
extern glBufferDataFunc _glBufferData;
#define glBufferData VE_ASSERT(_glBufferData);_glBufferData
typedef void (APIENTRY *glBufferSubDataFunc)(GLenum target, GLintptr offset, GLsizeiptr size, GLvoid* data);
extern glBufferSubDataFunc _glBufferSubData;
#define glBufferSubData VE_ASSERT(_glBufferSubData);_glBufferSubData
typedef void (APIENTRY *glGetBufferSubDataFunc)(GLenum target, GLintptr offset, GLsizeiptr size, GLvoid* data);
extern glGetBufferSubDataFunc _glGetBufferSubData;
#define glGetBufferSubData VE_ASSERT(_glGetBufferSubData);_glGetBufferSubData
typedef GLvoid* (APIENTRY *glMapBufferFunc)(GLenum target, GLenum access);
extern glMapBufferFunc _glMapBuffer;
#define glMapBuffer _glMapBuffer
typedef GLboolean (APIENTRY *glUnmapBufferFunc)(GLenum target);
extern glUnmapBufferFunc _glUnmapBuffer;
#define glUnmapBuffer _glUnmapBuffer
typedef void (APIENTRY *glGetBufferParameterivFunc)(GLenum target, GLenum pname, GLint* params);
extern glGetBufferParameterivFunc _glGetBufferParameteriv;
#define glGetBufferParameteriv VE_ASSERT(_glGetBufferParameteriv);_glGetBufferParameteriv
typedef void (APIENTRY *glGetBufferPointervFunc)(GLenum target, GLenum pname, GLvoid** params);
extern glGetBufferPointervFunc _glGetBufferPointerv;
#define glGetBufferPointerv VE_ASSERT(_glGetBufferPointerv);_glGetBufferPointerv
typedef void (APIENTRY *glBlendEquationSeparateFunc)(GLenum modeRGB, GLenum modeAlpha);
extern glBlendEquationSeparateFunc _glBlendEquationSeparate;
#define glBlendEquationSeparate VE_ASSERT(_glBlendEquationSeparate);_glBlendEquationSeparate
typedef void (APIENTRY *glDrawBuffersFunc)(GLsizei n, GLenum* bufs);
extern glDrawBuffersFunc _glDrawBuffers;
#define glDrawBuffers VE_ASSERT(_glDrawBuffers);_glDrawBuffers
typedef void (APIENTRY *glStencilOpSeparateFunc)(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
extern glStencilOpSeparateFunc _glStencilOpSeparate;
#define glStencilOpSeparate VE_ASSERT(_glStencilOpSeparate);_glStencilOpSeparate
typedef void (APIENTRY *glStencilFuncSeparateFunc)(GLenum face, GLenum func, GLint ref, GLuint mask);
extern glStencilFuncSeparateFunc _glStencilFuncSeparate;
#define glStencilFuncSeparate VE_ASSERT(_glStencilFuncSeparate);_glStencilFuncSeparate
typedef void (APIENTRY *glStencilMaskSeparateFunc)(GLenum face, GLuint mask);
extern glStencilMaskSeparateFunc _glStencilMaskSeparate;
#define glStencilMaskSeparate VE_ASSERT(_glStencilMaskSeparate);_glStencilMaskSeparate
typedef void (APIENTRY *glAttachShaderFunc)(GLuint program, GLuint shader);
extern glAttachShaderFunc _glAttachShader;
#define glAttachShader VE_ASSERT(_glAttachShader);_glAttachShader
typedef void (APIENTRY *glBindAttribLocationFunc)(GLuint program, GLuint index, GLchar* name);
extern glBindAttribLocationFunc _glBindAttribLocation;
#define glBindAttribLocation VE_ASSERT(_glBindAttribLocation);_glBindAttribLocation
typedef void (APIENTRY *glCompileShaderFunc)(GLuint shader);
extern glCompileShaderFunc _glCompileShader;
#define glCompileShader VE_ASSERT(_glCompileShader);_glCompileShader
typedef GLuint (APIENTRY *glCreateProgramFunc)();
extern glCreateProgramFunc _glCreateProgram;
#define glCreateProgram _glCreateProgram
typedef GLuint (APIENTRY *glCreateShaderFunc)(GLenum type);
extern glCreateShaderFunc _glCreateShader;
#define glCreateShader _glCreateShader
typedef void (APIENTRY *glDeleteProgramFunc)(GLuint program);
extern glDeleteProgramFunc _glDeleteProgram;
#define glDeleteProgram VE_ASSERT(_glDeleteProgram);_glDeleteProgram
typedef void (APIENTRY *glDeleteShaderFunc)(GLuint shader);
extern glDeleteShaderFunc _glDeleteShader;
#define glDeleteShader VE_ASSERT(_glDeleteShader);_glDeleteShader
typedef void (APIENTRY *glDetachShaderFunc)(GLuint program, GLuint shader);
extern glDetachShaderFunc _glDetachShader;
#define glDetachShader VE_ASSERT(_glDetachShader);_glDetachShader
typedef void (APIENTRY *glDisableVertexAttribArrayFunc)(GLuint index);
extern glDisableVertexAttribArrayFunc _glDisableVertexAttribArray;
#define glDisableVertexAttribArray VE_ASSERT(_glDisableVertexAttribArray);_glDisableVertexAttribArray
typedef void (APIENTRY *glEnableVertexAttribArrayFunc)(GLuint index);
extern glEnableVertexAttribArrayFunc _glEnableVertexAttribArray;
#define glEnableVertexAttribArray VE_ASSERT(_glEnableVertexAttribArray);_glEnableVertexAttribArray
typedef void (APIENTRY *glGetActiveAttribFunc)(GLuint program, GLuint index, GLsizei bufSize, GLsizei* length, GLint* size, GLenum* type, GLchar* name);
extern glGetActiveAttribFunc _glGetActiveAttrib;
#define glGetActiveAttrib VE_ASSERT(_glGetActiveAttrib);_glGetActiveAttrib
typedef void (APIENTRY *glGetActiveUniformFunc)(GLuint program, GLuint index, GLsizei bufSize, GLsizei* length, GLint* size, GLenum* type, GLchar* name);
extern glGetActiveUniformFunc _glGetActiveUniform;
#define glGetActiveUniform VE_ASSERT(_glGetActiveUniform);_glGetActiveUniform
typedef void (APIENTRY *glGetAttachedShadersFunc)(GLuint program, GLsizei maxCount, GLsizei* count, GLuint* obj);
extern glGetAttachedShadersFunc _glGetAttachedShaders;
#define glGetAttachedShaders VE_ASSERT(_glGetAttachedShaders);_glGetAttachedShaders
typedef GLint (APIENTRY *glGetAttribLocationFunc)(GLuint program, GLchar* name);
extern glGetAttribLocationFunc _glGetAttribLocation;
#define glGetAttribLocation _glGetAttribLocation
typedef void (APIENTRY *glGetProgramivFunc)(GLuint program, GLenum pname, GLint* params);
extern glGetProgramivFunc _glGetProgramiv;
#define glGetProgramiv VE_ASSERT(_glGetProgramiv);_glGetProgramiv
typedef void (APIENTRY *glGetProgramInfoLogFunc)(GLuint program, GLsizei bufSize, GLsizei* length, GLchar* infoLog);
extern glGetProgramInfoLogFunc _glGetProgramInfoLog;
#define glGetProgramInfoLog VE_ASSERT(_glGetProgramInfoLog);_glGetProgramInfoLog
typedef void (APIENTRY *glGetShaderivFunc)(GLuint shader, GLenum pname, GLint* params);
extern glGetShaderivFunc _glGetShaderiv;
#define glGetShaderiv VE_ASSERT(_glGetShaderiv);_glGetShaderiv
typedef void (APIENTRY *glGetShaderInfoLogFunc)(GLuint shader, GLsizei bufSize, GLsizei* length, GLchar* infoLog);
extern glGetShaderInfoLogFunc _glGetShaderInfoLog;
#define glGetShaderInfoLog VE_ASSERT(_glGetShaderInfoLog);_glGetShaderInfoLog
typedef void (APIENTRY *glGetShaderSourceFunc)(GLuint shader, GLsizei bufSize, GLsizei* length, GLchar* source);
extern glGetShaderSourceFunc _glGetShaderSource;
#define glGetShaderSource VE_ASSERT(_glGetShaderSource);_glGetShaderSource
typedef GLint (APIENTRY *glGetUniformLocationFunc)(GLuint program, GLchar* name);
extern glGetUniformLocationFunc _glGetUniformLocation;
#define glGetUniformLocation _glGetUniformLocation
typedef void (APIENTRY *glGetUniformfvFunc)(GLuint program, GLint location, GLfloat* params);
extern glGetUniformfvFunc _glGetUniformfv;
#define glGetUniformfv VE_ASSERT(_glGetUniformfv);_glGetUniformfv
typedef void (APIENTRY *glGetUniformivFunc)(GLuint program, GLint location, GLint* params);
extern glGetUniformivFunc _glGetUniformiv;
#define glGetUniformiv VE_ASSERT(_glGetUniformiv);_glGetUniformiv
typedef void (APIENTRY *glGetVertexAttribdvFunc)(GLuint index, GLenum pname, GLdouble* params);
extern glGetVertexAttribdvFunc _glGetVertexAttribdv;
#define glGetVertexAttribdv VE_ASSERT(_glGetVertexAttribdv);_glGetVertexAttribdv
typedef void (APIENTRY *glGetVertexAttribfvFunc)(GLuint index, GLenum pname, GLfloat* params);
extern glGetVertexAttribfvFunc _glGetVertexAttribfv;
#define glGetVertexAttribfv VE_ASSERT(_glGetVertexAttribfv);_glGetVertexAttribfv
typedef void (APIENTRY *glGetVertexAttribivFunc)(GLuint index, GLenum pname, GLint* params);
extern glGetVertexAttribivFunc _glGetVertexAttribiv;
#define glGetVertexAttribiv VE_ASSERT(_glGetVertexAttribiv);_glGetVertexAttribiv
typedef void (APIENTRY *glGetVertexAttribPointervFunc)(GLuint index, GLenum pname, GLvoid** pointer);
extern glGetVertexAttribPointervFunc _glGetVertexAttribPointerv;
#define glGetVertexAttribPointerv VE_ASSERT(_glGetVertexAttribPointerv);_glGetVertexAttribPointerv
typedef GLboolean (APIENTRY *glIsProgramFunc)(GLuint program);
extern glIsProgramFunc _glIsProgram;
#define glIsProgram _glIsProgram
typedef GLboolean (APIENTRY *glIsShaderFunc)(GLuint shader);
extern glIsShaderFunc _glIsShader;
#define glIsShader _glIsShader
typedef void (APIENTRY *glLinkProgramFunc)(GLuint program);
extern glLinkProgramFunc _glLinkProgram;
#define glLinkProgram VE_ASSERT(_glLinkProgram);_glLinkProgram
typedef void (APIENTRY *glShaderSourceFunc)(GLuint shader, GLsizei count, GLchar* const* string, GLint* length);
extern glShaderSourceFunc _glShaderSource;
#define glShaderSource VE_ASSERT(_glShaderSource);_glShaderSource
typedef void (APIENTRY *glUseProgramFunc)(GLuint program);
extern glUseProgramFunc _glUseProgram;
#define glUseProgram VE_ASSERT(_glUseProgram);_glUseProgram
typedef void (APIENTRY *glUniform1fFunc)(GLint location, GLfloat v0);
extern glUniform1fFunc _glUniform1f;
#define glUniform1f VE_ASSERT(_glUniform1f);_glUniform1f
typedef void (APIENTRY *glUniform2fFunc)(GLint location, GLfloat v0, GLfloat v1);
extern glUniform2fFunc _glUniform2f;
#define glUniform2f VE_ASSERT(_glUniform2f);_glUniform2f
typedef void (APIENTRY *glUniform3fFunc)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
extern glUniform3fFunc _glUniform3f;
#define glUniform3f VE_ASSERT(_glUniform3f);_glUniform3f
typedef void (APIENTRY *glUniform4fFunc)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
extern glUniform4fFunc _glUniform4f;
#define glUniform4f VE_ASSERT(_glUniform4f);_glUniform4f
typedef void (APIENTRY *glUniform1iFunc)(GLint location, GLint v0);
extern glUniform1iFunc _glUniform1i;
#define glUniform1i VE_ASSERT(_glUniform1i);_glUniform1i
typedef void (APIENTRY *glUniform2iFunc)(GLint location, GLint v0, GLint v1);
extern glUniform2iFunc _glUniform2i;
#define glUniform2i VE_ASSERT(_glUniform2i);_glUniform2i
typedef void (APIENTRY *glUniform3iFunc)(GLint location, GLint v0, GLint v1, GLint v2);
extern glUniform3iFunc _glUniform3i;
#define glUniform3i VE_ASSERT(_glUniform3i);_glUniform3i
typedef void (APIENTRY *glUniform4iFunc)(GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
extern glUniform4iFunc _glUniform4i;
#define glUniform4i VE_ASSERT(_glUniform4i);_glUniform4i
typedef void (APIENTRY *glUniform1fvFunc)(GLint location, GLsizei count, GLfloat* value);
extern glUniform1fvFunc _glUniform1fv;
#define glUniform1fv VE_ASSERT(_glUniform1fv);_glUniform1fv
typedef void (APIENTRY *glUniform2fvFunc)(GLint location, GLsizei count, GLfloat* value);
extern glUniform2fvFunc _glUniform2fv;
#define glUniform2fv VE_ASSERT(_glUniform2fv);_glUniform2fv
typedef void (APIENTRY *glUniform3fvFunc)(GLint location, GLsizei count, GLfloat* value);
extern glUniform3fvFunc _glUniform3fv;
#define glUniform3fv VE_ASSERT(_glUniform3fv);_glUniform3fv
typedef void (APIENTRY *glUniform4fvFunc)(GLint location, GLsizei count, GLfloat* value);
extern glUniform4fvFunc _glUniform4fv;
#define glUniform4fv VE_ASSERT(_glUniform4fv);_glUniform4fv
typedef void (APIENTRY *glUniform1ivFunc)(GLint location, GLsizei count, GLint* value);
extern glUniform1ivFunc _glUniform1iv;
#define glUniform1iv VE_ASSERT(_glUniform1iv);_glUniform1iv
typedef void (APIENTRY *glUniform2ivFunc)(GLint location, GLsizei count, GLint* value);
extern glUniform2ivFunc _glUniform2iv;
#define glUniform2iv VE_ASSERT(_glUniform2iv);_glUniform2iv
typedef void (APIENTRY *glUniform3ivFunc)(GLint location, GLsizei count, GLint* value);
extern glUniform3ivFunc _glUniform3iv;
#define glUniform3iv VE_ASSERT(_glUniform3iv);_glUniform3iv
typedef void (APIENTRY *glUniform4ivFunc)(GLint location, GLsizei count, GLint* value);
extern glUniform4ivFunc _glUniform4iv;
#define glUniform4iv VE_ASSERT(_glUniform4iv);_glUniform4iv
typedef void (APIENTRY *glUniformMatrix2fvFunc)(GLint location, GLsizei count, GLboolean transpose, GLfloat* value);
extern glUniformMatrix2fvFunc _glUniformMatrix2fv;
#define glUniformMatrix2fv VE_ASSERT(_glUniformMatrix2fv);_glUniformMatrix2fv
typedef void (APIENTRY *glUniformMatrix3fvFunc)(GLint location, GLsizei count, GLboolean transpose, GLfloat* value);
extern glUniformMatrix3fvFunc _glUniformMatrix3fv;
#define glUniformMatrix3fv VE_ASSERT(_glUniformMatrix3fv);_glUniformMatrix3fv
typedef void (APIENTRY *glUniformMatrix4fvFunc)(GLint location, GLsizei count, GLboolean transpose, GLfloat* value);
extern glUniformMatrix4fvFunc _glUniformMatrix4fv;
#define glUniformMatrix4fv VE_ASSERT(_glUniformMatrix4fv);_glUniformMatrix4fv
typedef void (APIENTRY *glValidateProgramFunc)(GLuint program);
extern glValidateProgramFunc _glValidateProgram;
#define glValidateProgram VE_ASSERT(_glValidateProgram);_glValidateProgram
typedef void (APIENTRY *glVertexAttrib1dFunc)(GLuint index, GLdouble x);
extern glVertexAttrib1dFunc _glVertexAttrib1d;
#define glVertexAttrib1d VE_ASSERT(_glVertexAttrib1d);_glVertexAttrib1d
typedef void (APIENTRY *glVertexAttrib1dvFunc)(GLuint index, GLdouble* v);
extern glVertexAttrib1dvFunc _glVertexAttrib1dv;
#define glVertexAttrib1dv VE_ASSERT(_glVertexAttrib1dv);_glVertexAttrib1dv
typedef void (APIENTRY *glVertexAttrib1fFunc)(GLuint index, GLfloat x);
extern glVertexAttrib1fFunc _glVertexAttrib1f;
#define glVertexAttrib1f VE_ASSERT(_glVertexAttrib1f);_glVertexAttrib1f
typedef void (APIENTRY *glVertexAttrib1fvFunc)(GLuint index, GLfloat* v);
extern glVertexAttrib1fvFunc _glVertexAttrib1fv;
#define glVertexAttrib1fv VE_ASSERT(_glVertexAttrib1fv);_glVertexAttrib1fv
typedef void (APIENTRY *glVertexAttrib1sFunc)(GLuint index, GLshort x);
extern glVertexAttrib1sFunc _glVertexAttrib1s;
#define glVertexAttrib1s VE_ASSERT(_glVertexAttrib1s);_glVertexAttrib1s
typedef void (APIENTRY *glVertexAttrib1svFunc)(GLuint index, GLshort* v);
extern glVertexAttrib1svFunc _glVertexAttrib1sv;
#define glVertexAttrib1sv VE_ASSERT(_glVertexAttrib1sv);_glVertexAttrib1sv
typedef void (APIENTRY *glVertexAttrib2dFunc)(GLuint index, GLdouble x, GLdouble y);
extern glVertexAttrib2dFunc _glVertexAttrib2d;
#define glVertexAttrib2d VE_ASSERT(_glVertexAttrib2d);_glVertexAttrib2d
typedef void (APIENTRY *glVertexAttrib2dvFunc)(GLuint index, GLdouble* v);
extern glVertexAttrib2dvFunc _glVertexAttrib2dv;
#define glVertexAttrib2dv VE_ASSERT(_glVertexAttrib2dv);_glVertexAttrib2dv
typedef void (APIENTRY *glVertexAttrib2fFunc)(GLuint index, GLfloat x, GLfloat y);
extern glVertexAttrib2fFunc _glVertexAttrib2f;
#define glVertexAttrib2f VE_ASSERT(_glVertexAttrib2f);_glVertexAttrib2f
typedef void (APIENTRY *glVertexAttrib2fvFunc)(GLuint index, GLfloat* v);
extern glVertexAttrib2fvFunc _glVertexAttrib2fv;
#define glVertexAttrib2fv VE_ASSERT(_glVertexAttrib2fv);_glVertexAttrib2fv
typedef void (APIENTRY *glVertexAttrib2sFunc)(GLuint index, GLshort x, GLshort y);
extern glVertexAttrib2sFunc _glVertexAttrib2s;
#define glVertexAttrib2s VE_ASSERT(_glVertexAttrib2s);_glVertexAttrib2s
typedef void (APIENTRY *glVertexAttrib2svFunc)(GLuint index, GLshort* v);
extern glVertexAttrib2svFunc _glVertexAttrib2sv;
#define glVertexAttrib2sv VE_ASSERT(_glVertexAttrib2sv);_glVertexAttrib2sv
typedef void (APIENTRY *glVertexAttrib3dFunc)(GLuint index, GLdouble x, GLdouble y, GLdouble z);
extern glVertexAttrib3dFunc _glVertexAttrib3d;
#define glVertexAttrib3d VE_ASSERT(_glVertexAttrib3d);_glVertexAttrib3d
typedef void (APIENTRY *glVertexAttrib3dvFunc)(GLuint index, GLdouble* v);
extern glVertexAttrib3dvFunc _glVertexAttrib3dv;
#define glVertexAttrib3dv VE_ASSERT(_glVertexAttrib3dv);_glVertexAttrib3dv
typedef void (APIENTRY *glVertexAttrib3fFunc)(GLuint index, GLfloat x, GLfloat y, GLfloat z);
extern glVertexAttrib3fFunc _glVertexAttrib3f;
#define glVertexAttrib3f VE_ASSERT(_glVertexAttrib3f);_glVertexAttrib3f
typedef void (APIENTRY *glVertexAttrib3fvFunc)(GLuint index, GLfloat* v);
extern glVertexAttrib3fvFunc _glVertexAttrib3fv;
#define glVertexAttrib3fv VE_ASSERT(_glVertexAttrib3fv);_glVertexAttrib3fv
typedef void (APIENTRY *glVertexAttrib3sFunc)(GLuint index, GLshort x, GLshort y, GLshort z);
extern glVertexAttrib3sFunc _glVertexAttrib3s;
#define glVertexAttrib3s VE_ASSERT(_glVertexAttrib3s);_glVertexAttrib3s
typedef void (APIENTRY *glVertexAttrib3svFunc)(GLuint index, GLshort* v);
extern glVertexAttrib3svFunc _glVertexAttrib3sv;
#define glVertexAttrib3sv VE_ASSERT(_glVertexAttrib3sv);_glVertexAttrib3sv
typedef void (APIENTRY *glVertexAttrib4NbvFunc)(GLuint index, GLbyte* v);
extern glVertexAttrib4NbvFunc _glVertexAttrib4Nbv;
#define glVertexAttrib4Nbv VE_ASSERT(_glVertexAttrib4Nbv);_glVertexAttrib4Nbv
typedef void (APIENTRY *glVertexAttrib4NivFunc)(GLuint index, GLint* v);
extern glVertexAttrib4NivFunc _glVertexAttrib4Niv;
#define glVertexAttrib4Niv VE_ASSERT(_glVertexAttrib4Niv);_glVertexAttrib4Niv
typedef void (APIENTRY *glVertexAttrib4NsvFunc)(GLuint index, GLshort* v);
extern glVertexAttrib4NsvFunc _glVertexAttrib4Nsv;
#define glVertexAttrib4Nsv VE_ASSERT(_glVertexAttrib4Nsv);_glVertexAttrib4Nsv
typedef void (APIENTRY *glVertexAttrib4NubFunc)(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
extern glVertexAttrib4NubFunc _glVertexAttrib4Nub;
#define glVertexAttrib4Nub VE_ASSERT(_glVertexAttrib4Nub);_glVertexAttrib4Nub
typedef void (APIENTRY *glVertexAttrib4NubvFunc)(GLuint index, GLubyte* v);
extern glVertexAttrib4NubvFunc _glVertexAttrib4Nubv;
#define glVertexAttrib4Nubv VE_ASSERT(_glVertexAttrib4Nubv);_glVertexAttrib4Nubv
typedef void (APIENTRY *glVertexAttrib4NuivFunc)(GLuint index, GLuint* v);
extern glVertexAttrib4NuivFunc _glVertexAttrib4Nuiv;
#define glVertexAttrib4Nuiv VE_ASSERT(_glVertexAttrib4Nuiv);_glVertexAttrib4Nuiv
typedef void (APIENTRY *glVertexAttrib4NusvFunc)(GLuint index, GLushort* v);
extern glVertexAttrib4NusvFunc _glVertexAttrib4Nusv;
#define glVertexAttrib4Nusv VE_ASSERT(_glVertexAttrib4Nusv);_glVertexAttrib4Nusv
typedef void (APIENTRY *glVertexAttrib4bvFunc)(GLuint index, GLbyte* v);
extern glVertexAttrib4bvFunc _glVertexAttrib4bv;
#define glVertexAttrib4bv VE_ASSERT(_glVertexAttrib4bv);_glVertexAttrib4bv
typedef void (APIENTRY *glVertexAttrib4dFunc)(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
extern glVertexAttrib4dFunc _glVertexAttrib4d;
#define glVertexAttrib4d VE_ASSERT(_glVertexAttrib4d);_glVertexAttrib4d
typedef void (APIENTRY *glVertexAttrib4dvFunc)(GLuint index, GLdouble* v);
extern glVertexAttrib4dvFunc _glVertexAttrib4dv;
#define glVertexAttrib4dv VE_ASSERT(_glVertexAttrib4dv);_glVertexAttrib4dv
typedef void (APIENTRY *glVertexAttrib4fFunc)(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
extern glVertexAttrib4fFunc _glVertexAttrib4f;
#define glVertexAttrib4f VE_ASSERT(_glVertexAttrib4f);_glVertexAttrib4f
typedef void (APIENTRY *glVertexAttrib4fvFunc)(GLuint index, GLfloat* v);
extern glVertexAttrib4fvFunc _glVertexAttrib4fv;
#define glVertexAttrib4fv VE_ASSERT(_glVertexAttrib4fv);_glVertexAttrib4fv
typedef void (APIENTRY *glVertexAttrib4ivFunc)(GLuint index, GLint* v);
extern glVertexAttrib4ivFunc _glVertexAttrib4iv;
#define glVertexAttrib4iv VE_ASSERT(_glVertexAttrib4iv);_glVertexAttrib4iv
typedef void (APIENTRY *glVertexAttrib4sFunc)(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
extern glVertexAttrib4sFunc _glVertexAttrib4s;
#define glVertexAttrib4s VE_ASSERT(_glVertexAttrib4s);_glVertexAttrib4s
typedef void (APIENTRY *glVertexAttrib4svFunc)(GLuint index, GLshort* v);
extern glVertexAttrib4svFunc _glVertexAttrib4sv;
#define glVertexAttrib4sv VE_ASSERT(_glVertexAttrib4sv);_glVertexAttrib4sv
typedef void (APIENTRY *glVertexAttrib4ubvFunc)(GLuint index, GLubyte* v);
extern glVertexAttrib4ubvFunc _glVertexAttrib4ubv;
#define glVertexAttrib4ubv VE_ASSERT(_glVertexAttrib4ubv);_glVertexAttrib4ubv
typedef void (APIENTRY *glVertexAttrib4uivFunc)(GLuint index, GLuint* v);
extern glVertexAttrib4uivFunc _glVertexAttrib4uiv;
#define glVertexAttrib4uiv VE_ASSERT(_glVertexAttrib4uiv);_glVertexAttrib4uiv
typedef void (APIENTRY *glVertexAttrib4usvFunc)(GLuint index, GLushort* v);
extern glVertexAttrib4usvFunc _glVertexAttrib4usv;
#define glVertexAttrib4usv VE_ASSERT(_glVertexAttrib4usv);_glVertexAttrib4usv
typedef void (APIENTRY *glVertexAttribPointerFunc)(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLvoid* pointer);
extern glVertexAttribPointerFunc _glVertexAttribPointer;
#define glVertexAttribPointer VE_ASSERT(_glVertexAttribPointer);_glVertexAttribPointer
typedef void (APIENTRY *glUniformMatrix2x3fvFunc)(GLint location, GLsizei count, GLboolean transpose, GLfloat* value);
extern glUniformMatrix2x3fvFunc _glUniformMatrix2x3fv;
#define glUniformMatrix2x3fv VE_ASSERT(_glUniformMatrix2x3fv);_glUniformMatrix2x3fv
typedef void (APIENTRY *glUniformMatrix3x2fvFunc)(GLint location, GLsizei count, GLboolean transpose, GLfloat* value);
extern glUniformMatrix3x2fvFunc _glUniformMatrix3x2fv;
#define glUniformMatrix3x2fv VE_ASSERT(_glUniformMatrix3x2fv);_glUniformMatrix3x2fv
typedef void (APIENTRY *glUniformMatrix2x4fvFunc)(GLint location, GLsizei count, GLboolean transpose, GLfloat* value);
extern glUniformMatrix2x4fvFunc _glUniformMatrix2x4fv;
#define glUniformMatrix2x4fv VE_ASSERT(_glUniformMatrix2x4fv);_glUniformMatrix2x4fv
typedef void (APIENTRY *glUniformMatrix4x2fvFunc)(GLint location, GLsizei count, GLboolean transpose, GLfloat* value);
extern glUniformMatrix4x2fvFunc _glUniformMatrix4x2fv;
#define glUniformMatrix4x2fv VE_ASSERT(_glUniformMatrix4x2fv);_glUniformMatrix4x2fv
typedef void (APIENTRY *glUniformMatrix3x4fvFunc)(GLint location, GLsizei count, GLboolean transpose, GLfloat* value);
extern glUniformMatrix3x4fvFunc _glUniformMatrix3x4fv;
#define glUniformMatrix3x4fv VE_ASSERT(_glUniformMatrix3x4fv);_glUniformMatrix3x4fv
typedef void (APIENTRY *glUniformMatrix4x3fvFunc)(GLint location, GLsizei count, GLboolean transpose, GLfloat* value);
extern glUniformMatrix4x3fvFunc _glUniformMatrix4x3fv;
#define glUniformMatrix4x3fv VE_ASSERT(_glUniformMatrix4x3fv);_glUniformMatrix4x3fv
typedef void (APIENTRY *glColorMaskiFunc)(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
extern glColorMaskiFunc _glColorMaski;
#define glColorMaski VE_ASSERT(_glColorMaski);_glColorMaski
typedef void (APIENTRY *glGetBooleani_vFunc)(GLenum target, GLuint index, GLboolean* data);
extern glGetBooleani_vFunc _glGetBooleani_v;
#define glGetBooleani_v VE_ASSERT(_glGetBooleani_v);_glGetBooleani_v
typedef void (APIENTRY *glGetIntegeri_vFunc)(GLenum target, GLuint index, GLint* data);
extern glGetIntegeri_vFunc _glGetIntegeri_v;
#define glGetIntegeri_v VE_ASSERT(_glGetIntegeri_v);_glGetIntegeri_v
typedef void (APIENTRY *glEnableiFunc)(GLenum target, GLuint index);
extern glEnableiFunc _glEnablei;
#define glEnablei VE_ASSERT(_glEnablei);_glEnablei
typedef void (APIENTRY *glDisableiFunc)(GLenum target, GLuint index);
extern glDisableiFunc _glDisablei;
#define glDisablei VE_ASSERT(_glDisablei);_glDisablei
typedef GLboolean (APIENTRY *glIsEnablediFunc)(GLenum target, GLuint index);
extern glIsEnablediFunc _glIsEnabledi;
#define glIsEnabledi _glIsEnabledi
typedef void (APIENTRY *glBeginTransformFeedbackFunc)(GLenum primitiveMode);
extern glBeginTransformFeedbackFunc _glBeginTransformFeedback;
#define glBeginTransformFeedback VE_ASSERT(_glBeginTransformFeedback);_glBeginTransformFeedback
typedef void (APIENTRY *glEndTransformFeedbackFunc)();
extern glEndTransformFeedbackFunc _glEndTransformFeedback;
#define glEndTransformFeedback VE_ASSERT(_glEndTransformFeedback);_glEndTransformFeedback
typedef void (APIENTRY *glBindBufferRangeFunc)(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
extern glBindBufferRangeFunc _glBindBufferRange;
#define glBindBufferRange VE_ASSERT(_glBindBufferRange);_glBindBufferRange
typedef void (APIENTRY *glBindBufferBaseFunc)(GLenum target, GLuint index, GLuint buffer);
extern glBindBufferBaseFunc _glBindBufferBase;
#define glBindBufferBase VE_ASSERT(_glBindBufferBase);_glBindBufferBase
typedef void (APIENTRY *glTransformFeedbackVaryingsFunc)(GLuint program, GLsizei count, GLchar* const* varyings, GLenum bufferMode);
extern glTransformFeedbackVaryingsFunc _glTransformFeedbackVaryings;
#define glTransformFeedbackVaryings VE_ASSERT(_glTransformFeedbackVaryings);_glTransformFeedbackVaryings
typedef void (APIENTRY *glGetTransformFeedbackVaryingFunc)(GLuint program, GLuint index, GLsizei bufSize, GLsizei* length, GLsizei* size, GLenum* type, GLchar* name);
extern glGetTransformFeedbackVaryingFunc _glGetTransformFeedbackVarying;
#define glGetTransformFeedbackVarying VE_ASSERT(_glGetTransformFeedbackVarying);_glGetTransformFeedbackVarying
typedef void (APIENTRY *glClampColorFunc)(GLenum target, GLenum clamp);
extern glClampColorFunc _glClampColor;
#define glClampColor VE_ASSERT(_glClampColor);_glClampColor
typedef void (APIENTRY *glBeginConditionalRenderFunc)(GLuint id, GLenum mode);
extern glBeginConditionalRenderFunc _glBeginConditionalRender;
#define glBeginConditionalRender VE_ASSERT(_glBeginConditionalRender);_glBeginConditionalRender
typedef void (APIENTRY *glEndConditionalRenderFunc)();
extern glEndConditionalRenderFunc _glEndConditionalRender;
#define glEndConditionalRender VE_ASSERT(_glEndConditionalRender);_glEndConditionalRender
typedef void (APIENTRY *glVertexAttribIPointerFunc)(GLuint index, GLint size, GLenum type, GLsizei stride, GLvoid* pointer);
extern glVertexAttribIPointerFunc _glVertexAttribIPointer;
#define glVertexAttribIPointer VE_ASSERT(_glVertexAttribIPointer);_glVertexAttribIPointer
typedef void (APIENTRY *glGetVertexAttribIivFunc)(GLuint index, GLenum pname, GLint* params);
extern glGetVertexAttribIivFunc _glGetVertexAttribIiv;
#define glGetVertexAttribIiv VE_ASSERT(_glGetVertexAttribIiv);_glGetVertexAttribIiv
typedef void (APIENTRY *glGetVertexAttribIuivFunc)(GLuint index, GLenum pname, GLuint* params);
extern glGetVertexAttribIuivFunc _glGetVertexAttribIuiv;
#define glGetVertexAttribIuiv VE_ASSERT(_glGetVertexAttribIuiv);_glGetVertexAttribIuiv
typedef void (APIENTRY *glVertexAttribI1iFunc)(GLuint index, GLint x);
extern glVertexAttribI1iFunc _glVertexAttribI1i;
#define glVertexAttribI1i VE_ASSERT(_glVertexAttribI1i);_glVertexAttribI1i
typedef void (APIENTRY *glVertexAttribI2iFunc)(GLuint index, GLint x, GLint y);
extern glVertexAttribI2iFunc _glVertexAttribI2i;
#define glVertexAttribI2i VE_ASSERT(_glVertexAttribI2i);_glVertexAttribI2i
typedef void (APIENTRY *glVertexAttribI3iFunc)(GLuint index, GLint x, GLint y, GLint z);
extern glVertexAttribI3iFunc _glVertexAttribI3i;
#define glVertexAttribI3i VE_ASSERT(_glVertexAttribI3i);_glVertexAttribI3i
typedef void (APIENTRY *glVertexAttribI4iFunc)(GLuint index, GLint x, GLint y, GLint z, GLint w);
extern glVertexAttribI4iFunc _glVertexAttribI4i;
#define glVertexAttribI4i VE_ASSERT(_glVertexAttribI4i);_glVertexAttribI4i
typedef void (APIENTRY *glVertexAttribI1uiFunc)(GLuint index, GLuint x);
extern glVertexAttribI1uiFunc _glVertexAttribI1ui;
#define glVertexAttribI1ui VE_ASSERT(_glVertexAttribI1ui);_glVertexAttribI1ui
typedef void (APIENTRY *glVertexAttribI2uiFunc)(GLuint index, GLuint x, GLuint y);
extern glVertexAttribI2uiFunc _glVertexAttribI2ui;
#define glVertexAttribI2ui VE_ASSERT(_glVertexAttribI2ui);_glVertexAttribI2ui
typedef void (APIENTRY *glVertexAttribI3uiFunc)(GLuint index, GLuint x, GLuint y, GLuint z);
extern glVertexAttribI3uiFunc _glVertexAttribI3ui;
#define glVertexAttribI3ui VE_ASSERT(_glVertexAttribI3ui);_glVertexAttribI3ui
typedef void (APIENTRY *glVertexAttribI4uiFunc)(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
extern glVertexAttribI4uiFunc _glVertexAttribI4ui;
#define glVertexAttribI4ui VE_ASSERT(_glVertexAttribI4ui);_glVertexAttribI4ui
typedef void (APIENTRY *glVertexAttribI1ivFunc)(GLuint index, GLint* v);
extern glVertexAttribI1ivFunc _glVertexAttribI1iv;
#define glVertexAttribI1iv VE_ASSERT(_glVertexAttribI1iv);_glVertexAttribI1iv
typedef void (APIENTRY *glVertexAttribI2ivFunc)(GLuint index, GLint* v);
extern glVertexAttribI2ivFunc _glVertexAttribI2iv;
#define glVertexAttribI2iv VE_ASSERT(_glVertexAttribI2iv);_glVertexAttribI2iv
typedef void (APIENTRY *glVertexAttribI3ivFunc)(GLuint index, GLint* v);
extern glVertexAttribI3ivFunc _glVertexAttribI3iv;
#define glVertexAttribI3iv VE_ASSERT(_glVertexAttribI3iv);_glVertexAttribI3iv
typedef void (APIENTRY *glVertexAttribI4ivFunc)(GLuint index, GLint* v);
extern glVertexAttribI4ivFunc _glVertexAttribI4iv;
#define glVertexAttribI4iv VE_ASSERT(_glVertexAttribI4iv);_glVertexAttribI4iv
typedef void (APIENTRY *glVertexAttribI1uivFunc)(GLuint index, GLuint* v);
extern glVertexAttribI1uivFunc _glVertexAttribI1uiv;
#define glVertexAttribI1uiv VE_ASSERT(_glVertexAttribI1uiv);_glVertexAttribI1uiv
typedef void (APIENTRY *glVertexAttribI2uivFunc)(GLuint index, GLuint* v);
extern glVertexAttribI2uivFunc _glVertexAttribI2uiv;
#define glVertexAttribI2uiv VE_ASSERT(_glVertexAttribI2uiv);_glVertexAttribI2uiv
typedef void (APIENTRY *glVertexAttribI3uivFunc)(GLuint index, GLuint* v);
extern glVertexAttribI3uivFunc _glVertexAttribI3uiv;
#define glVertexAttribI3uiv VE_ASSERT(_glVertexAttribI3uiv);_glVertexAttribI3uiv
typedef void (APIENTRY *glVertexAttribI4uivFunc)(GLuint index, GLuint* v);
extern glVertexAttribI4uivFunc _glVertexAttribI4uiv;
#define glVertexAttribI4uiv VE_ASSERT(_glVertexAttribI4uiv);_glVertexAttribI4uiv
typedef void (APIENTRY *glVertexAttribI4bvFunc)(GLuint index, GLbyte* v);
extern glVertexAttribI4bvFunc _glVertexAttribI4bv;
#define glVertexAttribI4bv VE_ASSERT(_glVertexAttribI4bv);_glVertexAttribI4bv
typedef void (APIENTRY *glVertexAttribI4svFunc)(GLuint index, GLshort* v);
extern glVertexAttribI4svFunc _glVertexAttribI4sv;
#define glVertexAttribI4sv VE_ASSERT(_glVertexAttribI4sv);_glVertexAttribI4sv
typedef void (APIENTRY *glVertexAttribI4ubvFunc)(GLuint index, GLubyte* v);
extern glVertexAttribI4ubvFunc _glVertexAttribI4ubv;
#define glVertexAttribI4ubv VE_ASSERT(_glVertexAttribI4ubv);_glVertexAttribI4ubv
typedef void (APIENTRY *glVertexAttribI4usvFunc)(GLuint index, GLushort* v);
extern glVertexAttribI4usvFunc _glVertexAttribI4usv;
#define glVertexAttribI4usv VE_ASSERT(_glVertexAttribI4usv);_glVertexAttribI4usv
typedef void (APIENTRY *glGetUniformuivFunc)(GLuint program, GLint location, GLuint* params);
extern glGetUniformuivFunc _glGetUniformuiv;
#define glGetUniformuiv VE_ASSERT(_glGetUniformuiv);_glGetUniformuiv
typedef void (APIENTRY *glBindFragDataLocationFunc)(GLuint program, GLuint color, GLchar* name);
extern glBindFragDataLocationFunc _glBindFragDataLocation;
#define glBindFragDataLocation VE_ASSERT(_glBindFragDataLocation);_glBindFragDataLocation
typedef GLint (APIENTRY *glGetFragDataLocationFunc)(GLuint program, GLchar* name);
extern glGetFragDataLocationFunc _glGetFragDataLocation;
#define glGetFragDataLocation _glGetFragDataLocation
typedef void (APIENTRY *glUniform1uiFunc)(GLint location, GLuint v0);
extern glUniform1uiFunc _glUniform1ui;
#define glUniform1ui VE_ASSERT(_glUniform1ui);_glUniform1ui
typedef void (APIENTRY *glUniform2uiFunc)(GLint location, GLuint v0, GLuint v1);
extern glUniform2uiFunc _glUniform2ui;
#define glUniform2ui VE_ASSERT(_glUniform2ui);_glUniform2ui
typedef void (APIENTRY *glUniform3uiFunc)(GLint location, GLuint v0, GLuint v1, GLuint v2);
extern glUniform3uiFunc _glUniform3ui;
#define glUniform3ui VE_ASSERT(_glUniform3ui);_glUniform3ui
typedef void (APIENTRY *glUniform4uiFunc)(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
extern glUniform4uiFunc _glUniform4ui;
#define glUniform4ui VE_ASSERT(_glUniform4ui);_glUniform4ui
typedef void (APIENTRY *glUniform1uivFunc)(GLint location, GLsizei count, GLuint* value);
extern glUniform1uivFunc _glUniform1uiv;
#define glUniform1uiv VE_ASSERT(_glUniform1uiv);_glUniform1uiv
typedef void (APIENTRY *glUniform2uivFunc)(GLint location, GLsizei count, GLuint* value);
extern glUniform2uivFunc _glUniform2uiv;
#define glUniform2uiv VE_ASSERT(_glUniform2uiv);_glUniform2uiv
typedef void (APIENTRY *glUniform3uivFunc)(GLint location, GLsizei count, GLuint* value);
extern glUniform3uivFunc _glUniform3uiv;
#define glUniform3uiv VE_ASSERT(_glUniform3uiv);_glUniform3uiv
typedef void (APIENTRY *glUniform4uivFunc)(GLint location, GLsizei count, GLuint* value);
extern glUniform4uivFunc _glUniform4uiv;
#define glUniform4uiv VE_ASSERT(_glUniform4uiv);_glUniform4uiv
typedef void (APIENTRY *glTexParameterIivFunc)(GLenum target, GLenum pname, GLint* params);
extern glTexParameterIivFunc _glTexParameterIiv;
#define glTexParameterIiv VE_ASSERT(_glTexParameterIiv);_glTexParameterIiv
typedef void (APIENTRY *glTexParameterIuivFunc)(GLenum target, GLenum pname, GLuint* params);
extern glTexParameterIuivFunc _glTexParameterIuiv;
#define glTexParameterIuiv VE_ASSERT(_glTexParameterIuiv);_glTexParameterIuiv
typedef void (APIENTRY *glGetTexParameterIivFunc)(GLenum target, GLenum pname, GLint* params);
extern glGetTexParameterIivFunc _glGetTexParameterIiv;
#define glGetTexParameterIiv VE_ASSERT(_glGetTexParameterIiv);_glGetTexParameterIiv
typedef void (APIENTRY *glGetTexParameterIuivFunc)(GLenum target, GLenum pname, GLuint* params);
extern glGetTexParameterIuivFunc _glGetTexParameterIuiv;
#define glGetTexParameterIuiv VE_ASSERT(_glGetTexParameterIuiv);_glGetTexParameterIuiv
typedef void (APIENTRY *glClearBufferivFunc)(GLenum buffer, GLint drawbuffer, GLint* value);
extern glClearBufferivFunc _glClearBufferiv;
#define glClearBufferiv VE_ASSERT(_glClearBufferiv);_glClearBufferiv
typedef void (APIENTRY *glClearBufferuivFunc)(GLenum buffer, GLint drawbuffer, GLuint* value);
extern glClearBufferuivFunc _glClearBufferuiv;
#define glClearBufferuiv VE_ASSERT(_glClearBufferuiv);_glClearBufferuiv
typedef void (APIENTRY *glClearBufferfvFunc)(GLenum buffer, GLint drawbuffer, GLfloat* value);
extern glClearBufferfvFunc _glClearBufferfv;
#define glClearBufferfv VE_ASSERT(_glClearBufferfv);_glClearBufferfv
typedef void (APIENTRY *glClearBufferfiFunc)(GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
extern glClearBufferfiFunc _glClearBufferfi;
#define glClearBufferfi VE_ASSERT(_glClearBufferfi);_glClearBufferfi
typedef const GLubyte * (APIENTRY *glGetStringiFunc)(GLenum name, GLuint index);
extern glGetStringiFunc _glGetStringi;
#define glGetStringi _glGetStringi
/* OpenGL 3.0 also reuses entry points from these extensions: */
/* ARB_framebuffer_object */
/* ARB_map_buffer_range */
/* ARB_vertex_array_object */
typedef void (APIENTRY *glDrawArraysInstancedFunc)(GLenum mode, GLint first, GLsizei count, GLsizei instancecount);
extern glDrawArraysInstancedFunc _glDrawArraysInstanced;
#define glDrawArraysInstanced VE_ASSERT(_glDrawArraysInstanced);_glDrawArraysInstanced
typedef void (APIENTRY *glDrawElementsInstancedFunc)(GLenum mode, GLsizei count, GLenum type, GLvoid* indices, GLsizei instancecount);
extern glDrawElementsInstancedFunc _glDrawElementsInstanced;
#define glDrawElementsInstanced VE_ASSERT(_glDrawElementsInstanced);_glDrawElementsInstanced
typedef void (APIENTRY *glTexBufferFunc)(GLenum target, GLenum internalformat, GLuint buffer);
extern glTexBufferFunc _glTexBuffer;
#define glTexBuffer VE_ASSERT(_glTexBuffer);_glTexBuffer
typedef void (APIENTRY *glPrimitiveRestartIndexFunc)(GLuint index);
extern glPrimitiveRestartIndexFunc _glPrimitiveRestartIndex;
#define glPrimitiveRestartIndex VE_ASSERT(_glPrimitiveRestartIndex);_glPrimitiveRestartIndex
/* OpenGL 3.1 also reuses entry points from these extensions: */
/* ARB_copy_buffer */
/* ARB_uniform_buffer_object */
typedef void (APIENTRY *glGetInteger64i_vFunc)(GLenum target, GLuint index, GLint64* data);
extern glGetInteger64i_vFunc _glGetInteger64i_v;
#define glGetInteger64i_v VE_ASSERT(_glGetInteger64i_v);_glGetInteger64i_v
typedef void (APIENTRY *glGetBufferParameteri64vFunc)(GLenum target, GLenum pname, GLint64* params);
extern glGetBufferParameteri64vFunc _glGetBufferParameteri64v;
#define glGetBufferParameteri64v VE_ASSERT(_glGetBufferParameteri64v);_glGetBufferParameteri64v
typedef void (APIENTRY *glFramebufferTextureFunc)(GLenum target, GLenum attachment, GLuint texture, GLint level);
extern glFramebufferTextureFunc _glFramebufferTexture;
#define glFramebufferTexture VE_ASSERT(_glFramebufferTexture);_glFramebufferTexture
/* OpenGL 3.2 also reuses entry points from these extensions: */
/* ARB_draw_elements_base_vertex */
/* ARB_provoking_vertex */
/* ARB_sync */
/* ARB_texture_multisample */
typedef void (APIENTRY *glVertexAttribDivisorFunc)(GLuint index, GLuint divisor);
extern glVertexAttribDivisorFunc _glVertexAttribDivisor;
#define glVertexAttribDivisor VE_ASSERT(_glVertexAttribDivisor);_glVertexAttribDivisor
/* OpenGL 3.3 also reuses entry points from these extensions: */
/* ARB_blend_func_extended */
/* ARB_sampler_objects */
/* ARB_explicit_attrib_location, but it has none */
/* ARB_occlusion_query2 (no entry points) */
/* ARB_shader_bit_encoding (no entry points) */
/* ARB_texture_rgb10_a2ui (no entry points) */
/* ARB_texture_swizzle (no entry points) */
/* ARB_timer_query */
/* ARB_vertex_type_2_10_10_10_rev */
typedef void (APIENTRY *glMinSampleShadingFunc)(GLfloat value);
extern glMinSampleShadingFunc _glMinSampleShading;
#define glMinSampleShading VE_ASSERT(_glMinSampleShading);_glMinSampleShading
typedef void (APIENTRY *glBlendEquationiFunc)(GLuint buf, GLenum mode);
extern glBlendEquationiFunc _glBlendEquationi;
#define glBlendEquationi VE_ASSERT(_glBlendEquationi);_glBlendEquationi
typedef void (APIENTRY *glBlendEquationSeparateiFunc)(GLuint buf, GLenum modeRGB, GLenum modeAlpha);
extern glBlendEquationSeparateiFunc _glBlendEquationSeparatei;
#define glBlendEquationSeparatei VE_ASSERT(_glBlendEquationSeparatei);_glBlendEquationSeparatei
typedef void (APIENTRY *glBlendFunciFunc)(GLuint buf, GLenum src, GLenum dst);
extern glBlendFunciFunc _glBlendFunci;
#define glBlendFunci VE_ASSERT(_glBlendFunci);_glBlendFunci
typedef void (APIENTRY *glBlendFuncSeparateiFunc)(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
extern glBlendFuncSeparateiFunc _glBlendFuncSeparatei;
#define glBlendFuncSeparatei VE_ASSERT(_glBlendFuncSeparatei);_glBlendFuncSeparatei
/* OpenGL 4.0 also reuses entry points from these extensions: */
/* ARB_texture_query_lod (no entry points) */
/* ARB_draw_indirect */
/* ARB_gpu_shader5 (no entry points) */
/* ARB_gpu_shader_fp64 */
/* ARB_shader_subroutine */
/* ARB_tessellation_shader */
/* ARB_texture_buffer_object_rgb32 (no entry points) */
/* ARB_texture_cube_map_array (no entry points) */
/* ARB_texture_gather (no entry points) */
/* ARB_transform_feedback2 */
/* ARB_transform_feedback3 */
/* OpenGL 4.1 reuses entry points from these extensions: */
/* ARB_ES2_compatibility */
/* ARB_get_program_binary */
/* ARB_separate_shader_objects */
/* ARB_shader_precision (no entry points) */
/* ARB_vertex_attrib_64bit */
/* ARB_viewport_array */
/* OpenGL 4.2 reuses entry points from these extensions: */
/* ARB_base_instance */
/* ARB_shading_language_420pack (no entry points) */
/* ARB_transform_feedback_instanced */
/* ARB_compressed_texture_pixel_storage (no entry points) */
/* ARB_conservative_depth (no entry points) */
/* ARB_internalformat_query */
/* ARB_map_buffer_alignment (no entry points) */
/* ARB_shader_atomic_counters */
/* ARB_shader_image_load_store */
/* ARB_shading_language_packing (no entry points) */
/* ARB_texture_storage */
/* OpenGL 4.3 reuses entry points from these extensions: */
/* ARB_arrays_of_arrays (no entry points, GLSL only) */
/* ARB_fragment_layer_viewport (no entry points, GLSL only) */
/* ARB_shader_image_size (no entry points, GLSL only) */
/* ARB_ES3_compatibility (no entry points) */
/* ARB_clear_buffer_object */
/* ARB_compute_shader */
/* ARB_copy_image */
/* KHR_debug (includes ARB_debug_output commands promoted to KHR without suffixes) */
/* ARB_explicit_uniform_location (no entry points) */
/* ARB_framebuffer_no_attachments */
/* ARB_internalformat_query2 */
/* ARB_invalidate_subdata */
/* ARB_multi_draw_indirect */
/* ARB_program_interface_query */
/* ARB_robust_buffer_access_behavior (no entry points) */
/* ARB_shader_storage_buffer_object */
/* ARB_stencil_texturing (no entry points) */
/* ARB_texture_buffer_range */
/* ARB_texture_query_levels (no entry points) */
/* ARB_texture_storage_multisample */
/* ARB_texture_view */
/* ARB_vertex_attrib_binding */
typedef void (APIENTRY *glActiveTextureARBFunc)(GLenum texture);
extern glActiveTextureARBFunc _glActiveTextureARB;
#define glActiveTextureARB VE_ASSERT(_glActiveTextureARB);_glActiveTextureARB
typedef void (APIENTRY *glClientActiveTextureARBFunc)(GLenum texture);
extern glClientActiveTextureARBFunc _glClientActiveTextureARB;
#define glClientActiveTextureARB VE_ASSERT(_glClientActiveTextureARB);_glClientActiveTextureARB
typedef void (APIENTRY *glMultiTexCoord1dARBFunc)(GLenum target, GLdouble s);
extern glMultiTexCoord1dARBFunc _glMultiTexCoord1dARB;
#define glMultiTexCoord1dARB VE_ASSERT(_glMultiTexCoord1dARB);_glMultiTexCoord1dARB
typedef void (APIENTRY *glMultiTexCoord1dvARBFunc)(GLenum target, GLdouble* v);
extern glMultiTexCoord1dvARBFunc _glMultiTexCoord1dvARB;
#define glMultiTexCoord1dvARB VE_ASSERT(_glMultiTexCoord1dvARB);_glMultiTexCoord1dvARB
typedef void (APIENTRY *glMultiTexCoord1fARBFunc)(GLenum target, GLfloat s);
extern glMultiTexCoord1fARBFunc _glMultiTexCoord1fARB;
#define glMultiTexCoord1fARB VE_ASSERT(_glMultiTexCoord1fARB);_glMultiTexCoord1fARB
typedef void (APIENTRY *glMultiTexCoord1fvARBFunc)(GLenum target, GLfloat* v);
extern glMultiTexCoord1fvARBFunc _glMultiTexCoord1fvARB;
#define glMultiTexCoord1fvARB VE_ASSERT(_glMultiTexCoord1fvARB);_glMultiTexCoord1fvARB
typedef void (APIENTRY *glMultiTexCoord1iARBFunc)(GLenum target, GLint s);
extern glMultiTexCoord1iARBFunc _glMultiTexCoord1iARB;
#define glMultiTexCoord1iARB VE_ASSERT(_glMultiTexCoord1iARB);_glMultiTexCoord1iARB
typedef void (APIENTRY *glMultiTexCoord1ivARBFunc)(GLenum target, GLint* v);
extern glMultiTexCoord1ivARBFunc _glMultiTexCoord1ivARB;
#define glMultiTexCoord1ivARB VE_ASSERT(_glMultiTexCoord1ivARB);_glMultiTexCoord1ivARB
typedef void (APIENTRY *glMultiTexCoord1sARBFunc)(GLenum target, GLshort s);
extern glMultiTexCoord1sARBFunc _glMultiTexCoord1sARB;
#define glMultiTexCoord1sARB VE_ASSERT(_glMultiTexCoord1sARB);_glMultiTexCoord1sARB
typedef void (APIENTRY *glMultiTexCoord1svARBFunc)(GLenum target, GLshort* v);
extern glMultiTexCoord1svARBFunc _glMultiTexCoord1svARB;
#define glMultiTexCoord1svARB VE_ASSERT(_glMultiTexCoord1svARB);_glMultiTexCoord1svARB
typedef void (APIENTRY *glMultiTexCoord2dARBFunc)(GLenum target, GLdouble s, GLdouble t);
extern glMultiTexCoord2dARBFunc _glMultiTexCoord2dARB;
#define glMultiTexCoord2dARB VE_ASSERT(_glMultiTexCoord2dARB);_glMultiTexCoord2dARB
typedef void (APIENTRY *glMultiTexCoord2dvARBFunc)(GLenum target, GLdouble* v);
extern glMultiTexCoord2dvARBFunc _glMultiTexCoord2dvARB;
#define glMultiTexCoord2dvARB VE_ASSERT(_glMultiTexCoord2dvARB);_glMultiTexCoord2dvARB
typedef void (APIENTRY *glMultiTexCoord2fARBFunc)(GLenum target, GLfloat s, GLfloat t);
extern glMultiTexCoord2fARBFunc _glMultiTexCoord2fARB;
#define glMultiTexCoord2fARB VE_ASSERT(_glMultiTexCoord2fARB);_glMultiTexCoord2fARB
typedef void (APIENTRY *glMultiTexCoord2fvARBFunc)(GLenum target, GLfloat* v);
extern glMultiTexCoord2fvARBFunc _glMultiTexCoord2fvARB;
#define glMultiTexCoord2fvARB VE_ASSERT(_glMultiTexCoord2fvARB);_glMultiTexCoord2fvARB
typedef void (APIENTRY *glMultiTexCoord2iARBFunc)(GLenum target, GLint s, GLint t);
extern glMultiTexCoord2iARBFunc _glMultiTexCoord2iARB;
#define glMultiTexCoord2iARB VE_ASSERT(_glMultiTexCoord2iARB);_glMultiTexCoord2iARB
typedef void (APIENTRY *glMultiTexCoord2ivARBFunc)(GLenum target, GLint* v);
extern glMultiTexCoord2ivARBFunc _glMultiTexCoord2ivARB;
#define glMultiTexCoord2ivARB VE_ASSERT(_glMultiTexCoord2ivARB);_glMultiTexCoord2ivARB
typedef void (APIENTRY *glMultiTexCoord2sARBFunc)(GLenum target, GLshort s, GLshort t);
extern glMultiTexCoord2sARBFunc _glMultiTexCoord2sARB;
#define glMultiTexCoord2sARB VE_ASSERT(_glMultiTexCoord2sARB);_glMultiTexCoord2sARB
typedef void (APIENTRY *glMultiTexCoord2svARBFunc)(GLenum target, GLshort* v);
extern glMultiTexCoord2svARBFunc _glMultiTexCoord2svARB;
#define glMultiTexCoord2svARB VE_ASSERT(_glMultiTexCoord2svARB);_glMultiTexCoord2svARB
typedef void (APIENTRY *glMultiTexCoord3dARBFunc)(GLenum target, GLdouble s, GLdouble t, GLdouble r);
extern glMultiTexCoord3dARBFunc _glMultiTexCoord3dARB;
#define glMultiTexCoord3dARB VE_ASSERT(_glMultiTexCoord3dARB);_glMultiTexCoord3dARB
typedef void (APIENTRY *glMultiTexCoord3dvARBFunc)(GLenum target, GLdouble* v);
extern glMultiTexCoord3dvARBFunc _glMultiTexCoord3dvARB;
#define glMultiTexCoord3dvARB VE_ASSERT(_glMultiTexCoord3dvARB);_glMultiTexCoord3dvARB
typedef void (APIENTRY *glMultiTexCoord3fARBFunc)(GLenum target, GLfloat s, GLfloat t, GLfloat r);
extern glMultiTexCoord3fARBFunc _glMultiTexCoord3fARB;
#define glMultiTexCoord3fARB VE_ASSERT(_glMultiTexCoord3fARB);_glMultiTexCoord3fARB
typedef void (APIENTRY *glMultiTexCoord3fvARBFunc)(GLenum target, GLfloat* v);
extern glMultiTexCoord3fvARBFunc _glMultiTexCoord3fvARB;
#define glMultiTexCoord3fvARB VE_ASSERT(_glMultiTexCoord3fvARB);_glMultiTexCoord3fvARB
typedef void (APIENTRY *glMultiTexCoord3iARBFunc)(GLenum target, GLint s, GLint t, GLint r);
extern glMultiTexCoord3iARBFunc _glMultiTexCoord3iARB;
#define glMultiTexCoord3iARB VE_ASSERT(_glMultiTexCoord3iARB);_glMultiTexCoord3iARB
typedef void (APIENTRY *glMultiTexCoord3ivARBFunc)(GLenum target, GLint* v);
extern glMultiTexCoord3ivARBFunc _glMultiTexCoord3ivARB;
#define glMultiTexCoord3ivARB VE_ASSERT(_glMultiTexCoord3ivARB);_glMultiTexCoord3ivARB
typedef void (APIENTRY *glMultiTexCoord3sARBFunc)(GLenum target, GLshort s, GLshort t, GLshort r);
extern glMultiTexCoord3sARBFunc _glMultiTexCoord3sARB;
#define glMultiTexCoord3sARB VE_ASSERT(_glMultiTexCoord3sARB);_glMultiTexCoord3sARB
typedef void (APIENTRY *glMultiTexCoord3svARBFunc)(GLenum target, GLshort* v);
extern glMultiTexCoord3svARBFunc _glMultiTexCoord3svARB;
#define glMultiTexCoord3svARB VE_ASSERT(_glMultiTexCoord3svARB);_glMultiTexCoord3svARB
typedef void (APIENTRY *glMultiTexCoord4dARBFunc)(GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
extern glMultiTexCoord4dARBFunc _glMultiTexCoord4dARB;
#define glMultiTexCoord4dARB VE_ASSERT(_glMultiTexCoord4dARB);_glMultiTexCoord4dARB
typedef void (APIENTRY *glMultiTexCoord4dvARBFunc)(GLenum target, GLdouble* v);
extern glMultiTexCoord4dvARBFunc _glMultiTexCoord4dvARB;
#define glMultiTexCoord4dvARB VE_ASSERT(_glMultiTexCoord4dvARB);_glMultiTexCoord4dvARB
typedef void (APIENTRY *glMultiTexCoord4fARBFunc)(GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
extern glMultiTexCoord4fARBFunc _glMultiTexCoord4fARB;
#define glMultiTexCoord4fARB VE_ASSERT(_glMultiTexCoord4fARB);_glMultiTexCoord4fARB
typedef void (APIENTRY *glMultiTexCoord4fvARBFunc)(GLenum target, GLfloat* v);
extern glMultiTexCoord4fvARBFunc _glMultiTexCoord4fvARB;
#define glMultiTexCoord4fvARB VE_ASSERT(_glMultiTexCoord4fvARB);_glMultiTexCoord4fvARB
typedef void (APIENTRY *glMultiTexCoord4iARBFunc)(GLenum target, GLint s, GLint t, GLint r, GLint q);
extern glMultiTexCoord4iARBFunc _glMultiTexCoord4iARB;
#define glMultiTexCoord4iARB VE_ASSERT(_glMultiTexCoord4iARB);_glMultiTexCoord4iARB
typedef void (APIENTRY *glMultiTexCoord4ivARBFunc)(GLenum target, GLint* v);
extern glMultiTexCoord4ivARBFunc _glMultiTexCoord4ivARB;
#define glMultiTexCoord4ivARB VE_ASSERT(_glMultiTexCoord4ivARB);_glMultiTexCoord4ivARB
typedef void (APIENTRY *glMultiTexCoord4sARBFunc)(GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
extern glMultiTexCoord4sARBFunc _glMultiTexCoord4sARB;
#define glMultiTexCoord4sARB VE_ASSERT(_glMultiTexCoord4sARB);_glMultiTexCoord4sARB
typedef void (APIENTRY *glMultiTexCoord4svARBFunc)(GLenum target, GLshort* v);
extern glMultiTexCoord4svARBFunc _glMultiTexCoord4svARB;
#define glMultiTexCoord4svARB VE_ASSERT(_glMultiTexCoord4svARB);_glMultiTexCoord4svARB
typedef void (APIENTRY *glLoadTransposeMatrixfARBFunc)(GLfloat* m);
extern glLoadTransposeMatrixfARBFunc _glLoadTransposeMatrixfARB;
#define glLoadTransposeMatrixfARB VE_ASSERT(_glLoadTransposeMatrixfARB);_glLoadTransposeMatrixfARB
typedef void (APIENTRY *glLoadTransposeMatrixdARBFunc)(GLdouble* m);
extern glLoadTransposeMatrixdARBFunc _glLoadTransposeMatrixdARB;
#define glLoadTransposeMatrixdARB VE_ASSERT(_glLoadTransposeMatrixdARB);_glLoadTransposeMatrixdARB
typedef void (APIENTRY *glMultTransposeMatrixfARBFunc)(GLfloat* m);
extern glMultTransposeMatrixfARBFunc _glMultTransposeMatrixfARB;
#define glMultTransposeMatrixfARB VE_ASSERT(_glMultTransposeMatrixfARB);_glMultTransposeMatrixfARB
typedef void (APIENTRY *glMultTransposeMatrixdARBFunc)(GLdouble* m);
extern glMultTransposeMatrixdARBFunc _glMultTransposeMatrixdARB;
#define glMultTransposeMatrixdARB VE_ASSERT(_glMultTransposeMatrixdARB);_glMultTransposeMatrixdARB
typedef void (APIENTRY *glSampleCoverageARBFunc)(GLfloat value, GLboolean invert);
extern glSampleCoverageARBFunc _glSampleCoverageARB;
#define glSampleCoverageARB VE_ASSERT(_glSampleCoverageARB);_glSampleCoverageARB
typedef void (APIENTRY *glCompressedTexImage3DARBFunc)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, GLvoid* data);
extern glCompressedTexImage3DARBFunc _glCompressedTexImage3DARB;
#define glCompressedTexImage3DARB VE_ASSERT(_glCompressedTexImage3DARB);_glCompressedTexImage3DARB
typedef void (APIENTRY *glCompressedTexImage2DARBFunc)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, GLvoid* data);
extern glCompressedTexImage2DARBFunc _glCompressedTexImage2DARB;
#define glCompressedTexImage2DARB VE_ASSERT(_glCompressedTexImage2DARB);_glCompressedTexImage2DARB
typedef void (APIENTRY *glCompressedTexImage1DARBFunc)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, GLvoid* data);
extern glCompressedTexImage1DARBFunc _glCompressedTexImage1DARB;
#define glCompressedTexImage1DARB VE_ASSERT(_glCompressedTexImage1DARB);_glCompressedTexImage1DARB
typedef void (APIENTRY *glCompressedTexSubImage3DARBFunc)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, GLvoid* data);
extern glCompressedTexSubImage3DARBFunc _glCompressedTexSubImage3DARB;
#define glCompressedTexSubImage3DARB VE_ASSERT(_glCompressedTexSubImage3DARB);_glCompressedTexSubImage3DARB
typedef void (APIENTRY *glCompressedTexSubImage2DARBFunc)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, GLvoid* data);
extern glCompressedTexSubImage2DARBFunc _glCompressedTexSubImage2DARB;
#define glCompressedTexSubImage2DARB VE_ASSERT(_glCompressedTexSubImage2DARB);_glCompressedTexSubImage2DARB
typedef void (APIENTRY *glCompressedTexSubImage1DARBFunc)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, GLvoid* data);
extern glCompressedTexSubImage1DARBFunc _glCompressedTexSubImage1DARB;
#define glCompressedTexSubImage1DARB VE_ASSERT(_glCompressedTexSubImage1DARB);_glCompressedTexSubImage1DARB
typedef void (APIENTRY *glGetCompressedTexImageARBFunc)(GLenum target, GLint level, GLvoid* img);
extern glGetCompressedTexImageARBFunc _glGetCompressedTexImageARB;
#define glGetCompressedTexImageARB VE_ASSERT(_glGetCompressedTexImageARB);_glGetCompressedTexImageARB
typedef void (APIENTRY *glPointParameterfARBFunc)(GLenum pname, GLfloat param);
extern glPointParameterfARBFunc _glPointParameterfARB;
#define glPointParameterfARB VE_ASSERT(_glPointParameterfARB);_glPointParameterfARB
typedef void (APIENTRY *glPointParameterfvARBFunc)(GLenum pname, GLfloat* params);
extern glPointParameterfvARBFunc _glPointParameterfvARB;
#define glPointParameterfvARB VE_ASSERT(_glPointParameterfvARB);_glPointParameterfvARB
typedef void (APIENTRY *glWeightbvARBFunc)(GLint size, GLbyte* weights);
extern glWeightbvARBFunc _glWeightbvARB;
#define glWeightbvARB VE_ASSERT(_glWeightbvARB);_glWeightbvARB
typedef void (APIENTRY *glWeightsvARBFunc)(GLint size, GLshort* weights);
extern glWeightsvARBFunc _glWeightsvARB;
#define glWeightsvARB VE_ASSERT(_glWeightsvARB);_glWeightsvARB
typedef void (APIENTRY *glWeightivARBFunc)(GLint size, GLint* weights);
extern glWeightivARBFunc _glWeightivARB;
#define glWeightivARB VE_ASSERT(_glWeightivARB);_glWeightivARB
typedef void (APIENTRY *glWeightfvARBFunc)(GLint size, GLfloat* weights);
extern glWeightfvARBFunc _glWeightfvARB;
#define glWeightfvARB VE_ASSERT(_glWeightfvARB);_glWeightfvARB
typedef void (APIENTRY *glWeightdvARBFunc)(GLint size, GLdouble* weights);
extern glWeightdvARBFunc _glWeightdvARB;
#define glWeightdvARB VE_ASSERT(_glWeightdvARB);_glWeightdvARB
typedef void (APIENTRY *glWeightubvARBFunc)(GLint size, GLubyte* weights);
extern glWeightubvARBFunc _glWeightubvARB;
#define glWeightubvARB VE_ASSERT(_glWeightubvARB);_glWeightubvARB
typedef void (APIENTRY *glWeightusvARBFunc)(GLint size, GLushort* weights);
extern glWeightusvARBFunc _glWeightusvARB;
#define glWeightusvARB VE_ASSERT(_glWeightusvARB);_glWeightusvARB
typedef void (APIENTRY *glWeightuivARBFunc)(GLint size, GLuint* weights);
extern glWeightuivARBFunc _glWeightuivARB;
#define glWeightuivARB VE_ASSERT(_glWeightuivARB);_glWeightuivARB
typedef void (APIENTRY *glWeightPointerARBFunc)(GLint size, GLenum type, GLsizei stride, GLvoid* pointer);
extern glWeightPointerARBFunc _glWeightPointerARB;
#define glWeightPointerARB VE_ASSERT(_glWeightPointerARB);_glWeightPointerARB
typedef void (APIENTRY *glVertexBlendARBFunc)(GLint count);
extern glVertexBlendARBFunc _glVertexBlendARB;
#define glVertexBlendARB VE_ASSERT(_glVertexBlendARB);_glVertexBlendARB
typedef void (APIENTRY *glCurrentPaletteMatrixARBFunc)(GLint index);
extern glCurrentPaletteMatrixARBFunc _glCurrentPaletteMatrixARB;
#define glCurrentPaletteMatrixARB VE_ASSERT(_glCurrentPaletteMatrixARB);_glCurrentPaletteMatrixARB
typedef void (APIENTRY *glMatrixIndexubvARBFunc)(GLint size, GLubyte* indices);
extern glMatrixIndexubvARBFunc _glMatrixIndexubvARB;
#define glMatrixIndexubvARB VE_ASSERT(_glMatrixIndexubvARB);_glMatrixIndexubvARB
typedef void (APIENTRY *glMatrixIndexusvARBFunc)(GLint size, GLushort* indices);
extern glMatrixIndexusvARBFunc _glMatrixIndexusvARB;
#define glMatrixIndexusvARB VE_ASSERT(_glMatrixIndexusvARB);_glMatrixIndexusvARB
typedef void (APIENTRY *glMatrixIndexuivARBFunc)(GLint size, GLuint* indices);
extern glMatrixIndexuivARBFunc _glMatrixIndexuivARB;
#define glMatrixIndexuivARB VE_ASSERT(_glMatrixIndexuivARB);_glMatrixIndexuivARB
typedef void (APIENTRY *glMatrixIndexPointerARBFunc)(GLint size, GLenum type, GLsizei stride, GLvoid* pointer);
extern glMatrixIndexPointerARBFunc _glMatrixIndexPointerARB;
#define glMatrixIndexPointerARB VE_ASSERT(_glMatrixIndexPointerARB);_glMatrixIndexPointerARB
typedef void (APIENTRY *glWindowPos2dARBFunc)(GLdouble x, GLdouble y);
extern glWindowPos2dARBFunc _glWindowPos2dARB;
#define glWindowPos2dARB VE_ASSERT(_glWindowPos2dARB);_glWindowPos2dARB
typedef void (APIENTRY *glWindowPos2dvARBFunc)(GLdouble* v);
extern glWindowPos2dvARBFunc _glWindowPos2dvARB;
#define glWindowPos2dvARB VE_ASSERT(_glWindowPos2dvARB);_glWindowPos2dvARB
typedef void (APIENTRY *glWindowPos2fARBFunc)(GLfloat x, GLfloat y);
extern glWindowPos2fARBFunc _glWindowPos2fARB;
#define glWindowPos2fARB VE_ASSERT(_glWindowPos2fARB);_glWindowPos2fARB
typedef void (APIENTRY *glWindowPos2fvARBFunc)(GLfloat* v);
extern glWindowPos2fvARBFunc _glWindowPos2fvARB;
#define glWindowPos2fvARB VE_ASSERT(_glWindowPos2fvARB);_glWindowPos2fvARB
typedef void (APIENTRY *glWindowPos2iARBFunc)(GLint x, GLint y);
extern glWindowPos2iARBFunc _glWindowPos2iARB;
#define glWindowPos2iARB VE_ASSERT(_glWindowPos2iARB);_glWindowPos2iARB
typedef void (APIENTRY *glWindowPos2ivARBFunc)(GLint* v);
extern glWindowPos2ivARBFunc _glWindowPos2ivARB;
#define glWindowPos2ivARB VE_ASSERT(_glWindowPos2ivARB);_glWindowPos2ivARB
typedef void (APIENTRY *glWindowPos2sARBFunc)(GLshort x, GLshort y);
extern glWindowPos2sARBFunc _glWindowPos2sARB;
#define glWindowPos2sARB VE_ASSERT(_glWindowPos2sARB);_glWindowPos2sARB
typedef void (APIENTRY *glWindowPos2svARBFunc)(GLshort* v);
extern glWindowPos2svARBFunc _glWindowPos2svARB;
#define glWindowPos2svARB VE_ASSERT(_glWindowPos2svARB);_glWindowPos2svARB
typedef void (APIENTRY *glWindowPos3dARBFunc)(GLdouble x, GLdouble y, GLdouble z);
extern glWindowPos3dARBFunc _glWindowPos3dARB;
#define glWindowPos3dARB VE_ASSERT(_glWindowPos3dARB);_glWindowPos3dARB
typedef void (APIENTRY *glWindowPos3dvARBFunc)(GLdouble* v);
extern glWindowPos3dvARBFunc _glWindowPos3dvARB;
#define glWindowPos3dvARB VE_ASSERT(_glWindowPos3dvARB);_glWindowPos3dvARB
typedef void (APIENTRY *glWindowPos3fARBFunc)(GLfloat x, GLfloat y, GLfloat z);
extern glWindowPos3fARBFunc _glWindowPos3fARB;
#define glWindowPos3fARB VE_ASSERT(_glWindowPos3fARB);_glWindowPos3fARB
typedef void (APIENTRY *glWindowPos3fvARBFunc)(GLfloat* v);
extern glWindowPos3fvARBFunc _glWindowPos3fvARB;
#define glWindowPos3fvARB VE_ASSERT(_glWindowPos3fvARB);_glWindowPos3fvARB
typedef void (APIENTRY *glWindowPos3iARBFunc)(GLint x, GLint y, GLint z);
extern glWindowPos3iARBFunc _glWindowPos3iARB;
#define glWindowPos3iARB VE_ASSERT(_glWindowPos3iARB);_glWindowPos3iARB
typedef void (APIENTRY *glWindowPos3ivARBFunc)(GLint* v);
extern glWindowPos3ivARBFunc _glWindowPos3ivARB;
#define glWindowPos3ivARB VE_ASSERT(_glWindowPos3ivARB);_glWindowPos3ivARB
typedef void (APIENTRY *glWindowPos3sARBFunc)(GLshort x, GLshort y, GLshort z);
extern glWindowPos3sARBFunc _glWindowPos3sARB;
#define glWindowPos3sARB VE_ASSERT(_glWindowPos3sARB);_glWindowPos3sARB
typedef void (APIENTRY *glWindowPos3svARBFunc)(GLshort* v);
extern glWindowPos3svARBFunc _glWindowPos3svARB;
#define glWindowPos3svARB VE_ASSERT(_glWindowPos3svARB);_glWindowPos3svARB
typedef void (APIENTRY *glVertexAttrib1dARBFunc)(GLuint index, GLdouble x);
extern glVertexAttrib1dARBFunc _glVertexAttrib1dARB;
#define glVertexAttrib1dARB VE_ASSERT(_glVertexAttrib1dARB);_glVertexAttrib1dARB
typedef void (APIENTRY *glVertexAttrib1dvARBFunc)(GLuint index, GLdouble* v);
extern glVertexAttrib1dvARBFunc _glVertexAttrib1dvARB;
#define glVertexAttrib1dvARB VE_ASSERT(_glVertexAttrib1dvARB);_glVertexAttrib1dvARB
typedef void (APIENTRY *glVertexAttrib1fARBFunc)(GLuint index, GLfloat x);
extern glVertexAttrib1fARBFunc _glVertexAttrib1fARB;
#define glVertexAttrib1fARB VE_ASSERT(_glVertexAttrib1fARB);_glVertexAttrib1fARB
typedef void (APIENTRY *glVertexAttrib1fvARBFunc)(GLuint index, GLfloat* v);
extern glVertexAttrib1fvARBFunc _glVertexAttrib1fvARB;
#define glVertexAttrib1fvARB VE_ASSERT(_glVertexAttrib1fvARB);_glVertexAttrib1fvARB
typedef void (APIENTRY *glVertexAttrib1sARBFunc)(GLuint index, GLshort x);
extern glVertexAttrib1sARBFunc _glVertexAttrib1sARB;
#define glVertexAttrib1sARB VE_ASSERT(_glVertexAttrib1sARB);_glVertexAttrib1sARB
typedef void (APIENTRY *glVertexAttrib1svARBFunc)(GLuint index, GLshort* v);
extern glVertexAttrib1svARBFunc _glVertexAttrib1svARB;
#define glVertexAttrib1svARB VE_ASSERT(_glVertexAttrib1svARB);_glVertexAttrib1svARB
typedef void (APIENTRY *glVertexAttrib2dARBFunc)(GLuint index, GLdouble x, GLdouble y);
extern glVertexAttrib2dARBFunc _glVertexAttrib2dARB;
#define glVertexAttrib2dARB VE_ASSERT(_glVertexAttrib2dARB);_glVertexAttrib2dARB
typedef void (APIENTRY *glVertexAttrib2dvARBFunc)(GLuint index, GLdouble* v);
extern glVertexAttrib2dvARBFunc _glVertexAttrib2dvARB;
#define glVertexAttrib2dvARB VE_ASSERT(_glVertexAttrib2dvARB);_glVertexAttrib2dvARB
typedef void (APIENTRY *glVertexAttrib2fARBFunc)(GLuint index, GLfloat x, GLfloat y);
extern glVertexAttrib2fARBFunc _glVertexAttrib2fARB;
#define glVertexAttrib2fARB VE_ASSERT(_glVertexAttrib2fARB);_glVertexAttrib2fARB
typedef void (APIENTRY *glVertexAttrib2fvARBFunc)(GLuint index, GLfloat* v);
extern glVertexAttrib2fvARBFunc _glVertexAttrib2fvARB;
#define glVertexAttrib2fvARB VE_ASSERT(_glVertexAttrib2fvARB);_glVertexAttrib2fvARB
typedef void (APIENTRY *glVertexAttrib2sARBFunc)(GLuint index, GLshort x, GLshort y);
extern glVertexAttrib2sARBFunc _glVertexAttrib2sARB;
#define glVertexAttrib2sARB VE_ASSERT(_glVertexAttrib2sARB);_glVertexAttrib2sARB
typedef void (APIENTRY *glVertexAttrib2svARBFunc)(GLuint index, GLshort* v);
extern glVertexAttrib2svARBFunc _glVertexAttrib2svARB;
#define glVertexAttrib2svARB VE_ASSERT(_glVertexAttrib2svARB);_glVertexAttrib2svARB
typedef void (APIENTRY *glVertexAttrib3dARBFunc)(GLuint index, GLdouble x, GLdouble y, GLdouble z);
extern glVertexAttrib3dARBFunc _glVertexAttrib3dARB;
#define glVertexAttrib3dARB VE_ASSERT(_glVertexAttrib3dARB);_glVertexAttrib3dARB
typedef void (APIENTRY *glVertexAttrib3dvARBFunc)(GLuint index, GLdouble* v);
extern glVertexAttrib3dvARBFunc _glVertexAttrib3dvARB;
#define glVertexAttrib3dvARB VE_ASSERT(_glVertexAttrib3dvARB);_glVertexAttrib3dvARB
typedef void (APIENTRY *glVertexAttrib3fARBFunc)(GLuint index, GLfloat x, GLfloat y, GLfloat z);
extern glVertexAttrib3fARBFunc _glVertexAttrib3fARB;
#define glVertexAttrib3fARB VE_ASSERT(_glVertexAttrib3fARB);_glVertexAttrib3fARB
typedef void (APIENTRY *glVertexAttrib3fvARBFunc)(GLuint index, GLfloat* v);
extern glVertexAttrib3fvARBFunc _glVertexAttrib3fvARB;
#define glVertexAttrib3fvARB VE_ASSERT(_glVertexAttrib3fvARB);_glVertexAttrib3fvARB
typedef void (APIENTRY *glVertexAttrib3sARBFunc)(GLuint index, GLshort x, GLshort y, GLshort z);
extern glVertexAttrib3sARBFunc _glVertexAttrib3sARB;
#define glVertexAttrib3sARB VE_ASSERT(_glVertexAttrib3sARB);_glVertexAttrib3sARB
typedef void (APIENTRY *glVertexAttrib3svARBFunc)(GLuint index, GLshort* v);
extern glVertexAttrib3svARBFunc _glVertexAttrib3svARB;
#define glVertexAttrib3svARB VE_ASSERT(_glVertexAttrib3svARB);_glVertexAttrib3svARB
typedef void (APIENTRY *glVertexAttrib4NbvARBFunc)(GLuint index, GLbyte* v);
extern glVertexAttrib4NbvARBFunc _glVertexAttrib4NbvARB;
#define glVertexAttrib4NbvARB VE_ASSERT(_glVertexAttrib4NbvARB);_glVertexAttrib4NbvARB
typedef void (APIENTRY *glVertexAttrib4NivARBFunc)(GLuint index, GLint* v);
extern glVertexAttrib4NivARBFunc _glVertexAttrib4NivARB;
#define glVertexAttrib4NivARB VE_ASSERT(_glVertexAttrib4NivARB);_glVertexAttrib4NivARB
typedef void (APIENTRY *glVertexAttrib4NsvARBFunc)(GLuint index, GLshort* v);
extern glVertexAttrib4NsvARBFunc _glVertexAttrib4NsvARB;
#define glVertexAttrib4NsvARB VE_ASSERT(_glVertexAttrib4NsvARB);_glVertexAttrib4NsvARB
typedef void (APIENTRY *glVertexAttrib4NubARBFunc)(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
extern glVertexAttrib4NubARBFunc _glVertexAttrib4NubARB;
#define glVertexAttrib4NubARB VE_ASSERT(_glVertexAttrib4NubARB);_glVertexAttrib4NubARB
typedef void (APIENTRY *glVertexAttrib4NubvARBFunc)(GLuint index, GLubyte* v);
extern glVertexAttrib4NubvARBFunc _glVertexAttrib4NubvARB;
#define glVertexAttrib4NubvARB VE_ASSERT(_glVertexAttrib4NubvARB);_glVertexAttrib4NubvARB
typedef void (APIENTRY *glVertexAttrib4NuivARBFunc)(GLuint index, GLuint* v);
extern glVertexAttrib4NuivARBFunc _glVertexAttrib4NuivARB;
#define glVertexAttrib4NuivARB VE_ASSERT(_glVertexAttrib4NuivARB);_glVertexAttrib4NuivARB
typedef void (APIENTRY *glVertexAttrib4NusvARBFunc)(GLuint index, GLushort* v);
extern glVertexAttrib4NusvARBFunc _glVertexAttrib4NusvARB;
#define glVertexAttrib4NusvARB VE_ASSERT(_glVertexAttrib4NusvARB);_glVertexAttrib4NusvARB
typedef void (APIENTRY *glVertexAttrib4bvARBFunc)(GLuint index, GLbyte* v);
extern glVertexAttrib4bvARBFunc _glVertexAttrib4bvARB;
#define glVertexAttrib4bvARB VE_ASSERT(_glVertexAttrib4bvARB);_glVertexAttrib4bvARB
typedef void (APIENTRY *glVertexAttrib4dARBFunc)(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
extern glVertexAttrib4dARBFunc _glVertexAttrib4dARB;
#define glVertexAttrib4dARB VE_ASSERT(_glVertexAttrib4dARB);_glVertexAttrib4dARB
typedef void (APIENTRY *glVertexAttrib4dvARBFunc)(GLuint index, GLdouble* v);
extern glVertexAttrib4dvARBFunc _glVertexAttrib4dvARB;
#define glVertexAttrib4dvARB VE_ASSERT(_glVertexAttrib4dvARB);_glVertexAttrib4dvARB
typedef void (APIENTRY *glVertexAttrib4fARBFunc)(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
extern glVertexAttrib4fARBFunc _glVertexAttrib4fARB;
#define glVertexAttrib4fARB VE_ASSERT(_glVertexAttrib4fARB);_glVertexAttrib4fARB
typedef void (APIENTRY *glVertexAttrib4fvARBFunc)(GLuint index, GLfloat* v);
extern glVertexAttrib4fvARBFunc _glVertexAttrib4fvARB;
#define glVertexAttrib4fvARB VE_ASSERT(_glVertexAttrib4fvARB);_glVertexAttrib4fvARB
typedef void (APIENTRY *glVertexAttrib4ivARBFunc)(GLuint index, GLint* v);
extern glVertexAttrib4ivARBFunc _glVertexAttrib4ivARB;
#define glVertexAttrib4ivARB VE_ASSERT(_glVertexAttrib4ivARB);_glVertexAttrib4ivARB
typedef void (APIENTRY *glVertexAttrib4sARBFunc)(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
extern glVertexAttrib4sARBFunc _glVertexAttrib4sARB;
#define glVertexAttrib4sARB VE_ASSERT(_glVertexAttrib4sARB);_glVertexAttrib4sARB
typedef void (APIENTRY *glVertexAttrib4svARBFunc)(GLuint index, GLshort* v);
extern glVertexAttrib4svARBFunc _glVertexAttrib4svARB;
#define glVertexAttrib4svARB VE_ASSERT(_glVertexAttrib4svARB);_glVertexAttrib4svARB
typedef void (APIENTRY *glVertexAttrib4ubvARBFunc)(GLuint index, GLubyte* v);
extern glVertexAttrib4ubvARBFunc _glVertexAttrib4ubvARB;
#define glVertexAttrib4ubvARB VE_ASSERT(_glVertexAttrib4ubvARB);_glVertexAttrib4ubvARB
typedef void (APIENTRY *glVertexAttrib4uivARBFunc)(GLuint index, GLuint* v);
extern glVertexAttrib4uivARBFunc _glVertexAttrib4uivARB;
#define glVertexAttrib4uivARB VE_ASSERT(_glVertexAttrib4uivARB);_glVertexAttrib4uivARB
typedef void (APIENTRY *glVertexAttrib4usvARBFunc)(GLuint index, GLushort* v);
extern glVertexAttrib4usvARBFunc _glVertexAttrib4usvARB;
#define glVertexAttrib4usvARB VE_ASSERT(_glVertexAttrib4usvARB);_glVertexAttrib4usvARB
typedef void (APIENTRY *glVertexAttribPointerARBFunc)(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLvoid* pointer);
extern glVertexAttribPointerARBFunc _glVertexAttribPointerARB;
#define glVertexAttribPointerARB VE_ASSERT(_glVertexAttribPointerARB);_glVertexAttribPointerARB
typedef void (APIENTRY *glEnableVertexAttribArrayARBFunc)(GLuint index);
extern glEnableVertexAttribArrayARBFunc _glEnableVertexAttribArrayARB;
#define glEnableVertexAttribArrayARB VE_ASSERT(_glEnableVertexAttribArrayARB);_glEnableVertexAttribArrayARB
typedef void (APIENTRY *glDisableVertexAttribArrayARBFunc)(GLuint index);
extern glDisableVertexAttribArrayARBFunc _glDisableVertexAttribArrayARB;
#define glDisableVertexAttribArrayARB VE_ASSERT(_glDisableVertexAttribArrayARB);_glDisableVertexAttribArrayARB
typedef void (APIENTRY *glProgramStringARBFunc)(GLenum target, GLenum format, GLsizei len, GLvoid* string);
extern glProgramStringARBFunc _glProgramStringARB;
#define glProgramStringARB VE_ASSERT(_glProgramStringARB);_glProgramStringARB
typedef void (APIENTRY *glBindProgramARBFunc)(GLenum target, GLuint program);
extern glBindProgramARBFunc _glBindProgramARB;
#define glBindProgramARB VE_ASSERT(_glBindProgramARB);_glBindProgramARB
typedef void (APIENTRY *glDeleteProgramsARBFunc)(GLsizei n, GLuint* programs);
extern glDeleteProgramsARBFunc _glDeleteProgramsARB;
#define glDeleteProgramsARB VE_ASSERT(_glDeleteProgramsARB);_glDeleteProgramsARB
typedef void (APIENTRY *glGenProgramsARBFunc)(GLsizei n, GLuint* programs);
extern glGenProgramsARBFunc _glGenProgramsARB;
#define glGenProgramsARB VE_ASSERT(_glGenProgramsARB);_glGenProgramsARB
typedef void (APIENTRY *glProgramEnvParameter4dARBFunc)(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
extern glProgramEnvParameter4dARBFunc _glProgramEnvParameter4dARB;
#define glProgramEnvParameter4dARB VE_ASSERT(_glProgramEnvParameter4dARB);_glProgramEnvParameter4dARB
typedef void (APIENTRY *glProgramEnvParameter4dvARBFunc)(GLenum target, GLuint index, GLdouble* params);
extern glProgramEnvParameter4dvARBFunc _glProgramEnvParameter4dvARB;
#define glProgramEnvParameter4dvARB VE_ASSERT(_glProgramEnvParameter4dvARB);_glProgramEnvParameter4dvARB
typedef void (APIENTRY *glProgramEnvParameter4fARBFunc)(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
extern glProgramEnvParameter4fARBFunc _glProgramEnvParameter4fARB;
#define glProgramEnvParameter4fARB VE_ASSERT(_glProgramEnvParameter4fARB);_glProgramEnvParameter4fARB
typedef void (APIENTRY *glProgramEnvParameter4fvARBFunc)(GLenum target, GLuint index, GLfloat* params);
extern glProgramEnvParameter4fvARBFunc _glProgramEnvParameter4fvARB;
#define glProgramEnvParameter4fvARB VE_ASSERT(_glProgramEnvParameter4fvARB);_glProgramEnvParameter4fvARB
typedef void (APIENTRY *glProgramLocalParameter4dARBFunc)(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
extern glProgramLocalParameter4dARBFunc _glProgramLocalParameter4dARB;
#define glProgramLocalParameter4dARB VE_ASSERT(_glProgramLocalParameter4dARB);_glProgramLocalParameter4dARB
typedef void (APIENTRY *glProgramLocalParameter4dvARBFunc)(GLenum target, GLuint index, GLdouble* params);
extern glProgramLocalParameter4dvARBFunc _glProgramLocalParameter4dvARB;
#define glProgramLocalParameter4dvARB VE_ASSERT(_glProgramLocalParameter4dvARB);_glProgramLocalParameter4dvARB
typedef void (APIENTRY *glProgramLocalParameter4fARBFunc)(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
extern glProgramLocalParameter4fARBFunc _glProgramLocalParameter4fARB;
#define glProgramLocalParameter4fARB VE_ASSERT(_glProgramLocalParameter4fARB);_glProgramLocalParameter4fARB
typedef void (APIENTRY *glProgramLocalParameter4fvARBFunc)(GLenum target, GLuint index, GLfloat* params);
extern glProgramLocalParameter4fvARBFunc _glProgramLocalParameter4fvARB;
#define glProgramLocalParameter4fvARB VE_ASSERT(_glProgramLocalParameter4fvARB);_glProgramLocalParameter4fvARB
typedef void (APIENTRY *glGetProgramEnvParameterdvARBFunc)(GLenum target, GLuint index, GLdouble* params);
extern glGetProgramEnvParameterdvARBFunc _glGetProgramEnvParameterdvARB;
#define glGetProgramEnvParameterdvARB VE_ASSERT(_glGetProgramEnvParameterdvARB);_glGetProgramEnvParameterdvARB
typedef void (APIENTRY *glGetProgramEnvParameterfvARBFunc)(GLenum target, GLuint index, GLfloat* params);
extern glGetProgramEnvParameterfvARBFunc _glGetProgramEnvParameterfvARB;
#define glGetProgramEnvParameterfvARB VE_ASSERT(_glGetProgramEnvParameterfvARB);_glGetProgramEnvParameterfvARB
typedef void (APIENTRY *glGetProgramLocalParameterdvARBFunc)(GLenum target, GLuint index, GLdouble* params);
extern glGetProgramLocalParameterdvARBFunc _glGetProgramLocalParameterdvARB;
#define glGetProgramLocalParameterdvARB VE_ASSERT(_glGetProgramLocalParameterdvARB);_glGetProgramLocalParameterdvARB
typedef void (APIENTRY *glGetProgramLocalParameterfvARBFunc)(GLenum target, GLuint index, GLfloat* params);
extern glGetProgramLocalParameterfvARBFunc _glGetProgramLocalParameterfvARB;
#define glGetProgramLocalParameterfvARB VE_ASSERT(_glGetProgramLocalParameterfvARB);_glGetProgramLocalParameterfvARB
typedef void (APIENTRY *glGetProgramivARBFunc)(GLenum target, GLenum pname, GLint* params);
extern glGetProgramivARBFunc _glGetProgramivARB;
#define glGetProgramivARB VE_ASSERT(_glGetProgramivARB);_glGetProgramivARB
typedef void (APIENTRY *glGetProgramStringARBFunc)(GLenum target, GLenum pname, GLvoid* string);
extern glGetProgramStringARBFunc _glGetProgramStringARB;
#define glGetProgramStringARB VE_ASSERT(_glGetProgramStringARB);_glGetProgramStringARB
typedef void (APIENTRY *glGetVertexAttribdvARBFunc)(GLuint index, GLenum pname, GLdouble* params);
extern glGetVertexAttribdvARBFunc _glGetVertexAttribdvARB;
#define glGetVertexAttribdvARB VE_ASSERT(_glGetVertexAttribdvARB);_glGetVertexAttribdvARB
typedef void (APIENTRY *glGetVertexAttribfvARBFunc)(GLuint index, GLenum pname, GLfloat* params);
extern glGetVertexAttribfvARBFunc _glGetVertexAttribfvARB;
#define glGetVertexAttribfvARB VE_ASSERT(_glGetVertexAttribfvARB);_glGetVertexAttribfvARB
typedef void (APIENTRY *glGetVertexAttribivARBFunc)(GLuint index, GLenum pname, GLint* params);
extern glGetVertexAttribivARBFunc _glGetVertexAttribivARB;
#define glGetVertexAttribivARB VE_ASSERT(_glGetVertexAttribivARB);_glGetVertexAttribivARB
typedef void (APIENTRY *glGetVertexAttribPointervARBFunc)(GLuint index, GLenum pname, GLvoid** pointer);
extern glGetVertexAttribPointervARBFunc _glGetVertexAttribPointervARB;
#define glGetVertexAttribPointervARB VE_ASSERT(_glGetVertexAttribPointervARB);_glGetVertexAttribPointervARB
typedef GLboolean (APIENTRY *glIsProgramARBFunc)(GLuint program);
extern glIsProgramARBFunc _glIsProgramARB;
#define glIsProgramARB _glIsProgramARB
/* All ARB_fragment_program entry points are shared with ARB_vertex_program. */
typedef void (APIENTRY *glBindBufferARBFunc)(GLenum target, GLuint buffer);
extern glBindBufferARBFunc _glBindBufferARB;
#define glBindBufferARB VE_ASSERT(_glBindBufferARB);_glBindBufferARB
typedef void (APIENTRY *glDeleteBuffersARBFunc)(GLsizei n, GLuint* buffers);
extern glDeleteBuffersARBFunc _glDeleteBuffersARB;
#define glDeleteBuffersARB VE_ASSERT(_glDeleteBuffersARB);_glDeleteBuffersARB
typedef void (APIENTRY *glGenBuffersARBFunc)(GLsizei n, GLuint* buffers);
extern glGenBuffersARBFunc _glGenBuffersARB;
#define glGenBuffersARB VE_ASSERT(_glGenBuffersARB);_glGenBuffersARB
typedef GLboolean (APIENTRY *glIsBufferARBFunc)(GLuint buffer);
extern glIsBufferARBFunc _glIsBufferARB;
#define glIsBufferARB _glIsBufferARB
typedef void (APIENTRY *glBufferDataARBFunc)(GLenum target, GLsizeiptrARB size, GLvoid* data, GLenum usage);
extern glBufferDataARBFunc _glBufferDataARB;
#define glBufferDataARB VE_ASSERT(_glBufferDataARB);_glBufferDataARB
typedef void (APIENTRY *glBufferSubDataARBFunc)(GLenum target, GLintptrARB offset, GLsizeiptrARB size, GLvoid* data);
extern glBufferSubDataARBFunc _glBufferSubDataARB;
#define glBufferSubDataARB VE_ASSERT(_glBufferSubDataARB);_glBufferSubDataARB
typedef void (APIENTRY *glGetBufferSubDataARBFunc)(GLenum target, GLintptrARB offset, GLsizeiptrARB size, GLvoid* data);
extern glGetBufferSubDataARBFunc _glGetBufferSubDataARB;
#define glGetBufferSubDataARB VE_ASSERT(_glGetBufferSubDataARB);_glGetBufferSubDataARB
typedef GLvoid* (APIENTRY *glMapBufferARBFunc)(GLenum target, GLenum access);
extern glMapBufferARBFunc _glMapBufferARB;
#define glMapBufferARB _glMapBufferARB
typedef GLboolean (APIENTRY *glUnmapBufferARBFunc)(GLenum target);
extern glUnmapBufferARBFunc _glUnmapBufferARB;
#define glUnmapBufferARB _glUnmapBufferARB
typedef void (APIENTRY *glGetBufferParameterivARBFunc)(GLenum target, GLenum pname, GLint* params);
extern glGetBufferParameterivARBFunc _glGetBufferParameterivARB;
#define glGetBufferParameterivARB VE_ASSERT(_glGetBufferParameterivARB);_glGetBufferParameterivARB
typedef void (APIENTRY *glGetBufferPointervARBFunc)(GLenum target, GLenum pname, GLvoid** params);
extern glGetBufferPointervARBFunc _glGetBufferPointervARB;
#define glGetBufferPointervARB VE_ASSERT(_glGetBufferPointervARB);_glGetBufferPointervARB
typedef void (APIENTRY *glGenQueriesARBFunc)(GLsizei n, GLuint* ids);
extern glGenQueriesARBFunc _glGenQueriesARB;
#define glGenQueriesARB VE_ASSERT(_glGenQueriesARB);_glGenQueriesARB
typedef void (APIENTRY *glDeleteQueriesARBFunc)(GLsizei n, GLuint* ids);
extern glDeleteQueriesARBFunc _glDeleteQueriesARB;
#define glDeleteQueriesARB VE_ASSERT(_glDeleteQueriesARB);_glDeleteQueriesARB
typedef GLboolean (APIENTRY *glIsQueryARBFunc)(GLuint id);
extern glIsQueryARBFunc _glIsQueryARB;
#define glIsQueryARB _glIsQueryARB
typedef void (APIENTRY *glBeginQueryARBFunc)(GLenum target, GLuint id);
extern glBeginQueryARBFunc _glBeginQueryARB;
#define glBeginQueryARB VE_ASSERT(_glBeginQueryARB);_glBeginQueryARB
typedef void (APIENTRY *glEndQueryARBFunc)(GLenum target);
extern glEndQueryARBFunc _glEndQueryARB;
#define glEndQueryARB VE_ASSERT(_glEndQueryARB);_glEndQueryARB
typedef void (APIENTRY *glGetQueryivARBFunc)(GLenum target, GLenum pname, GLint* params);
extern glGetQueryivARBFunc _glGetQueryivARB;
#define glGetQueryivARB VE_ASSERT(_glGetQueryivARB);_glGetQueryivARB
typedef void (APIENTRY *glGetQueryObjectivARBFunc)(GLuint id, GLenum pname, GLint* params);
extern glGetQueryObjectivARBFunc _glGetQueryObjectivARB;
#define glGetQueryObjectivARB VE_ASSERT(_glGetQueryObjectivARB);_glGetQueryObjectivARB
typedef void (APIENTRY *glGetQueryObjectuivARBFunc)(GLuint id, GLenum pname, GLuint* params);
extern glGetQueryObjectuivARBFunc _glGetQueryObjectuivARB;
#define glGetQueryObjectuivARB VE_ASSERT(_glGetQueryObjectuivARB);_glGetQueryObjectuivARB
typedef void (APIENTRY *glDeleteObjectARBFunc)(GLhandleARB obj);
extern glDeleteObjectARBFunc _glDeleteObjectARB;
#define glDeleteObjectARB VE_ASSERT(_glDeleteObjectARB);_glDeleteObjectARB
typedef GLhandleARB (APIENTRY *glGetHandleARBFunc)(GLenum pname);
extern glGetHandleARBFunc _glGetHandleARB;
#define glGetHandleARB _glGetHandleARB
typedef void (APIENTRY *glDetachObjectARBFunc)(GLhandleARB containerObj, GLhandleARB attachedObj);
extern glDetachObjectARBFunc _glDetachObjectARB;
#define glDetachObjectARB VE_ASSERT(_glDetachObjectARB);_glDetachObjectARB
typedef GLhandleARB (APIENTRY *glCreateShaderObjectARBFunc)(GLenum shaderType);
extern glCreateShaderObjectARBFunc _glCreateShaderObjectARB;
#define glCreateShaderObjectARB _glCreateShaderObjectARB
typedef void (APIENTRY *glShaderSourceARBFunc)(GLhandleARB shaderObj, GLsizei count, GLcharARB** string, GLint* length);
extern glShaderSourceARBFunc _glShaderSourceARB;
#define glShaderSourceARB VE_ASSERT(_glShaderSourceARB);_glShaderSourceARB
typedef void (APIENTRY *glCompileShaderARBFunc)(GLhandleARB shaderObj);
extern glCompileShaderARBFunc _glCompileShaderARB;
#define glCompileShaderARB VE_ASSERT(_glCompileShaderARB);_glCompileShaderARB
typedef GLhandleARB (APIENTRY *glCreateProgramObjectARBFunc)();
extern glCreateProgramObjectARBFunc _glCreateProgramObjectARB;
#define glCreateProgramObjectARB _glCreateProgramObjectARB
typedef void (APIENTRY *glAttachObjectARBFunc)(GLhandleARB containerObj, GLhandleARB obj);
extern glAttachObjectARBFunc _glAttachObjectARB;
#define glAttachObjectARB VE_ASSERT(_glAttachObjectARB);_glAttachObjectARB
typedef void (APIENTRY *glLinkProgramARBFunc)(GLhandleARB programObj);
extern glLinkProgramARBFunc _glLinkProgramARB;
#define glLinkProgramARB VE_ASSERT(_glLinkProgramARB);_glLinkProgramARB
typedef void (APIENTRY *glUseProgramObjectARBFunc)(GLhandleARB programObj);
extern glUseProgramObjectARBFunc _glUseProgramObjectARB;
#define glUseProgramObjectARB VE_ASSERT(_glUseProgramObjectARB);_glUseProgramObjectARB
typedef void (APIENTRY *glValidateProgramARBFunc)(GLhandleARB programObj);
extern glValidateProgramARBFunc _glValidateProgramARB;
#define glValidateProgramARB VE_ASSERT(_glValidateProgramARB);_glValidateProgramARB
typedef void (APIENTRY *glUniform1fARBFunc)(GLint location, GLfloat v0);
extern glUniform1fARBFunc _glUniform1fARB;
#define glUniform1fARB VE_ASSERT(_glUniform1fARB);_glUniform1fARB
typedef void (APIENTRY *glUniform2fARBFunc)(GLint location, GLfloat v0, GLfloat v1);
extern glUniform2fARBFunc _glUniform2fARB;
#define glUniform2fARB VE_ASSERT(_glUniform2fARB);_glUniform2fARB
typedef void (APIENTRY *glUniform3fARBFunc)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
extern glUniform3fARBFunc _glUniform3fARB;
#define glUniform3fARB VE_ASSERT(_glUniform3fARB);_glUniform3fARB
typedef void (APIENTRY *glUniform4fARBFunc)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
extern glUniform4fARBFunc _glUniform4fARB;
#define glUniform4fARB VE_ASSERT(_glUniform4fARB);_glUniform4fARB
typedef void (APIENTRY *glUniform1iARBFunc)(GLint location, GLint v0);
extern glUniform1iARBFunc _glUniform1iARB;
#define glUniform1iARB VE_ASSERT(_glUniform1iARB);_glUniform1iARB
typedef void (APIENTRY *glUniform2iARBFunc)(GLint location, GLint v0, GLint v1);
extern glUniform2iARBFunc _glUniform2iARB;
#define glUniform2iARB VE_ASSERT(_glUniform2iARB);_glUniform2iARB
typedef void (APIENTRY *glUniform3iARBFunc)(GLint location, GLint v0, GLint v1, GLint v2);
extern glUniform3iARBFunc _glUniform3iARB;
#define glUniform3iARB VE_ASSERT(_glUniform3iARB);_glUniform3iARB
typedef void (APIENTRY *glUniform4iARBFunc)(GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
extern glUniform4iARBFunc _glUniform4iARB;
#define glUniform4iARB VE_ASSERT(_glUniform4iARB);_glUniform4iARB
typedef void (APIENTRY *glUniform1fvARBFunc)(GLint location, GLsizei count, GLfloat* value);
extern glUniform1fvARBFunc _glUniform1fvARB;
#define glUniform1fvARB VE_ASSERT(_glUniform1fvARB);_glUniform1fvARB
typedef void (APIENTRY *glUniform2fvARBFunc)(GLint location, GLsizei count, GLfloat* value);
extern glUniform2fvARBFunc _glUniform2fvARB;
#define glUniform2fvARB VE_ASSERT(_glUniform2fvARB);_glUniform2fvARB
typedef void (APIENTRY *glUniform3fvARBFunc)(GLint location, GLsizei count, GLfloat* value);
extern glUniform3fvARBFunc _glUniform3fvARB;
#define glUniform3fvARB VE_ASSERT(_glUniform3fvARB);_glUniform3fvARB
typedef void (APIENTRY *glUniform4fvARBFunc)(GLint location, GLsizei count, GLfloat* value);
extern glUniform4fvARBFunc _glUniform4fvARB;
#define glUniform4fvARB VE_ASSERT(_glUniform4fvARB);_glUniform4fvARB
typedef void (APIENTRY *glUniform1ivARBFunc)(GLint location, GLsizei count, GLint* value);
extern glUniform1ivARBFunc _glUniform1ivARB;
#define glUniform1ivARB VE_ASSERT(_glUniform1ivARB);_glUniform1ivARB
typedef void (APIENTRY *glUniform2ivARBFunc)(GLint location, GLsizei count, GLint* value);
extern glUniform2ivARBFunc _glUniform2ivARB;
#define glUniform2ivARB VE_ASSERT(_glUniform2ivARB);_glUniform2ivARB
typedef void (APIENTRY *glUniform3ivARBFunc)(GLint location, GLsizei count, GLint* value);
extern glUniform3ivARBFunc _glUniform3ivARB;
#define glUniform3ivARB VE_ASSERT(_glUniform3ivARB);_glUniform3ivARB
typedef void (APIENTRY *glUniform4ivARBFunc)(GLint location, GLsizei count, GLint* value);
extern glUniform4ivARBFunc _glUniform4ivARB;
#define glUniform4ivARB VE_ASSERT(_glUniform4ivARB);_glUniform4ivARB
typedef void (APIENTRY *glUniformMatrix2fvARBFunc)(GLint location, GLsizei count, GLboolean transpose, GLfloat* value);
extern glUniformMatrix2fvARBFunc _glUniformMatrix2fvARB;
#define glUniformMatrix2fvARB VE_ASSERT(_glUniformMatrix2fvARB);_glUniformMatrix2fvARB
typedef void (APIENTRY *glUniformMatrix3fvARBFunc)(GLint location, GLsizei count, GLboolean transpose, GLfloat* value);
extern glUniformMatrix3fvARBFunc _glUniformMatrix3fvARB;
#define glUniformMatrix3fvARB VE_ASSERT(_glUniformMatrix3fvARB);_glUniformMatrix3fvARB
typedef void (APIENTRY *glUniformMatrix4fvARBFunc)(GLint location, GLsizei count, GLboolean transpose, GLfloat* value);
extern glUniformMatrix4fvARBFunc _glUniformMatrix4fvARB;
#define glUniformMatrix4fvARB VE_ASSERT(_glUniformMatrix4fvARB);_glUniformMatrix4fvARB
typedef void (APIENTRY *glGetObjectParameterfvARBFunc)(GLhandleARB obj, GLenum pname, GLfloat* params);
extern glGetObjectParameterfvARBFunc _glGetObjectParameterfvARB;
#define glGetObjectParameterfvARB VE_ASSERT(_glGetObjectParameterfvARB);_glGetObjectParameterfvARB
typedef void (APIENTRY *glGetObjectParameterivARBFunc)(GLhandleARB obj, GLenum pname, GLint* params);
extern glGetObjectParameterivARBFunc _glGetObjectParameterivARB;
#define glGetObjectParameterivARB VE_ASSERT(_glGetObjectParameterivARB);_glGetObjectParameterivARB
typedef void (APIENTRY *glGetInfoLogARBFunc)(GLhandleARB obj, GLsizei maxLength, GLsizei* length, GLcharARB* infoLog);
extern glGetInfoLogARBFunc _glGetInfoLogARB;
#define glGetInfoLogARB VE_ASSERT(_glGetInfoLogARB);_glGetInfoLogARB
typedef void (APIENTRY *glGetAttachedObjectsARBFunc)(GLhandleARB containerObj, GLsizei maxCount, GLsizei* count, GLhandleARB* obj);
extern glGetAttachedObjectsARBFunc _glGetAttachedObjectsARB;
#define glGetAttachedObjectsARB VE_ASSERT(_glGetAttachedObjectsARB);_glGetAttachedObjectsARB
typedef GLint (APIENTRY *glGetUniformLocationARBFunc)(GLhandleARB programObj, GLcharARB* name);
extern glGetUniformLocationARBFunc _glGetUniformLocationARB;
#define glGetUniformLocationARB _glGetUniformLocationARB
typedef void (APIENTRY *glGetActiveUniformARBFunc)(GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei* length, GLint* size, GLenum* type, GLcharARB* name);
extern glGetActiveUniformARBFunc _glGetActiveUniformARB;
#define glGetActiveUniformARB VE_ASSERT(_glGetActiveUniformARB);_glGetActiveUniformARB
typedef void (APIENTRY *glGetUniformfvARBFunc)(GLhandleARB programObj, GLint location, GLfloat* params);
extern glGetUniformfvARBFunc _glGetUniformfvARB;
#define glGetUniformfvARB VE_ASSERT(_glGetUniformfvARB);_glGetUniformfvARB
typedef void (APIENTRY *glGetUniformivARBFunc)(GLhandleARB programObj, GLint location, GLint* params);
extern glGetUniformivARBFunc _glGetUniformivARB;
#define glGetUniformivARB VE_ASSERT(_glGetUniformivARB);_glGetUniformivARB
typedef void (APIENTRY *glGetShaderSourceARBFunc)(GLhandleARB obj, GLsizei maxLength, GLsizei* length, GLcharARB* source);
extern glGetShaderSourceARBFunc _glGetShaderSourceARB;
#define glGetShaderSourceARB VE_ASSERT(_glGetShaderSourceARB);_glGetShaderSourceARB
typedef void (APIENTRY *glBindAttribLocationARBFunc)(GLhandleARB programObj, GLuint index, GLcharARB* name);
extern glBindAttribLocationARBFunc _glBindAttribLocationARB;
#define glBindAttribLocationARB VE_ASSERT(_glBindAttribLocationARB);_glBindAttribLocationARB
typedef void (APIENTRY *glGetActiveAttribARBFunc)(GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei* length, GLint* size, GLenum* type, GLcharARB* name);
extern glGetActiveAttribARBFunc _glGetActiveAttribARB;
#define glGetActiveAttribARB VE_ASSERT(_glGetActiveAttribARB);_glGetActiveAttribARB
typedef GLint (APIENTRY *glGetAttribLocationARBFunc)(GLhandleARB programObj, GLcharARB* name);
extern glGetAttribLocationARBFunc _glGetAttribLocationARB;
#define glGetAttribLocationARB _glGetAttribLocationARB
typedef void (APIENTRY *glDrawBuffersARBFunc)(GLsizei n, GLenum* bufs);
extern glDrawBuffersARBFunc _glDrawBuffersARB;
#define glDrawBuffersARB VE_ASSERT(_glDrawBuffersARB);_glDrawBuffersARB
typedef void (APIENTRY *glClampColorARBFunc)(GLenum target, GLenum clamp);
extern glClampColorARBFunc _glClampColorARB;
#define glClampColorARB VE_ASSERT(_glClampColorARB);_glClampColorARB
typedef void (APIENTRY *glDrawArraysInstancedARBFunc)(GLenum mode, GLint first, GLsizei count, GLsizei primcount);
extern glDrawArraysInstancedARBFunc _glDrawArraysInstancedARB;
#define glDrawArraysInstancedARB VE_ASSERT(_glDrawArraysInstancedARB);_glDrawArraysInstancedARB
typedef void (APIENTRY *glDrawElementsInstancedARBFunc)(GLenum mode, GLsizei count, GLenum type, GLvoid* indices, GLsizei primcount);
extern glDrawElementsInstancedARBFunc _glDrawElementsInstancedARB;
#define glDrawElementsInstancedARB VE_ASSERT(_glDrawElementsInstancedARB);_glDrawElementsInstancedARB
typedef GLboolean (APIENTRY *glIsRenderbufferFunc)(GLuint renderbuffer);
extern glIsRenderbufferFunc _glIsRenderbuffer;
#define glIsRenderbuffer _glIsRenderbuffer
typedef void (APIENTRY *glBindRenderbufferFunc)(GLenum target, GLuint renderbuffer);
extern glBindRenderbufferFunc _glBindRenderbuffer;
#define glBindRenderbuffer VE_ASSERT(_glBindRenderbuffer);_glBindRenderbuffer
typedef void (APIENTRY *glDeleteRenderbuffersFunc)(GLsizei n, GLuint* renderbuffers);
extern glDeleteRenderbuffersFunc _glDeleteRenderbuffers;
#define glDeleteRenderbuffers VE_ASSERT(_glDeleteRenderbuffers);_glDeleteRenderbuffers
typedef void (APIENTRY *glGenRenderbuffersFunc)(GLsizei n, GLuint* renderbuffers);
extern glGenRenderbuffersFunc _glGenRenderbuffers;
#define glGenRenderbuffers VE_ASSERT(_glGenRenderbuffers);_glGenRenderbuffers
typedef void (APIENTRY *glRenderbufferStorageFunc)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
extern glRenderbufferStorageFunc _glRenderbufferStorage;
#define glRenderbufferStorage VE_ASSERT(_glRenderbufferStorage);_glRenderbufferStorage
typedef void (APIENTRY *glGetRenderbufferParameterivFunc)(GLenum target, GLenum pname, GLint* params);
extern glGetRenderbufferParameterivFunc _glGetRenderbufferParameteriv;
#define glGetRenderbufferParameteriv VE_ASSERT(_glGetRenderbufferParameteriv);_glGetRenderbufferParameteriv
typedef GLboolean (APIENTRY *glIsFramebufferFunc)(GLuint framebuffer);
extern glIsFramebufferFunc _glIsFramebuffer;
#define glIsFramebuffer _glIsFramebuffer
typedef void (APIENTRY *glBindFramebufferFunc)(GLenum target, GLuint framebuffer);
extern glBindFramebufferFunc _glBindFramebuffer;
#define glBindFramebuffer VE_ASSERT(_glBindFramebuffer);_glBindFramebuffer
typedef void (APIENTRY *glDeleteFramebuffersFunc)(GLsizei n, GLuint* framebuffers);
extern glDeleteFramebuffersFunc _glDeleteFramebuffers;
#define glDeleteFramebuffers VE_ASSERT(_glDeleteFramebuffers);_glDeleteFramebuffers
typedef void (APIENTRY *glGenFramebuffersFunc)(GLsizei n, GLuint* framebuffers);
extern glGenFramebuffersFunc _glGenFramebuffers;
#define glGenFramebuffers VE_ASSERT(_glGenFramebuffers);_glGenFramebuffers
typedef GLenum (APIENTRY *glCheckFramebufferStatusFunc)(GLenum target);
extern glCheckFramebufferStatusFunc _glCheckFramebufferStatus;
#define glCheckFramebufferStatus _glCheckFramebufferStatus
typedef void (APIENTRY *glFramebufferTexture1DFunc)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
extern glFramebufferTexture1DFunc _glFramebufferTexture1D;
#define glFramebufferTexture1D VE_ASSERT(_glFramebufferTexture1D);_glFramebufferTexture1D
typedef void (APIENTRY *glFramebufferTexture2DFunc)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
extern glFramebufferTexture2DFunc _glFramebufferTexture2D;
#define glFramebufferTexture2D VE_ASSERT(_glFramebufferTexture2D);_glFramebufferTexture2D
typedef void (APIENTRY *glFramebufferTexture3DFunc)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
extern glFramebufferTexture3DFunc _glFramebufferTexture3D;
#define glFramebufferTexture3D VE_ASSERT(_glFramebufferTexture3D);_glFramebufferTexture3D
typedef void (APIENTRY *glFramebufferRenderbufferFunc)(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
extern glFramebufferRenderbufferFunc _glFramebufferRenderbuffer;
#define glFramebufferRenderbuffer VE_ASSERT(_glFramebufferRenderbuffer);_glFramebufferRenderbuffer
typedef void (APIENTRY *glGetFramebufferAttachmentParameterivFunc)(GLenum target, GLenum attachment, GLenum pname, GLint* params);
extern glGetFramebufferAttachmentParameterivFunc _glGetFramebufferAttachmentParameteriv;
#define glGetFramebufferAttachmentParameteriv VE_ASSERT(_glGetFramebufferAttachmentParameteriv);_glGetFramebufferAttachmentParameteriv
typedef void (APIENTRY *glGenerateMipmapFunc)(GLenum target);
extern glGenerateMipmapFunc _glGenerateMipmap;
#define glGenerateMipmap VE_ASSERT(_glGenerateMipmap);_glGenerateMipmap
typedef void (APIENTRY *glBlitFramebufferFunc)(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
extern glBlitFramebufferFunc _glBlitFramebuffer;
#define glBlitFramebuffer VE_ASSERT(_glBlitFramebuffer);_glBlitFramebuffer
typedef void (APIENTRY *glRenderbufferStorageMultisampleFunc)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
extern glRenderbufferStorageMultisampleFunc _glRenderbufferStorageMultisample;
#define glRenderbufferStorageMultisample VE_ASSERT(_glRenderbufferStorageMultisample);_glRenderbufferStorageMultisample
typedef void (APIENTRY *glFramebufferTextureLayerFunc)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
extern glFramebufferTextureLayerFunc _glFramebufferTextureLayer;
#define glFramebufferTextureLayer VE_ASSERT(_glFramebufferTextureLayer);_glFramebufferTextureLayer
typedef void (APIENTRY *glProgramParameteriARBFunc)(GLuint program, GLenum pname, GLint value);
extern glProgramParameteriARBFunc _glProgramParameteriARB;
#define glProgramParameteriARB VE_ASSERT(_glProgramParameteriARB);_glProgramParameteriARB
typedef void (APIENTRY *glFramebufferTextureARBFunc)(GLenum target, GLenum attachment, GLuint texture, GLint level);
extern glFramebufferTextureARBFunc _glFramebufferTextureARB;
#define glFramebufferTextureARB VE_ASSERT(_glFramebufferTextureARB);_glFramebufferTextureARB
typedef void (APIENTRY *glFramebufferTextureLayerARBFunc)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
extern glFramebufferTextureLayerARBFunc _glFramebufferTextureLayerARB;
#define glFramebufferTextureLayerARB VE_ASSERT(_glFramebufferTextureLayerARB);_glFramebufferTextureLayerARB
typedef void (APIENTRY *glFramebufferTextureFaceARBFunc)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);
extern glFramebufferTextureFaceARBFunc _glFramebufferTextureFaceARB;
#define glFramebufferTextureFaceARB VE_ASSERT(_glFramebufferTextureFaceARB);_glFramebufferTextureFaceARB
typedef void (APIENTRY *glVertexAttribDivisorARBFunc)(GLuint index, GLuint divisor);
extern glVertexAttribDivisorARBFunc _glVertexAttribDivisorARB;
#define glVertexAttribDivisorARB VE_ASSERT(_glVertexAttribDivisorARB);_glVertexAttribDivisorARB
typedef GLvoid* (APIENTRY *glMapBufferRangeFunc)(GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);
extern glMapBufferRangeFunc _glMapBufferRange;
#define glMapBufferRange _glMapBufferRange
typedef void (APIENTRY *glFlushMappedBufferRangeFunc)(GLenum target, GLintptr offset, GLsizeiptr length);
extern glFlushMappedBufferRangeFunc _glFlushMappedBufferRange;
#define glFlushMappedBufferRange VE_ASSERT(_glFlushMappedBufferRange);_glFlushMappedBufferRange
typedef void (APIENTRY *glTexBufferARBFunc)(GLenum target, GLenum internalformat, GLuint buffer);
extern glTexBufferARBFunc _glTexBufferARB;
#define glTexBufferARB VE_ASSERT(_glTexBufferARB);_glTexBufferARB
typedef void (APIENTRY *glBindVertexArrayFunc)(GLuint array);
extern glBindVertexArrayFunc _glBindVertexArray;
#define glBindVertexArray VE_ASSERT(_glBindVertexArray);_glBindVertexArray
typedef void (APIENTRY *glDeleteVertexArraysFunc)(GLsizei n, GLuint* arrays);
extern glDeleteVertexArraysFunc _glDeleteVertexArrays;
#define glDeleteVertexArrays VE_ASSERT(_glDeleteVertexArrays);_glDeleteVertexArrays
typedef void (APIENTRY *glGenVertexArraysFunc)(GLsizei n, GLuint* arrays);
extern glGenVertexArraysFunc _glGenVertexArrays;
#define glGenVertexArrays VE_ASSERT(_glGenVertexArrays);_glGenVertexArrays
typedef GLboolean (APIENTRY *glIsVertexArrayFunc)(GLuint array);
extern glIsVertexArrayFunc _glIsVertexArray;
#define glIsVertexArray _glIsVertexArray
typedef void (APIENTRY *glGetUniformIndicesFunc)(GLuint program, GLsizei uniformCount, GLchar* const* uniformNames, GLuint* uniformIndices);
extern glGetUniformIndicesFunc _glGetUniformIndices;
#define glGetUniformIndices VE_ASSERT(_glGetUniformIndices);_glGetUniformIndices
typedef void (APIENTRY *glGetActiveUniformsivFunc)(GLuint program, GLsizei uniformCount, GLuint* uniformIndices, GLenum pname, GLint* params);
extern glGetActiveUniformsivFunc _glGetActiveUniformsiv;
#define glGetActiveUniformsiv VE_ASSERT(_glGetActiveUniformsiv);_glGetActiveUniformsiv
typedef void (APIENTRY *glGetActiveUniformNameFunc)(GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei* length, GLchar* uniformName);
extern glGetActiveUniformNameFunc _glGetActiveUniformName;
#define glGetActiveUniformName VE_ASSERT(_glGetActiveUniformName);_glGetActiveUniformName
typedef GLuint (APIENTRY *glGetUniformBlockIndexFunc)(GLuint program, GLchar* uniformBlockName);
extern glGetUniformBlockIndexFunc _glGetUniformBlockIndex;
#define glGetUniformBlockIndex _glGetUniformBlockIndex
typedef void (APIENTRY *glGetActiveUniformBlockivFunc)(GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint* params);
extern glGetActiveUniformBlockivFunc _glGetActiveUniformBlockiv;
#define glGetActiveUniformBlockiv VE_ASSERT(_glGetActiveUniformBlockiv);_glGetActiveUniformBlockiv
typedef void (APIENTRY *glGetActiveUniformBlockNameFunc)(GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei* length, GLchar* uniformBlockName);
extern glGetActiveUniformBlockNameFunc _glGetActiveUniformBlockName;
#define glGetActiveUniformBlockName VE_ASSERT(_glGetActiveUniformBlockName);_glGetActiveUniformBlockName
typedef void (APIENTRY *glUniformBlockBindingFunc)(GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);
extern glUniformBlockBindingFunc _glUniformBlockBinding;
#define glUniformBlockBinding VE_ASSERT(_glUniformBlockBinding);_glUniformBlockBinding
typedef void (APIENTRY *glCopyBufferSubDataFunc)(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
extern glCopyBufferSubDataFunc _glCopyBufferSubData;
#define glCopyBufferSubData VE_ASSERT(_glCopyBufferSubData);_glCopyBufferSubData
typedef void (APIENTRY *glDrawElementsBaseVertexFunc)(GLenum mode, GLsizei count, GLenum type, GLvoid* indices, GLint basevertex);
extern glDrawElementsBaseVertexFunc _glDrawElementsBaseVertex;
#define glDrawElementsBaseVertex VE_ASSERT(_glDrawElementsBaseVertex);_glDrawElementsBaseVertex
typedef void (APIENTRY *glDrawRangeElementsBaseVertexFunc)(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, GLvoid* indices, GLint basevertex);
extern glDrawRangeElementsBaseVertexFunc _glDrawRangeElementsBaseVertex;
#define glDrawRangeElementsBaseVertex VE_ASSERT(_glDrawRangeElementsBaseVertex);_glDrawRangeElementsBaseVertex
typedef void (APIENTRY *glDrawElementsInstancedBaseVertexFunc)(GLenum mode, GLsizei count, GLenum type, GLvoid* indices, GLsizei instancecount, GLint basevertex);
extern glDrawElementsInstancedBaseVertexFunc _glDrawElementsInstancedBaseVertex;
#define glDrawElementsInstancedBaseVertex VE_ASSERT(_glDrawElementsInstancedBaseVertex);_glDrawElementsInstancedBaseVertex
typedef void (APIENTRY *glMultiDrawElementsBaseVertexFunc)(GLenum mode, GLsizei* count, GLenum type, GLvoid* const* indices, GLsizei drawcount, GLint* basevertex);
extern glMultiDrawElementsBaseVertexFunc _glMultiDrawElementsBaseVertex;
#define glMultiDrawElementsBaseVertex VE_ASSERT(_glMultiDrawElementsBaseVertex);_glMultiDrawElementsBaseVertex
typedef void (APIENTRY *glProvokingVertexFunc)(GLenum mode);
extern glProvokingVertexFunc _glProvokingVertex;
#define glProvokingVertex VE_ASSERT(_glProvokingVertex);_glProvokingVertex
typedef GLsync (APIENTRY *glFenceSyncFunc)(GLenum condition, GLbitfield flags);
extern glFenceSyncFunc _glFenceSync;
#define glFenceSync _glFenceSync
typedef GLboolean (APIENTRY *glIsSyncFunc)(GLsync sync);
extern glIsSyncFunc _glIsSync;
#define glIsSync _glIsSync
typedef void (APIENTRY *glDeleteSyncFunc)(GLsync sync);
extern glDeleteSyncFunc _glDeleteSync;
#define glDeleteSync VE_ASSERT(_glDeleteSync);_glDeleteSync
typedef GLenum (APIENTRY *glClientWaitSyncFunc)(GLsync sync, GLbitfield flags, GLuint64 timeout);
extern glClientWaitSyncFunc _glClientWaitSync;
#define glClientWaitSync _glClientWaitSync
typedef void (APIENTRY *glWaitSyncFunc)(GLsync sync, GLbitfield flags, GLuint64 timeout);
extern glWaitSyncFunc _glWaitSync;
#define glWaitSync VE_ASSERT(_glWaitSync);_glWaitSync
typedef void (APIENTRY *glGetInteger64vFunc)(GLenum pname, GLint64* params);
extern glGetInteger64vFunc _glGetInteger64v;
#define glGetInteger64v VE_ASSERT(_glGetInteger64v);_glGetInteger64v
typedef void (APIENTRY *glGetSyncivFunc)(GLsync sync, GLenum pname, GLsizei bufSize, GLsizei* length, GLint* values);
extern glGetSyncivFunc _glGetSynciv;
#define glGetSynciv VE_ASSERT(_glGetSynciv);_glGetSynciv
typedef void (APIENTRY *glTexImage2DMultisampleFunc)(GLenum target, GLsizei samples, GLint internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
extern glTexImage2DMultisampleFunc _glTexImage2DMultisample;
#define glTexImage2DMultisample VE_ASSERT(_glTexImage2DMultisample);_glTexImage2DMultisample
typedef void (APIENTRY *glTexImage3DMultisampleFunc)(GLenum target, GLsizei samples, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
extern glTexImage3DMultisampleFunc _glTexImage3DMultisample;
#define glTexImage3DMultisample VE_ASSERT(_glTexImage3DMultisample);_glTexImage3DMultisample
typedef void (APIENTRY *glGetMultisamplefvFunc)(GLenum pname, GLuint index, GLfloat* val);
extern glGetMultisamplefvFunc _glGetMultisamplefv;
#define glGetMultisamplefv VE_ASSERT(_glGetMultisamplefv);_glGetMultisamplefv
typedef void (APIENTRY *glSampleMaskiFunc)(GLuint index, GLbitfield mask);
extern glSampleMaskiFunc _glSampleMaski;
#define glSampleMaski VE_ASSERT(_glSampleMaski);_glSampleMaski
typedef void (APIENTRY *glBlendEquationiARBFunc)(GLuint buf, GLenum mode);
extern glBlendEquationiARBFunc _glBlendEquationiARB;
#define glBlendEquationiARB VE_ASSERT(_glBlendEquationiARB);_glBlendEquationiARB
typedef void (APIENTRY *glBlendEquationSeparateiARBFunc)(GLuint buf, GLenum modeRGB, GLenum modeAlpha);
extern glBlendEquationSeparateiARBFunc _glBlendEquationSeparateiARB;
#define glBlendEquationSeparateiARB VE_ASSERT(_glBlendEquationSeparateiARB);_glBlendEquationSeparateiARB
typedef void (APIENTRY *glBlendFunciARBFunc)(GLuint buf, GLenum src, GLenum dst);
extern glBlendFunciARBFunc _glBlendFunciARB;
#define glBlendFunciARB VE_ASSERT(_glBlendFunciARB);_glBlendFunciARB
typedef void (APIENTRY *glBlendFuncSeparateiARBFunc)(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
extern glBlendFuncSeparateiARBFunc _glBlendFuncSeparateiARB;
#define glBlendFuncSeparateiARB VE_ASSERT(_glBlendFuncSeparateiARB);_glBlendFuncSeparateiARB
typedef void (APIENTRY *glMinSampleShadingARBFunc)(GLfloat value);
extern glMinSampleShadingARBFunc _glMinSampleShadingARB;
#define glMinSampleShadingARB VE_ASSERT(_glMinSampleShadingARB);_glMinSampleShadingARB
typedef void (APIENTRY *glNamedStringARBFunc)(GLenum type, GLint namelen, GLchar* name, GLint stringlen, GLchar* string);
extern glNamedStringARBFunc _glNamedStringARB;
#define glNamedStringARB VE_ASSERT(_glNamedStringARB);_glNamedStringARB
typedef void (APIENTRY *glDeleteNamedStringARBFunc)(GLint namelen, GLchar* name);
extern glDeleteNamedStringARBFunc _glDeleteNamedStringARB;
#define glDeleteNamedStringARB VE_ASSERT(_glDeleteNamedStringARB);_glDeleteNamedStringARB
typedef void (APIENTRY *glCompileShaderIncludeARBFunc)(GLuint shader, GLsizei count, GLchar** path, GLint* length);
extern glCompileShaderIncludeARBFunc _glCompileShaderIncludeARB;
#define glCompileShaderIncludeARB VE_ASSERT(_glCompileShaderIncludeARB);_glCompileShaderIncludeARB
typedef GLboolean (APIENTRY *glIsNamedStringARBFunc)(GLint namelen, GLchar* name);
extern glIsNamedStringARBFunc _glIsNamedStringARB;
#define glIsNamedStringARB _glIsNamedStringARB
typedef void (APIENTRY *glGetNamedStringARBFunc)(GLint namelen, GLchar* name, GLsizei bufSize, GLint* stringlen, GLchar* string);
extern glGetNamedStringARBFunc _glGetNamedStringARB;
#define glGetNamedStringARB VE_ASSERT(_glGetNamedStringARB);_glGetNamedStringARB
typedef void (APIENTRY *glGetNamedStringivARBFunc)(GLint namelen, GLchar* name, GLenum pname, GLint* params);
extern glGetNamedStringivARBFunc _glGetNamedStringivARB;
#define glGetNamedStringivARB VE_ASSERT(_glGetNamedStringivARB);_glGetNamedStringivARB
typedef void (APIENTRY *glBindFragDataLocationIndexedFunc)(GLuint program, GLuint colorNumber, GLuint index, GLchar* name);
extern glBindFragDataLocationIndexedFunc _glBindFragDataLocationIndexed;
#define glBindFragDataLocationIndexed VE_ASSERT(_glBindFragDataLocationIndexed);_glBindFragDataLocationIndexed
typedef GLint (APIENTRY *glGetFragDataIndexFunc)(GLuint program, GLchar* name);
extern glGetFragDataIndexFunc _glGetFragDataIndex;
#define glGetFragDataIndex _glGetFragDataIndex
typedef void (APIENTRY *glGenSamplersFunc)(GLsizei count, GLuint* samplers);
extern glGenSamplersFunc _glGenSamplers;
#define glGenSamplers VE_ASSERT(_glGenSamplers);_glGenSamplers
typedef void (APIENTRY *glDeleteSamplersFunc)(GLsizei count, GLuint* samplers);
extern glDeleteSamplersFunc _glDeleteSamplers;
#define glDeleteSamplers VE_ASSERT(_glDeleteSamplers);_glDeleteSamplers
typedef GLboolean (APIENTRY *glIsSamplerFunc)(GLuint sampler);
extern glIsSamplerFunc _glIsSampler;
#define glIsSampler _glIsSampler
typedef void (APIENTRY *glBindSamplerFunc)(GLuint unit, GLuint sampler);
extern glBindSamplerFunc _glBindSampler;
#define glBindSampler VE_ASSERT(_glBindSampler);_glBindSampler
typedef void (APIENTRY *glSamplerParameteriFunc)(GLuint sampler, GLenum pname, GLint param);
extern glSamplerParameteriFunc _glSamplerParameteri;
#define glSamplerParameteri VE_ASSERT(_glSamplerParameteri);_glSamplerParameteri
typedef void (APIENTRY *glSamplerParameterivFunc)(GLuint sampler, GLenum pname, GLint* param);
extern glSamplerParameterivFunc _glSamplerParameteriv;
#define glSamplerParameteriv VE_ASSERT(_glSamplerParameteriv);_glSamplerParameteriv
typedef void (APIENTRY *glSamplerParameterfFunc)(GLuint sampler, GLenum pname, GLfloat param);
extern glSamplerParameterfFunc _glSamplerParameterf;
#define glSamplerParameterf VE_ASSERT(_glSamplerParameterf);_glSamplerParameterf
typedef void (APIENTRY *glSamplerParameterfvFunc)(GLuint sampler, GLenum pname, GLfloat* param);
extern glSamplerParameterfvFunc _glSamplerParameterfv;
#define glSamplerParameterfv VE_ASSERT(_glSamplerParameterfv);_glSamplerParameterfv
typedef void (APIENTRY *glSamplerParameterIivFunc)(GLuint sampler, GLenum pname, GLint* param);
extern glSamplerParameterIivFunc _glSamplerParameterIiv;
#define glSamplerParameterIiv VE_ASSERT(_glSamplerParameterIiv);_glSamplerParameterIiv
typedef void (APIENTRY *glSamplerParameterIuivFunc)(GLuint sampler, GLenum pname, GLuint* param);
extern glSamplerParameterIuivFunc _glSamplerParameterIuiv;
#define glSamplerParameterIuiv VE_ASSERT(_glSamplerParameterIuiv);_glSamplerParameterIuiv
typedef void (APIENTRY *glGetSamplerParameterivFunc)(GLuint sampler, GLenum pname, GLint* params);
extern glGetSamplerParameterivFunc _glGetSamplerParameteriv;
#define glGetSamplerParameteriv VE_ASSERT(_glGetSamplerParameteriv);_glGetSamplerParameteriv
typedef void (APIENTRY *glGetSamplerParameterIivFunc)(GLuint sampler, GLenum pname, GLint* params);
extern glGetSamplerParameterIivFunc _glGetSamplerParameterIiv;
#define glGetSamplerParameterIiv VE_ASSERT(_glGetSamplerParameterIiv);_glGetSamplerParameterIiv
typedef void (APIENTRY *glGetSamplerParameterfvFunc)(GLuint sampler, GLenum pname, GLfloat* params);
extern glGetSamplerParameterfvFunc _glGetSamplerParameterfv;
#define glGetSamplerParameterfv VE_ASSERT(_glGetSamplerParameterfv);_glGetSamplerParameterfv
typedef void (APIENTRY *glGetSamplerParameterIuivFunc)(GLuint sampler, GLenum pname, GLuint* params);
extern glGetSamplerParameterIuivFunc _glGetSamplerParameterIuiv;
#define glGetSamplerParameterIuiv VE_ASSERT(_glGetSamplerParameterIuiv);_glGetSamplerParameterIuiv
typedef void (APIENTRY *glQueryCounterFunc)(GLuint id, GLenum target);
extern glQueryCounterFunc _glQueryCounter;
#define glQueryCounter VE_ASSERT(_glQueryCounter);_glQueryCounter
typedef void (APIENTRY *glGetQueryObjecti64vFunc)(GLuint id, GLenum pname, GLint64* params);
extern glGetQueryObjecti64vFunc _glGetQueryObjecti64v;
#define glGetQueryObjecti64v VE_ASSERT(_glGetQueryObjecti64v);_glGetQueryObjecti64v
typedef void (APIENTRY *glGetQueryObjectui64vFunc)(GLuint id, GLenum pname, GLuint64* params);
extern glGetQueryObjectui64vFunc _glGetQueryObjectui64v;
#define glGetQueryObjectui64v VE_ASSERT(_glGetQueryObjectui64v);_glGetQueryObjectui64v
typedef void (APIENTRY *glVertexP2uiFunc)(GLenum type, GLuint value);
extern glVertexP2uiFunc _glVertexP2ui;
#define glVertexP2ui VE_ASSERT(_glVertexP2ui);_glVertexP2ui
typedef void (APIENTRY *glVertexP2uivFunc)(GLenum type, GLuint* value);
extern glVertexP2uivFunc _glVertexP2uiv;
#define glVertexP2uiv VE_ASSERT(_glVertexP2uiv);_glVertexP2uiv
typedef void (APIENTRY *glVertexP3uiFunc)(GLenum type, GLuint value);
extern glVertexP3uiFunc _glVertexP3ui;
#define glVertexP3ui VE_ASSERT(_glVertexP3ui);_glVertexP3ui
typedef void (APIENTRY *glVertexP3uivFunc)(GLenum type, GLuint* value);
extern glVertexP3uivFunc _glVertexP3uiv;
#define glVertexP3uiv VE_ASSERT(_glVertexP3uiv);_glVertexP3uiv
typedef void (APIENTRY *glVertexP4uiFunc)(GLenum type, GLuint value);
extern glVertexP4uiFunc _glVertexP4ui;
#define glVertexP4ui VE_ASSERT(_glVertexP4ui);_glVertexP4ui
typedef void (APIENTRY *glVertexP4uivFunc)(GLenum type, GLuint* value);
extern glVertexP4uivFunc _glVertexP4uiv;
#define glVertexP4uiv VE_ASSERT(_glVertexP4uiv);_glVertexP4uiv
typedef void (APIENTRY *glTexCoordP1uiFunc)(GLenum type, GLuint coords);
extern glTexCoordP1uiFunc _glTexCoordP1ui;
#define glTexCoordP1ui VE_ASSERT(_glTexCoordP1ui);_glTexCoordP1ui
typedef void (APIENTRY *glTexCoordP1uivFunc)(GLenum type, GLuint* coords);
extern glTexCoordP1uivFunc _glTexCoordP1uiv;
#define glTexCoordP1uiv VE_ASSERT(_glTexCoordP1uiv);_glTexCoordP1uiv
typedef void (APIENTRY *glTexCoordP2uiFunc)(GLenum type, GLuint coords);
extern glTexCoordP2uiFunc _glTexCoordP2ui;
#define glTexCoordP2ui VE_ASSERT(_glTexCoordP2ui);_glTexCoordP2ui
typedef void (APIENTRY *glTexCoordP2uivFunc)(GLenum type, GLuint* coords);
extern glTexCoordP2uivFunc _glTexCoordP2uiv;
#define glTexCoordP2uiv VE_ASSERT(_glTexCoordP2uiv);_glTexCoordP2uiv
typedef void (APIENTRY *glTexCoordP3uiFunc)(GLenum type, GLuint coords);
extern glTexCoordP3uiFunc _glTexCoordP3ui;
#define glTexCoordP3ui VE_ASSERT(_glTexCoordP3ui);_glTexCoordP3ui
typedef void (APIENTRY *glTexCoordP3uivFunc)(GLenum type, GLuint* coords);
extern glTexCoordP3uivFunc _glTexCoordP3uiv;
#define glTexCoordP3uiv VE_ASSERT(_glTexCoordP3uiv);_glTexCoordP3uiv
typedef void (APIENTRY *glTexCoordP4uiFunc)(GLenum type, GLuint coords);
extern glTexCoordP4uiFunc _glTexCoordP4ui;
#define glTexCoordP4ui VE_ASSERT(_glTexCoordP4ui);_glTexCoordP4ui
typedef void (APIENTRY *glTexCoordP4uivFunc)(GLenum type, GLuint* coords);
extern glTexCoordP4uivFunc _glTexCoordP4uiv;
#define glTexCoordP4uiv VE_ASSERT(_glTexCoordP4uiv);_glTexCoordP4uiv
typedef void (APIENTRY *glMultiTexCoordP1uiFunc)(GLenum texture, GLenum type, GLuint coords);
extern glMultiTexCoordP1uiFunc _glMultiTexCoordP1ui;
#define glMultiTexCoordP1ui VE_ASSERT(_glMultiTexCoordP1ui);_glMultiTexCoordP1ui
typedef void (APIENTRY *glMultiTexCoordP1uivFunc)(GLenum texture, GLenum type, GLuint* coords);
extern glMultiTexCoordP1uivFunc _glMultiTexCoordP1uiv;
#define glMultiTexCoordP1uiv VE_ASSERT(_glMultiTexCoordP1uiv);_glMultiTexCoordP1uiv
typedef void (APIENTRY *glMultiTexCoordP2uiFunc)(GLenum texture, GLenum type, GLuint coords);
extern glMultiTexCoordP2uiFunc _glMultiTexCoordP2ui;
#define glMultiTexCoordP2ui VE_ASSERT(_glMultiTexCoordP2ui);_glMultiTexCoordP2ui
typedef void (APIENTRY *glMultiTexCoordP2uivFunc)(GLenum texture, GLenum type, GLuint* coords);
extern glMultiTexCoordP2uivFunc _glMultiTexCoordP2uiv;
#define glMultiTexCoordP2uiv VE_ASSERT(_glMultiTexCoordP2uiv);_glMultiTexCoordP2uiv
typedef void (APIENTRY *glMultiTexCoordP3uiFunc)(GLenum texture, GLenum type, GLuint coords);
extern glMultiTexCoordP3uiFunc _glMultiTexCoordP3ui;
#define glMultiTexCoordP3ui VE_ASSERT(_glMultiTexCoordP3ui);_glMultiTexCoordP3ui
typedef void (APIENTRY *glMultiTexCoordP3uivFunc)(GLenum texture, GLenum type, GLuint* coords);
extern glMultiTexCoordP3uivFunc _glMultiTexCoordP3uiv;
#define glMultiTexCoordP3uiv VE_ASSERT(_glMultiTexCoordP3uiv);_glMultiTexCoordP3uiv
typedef void (APIENTRY *glMultiTexCoordP4uiFunc)(GLenum texture, GLenum type, GLuint coords);
extern glMultiTexCoordP4uiFunc _glMultiTexCoordP4ui;
#define glMultiTexCoordP4ui VE_ASSERT(_glMultiTexCoordP4ui);_glMultiTexCoordP4ui
typedef void (APIENTRY *glMultiTexCoordP4uivFunc)(GLenum texture, GLenum type, GLuint* coords);
extern glMultiTexCoordP4uivFunc _glMultiTexCoordP4uiv;
#define glMultiTexCoordP4uiv VE_ASSERT(_glMultiTexCoordP4uiv);_glMultiTexCoordP4uiv
typedef void (APIENTRY *glNormalP3uiFunc)(GLenum type, GLuint coords);
extern glNormalP3uiFunc _glNormalP3ui;
#define glNormalP3ui VE_ASSERT(_glNormalP3ui);_glNormalP3ui
typedef void (APIENTRY *glNormalP3uivFunc)(GLenum type, GLuint* coords);
extern glNormalP3uivFunc _glNormalP3uiv;
#define glNormalP3uiv VE_ASSERT(_glNormalP3uiv);_glNormalP3uiv
typedef void (APIENTRY *glColorP3uiFunc)(GLenum type, GLuint color);
extern glColorP3uiFunc _glColorP3ui;
#define glColorP3ui VE_ASSERT(_glColorP3ui);_glColorP3ui
typedef void (APIENTRY *glColorP3uivFunc)(GLenum type, GLuint* color);
extern glColorP3uivFunc _glColorP3uiv;
#define glColorP3uiv VE_ASSERT(_glColorP3uiv);_glColorP3uiv
typedef void (APIENTRY *glColorP4uiFunc)(GLenum type, GLuint color);
extern glColorP4uiFunc _glColorP4ui;
#define glColorP4ui VE_ASSERT(_glColorP4ui);_glColorP4ui
typedef void (APIENTRY *glColorP4uivFunc)(GLenum type, GLuint* color);
extern glColorP4uivFunc _glColorP4uiv;
#define glColorP4uiv VE_ASSERT(_glColorP4uiv);_glColorP4uiv
typedef void (APIENTRY *glSecondaryColorP3uiFunc)(GLenum type, GLuint color);
extern glSecondaryColorP3uiFunc _glSecondaryColorP3ui;
#define glSecondaryColorP3ui VE_ASSERT(_glSecondaryColorP3ui);_glSecondaryColorP3ui
typedef void (APIENTRY *glSecondaryColorP3uivFunc)(GLenum type, GLuint* color);
extern glSecondaryColorP3uivFunc _glSecondaryColorP3uiv;
#define glSecondaryColorP3uiv VE_ASSERT(_glSecondaryColorP3uiv);_glSecondaryColorP3uiv
typedef void (APIENTRY *glVertexAttribP1uiFunc)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
extern glVertexAttribP1uiFunc _glVertexAttribP1ui;
#define glVertexAttribP1ui VE_ASSERT(_glVertexAttribP1ui);_glVertexAttribP1ui
typedef void (APIENTRY *glVertexAttribP1uivFunc)(GLuint index, GLenum type, GLboolean normalized, GLuint* value);
extern glVertexAttribP1uivFunc _glVertexAttribP1uiv;
#define glVertexAttribP1uiv VE_ASSERT(_glVertexAttribP1uiv);_glVertexAttribP1uiv
typedef void (APIENTRY *glVertexAttribP2uiFunc)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
extern glVertexAttribP2uiFunc _glVertexAttribP2ui;
#define glVertexAttribP2ui VE_ASSERT(_glVertexAttribP2ui);_glVertexAttribP2ui
typedef void (APIENTRY *glVertexAttribP2uivFunc)(GLuint index, GLenum type, GLboolean normalized, GLuint* value);
extern glVertexAttribP2uivFunc _glVertexAttribP2uiv;
#define glVertexAttribP2uiv VE_ASSERT(_glVertexAttribP2uiv);_glVertexAttribP2uiv
typedef void (APIENTRY *glVertexAttribP3uiFunc)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
extern glVertexAttribP3uiFunc _glVertexAttribP3ui;
#define glVertexAttribP3ui VE_ASSERT(_glVertexAttribP3ui);_glVertexAttribP3ui
typedef void (APIENTRY *glVertexAttribP3uivFunc)(GLuint index, GLenum type, GLboolean normalized, GLuint* value);
extern glVertexAttribP3uivFunc _glVertexAttribP3uiv;
#define glVertexAttribP3uiv VE_ASSERT(_glVertexAttribP3uiv);_glVertexAttribP3uiv
typedef void (APIENTRY *glVertexAttribP4uiFunc)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
extern glVertexAttribP4uiFunc _glVertexAttribP4ui;
#define glVertexAttribP4ui VE_ASSERT(_glVertexAttribP4ui);_glVertexAttribP4ui
typedef void (APIENTRY *glVertexAttribP4uivFunc)(GLuint index, GLenum type, GLboolean normalized, GLuint* value);
extern glVertexAttribP4uivFunc _glVertexAttribP4uiv;
#define glVertexAttribP4uiv VE_ASSERT(_glVertexAttribP4uiv);_glVertexAttribP4uiv
typedef void (APIENTRY *glDrawArraysIndirectFunc)(GLenum mode, GLvoid* indirect);
extern glDrawArraysIndirectFunc _glDrawArraysIndirect;
#define glDrawArraysIndirect VE_ASSERT(_glDrawArraysIndirect);_glDrawArraysIndirect
typedef void (APIENTRY *glDrawElementsIndirectFunc)(GLenum mode, GLenum type, GLvoid* indirect);
extern glDrawElementsIndirectFunc _glDrawElementsIndirect;
#define glDrawElementsIndirect VE_ASSERT(_glDrawElementsIndirect);_glDrawElementsIndirect
typedef void (APIENTRY *glUniform1dFunc)(GLint location, GLdouble x);
extern glUniform1dFunc _glUniform1d;
#define glUniform1d VE_ASSERT(_glUniform1d);_glUniform1d
typedef void (APIENTRY *glUniform2dFunc)(GLint location, GLdouble x, GLdouble y);
extern glUniform2dFunc _glUniform2d;
#define glUniform2d VE_ASSERT(_glUniform2d);_glUniform2d
typedef void (APIENTRY *glUniform3dFunc)(GLint location, GLdouble x, GLdouble y, GLdouble z);
extern glUniform3dFunc _glUniform3d;
#define glUniform3d VE_ASSERT(_glUniform3d);_glUniform3d
typedef void (APIENTRY *glUniform4dFunc)(GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
extern glUniform4dFunc _glUniform4d;
#define glUniform4d VE_ASSERT(_glUniform4d);_glUniform4d
typedef void (APIENTRY *glUniform1dvFunc)(GLint location, GLsizei count, GLdouble* value);
extern glUniform1dvFunc _glUniform1dv;
#define glUniform1dv VE_ASSERT(_glUniform1dv);_glUniform1dv
typedef void (APIENTRY *glUniform2dvFunc)(GLint location, GLsizei count, GLdouble* value);
extern glUniform2dvFunc _glUniform2dv;
#define glUniform2dv VE_ASSERT(_glUniform2dv);_glUniform2dv
typedef void (APIENTRY *glUniform3dvFunc)(GLint location, GLsizei count, GLdouble* value);
extern glUniform3dvFunc _glUniform3dv;
#define glUniform3dv VE_ASSERT(_glUniform3dv);_glUniform3dv
typedef void (APIENTRY *glUniform4dvFunc)(GLint location, GLsizei count, GLdouble* value);
extern glUniform4dvFunc _glUniform4dv;
#define glUniform4dv VE_ASSERT(_glUniform4dv);_glUniform4dv
typedef void (APIENTRY *glUniformMatrix2dvFunc)(GLint location, GLsizei count, GLboolean transpose, GLdouble* value);
extern glUniformMatrix2dvFunc _glUniformMatrix2dv;
#define glUniformMatrix2dv VE_ASSERT(_glUniformMatrix2dv);_glUniformMatrix2dv
typedef void (APIENTRY *glUniformMatrix3dvFunc)(GLint location, GLsizei count, GLboolean transpose, GLdouble* value);
extern glUniformMatrix3dvFunc _glUniformMatrix3dv;
#define glUniformMatrix3dv VE_ASSERT(_glUniformMatrix3dv);_glUniformMatrix3dv
typedef void (APIENTRY *glUniformMatrix4dvFunc)(GLint location, GLsizei count, GLboolean transpose, GLdouble* value);
extern glUniformMatrix4dvFunc _glUniformMatrix4dv;
#define glUniformMatrix4dv VE_ASSERT(_glUniformMatrix4dv);_glUniformMatrix4dv
typedef void (APIENTRY *glUniformMatrix2x3dvFunc)(GLint location, GLsizei count, GLboolean transpose, GLdouble* value);
extern glUniformMatrix2x3dvFunc _glUniformMatrix2x3dv;
#define glUniformMatrix2x3dv VE_ASSERT(_glUniformMatrix2x3dv);_glUniformMatrix2x3dv
typedef void (APIENTRY *glUniformMatrix2x4dvFunc)(GLint location, GLsizei count, GLboolean transpose, GLdouble* value);
extern glUniformMatrix2x4dvFunc _glUniformMatrix2x4dv;
#define glUniformMatrix2x4dv VE_ASSERT(_glUniformMatrix2x4dv);_glUniformMatrix2x4dv
typedef void (APIENTRY *glUniformMatrix3x2dvFunc)(GLint location, GLsizei count, GLboolean transpose, GLdouble* value);
extern glUniformMatrix3x2dvFunc _glUniformMatrix3x2dv;
#define glUniformMatrix3x2dv VE_ASSERT(_glUniformMatrix3x2dv);_glUniformMatrix3x2dv
typedef void (APIENTRY *glUniformMatrix3x4dvFunc)(GLint location, GLsizei count, GLboolean transpose, GLdouble* value);
extern glUniformMatrix3x4dvFunc _glUniformMatrix3x4dv;
#define glUniformMatrix3x4dv VE_ASSERT(_glUniformMatrix3x4dv);_glUniformMatrix3x4dv
typedef void (APIENTRY *glUniformMatrix4x2dvFunc)(GLint location, GLsizei count, GLboolean transpose, GLdouble* value);
extern glUniformMatrix4x2dvFunc _glUniformMatrix4x2dv;
#define glUniformMatrix4x2dv VE_ASSERT(_glUniformMatrix4x2dv);_glUniformMatrix4x2dv
typedef void (APIENTRY *glUniformMatrix4x3dvFunc)(GLint location, GLsizei count, GLboolean transpose, GLdouble* value);
extern glUniformMatrix4x3dvFunc _glUniformMatrix4x3dv;
#define glUniformMatrix4x3dv VE_ASSERT(_glUniformMatrix4x3dv);_glUniformMatrix4x3dv
typedef void (APIENTRY *glGetUniformdvFunc)(GLuint program, GLint location, GLdouble* params);
extern glGetUniformdvFunc _glGetUniformdv;
#define glGetUniformdv VE_ASSERT(_glGetUniformdv);_glGetUniformdv
typedef GLint (APIENTRY *glGetSubroutineUniformLocationFunc)(GLuint program, GLenum shadertype, GLchar* name);
extern glGetSubroutineUniformLocationFunc _glGetSubroutineUniformLocation;
#define glGetSubroutineUniformLocation _glGetSubroutineUniformLocation
typedef GLuint (APIENTRY *glGetSubroutineIndexFunc)(GLuint program, GLenum shadertype, GLchar* name);
extern glGetSubroutineIndexFunc _glGetSubroutineIndex;
#define glGetSubroutineIndex _glGetSubroutineIndex
typedef void (APIENTRY *glGetActiveSubroutineUniformivFunc)(GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint* values);
extern glGetActiveSubroutineUniformivFunc _glGetActiveSubroutineUniformiv;
#define glGetActiveSubroutineUniformiv VE_ASSERT(_glGetActiveSubroutineUniformiv);_glGetActiveSubroutineUniformiv
typedef void (APIENTRY *glGetActiveSubroutineUniformNameFunc)(GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei* length, GLchar* name);
extern glGetActiveSubroutineUniformNameFunc _glGetActiveSubroutineUniformName;
#define glGetActiveSubroutineUniformName VE_ASSERT(_glGetActiveSubroutineUniformName);_glGetActiveSubroutineUniformName
typedef void (APIENTRY *glGetActiveSubroutineNameFunc)(GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei* length, GLchar* name);
extern glGetActiveSubroutineNameFunc _glGetActiveSubroutineName;
#define glGetActiveSubroutineName VE_ASSERT(_glGetActiveSubroutineName);_glGetActiveSubroutineName
typedef void (APIENTRY *glUniformSubroutinesuivFunc)(GLenum shadertype, GLsizei count, GLuint* indices);
extern glUniformSubroutinesuivFunc _glUniformSubroutinesuiv;
#define glUniformSubroutinesuiv VE_ASSERT(_glUniformSubroutinesuiv);_glUniformSubroutinesuiv
typedef void (APIENTRY *glGetUniformSubroutineuivFunc)(GLenum shadertype, GLint location, GLuint* params);
extern glGetUniformSubroutineuivFunc _glGetUniformSubroutineuiv;
#define glGetUniformSubroutineuiv VE_ASSERT(_glGetUniformSubroutineuiv);_glGetUniformSubroutineuiv
typedef void (APIENTRY *glGetProgramStageivFunc)(GLuint program, GLenum shadertype, GLenum pname, GLint* values);
extern glGetProgramStageivFunc _glGetProgramStageiv;
#define glGetProgramStageiv VE_ASSERT(_glGetProgramStageiv);_glGetProgramStageiv
typedef void (APIENTRY *glPatchParameteriFunc)(GLenum pname, GLint value);
extern glPatchParameteriFunc _glPatchParameteri;
#define glPatchParameteri VE_ASSERT(_glPatchParameteri);_glPatchParameteri
typedef void (APIENTRY *glPatchParameterfvFunc)(GLenum pname, GLfloat* values);
extern glPatchParameterfvFunc _glPatchParameterfv;
#define glPatchParameterfv VE_ASSERT(_glPatchParameterfv);_glPatchParameterfv
typedef void (APIENTRY *glBindTransformFeedbackFunc)(GLenum target, GLuint id);
extern glBindTransformFeedbackFunc _glBindTransformFeedback;
#define glBindTransformFeedback VE_ASSERT(_glBindTransformFeedback);_glBindTransformFeedback
typedef void (APIENTRY *glDeleteTransformFeedbacksFunc)(GLsizei n, GLuint* ids);
extern glDeleteTransformFeedbacksFunc _glDeleteTransformFeedbacks;
#define glDeleteTransformFeedbacks VE_ASSERT(_glDeleteTransformFeedbacks);_glDeleteTransformFeedbacks
typedef void (APIENTRY *glGenTransformFeedbacksFunc)(GLsizei n, GLuint* ids);
extern glGenTransformFeedbacksFunc _glGenTransformFeedbacks;
#define glGenTransformFeedbacks VE_ASSERT(_glGenTransformFeedbacks);_glGenTransformFeedbacks
typedef GLboolean (APIENTRY *glIsTransformFeedbackFunc)(GLuint id);
extern glIsTransformFeedbackFunc _glIsTransformFeedback;
#define glIsTransformFeedback _glIsTransformFeedback
typedef void (APIENTRY *glPauseTransformFeedbackFunc)();
extern glPauseTransformFeedbackFunc _glPauseTransformFeedback;
#define glPauseTransformFeedback VE_ASSERT(_glPauseTransformFeedback);_glPauseTransformFeedback
typedef void (APIENTRY *glResumeTransformFeedbackFunc)();
extern glResumeTransformFeedbackFunc _glResumeTransformFeedback;
#define glResumeTransformFeedback VE_ASSERT(_glResumeTransformFeedback);_glResumeTransformFeedback
typedef void (APIENTRY *glDrawTransformFeedbackFunc)(GLenum mode, GLuint id);
extern glDrawTransformFeedbackFunc _glDrawTransformFeedback;
#define glDrawTransformFeedback VE_ASSERT(_glDrawTransformFeedback);_glDrawTransformFeedback
typedef void (APIENTRY *glDrawTransformFeedbackStreamFunc)(GLenum mode, GLuint id, GLuint stream);
extern glDrawTransformFeedbackStreamFunc _glDrawTransformFeedbackStream;
#define glDrawTransformFeedbackStream VE_ASSERT(_glDrawTransformFeedbackStream);_glDrawTransformFeedbackStream
typedef void (APIENTRY *glBeginQueryIndexedFunc)(GLenum target, GLuint index, GLuint id);
extern glBeginQueryIndexedFunc _glBeginQueryIndexed;
#define glBeginQueryIndexed VE_ASSERT(_glBeginQueryIndexed);_glBeginQueryIndexed
typedef void (APIENTRY *glEndQueryIndexedFunc)(GLenum target, GLuint index);
extern glEndQueryIndexedFunc _glEndQueryIndexed;
#define glEndQueryIndexed VE_ASSERT(_glEndQueryIndexed);_glEndQueryIndexed
typedef void (APIENTRY *glGetQueryIndexedivFunc)(GLenum target, GLuint index, GLenum pname, GLint* params);
extern glGetQueryIndexedivFunc _glGetQueryIndexediv;
#define glGetQueryIndexediv VE_ASSERT(_glGetQueryIndexediv);_glGetQueryIndexediv
typedef void (APIENTRY *glReleaseShaderCompilerFunc)();
extern glReleaseShaderCompilerFunc _glReleaseShaderCompiler;
#define glReleaseShaderCompiler VE_ASSERT(_glReleaseShaderCompiler);_glReleaseShaderCompiler
typedef void (APIENTRY *glShaderBinaryFunc)(GLsizei count, GLuint* shaders, GLenum binaryformat, GLvoid* binary, GLsizei length);
extern glShaderBinaryFunc _glShaderBinary;
#define glShaderBinary VE_ASSERT(_glShaderBinary);_glShaderBinary
typedef void (APIENTRY *glGetShaderPrecisionFormatFunc)(GLenum shadertype, GLenum precisiontype, GLint* range, GLint* precision);
extern glGetShaderPrecisionFormatFunc _glGetShaderPrecisionFormat;
#define glGetShaderPrecisionFormat VE_ASSERT(_glGetShaderPrecisionFormat);_glGetShaderPrecisionFormat
typedef void (APIENTRY *glDepthRangefFunc)(GLfloat n, GLfloat f);
extern glDepthRangefFunc _glDepthRangef;
#define glDepthRangef VE_ASSERT(_glDepthRangef);_glDepthRangef
typedef void (APIENTRY *glClearDepthfFunc)(GLfloat d);
extern glClearDepthfFunc _glClearDepthf;
#define glClearDepthf VE_ASSERT(_glClearDepthf);_glClearDepthf
typedef void (APIENTRY *glGetProgramBinaryFunc)(GLuint program, GLsizei bufSize, GLsizei* length, GLenum* binaryFormat, GLvoid* binary);
extern glGetProgramBinaryFunc _glGetProgramBinary;
#define glGetProgramBinary VE_ASSERT(_glGetProgramBinary);_glGetProgramBinary
typedef void (APIENTRY *glProgramBinaryFunc)(GLuint program, GLenum binaryFormat, GLvoid* binary, GLsizei length);
extern glProgramBinaryFunc _glProgramBinary;
#define glProgramBinary VE_ASSERT(_glProgramBinary);_glProgramBinary
typedef void (APIENTRY *glProgramParameteriFunc)(GLuint program, GLenum pname, GLint value);
extern glProgramParameteriFunc _glProgramParameteri;
#define glProgramParameteri VE_ASSERT(_glProgramParameteri);_glProgramParameteri
typedef void (APIENTRY *glUseProgramStagesFunc)(GLuint pipeline, GLbitfield stages, GLuint program);
extern glUseProgramStagesFunc _glUseProgramStages;
#define glUseProgramStages VE_ASSERT(_glUseProgramStages);_glUseProgramStages
typedef void (APIENTRY *glActiveShaderProgramFunc)(GLuint pipeline, GLuint program);
extern glActiveShaderProgramFunc _glActiveShaderProgram;
#define glActiveShaderProgram VE_ASSERT(_glActiveShaderProgram);_glActiveShaderProgram
typedef GLuint (APIENTRY *glCreateShaderProgramvFunc)(GLenum type, GLsizei count, GLchar* const* strings);
extern glCreateShaderProgramvFunc _glCreateShaderProgramv;
#define glCreateShaderProgramv _glCreateShaderProgramv
typedef void (APIENTRY *glBindProgramPipelineFunc)(GLuint pipeline);
extern glBindProgramPipelineFunc _glBindProgramPipeline;
#define glBindProgramPipeline VE_ASSERT(_glBindProgramPipeline);_glBindProgramPipeline
typedef void (APIENTRY *glDeleteProgramPipelinesFunc)(GLsizei n, GLuint* pipelines);
extern glDeleteProgramPipelinesFunc _glDeleteProgramPipelines;
#define glDeleteProgramPipelines VE_ASSERT(_glDeleteProgramPipelines);_glDeleteProgramPipelines
typedef void (APIENTRY *glGenProgramPipelinesFunc)(GLsizei n, GLuint* pipelines);
extern glGenProgramPipelinesFunc _glGenProgramPipelines;
#define glGenProgramPipelines VE_ASSERT(_glGenProgramPipelines);_glGenProgramPipelines
typedef GLboolean (APIENTRY *glIsProgramPipelineFunc)(GLuint pipeline);
extern glIsProgramPipelineFunc _glIsProgramPipeline;
#define glIsProgramPipeline _glIsProgramPipeline
typedef void (APIENTRY *glGetProgramPipelineivFunc)(GLuint pipeline, GLenum pname, GLint* params);
extern glGetProgramPipelineivFunc _glGetProgramPipelineiv;
#define glGetProgramPipelineiv VE_ASSERT(_glGetProgramPipelineiv);_glGetProgramPipelineiv
typedef void (APIENTRY *glProgramUniform1iFunc)(GLuint program, GLint location, GLint v0);
extern glProgramUniform1iFunc _glProgramUniform1i;
#define glProgramUniform1i VE_ASSERT(_glProgramUniform1i);_glProgramUniform1i
typedef void (APIENTRY *glProgramUniform1ivFunc)(GLuint program, GLint location, GLsizei count, GLint* value);
extern glProgramUniform1ivFunc _glProgramUniform1iv;
#define glProgramUniform1iv VE_ASSERT(_glProgramUniform1iv);_glProgramUniform1iv
typedef void (APIENTRY *glProgramUniform1fFunc)(GLuint program, GLint location, GLfloat v0);
extern glProgramUniform1fFunc _glProgramUniform1f;
#define glProgramUniform1f VE_ASSERT(_glProgramUniform1f);_glProgramUniform1f
typedef void (APIENTRY *glProgramUniform1fvFunc)(GLuint program, GLint location, GLsizei count, GLfloat* value);
extern glProgramUniform1fvFunc _glProgramUniform1fv;
#define glProgramUniform1fv VE_ASSERT(_glProgramUniform1fv);_glProgramUniform1fv
typedef void (APIENTRY *glProgramUniform1dFunc)(GLuint program, GLint location, GLdouble v0);
extern glProgramUniform1dFunc _glProgramUniform1d;
#define glProgramUniform1d VE_ASSERT(_glProgramUniform1d);_glProgramUniform1d
typedef void (APIENTRY *glProgramUniform1dvFunc)(GLuint program, GLint location, GLsizei count, GLdouble* value);
extern glProgramUniform1dvFunc _glProgramUniform1dv;
#define glProgramUniform1dv VE_ASSERT(_glProgramUniform1dv);_glProgramUniform1dv
typedef void (APIENTRY *glProgramUniform1uiFunc)(GLuint program, GLint location, GLuint v0);
extern glProgramUniform1uiFunc _glProgramUniform1ui;
#define glProgramUniform1ui VE_ASSERT(_glProgramUniform1ui);_glProgramUniform1ui
typedef void (APIENTRY *glProgramUniform1uivFunc)(GLuint program, GLint location, GLsizei count, GLuint* value);
extern glProgramUniform1uivFunc _glProgramUniform1uiv;
#define glProgramUniform1uiv VE_ASSERT(_glProgramUniform1uiv);_glProgramUniform1uiv
typedef void (APIENTRY *glProgramUniform2iFunc)(GLuint program, GLint location, GLint v0, GLint v1);
extern glProgramUniform2iFunc _glProgramUniform2i;
#define glProgramUniform2i VE_ASSERT(_glProgramUniform2i);_glProgramUniform2i
typedef void (APIENTRY *glProgramUniform2ivFunc)(GLuint program, GLint location, GLsizei count, GLint* value);
extern glProgramUniform2ivFunc _glProgramUniform2iv;
#define glProgramUniform2iv VE_ASSERT(_glProgramUniform2iv);_glProgramUniform2iv
typedef void (APIENTRY *glProgramUniform2fFunc)(GLuint program, GLint location, GLfloat v0, GLfloat v1);
extern glProgramUniform2fFunc _glProgramUniform2f;
#define glProgramUniform2f VE_ASSERT(_glProgramUniform2f);_glProgramUniform2f
typedef void (APIENTRY *glProgramUniform2fvFunc)(GLuint program, GLint location, GLsizei count, GLfloat* value);
extern glProgramUniform2fvFunc _glProgramUniform2fv;
#define glProgramUniform2fv VE_ASSERT(_glProgramUniform2fv);_glProgramUniform2fv
typedef void (APIENTRY *glProgramUniform2dFunc)(GLuint program, GLint location, GLdouble v0, GLdouble v1);
extern glProgramUniform2dFunc _glProgramUniform2d;
#define glProgramUniform2d VE_ASSERT(_glProgramUniform2d);_glProgramUniform2d
typedef void (APIENTRY *glProgramUniform2dvFunc)(GLuint program, GLint location, GLsizei count, GLdouble* value);
extern glProgramUniform2dvFunc _glProgramUniform2dv;
#define glProgramUniform2dv VE_ASSERT(_glProgramUniform2dv);_glProgramUniform2dv
typedef void (APIENTRY *glProgramUniform2uiFunc)(GLuint program, GLint location, GLuint v0, GLuint v1);
extern glProgramUniform2uiFunc _glProgramUniform2ui;
#define glProgramUniform2ui VE_ASSERT(_glProgramUniform2ui);_glProgramUniform2ui
typedef void (APIENTRY *glProgramUniform2uivFunc)(GLuint program, GLint location, GLsizei count, GLuint* value);
extern glProgramUniform2uivFunc _glProgramUniform2uiv;
#define glProgramUniform2uiv VE_ASSERT(_glProgramUniform2uiv);_glProgramUniform2uiv
typedef void (APIENTRY *glProgramUniform3iFunc)(GLuint program, GLint location, GLint v0, GLint v1, GLint v2);
extern glProgramUniform3iFunc _glProgramUniform3i;
#define glProgramUniform3i VE_ASSERT(_glProgramUniform3i);_glProgramUniform3i
typedef void (APIENTRY *glProgramUniform3ivFunc)(GLuint program, GLint location, GLsizei count, GLint* value);
extern glProgramUniform3ivFunc _glProgramUniform3iv;
#define glProgramUniform3iv VE_ASSERT(_glProgramUniform3iv);_glProgramUniform3iv
typedef void (APIENTRY *glProgramUniform3fFunc)(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
extern glProgramUniform3fFunc _glProgramUniform3f;
#define glProgramUniform3f VE_ASSERT(_glProgramUniform3f);_glProgramUniform3f
typedef void (APIENTRY *glProgramUniform3fvFunc)(GLuint program, GLint location, GLsizei count, GLfloat* value);
extern glProgramUniform3fvFunc _glProgramUniform3fv;
#define glProgramUniform3fv VE_ASSERT(_glProgramUniform3fv);_glProgramUniform3fv
typedef void (APIENTRY *glProgramUniform3dFunc)(GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2);
extern glProgramUniform3dFunc _glProgramUniform3d;
#define glProgramUniform3d VE_ASSERT(_glProgramUniform3d);_glProgramUniform3d
typedef void (APIENTRY *glProgramUniform3dvFunc)(GLuint program, GLint location, GLsizei count, GLdouble* value);
extern glProgramUniform3dvFunc _glProgramUniform3dv;
#define glProgramUniform3dv VE_ASSERT(_glProgramUniform3dv);_glProgramUniform3dv
typedef void (APIENTRY *glProgramUniform3uiFunc)(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);
extern glProgramUniform3uiFunc _glProgramUniform3ui;
#define glProgramUniform3ui VE_ASSERT(_glProgramUniform3ui);_glProgramUniform3ui
typedef void (APIENTRY *glProgramUniform3uivFunc)(GLuint program, GLint location, GLsizei count, GLuint* value);
extern glProgramUniform3uivFunc _glProgramUniform3uiv;
#define glProgramUniform3uiv VE_ASSERT(_glProgramUniform3uiv);_glProgramUniform3uiv
typedef void (APIENTRY *glProgramUniform4iFunc)(GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
extern glProgramUniform4iFunc _glProgramUniform4i;
#define glProgramUniform4i VE_ASSERT(_glProgramUniform4i);_glProgramUniform4i
typedef void (APIENTRY *glProgramUniform4ivFunc)(GLuint program, GLint location, GLsizei count, GLint* value);
extern glProgramUniform4ivFunc _glProgramUniform4iv;
#define glProgramUniform4iv VE_ASSERT(_glProgramUniform4iv);_glProgramUniform4iv
typedef void (APIENTRY *glProgramUniform4fFunc)(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
extern glProgramUniform4fFunc _glProgramUniform4f;
#define glProgramUniform4f VE_ASSERT(_glProgramUniform4f);_glProgramUniform4f
typedef void (APIENTRY *glProgramUniform4fvFunc)(GLuint program, GLint location, GLsizei count, GLfloat* value);
extern glProgramUniform4fvFunc _glProgramUniform4fv;
#define glProgramUniform4fv VE_ASSERT(_glProgramUniform4fv);_glProgramUniform4fv
typedef void (APIENTRY *glProgramUniform4dFunc)(GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2, GLdouble v3);
extern glProgramUniform4dFunc _glProgramUniform4d;
#define glProgramUniform4d VE_ASSERT(_glProgramUniform4d);_glProgramUniform4d
typedef void (APIENTRY *glProgramUniform4dvFunc)(GLuint program, GLint location, GLsizei count, GLdouble* value);
extern glProgramUniform4dvFunc _glProgramUniform4dv;
#define glProgramUniform4dv VE_ASSERT(_glProgramUniform4dv);_glProgramUniform4dv
typedef void (APIENTRY *glProgramUniform4uiFunc)(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
extern glProgramUniform4uiFunc _glProgramUniform4ui;
#define glProgramUniform4ui VE_ASSERT(_glProgramUniform4ui);_glProgramUniform4ui
typedef void (APIENTRY *glProgramUniform4uivFunc)(GLuint program, GLint location, GLsizei count, GLuint* value);
extern glProgramUniform4uivFunc _glProgramUniform4uiv;
#define glProgramUniform4uiv VE_ASSERT(_glProgramUniform4uiv);_glProgramUniform4uiv
typedef void (APIENTRY *glProgramUniformMatrix2fvFunc)(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLfloat* value);
extern glProgramUniformMatrix2fvFunc _glProgramUniformMatrix2fv;
#define glProgramUniformMatrix2fv VE_ASSERT(_glProgramUniformMatrix2fv);_glProgramUniformMatrix2fv
typedef void (APIENTRY *glProgramUniformMatrix3fvFunc)(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLfloat* value);
extern glProgramUniformMatrix3fvFunc _glProgramUniformMatrix3fv;
#define glProgramUniformMatrix3fv VE_ASSERT(_glProgramUniformMatrix3fv);_glProgramUniformMatrix3fv
typedef void (APIENTRY *glProgramUniformMatrix4fvFunc)(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLfloat* value);
extern glProgramUniformMatrix4fvFunc _glProgramUniformMatrix4fv;
#define glProgramUniformMatrix4fv VE_ASSERT(_glProgramUniformMatrix4fv);_glProgramUniformMatrix4fv
typedef void (APIENTRY *glProgramUniformMatrix2dvFunc)(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLdouble* value);
extern glProgramUniformMatrix2dvFunc _glProgramUniformMatrix2dv;
#define glProgramUniformMatrix2dv VE_ASSERT(_glProgramUniformMatrix2dv);_glProgramUniformMatrix2dv
typedef void (APIENTRY *glProgramUniformMatrix3dvFunc)(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLdouble* value);
extern glProgramUniformMatrix3dvFunc _glProgramUniformMatrix3dv;
#define glProgramUniformMatrix3dv VE_ASSERT(_glProgramUniformMatrix3dv);_glProgramUniformMatrix3dv
typedef void (APIENTRY *glProgramUniformMatrix4dvFunc)(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLdouble* value);
extern glProgramUniformMatrix4dvFunc _glProgramUniformMatrix4dv;
#define glProgramUniformMatrix4dv VE_ASSERT(_glProgramUniformMatrix4dv);_glProgramUniformMatrix4dv
typedef void (APIENTRY *glProgramUniformMatrix2x3fvFunc)(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLfloat* value);
extern glProgramUniformMatrix2x3fvFunc _glProgramUniformMatrix2x3fv;
#define glProgramUniformMatrix2x3fv VE_ASSERT(_glProgramUniformMatrix2x3fv);_glProgramUniformMatrix2x3fv
typedef void (APIENTRY *glProgramUniformMatrix3x2fvFunc)(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLfloat* value);
extern glProgramUniformMatrix3x2fvFunc _glProgramUniformMatrix3x2fv;
#define glProgramUniformMatrix3x2fv VE_ASSERT(_glProgramUniformMatrix3x2fv);_glProgramUniformMatrix3x2fv
typedef void (APIENTRY *glProgramUniformMatrix2x4fvFunc)(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLfloat* value);
extern glProgramUniformMatrix2x4fvFunc _glProgramUniformMatrix2x4fv;
#define glProgramUniformMatrix2x4fv VE_ASSERT(_glProgramUniformMatrix2x4fv);_glProgramUniformMatrix2x4fv
typedef void (APIENTRY *glProgramUniformMatrix4x2fvFunc)(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLfloat* value);
extern glProgramUniformMatrix4x2fvFunc _glProgramUniformMatrix4x2fv;
#define glProgramUniformMatrix4x2fv VE_ASSERT(_glProgramUniformMatrix4x2fv);_glProgramUniformMatrix4x2fv
typedef void (APIENTRY *glProgramUniformMatrix3x4fvFunc)(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLfloat* value);
extern glProgramUniformMatrix3x4fvFunc _glProgramUniformMatrix3x4fv;
#define glProgramUniformMatrix3x4fv VE_ASSERT(_glProgramUniformMatrix3x4fv);_glProgramUniformMatrix3x4fv
typedef void (APIENTRY *glProgramUniformMatrix4x3fvFunc)(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLfloat* value);
extern glProgramUniformMatrix4x3fvFunc _glProgramUniformMatrix4x3fv;
#define glProgramUniformMatrix4x3fv VE_ASSERT(_glProgramUniformMatrix4x3fv);_glProgramUniformMatrix4x3fv
typedef void (APIENTRY *glProgramUniformMatrix2x3dvFunc)(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLdouble* value);
extern glProgramUniformMatrix2x3dvFunc _glProgramUniformMatrix2x3dv;
#define glProgramUniformMatrix2x3dv VE_ASSERT(_glProgramUniformMatrix2x3dv);_glProgramUniformMatrix2x3dv
typedef void (APIENTRY *glProgramUniformMatrix3x2dvFunc)(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLdouble* value);
extern glProgramUniformMatrix3x2dvFunc _glProgramUniformMatrix3x2dv;
#define glProgramUniformMatrix3x2dv VE_ASSERT(_glProgramUniformMatrix3x2dv);_glProgramUniformMatrix3x2dv
typedef void (APIENTRY *glProgramUniformMatrix2x4dvFunc)(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLdouble* value);
extern glProgramUniformMatrix2x4dvFunc _glProgramUniformMatrix2x4dv;
#define glProgramUniformMatrix2x4dv VE_ASSERT(_glProgramUniformMatrix2x4dv);_glProgramUniformMatrix2x4dv
typedef void (APIENTRY *glProgramUniformMatrix4x2dvFunc)(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLdouble* value);
extern glProgramUniformMatrix4x2dvFunc _glProgramUniformMatrix4x2dv;
#define glProgramUniformMatrix4x2dv VE_ASSERT(_glProgramUniformMatrix4x2dv);_glProgramUniformMatrix4x2dv
typedef void (APIENTRY *glProgramUniformMatrix3x4dvFunc)(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLdouble* value);
extern glProgramUniformMatrix3x4dvFunc _glProgramUniformMatrix3x4dv;
#define glProgramUniformMatrix3x4dv VE_ASSERT(_glProgramUniformMatrix3x4dv);_glProgramUniformMatrix3x4dv
typedef void (APIENTRY *glProgramUniformMatrix4x3dvFunc)(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLdouble* value);
extern glProgramUniformMatrix4x3dvFunc _glProgramUniformMatrix4x3dv;
#define glProgramUniformMatrix4x3dv VE_ASSERT(_glProgramUniformMatrix4x3dv);_glProgramUniformMatrix4x3dv
typedef void (APIENTRY *glValidateProgramPipelineFunc)(GLuint pipeline);
extern glValidateProgramPipelineFunc _glValidateProgramPipeline;
#define glValidateProgramPipeline VE_ASSERT(_glValidateProgramPipeline);_glValidateProgramPipeline
typedef void (APIENTRY *glGetProgramPipelineInfoLogFunc)(GLuint pipeline, GLsizei bufSize, GLsizei* length, GLchar* infoLog);
extern glGetProgramPipelineInfoLogFunc _glGetProgramPipelineInfoLog;
#define glGetProgramPipelineInfoLog VE_ASSERT(_glGetProgramPipelineInfoLog);_glGetProgramPipelineInfoLog
typedef void (APIENTRY *glVertexAttribL1dFunc)(GLuint index, GLdouble x);
extern glVertexAttribL1dFunc _glVertexAttribL1d;
#define glVertexAttribL1d VE_ASSERT(_glVertexAttribL1d);_glVertexAttribL1d
typedef void (APIENTRY *glVertexAttribL2dFunc)(GLuint index, GLdouble x, GLdouble y);
extern glVertexAttribL2dFunc _glVertexAttribL2d;
#define glVertexAttribL2d VE_ASSERT(_glVertexAttribL2d);_glVertexAttribL2d
typedef void (APIENTRY *glVertexAttribL3dFunc)(GLuint index, GLdouble x, GLdouble y, GLdouble z);
extern glVertexAttribL3dFunc _glVertexAttribL3d;
#define glVertexAttribL3d VE_ASSERT(_glVertexAttribL3d);_glVertexAttribL3d
typedef void (APIENTRY *glVertexAttribL4dFunc)(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
extern glVertexAttribL4dFunc _glVertexAttribL4d;
#define glVertexAttribL4d VE_ASSERT(_glVertexAttribL4d);_glVertexAttribL4d
typedef void (APIENTRY *glVertexAttribL1dvFunc)(GLuint index, GLdouble* v);
extern glVertexAttribL1dvFunc _glVertexAttribL1dv;
#define glVertexAttribL1dv VE_ASSERT(_glVertexAttribL1dv);_glVertexAttribL1dv
typedef void (APIENTRY *glVertexAttribL2dvFunc)(GLuint index, GLdouble* v);
extern glVertexAttribL2dvFunc _glVertexAttribL2dv;
#define glVertexAttribL2dv VE_ASSERT(_glVertexAttribL2dv);_glVertexAttribL2dv
typedef void (APIENTRY *glVertexAttribL3dvFunc)(GLuint index, GLdouble* v);
extern glVertexAttribL3dvFunc _glVertexAttribL3dv;
#define glVertexAttribL3dv VE_ASSERT(_glVertexAttribL3dv);_glVertexAttribL3dv
typedef void (APIENTRY *glVertexAttribL4dvFunc)(GLuint index, GLdouble* v);
extern glVertexAttribL4dvFunc _glVertexAttribL4dv;
#define glVertexAttribL4dv VE_ASSERT(_glVertexAttribL4dv);_glVertexAttribL4dv
typedef void (APIENTRY *glVertexAttribLPointerFunc)(GLuint index, GLint size, GLenum type, GLsizei stride, GLvoid* pointer);
extern glVertexAttribLPointerFunc _glVertexAttribLPointer;
#define glVertexAttribLPointer VE_ASSERT(_glVertexAttribLPointer);_glVertexAttribLPointer
typedef void (APIENTRY *glGetVertexAttribLdvFunc)(GLuint index, GLenum pname, GLdouble* params);
extern glGetVertexAttribLdvFunc _glGetVertexAttribLdv;
#define glGetVertexAttribLdv VE_ASSERT(_glGetVertexAttribLdv);_glGetVertexAttribLdv
typedef void (APIENTRY *glViewportArrayvFunc)(GLuint first, GLsizei count, GLfloat* v);
extern glViewportArrayvFunc _glViewportArrayv;
#define glViewportArrayv VE_ASSERT(_glViewportArrayv);_glViewportArrayv
typedef void (APIENTRY *glViewportIndexedfFunc)(GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
extern glViewportIndexedfFunc _glViewportIndexedf;
#define glViewportIndexedf VE_ASSERT(_glViewportIndexedf);_glViewportIndexedf
typedef void (APIENTRY *glViewportIndexedfvFunc)(GLuint index, GLfloat* v);
extern glViewportIndexedfvFunc _glViewportIndexedfv;
#define glViewportIndexedfv VE_ASSERT(_glViewportIndexedfv);_glViewportIndexedfv
typedef void (APIENTRY *glScissorArrayvFunc)(GLuint first, GLsizei count, GLint* v);
extern glScissorArrayvFunc _glScissorArrayv;
#define glScissorArrayv VE_ASSERT(_glScissorArrayv);_glScissorArrayv
typedef void (APIENTRY *glScissorIndexedFunc)(GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
extern glScissorIndexedFunc _glScissorIndexed;
#define glScissorIndexed VE_ASSERT(_glScissorIndexed);_glScissorIndexed
typedef void (APIENTRY *glScissorIndexedvFunc)(GLuint index, GLint* v);
extern glScissorIndexedvFunc _glScissorIndexedv;
#define glScissorIndexedv VE_ASSERT(_glScissorIndexedv);_glScissorIndexedv
typedef void (APIENTRY *glDepthRangeArrayvFunc)(GLuint first, GLsizei count, GLdouble* v);
extern glDepthRangeArrayvFunc _glDepthRangeArrayv;
#define glDepthRangeArrayv VE_ASSERT(_glDepthRangeArrayv);_glDepthRangeArrayv
typedef void (APIENTRY *glDepthRangeIndexedFunc)(GLuint index, GLdouble n, GLdouble f);
extern glDepthRangeIndexedFunc _glDepthRangeIndexed;
#define glDepthRangeIndexed VE_ASSERT(_glDepthRangeIndexed);_glDepthRangeIndexed
typedef void (APIENTRY *glGetFloati_vFunc)(GLenum target, GLuint index, GLfloat* data);
extern glGetFloati_vFunc _glGetFloati_v;
#define glGetFloati_v VE_ASSERT(_glGetFloati_v);_glGetFloati_v
typedef void (APIENTRY *glGetDoublei_vFunc)(GLenum target, GLuint index, GLdouble* data);
extern glGetDoublei_vFunc _glGetDoublei_v;
#define glGetDoublei_v VE_ASSERT(_glGetDoublei_v);_glGetDoublei_v
typedef GLsync (APIENTRY *glCreateSyncFromCLeventARBFunc)(struct _cl_context * context, struct _cl_event * event, GLbitfield flags);
extern glCreateSyncFromCLeventARBFunc _glCreateSyncFromCLeventARB;
#define glCreateSyncFromCLeventARB _glCreateSyncFromCLeventARB
typedef void (APIENTRY *glDebugMessageControlARBFunc)(GLenum source, GLenum type, GLenum severity, GLsizei count, GLuint* ids, GLboolean enabled);
extern glDebugMessageControlARBFunc _glDebugMessageControlARB;
#define glDebugMessageControlARB VE_ASSERT(_glDebugMessageControlARB);_glDebugMessageControlARB
typedef void (APIENTRY *glDebugMessageInsertARBFunc)(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, GLchar* buf);
extern glDebugMessageInsertARBFunc _glDebugMessageInsertARB;
#define glDebugMessageInsertARB VE_ASSERT(_glDebugMessageInsertARB);_glDebugMessageInsertARB
typedef void (APIENTRY *glDebugMessageCallbackARBFunc)(GLDEBUGPROCARB callback, GLvoid* userParam);
extern glDebugMessageCallbackARBFunc _glDebugMessageCallbackARB;
#define glDebugMessageCallbackARB VE_ASSERT(_glDebugMessageCallbackARB);_glDebugMessageCallbackARB
typedef GLuint (APIENTRY *glGetDebugMessageLogARBFunc)(GLuint count, GLsizei bufsize, GLenum* sources, GLenum* types, GLuint* ids, GLenum* severities, GLsizei* lengths, GLchar* messageLog);
extern glGetDebugMessageLogARBFunc _glGetDebugMessageLogARB;
#define glGetDebugMessageLogARB _glGetDebugMessageLogARB
typedef GLenum (APIENTRY *glGetGraphicsResetStatusARBFunc)();
extern glGetGraphicsResetStatusARBFunc _glGetGraphicsResetStatusARB;
#define glGetGraphicsResetStatusARB _glGetGraphicsResetStatusARB
typedef void (APIENTRY *glGetnMapdvARBFunc)(GLenum target, GLenum query, GLsizei bufSize, GLdouble* v);
extern glGetnMapdvARBFunc _glGetnMapdvARB;
#define glGetnMapdvARB VE_ASSERT(_glGetnMapdvARB);_glGetnMapdvARB
typedef void (APIENTRY *glGetnMapfvARBFunc)(GLenum target, GLenum query, GLsizei bufSize, GLfloat* v);
extern glGetnMapfvARBFunc _glGetnMapfvARB;
#define glGetnMapfvARB VE_ASSERT(_glGetnMapfvARB);_glGetnMapfvARB
typedef void (APIENTRY *glGetnMapivARBFunc)(GLenum target, GLenum query, GLsizei bufSize, GLint* v);
extern glGetnMapivARBFunc _glGetnMapivARB;
#define glGetnMapivARB VE_ASSERT(_glGetnMapivARB);_glGetnMapivARB
typedef void (APIENTRY *glGetnPixelMapfvARBFunc)(GLenum map, GLsizei bufSize, GLfloat* values);
extern glGetnPixelMapfvARBFunc _glGetnPixelMapfvARB;
#define glGetnPixelMapfvARB VE_ASSERT(_glGetnPixelMapfvARB);_glGetnPixelMapfvARB
typedef void (APIENTRY *glGetnPixelMapuivARBFunc)(GLenum map, GLsizei bufSize, GLuint* values);
extern glGetnPixelMapuivARBFunc _glGetnPixelMapuivARB;
#define glGetnPixelMapuivARB VE_ASSERT(_glGetnPixelMapuivARB);_glGetnPixelMapuivARB
typedef void (APIENTRY *glGetnPixelMapusvARBFunc)(GLenum map, GLsizei bufSize, GLushort* values);
extern glGetnPixelMapusvARBFunc _glGetnPixelMapusvARB;
#define glGetnPixelMapusvARB VE_ASSERT(_glGetnPixelMapusvARB);_glGetnPixelMapusvARB
typedef void (APIENTRY *glGetnPolygonStippleARBFunc)(GLsizei bufSize, GLubyte* pattern);
extern glGetnPolygonStippleARBFunc _glGetnPolygonStippleARB;
#define glGetnPolygonStippleARB VE_ASSERT(_glGetnPolygonStippleARB);_glGetnPolygonStippleARB
typedef void (APIENTRY *glGetnColorTableARBFunc)(GLenum target, GLenum format, GLenum type, GLsizei bufSize, GLvoid* table);
extern glGetnColorTableARBFunc _glGetnColorTableARB;
#define glGetnColorTableARB VE_ASSERT(_glGetnColorTableARB);_glGetnColorTableARB
typedef void (APIENTRY *glGetnConvolutionFilterARBFunc)(GLenum target, GLenum format, GLenum type, GLsizei bufSize, GLvoid* image);
extern glGetnConvolutionFilterARBFunc _glGetnConvolutionFilterARB;
#define glGetnConvolutionFilterARB VE_ASSERT(_glGetnConvolutionFilterARB);_glGetnConvolutionFilterARB
typedef void (APIENTRY *glGetnSeparableFilterARBFunc)(GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, GLvoid* row, GLsizei columnBufSize, GLvoid* column, GLvoid* span);
extern glGetnSeparableFilterARBFunc _glGetnSeparableFilterARB;
#define glGetnSeparableFilterARB VE_ASSERT(_glGetnSeparableFilterARB);_glGetnSeparableFilterARB
typedef void (APIENTRY *glGetnHistogramARBFunc)(GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, GLvoid* values);
extern glGetnHistogramARBFunc _glGetnHistogramARB;
#define glGetnHistogramARB VE_ASSERT(_glGetnHistogramARB);_glGetnHistogramARB
typedef void (APIENTRY *glGetnMinmaxARBFunc)(GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, GLvoid* values);
extern glGetnMinmaxARBFunc _glGetnMinmaxARB;
#define glGetnMinmaxARB VE_ASSERT(_glGetnMinmaxARB);_glGetnMinmaxARB
typedef void (APIENTRY *glGetnTexImageARBFunc)(GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, GLvoid* img);
extern glGetnTexImageARBFunc _glGetnTexImageARB;
#define glGetnTexImageARB VE_ASSERT(_glGetnTexImageARB);_glGetnTexImageARB
typedef void (APIENTRY *glReadnPixelsARBFunc)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, GLvoid* data);
extern glReadnPixelsARBFunc _glReadnPixelsARB;
#define glReadnPixelsARB VE_ASSERT(_glReadnPixelsARB);_glReadnPixelsARB
typedef void (APIENTRY *glGetnCompressedTexImageARBFunc)(GLenum target, GLint lod, GLsizei bufSize, GLvoid* img);
extern glGetnCompressedTexImageARBFunc _glGetnCompressedTexImageARB;
#define glGetnCompressedTexImageARB VE_ASSERT(_glGetnCompressedTexImageARB);_glGetnCompressedTexImageARB
typedef void (APIENTRY *glGetnUniformfvARBFunc)(GLuint program, GLint location, GLsizei bufSize, GLfloat* params);
extern glGetnUniformfvARBFunc _glGetnUniformfvARB;
#define glGetnUniformfvARB VE_ASSERT(_glGetnUniformfvARB);_glGetnUniformfvARB
typedef void (APIENTRY *glGetnUniformivARBFunc)(GLuint program, GLint location, GLsizei bufSize, GLint* params);
extern glGetnUniformivARBFunc _glGetnUniformivARB;
#define glGetnUniformivARB VE_ASSERT(_glGetnUniformivARB);_glGetnUniformivARB
typedef void (APIENTRY *glGetnUniformuivARBFunc)(GLuint program, GLint location, GLsizei bufSize, GLuint* params);
extern glGetnUniformuivARBFunc _glGetnUniformuivARB;
#define glGetnUniformuivARB VE_ASSERT(_glGetnUniformuivARB);_glGetnUniformuivARB
typedef void (APIENTRY *glGetnUniformdvARBFunc)(GLuint program, GLint location, GLsizei bufSize, GLdouble* params);
extern glGetnUniformdvARBFunc _glGetnUniformdvARB;
#define glGetnUniformdvARB VE_ASSERT(_glGetnUniformdvARB);_glGetnUniformdvARB
typedef void (APIENTRY *glDrawArraysInstancedBaseInstanceFunc)(GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance);
extern glDrawArraysInstancedBaseInstanceFunc _glDrawArraysInstancedBaseInstance;
#define glDrawArraysInstancedBaseInstance VE_ASSERT(_glDrawArraysInstancedBaseInstance);_glDrawArraysInstancedBaseInstance
typedef void (APIENTRY *glDrawElementsInstancedBaseInstanceFunc)(GLenum mode, GLsizei count, GLenum type, void* indices, GLsizei instancecount, GLuint baseinstance);
extern glDrawElementsInstancedBaseInstanceFunc _glDrawElementsInstancedBaseInstance;
#define glDrawElementsInstancedBaseInstance VE_ASSERT(_glDrawElementsInstancedBaseInstance);_glDrawElementsInstancedBaseInstance
typedef void (APIENTRY *glDrawElementsInstancedBaseVertexBaseInstanceFunc)(GLenum mode, GLsizei count, GLenum type, void* indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance);
extern glDrawElementsInstancedBaseVertexBaseInstanceFunc _glDrawElementsInstancedBaseVertexBaseInstance;
#define glDrawElementsInstancedBaseVertexBaseInstance VE_ASSERT(_glDrawElementsInstancedBaseVertexBaseInstance);_glDrawElementsInstancedBaseVertexBaseInstance
typedef void (APIENTRY *glDrawTransformFeedbackInstancedFunc)(GLenum mode, GLuint id, GLsizei instancecount);
extern glDrawTransformFeedbackInstancedFunc _glDrawTransformFeedbackInstanced;
#define glDrawTransformFeedbackInstanced VE_ASSERT(_glDrawTransformFeedbackInstanced);_glDrawTransformFeedbackInstanced
typedef void (APIENTRY *glDrawTransformFeedbackStreamInstancedFunc)(GLenum mode, GLuint id, GLuint stream, GLsizei instancecount);
extern glDrawTransformFeedbackStreamInstancedFunc _glDrawTransformFeedbackStreamInstanced;
#define glDrawTransformFeedbackStreamInstanced VE_ASSERT(_glDrawTransformFeedbackStreamInstanced);_glDrawTransformFeedbackStreamInstanced
typedef void (APIENTRY *glGetInternalformativFunc)(GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint* params);
extern glGetInternalformativFunc _glGetInternalformativ;
#define glGetInternalformativ VE_ASSERT(_glGetInternalformativ);_glGetInternalformativ
typedef void (APIENTRY *glGetActiveAtomicCounterBufferivFunc)(GLuint program, GLuint bufferIndex, GLenum pname, GLint* params);
extern glGetActiveAtomicCounterBufferivFunc _glGetActiveAtomicCounterBufferiv;
#define glGetActiveAtomicCounterBufferiv VE_ASSERT(_glGetActiveAtomicCounterBufferiv);_glGetActiveAtomicCounterBufferiv
typedef void (APIENTRY *glBindImageTextureFunc)(GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format);
extern glBindImageTextureFunc _glBindImageTexture;
#define glBindImageTexture VE_ASSERT(_glBindImageTexture);_glBindImageTexture
typedef void (APIENTRY *glMemoryBarrierFunc)(GLbitfield barriers);
extern glMemoryBarrierFunc _glMemoryBarrier;
#define glMemoryBarrier VE_ASSERT(_glMemoryBarrier);_glMemoryBarrier
typedef void (APIENTRY *glTexStorage1DFunc)(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
extern glTexStorage1DFunc _glTexStorage1D;
#define glTexStorage1D VE_ASSERT(_glTexStorage1D);_glTexStorage1D
typedef void (APIENTRY *glTexStorage2DFunc)(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
extern glTexStorage2DFunc _glTexStorage2D;
#define glTexStorage2D VE_ASSERT(_glTexStorage2D);_glTexStorage2D
typedef void (APIENTRY *glTexStorage3DFunc)(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
extern glTexStorage3DFunc _glTexStorage3D;
#define glTexStorage3D VE_ASSERT(_glTexStorage3D);_glTexStorage3D
typedef void (APIENTRY *glTextureStorage1DEXTFunc)(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
extern glTextureStorage1DEXTFunc _glTextureStorage1DEXT;
#define glTextureStorage1DEXT VE_ASSERT(_glTextureStorage1DEXT);_glTextureStorage1DEXT
typedef void (APIENTRY *glTextureStorage2DEXTFunc)(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
extern glTextureStorage2DEXTFunc _glTextureStorage2DEXT;
#define glTextureStorage2DEXT VE_ASSERT(_glTextureStorage2DEXT);_glTextureStorage2DEXT
typedef void (APIENTRY *glTextureStorage3DEXTFunc)(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
extern glTextureStorage3DEXTFunc _glTextureStorage3DEXT;
#define glTextureStorage3DEXT VE_ASSERT(_glTextureStorage3DEXT);_glTextureStorage3DEXT
typedef void (APIENTRY *glDebugMessageControlFunc)(GLenum source, GLenum type, GLenum severity, GLsizei count, GLuint* ids, GLboolean enabled);
extern glDebugMessageControlFunc _glDebugMessageControl;
#define glDebugMessageControl VE_ASSERT(_glDebugMessageControl);_glDebugMessageControl
typedef void (APIENTRY *glDebugMessageInsertFunc)(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, GLchar* buf);
extern glDebugMessageInsertFunc _glDebugMessageInsert;
#define glDebugMessageInsert VE_ASSERT(_glDebugMessageInsert);_glDebugMessageInsert
typedef void (APIENTRY *glDebugMessageCallbackFunc)(GLDEBUGPROC callback, void* userParam);
extern glDebugMessageCallbackFunc _glDebugMessageCallback;
#define glDebugMessageCallback VE_ASSERT(_glDebugMessageCallback);_glDebugMessageCallback
typedef GLuint (APIENTRY *glGetDebugMessageLogFunc)(GLuint count, GLsizei bufsize, GLenum* sources, GLenum* types, GLuint* ids, GLenum* severities, GLsizei* lengths, GLchar* messageLog);
extern glGetDebugMessageLogFunc _glGetDebugMessageLog;
#define glGetDebugMessageLog _glGetDebugMessageLog
typedef void (APIENTRY *glPushDebugGroupFunc)(GLenum source, GLuint id, GLsizei length, GLchar* message);
extern glPushDebugGroupFunc _glPushDebugGroup;
#define glPushDebugGroup VE_ASSERT(_glPushDebugGroup);_glPushDebugGroup
typedef void (APIENTRY *glPopDebugGroupFunc)();
extern glPopDebugGroupFunc _glPopDebugGroup;
#define glPopDebugGroup VE_ASSERT(_glPopDebugGroup);_glPopDebugGroup
typedef void (APIENTRY *glObjectLabelFunc)(GLenum identifier, GLuint name, GLsizei length, GLchar* label);
extern glObjectLabelFunc _glObjectLabel;
#define glObjectLabel VE_ASSERT(_glObjectLabel);_glObjectLabel
typedef void (APIENTRY *glGetObjectLabelFunc)(GLenum identifier, GLuint name, GLsizei bufSize, GLsizei* length, GLchar* label);
extern glGetObjectLabelFunc _glGetObjectLabel;
#define glGetObjectLabel VE_ASSERT(_glGetObjectLabel);_glGetObjectLabel
typedef void (APIENTRY *glObjectPtrLabelFunc)(void* ptr, GLsizei length, GLchar* label);
extern glObjectPtrLabelFunc _glObjectPtrLabel;
#define glObjectPtrLabel VE_ASSERT(_glObjectPtrLabel);_glObjectPtrLabel
typedef void (APIENTRY *glGetObjectPtrLabelFunc)(void* ptr, GLsizei bufSize, GLsizei* length, GLchar* label);
extern glGetObjectPtrLabelFunc _glGetObjectPtrLabel;
#define glGetObjectPtrLabel VE_ASSERT(_glGetObjectPtrLabel);_glGetObjectPtrLabel
typedef void (APIENTRY *glClearBufferDataFunc)(GLenum target, GLenum internalformat, GLenum format, GLenum type, void* data);
extern glClearBufferDataFunc _glClearBufferData;
#define glClearBufferData VE_ASSERT(_glClearBufferData);_glClearBufferData
typedef void (APIENTRY *glClearBufferSubDataFunc)(GLenum target, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, void* data);
extern glClearBufferSubDataFunc _glClearBufferSubData;
#define glClearBufferSubData VE_ASSERT(_glClearBufferSubData);_glClearBufferSubData
typedef void (APIENTRY *glClearNamedBufferDataEXTFunc)(GLuint buffer, GLenum internalformat, GLenum format, GLenum type, void* data);
extern glClearNamedBufferDataEXTFunc _glClearNamedBufferDataEXT;
#define glClearNamedBufferDataEXT VE_ASSERT(_glClearNamedBufferDataEXT);_glClearNamedBufferDataEXT
typedef void (APIENTRY *glClearNamedBufferSubDataEXTFunc)(GLuint buffer, GLenum internalformat, GLenum format, GLenum type, GLsizeiptr offset, GLsizeiptr size, void* data);
extern glClearNamedBufferSubDataEXTFunc _glClearNamedBufferSubDataEXT;
#define glClearNamedBufferSubDataEXT VE_ASSERT(_glClearNamedBufferSubDataEXT);_glClearNamedBufferSubDataEXT
typedef void (APIENTRY *glDispatchComputeFunc)(GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);
extern glDispatchComputeFunc _glDispatchCompute;
#define glDispatchCompute VE_ASSERT(_glDispatchCompute);_glDispatchCompute
typedef void (APIENTRY *glDispatchComputeIndirectFunc)(GLintptr indirect);
extern glDispatchComputeIndirectFunc _glDispatchComputeIndirect;
#define glDispatchComputeIndirect VE_ASSERT(_glDispatchComputeIndirect);_glDispatchComputeIndirect
typedef void (APIENTRY *glCopyImageSubDataFunc)(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
extern glCopyImageSubDataFunc _glCopyImageSubData;
#define glCopyImageSubData VE_ASSERT(_glCopyImageSubData);_glCopyImageSubData
typedef void (APIENTRY *glTextureViewFunc)(GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);
extern glTextureViewFunc _glTextureView;
#define glTextureView VE_ASSERT(_glTextureView);_glTextureView
typedef void (APIENTRY *glBindVertexBufferFunc)(GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
extern glBindVertexBufferFunc _glBindVertexBuffer;
#define glBindVertexBuffer VE_ASSERT(_glBindVertexBuffer);_glBindVertexBuffer
typedef void (APIENTRY *glVertexAttribFormatFunc)(GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
extern glVertexAttribFormatFunc _glVertexAttribFormat;
#define glVertexAttribFormat VE_ASSERT(_glVertexAttribFormat);_glVertexAttribFormat
typedef void (APIENTRY *glVertexAttribIFormatFunc)(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
extern glVertexAttribIFormatFunc _glVertexAttribIFormat;
#define glVertexAttribIFormat VE_ASSERT(_glVertexAttribIFormat);_glVertexAttribIFormat
typedef void (APIENTRY *glVertexAttribLFormatFunc)(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
extern glVertexAttribLFormatFunc _glVertexAttribLFormat;
#define glVertexAttribLFormat VE_ASSERT(_glVertexAttribLFormat);_glVertexAttribLFormat
typedef void (APIENTRY *glVertexAttribBindingFunc)(GLuint attribindex, GLuint bindingindex);
extern glVertexAttribBindingFunc _glVertexAttribBinding;
#define glVertexAttribBinding VE_ASSERT(_glVertexAttribBinding);_glVertexAttribBinding
typedef void (APIENTRY *glVertexBindingDivisorFunc)(GLuint bindingindex, GLuint divisor);
extern glVertexBindingDivisorFunc _glVertexBindingDivisor;
#define glVertexBindingDivisor VE_ASSERT(_glVertexBindingDivisor);_glVertexBindingDivisor
typedef void (APIENTRY *glVertexArrayBindVertexBufferEXTFunc)(GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
extern glVertexArrayBindVertexBufferEXTFunc _glVertexArrayBindVertexBufferEXT;
#define glVertexArrayBindVertexBufferEXT VE_ASSERT(_glVertexArrayBindVertexBufferEXT);_glVertexArrayBindVertexBufferEXT
typedef void (APIENTRY *glVertexArrayVertexAttribFormatEXTFunc)(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
extern glVertexArrayVertexAttribFormatEXTFunc _glVertexArrayVertexAttribFormatEXT;
#define glVertexArrayVertexAttribFormatEXT VE_ASSERT(_glVertexArrayVertexAttribFormatEXT);_glVertexArrayVertexAttribFormatEXT
typedef void (APIENTRY *glVertexArrayVertexAttribIFormatEXTFunc)(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
extern glVertexArrayVertexAttribIFormatEXTFunc _glVertexArrayVertexAttribIFormatEXT;
#define glVertexArrayVertexAttribIFormatEXT VE_ASSERT(_glVertexArrayVertexAttribIFormatEXT);_glVertexArrayVertexAttribIFormatEXT
typedef void (APIENTRY *glVertexArrayVertexAttribLFormatEXTFunc)(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
extern glVertexArrayVertexAttribLFormatEXTFunc _glVertexArrayVertexAttribLFormatEXT;
#define glVertexArrayVertexAttribLFormatEXT VE_ASSERT(_glVertexArrayVertexAttribLFormatEXT);_glVertexArrayVertexAttribLFormatEXT
typedef void (APIENTRY *glVertexArrayVertexAttribBindingEXTFunc)(GLuint vaobj, GLuint attribindex, GLuint bindingindex);
extern glVertexArrayVertexAttribBindingEXTFunc _glVertexArrayVertexAttribBindingEXT;
#define glVertexArrayVertexAttribBindingEXT VE_ASSERT(_glVertexArrayVertexAttribBindingEXT);_glVertexArrayVertexAttribBindingEXT
typedef void (APIENTRY *glVertexArrayVertexBindingDivisorEXTFunc)(GLuint vaobj, GLuint bindingindex, GLuint divisor);
extern glVertexArrayVertexBindingDivisorEXTFunc _glVertexArrayVertexBindingDivisorEXT;
#define glVertexArrayVertexBindingDivisorEXT VE_ASSERT(_glVertexArrayVertexBindingDivisorEXT);_glVertexArrayVertexBindingDivisorEXT
typedef void (APIENTRY *glFramebufferParameteriFunc)(GLenum target, GLenum pname, GLint param);
extern glFramebufferParameteriFunc _glFramebufferParameteri;
#define glFramebufferParameteri VE_ASSERT(_glFramebufferParameteri);_glFramebufferParameteri
typedef void (APIENTRY *glGetFramebufferParameterivFunc)(GLenum target, GLenum pname, GLint* params);
extern glGetFramebufferParameterivFunc _glGetFramebufferParameteriv;
#define glGetFramebufferParameteriv VE_ASSERT(_glGetFramebufferParameteriv);_glGetFramebufferParameteriv
typedef void (APIENTRY *glNamedFramebufferParameteriEXTFunc)(GLuint framebuffer, GLenum pname, GLint param);
extern glNamedFramebufferParameteriEXTFunc _glNamedFramebufferParameteriEXT;
#define glNamedFramebufferParameteriEXT VE_ASSERT(_glNamedFramebufferParameteriEXT);_glNamedFramebufferParameteriEXT
typedef void (APIENTRY *glGetNamedFramebufferParameterivEXTFunc)(GLuint framebuffer, GLenum pname, GLint* params);
extern glGetNamedFramebufferParameterivEXTFunc _glGetNamedFramebufferParameterivEXT;
#define glGetNamedFramebufferParameterivEXT VE_ASSERT(_glGetNamedFramebufferParameterivEXT);_glGetNamedFramebufferParameterivEXT
typedef void (APIENTRY *glGetInternalformati64vFunc)(GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint64* params);
extern glGetInternalformati64vFunc _glGetInternalformati64v;
#define glGetInternalformati64v VE_ASSERT(_glGetInternalformati64v);_glGetInternalformati64v
typedef void (APIENTRY *glInvalidateTexSubImageFunc)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth);
extern glInvalidateTexSubImageFunc _glInvalidateTexSubImage;
#define glInvalidateTexSubImage VE_ASSERT(_glInvalidateTexSubImage);_glInvalidateTexSubImage
typedef void (APIENTRY *glInvalidateTexImageFunc)(GLuint texture, GLint level);
extern glInvalidateTexImageFunc _glInvalidateTexImage;
#define glInvalidateTexImage VE_ASSERT(_glInvalidateTexImage);_glInvalidateTexImage
typedef void (APIENTRY *glInvalidateBufferSubDataFunc)(GLuint buffer, GLintptr offset, GLsizeiptr length);
extern glInvalidateBufferSubDataFunc _glInvalidateBufferSubData;
#define glInvalidateBufferSubData VE_ASSERT(_glInvalidateBufferSubData);_glInvalidateBufferSubData
typedef void (APIENTRY *glInvalidateBufferDataFunc)(GLuint buffer);
extern glInvalidateBufferDataFunc _glInvalidateBufferData;
#define glInvalidateBufferData VE_ASSERT(_glInvalidateBufferData);_glInvalidateBufferData
typedef void (APIENTRY *glInvalidateFramebufferFunc)(GLenum target, GLsizei numAttachments, GLenum* attachments);
extern glInvalidateFramebufferFunc _glInvalidateFramebuffer;
#define glInvalidateFramebuffer VE_ASSERT(_glInvalidateFramebuffer);_glInvalidateFramebuffer
typedef void (APIENTRY *glInvalidateSubFramebufferFunc)(GLenum target, GLsizei numAttachments, GLenum* attachments, GLint x, GLint y, GLsizei width, GLsizei height);
extern glInvalidateSubFramebufferFunc _glInvalidateSubFramebuffer;
#define glInvalidateSubFramebuffer VE_ASSERT(_glInvalidateSubFramebuffer);_glInvalidateSubFramebuffer
typedef void (APIENTRY *glMultiDrawArraysIndirectFunc)(GLenum mode, void* indirect, GLsizei drawcount, GLsizei stride);
extern glMultiDrawArraysIndirectFunc _glMultiDrawArraysIndirect;
#define glMultiDrawArraysIndirect VE_ASSERT(_glMultiDrawArraysIndirect);_glMultiDrawArraysIndirect
typedef void (APIENTRY *glMultiDrawElementsIndirectFunc)(GLenum mode, GLenum type, void* indirect, GLsizei drawcount, GLsizei stride);
extern glMultiDrawElementsIndirectFunc _glMultiDrawElementsIndirect;
#define glMultiDrawElementsIndirect VE_ASSERT(_glMultiDrawElementsIndirect);_glMultiDrawElementsIndirect
typedef void (APIENTRY *glGetProgramInterfaceivFunc)(GLuint program, GLenum programInterface, GLenum pname, GLint* params);
extern glGetProgramInterfaceivFunc _glGetProgramInterfaceiv;
#define glGetProgramInterfaceiv VE_ASSERT(_glGetProgramInterfaceiv);_glGetProgramInterfaceiv
typedef GLuint (APIENTRY *glGetProgramResourceIndexFunc)(GLuint program, GLenum programInterface, GLchar* name);
extern glGetProgramResourceIndexFunc _glGetProgramResourceIndex;
#define glGetProgramResourceIndex _glGetProgramResourceIndex
typedef void (APIENTRY *glGetProgramResourceNameFunc)(GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei* length, GLchar* name);
extern glGetProgramResourceNameFunc _glGetProgramResourceName;
#define glGetProgramResourceName VE_ASSERT(_glGetProgramResourceName);_glGetProgramResourceName
typedef void (APIENTRY *glGetProgramResourceivFunc)(GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, GLenum* props, GLsizei bufSize, GLsizei* length, GLint* params);
extern glGetProgramResourceivFunc _glGetProgramResourceiv;
#define glGetProgramResourceiv VE_ASSERT(_glGetProgramResourceiv);_glGetProgramResourceiv
typedef GLint (APIENTRY *glGetProgramResourceLocationFunc)(GLuint program, GLenum programInterface, GLchar* name);
extern glGetProgramResourceLocationFunc _glGetProgramResourceLocation;
#define glGetProgramResourceLocation _glGetProgramResourceLocation
typedef GLint (APIENTRY *glGetProgramResourceLocationIndexFunc)(GLuint program, GLenum programInterface, GLchar* name);
extern glGetProgramResourceLocationIndexFunc _glGetProgramResourceLocationIndex;
#define glGetProgramResourceLocationIndex _glGetProgramResourceLocationIndex
typedef void (APIENTRY *glShaderStorageBlockBindingFunc)(GLuint program, GLuint storageBlockIndex, GLuint storageBlockBinding);
extern glShaderStorageBlockBindingFunc _glShaderStorageBlockBinding;
#define glShaderStorageBlockBinding VE_ASSERT(_glShaderStorageBlockBinding);_glShaderStorageBlockBinding
typedef void (APIENTRY *glTexBufferRangeFunc)(GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
extern glTexBufferRangeFunc _glTexBufferRange;
#define glTexBufferRange VE_ASSERT(_glTexBufferRange);_glTexBufferRange
typedef void (APIENTRY *glTextureBufferRangeEXTFunc)(GLuint texture, GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
extern glTextureBufferRangeEXTFunc _glTextureBufferRangeEXT;
#define glTextureBufferRangeEXT VE_ASSERT(_glTextureBufferRangeEXT);_glTextureBufferRangeEXT
typedef void (APIENTRY *glTexStorage2DMultisampleFunc)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
extern glTexStorage2DMultisampleFunc _glTexStorage2DMultisample;
#define glTexStorage2DMultisample VE_ASSERT(_glTexStorage2DMultisample);_glTexStorage2DMultisample
typedef void (APIENTRY *glTexStorage3DMultisampleFunc)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
extern glTexStorage3DMultisampleFunc _glTexStorage3DMultisample;
#define glTexStorage3DMultisample VE_ASSERT(_glTexStorage3DMultisample);_glTexStorage3DMultisample
typedef void (APIENTRY *glTextureStorage2DMultisampleEXTFunc)(GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
extern glTextureStorage2DMultisampleEXTFunc _glTextureStorage2DMultisampleEXT;
#define glTextureStorage2DMultisampleEXT VE_ASSERT(_glTextureStorage2DMultisampleEXT);_glTextureStorage2DMultisampleEXT
typedef void (APIENTRY *glTextureStorage3DMultisampleEXTFunc)(GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
extern glTextureStorage3DMultisampleEXTFunc _glTextureStorage3DMultisampleEXT;
#define glTextureStorage3DMultisampleEXT VE_ASSERT(_glTextureStorage3DMultisampleEXT);_glTextureStorage3DMultisampleEXT
typedef void (APIENTRY *glBlendColorEXTFunc)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
extern glBlendColorEXTFunc _glBlendColorEXT;
#define glBlendColorEXT VE_ASSERT(_glBlendColorEXT);_glBlendColorEXT
typedef void (APIENTRY *glPolygonOffsetEXTFunc)(GLfloat factor, GLfloat bias);
extern glPolygonOffsetEXTFunc _glPolygonOffsetEXT;
#define glPolygonOffsetEXT VE_ASSERT(_glPolygonOffsetEXT);_glPolygonOffsetEXT
typedef void (APIENTRY *glTexImage3DEXTFunc)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, GLvoid* pixels);
extern glTexImage3DEXTFunc _glTexImage3DEXT;
#define glTexImage3DEXT VE_ASSERT(_glTexImage3DEXT);_glTexImage3DEXT
typedef void (APIENTRY *glTexSubImage3DEXTFunc)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLvoid* pixels);
extern glTexSubImage3DEXTFunc _glTexSubImage3DEXT;
#define glTexSubImage3DEXT VE_ASSERT(_glTexSubImage3DEXT);_glTexSubImage3DEXT
typedef void (APIENTRY *glGetTexFilterFuncSGISFunc)(GLenum target, GLenum filter, GLfloat* weights);
extern glGetTexFilterFuncSGISFunc _glGetTexFilterFuncSGIS;
#define glGetTexFilterFuncSGIS VE_ASSERT(_glGetTexFilterFuncSGIS);_glGetTexFilterFuncSGIS
typedef void (APIENTRY *glTexFilterFuncSGISFunc)(GLenum target, GLenum filter, GLsizei n, GLfloat* weights);
extern glTexFilterFuncSGISFunc _glTexFilterFuncSGIS;
#define glTexFilterFuncSGIS VE_ASSERT(_glTexFilterFuncSGIS);_glTexFilterFuncSGIS
typedef void (APIENTRY *glTexSubImage1DEXTFunc)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, GLvoid* pixels);
extern glTexSubImage1DEXTFunc _glTexSubImage1DEXT;
#define glTexSubImage1DEXT VE_ASSERT(_glTexSubImage1DEXT);_glTexSubImage1DEXT
typedef void (APIENTRY *glTexSubImage2DEXTFunc)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid* pixels);
extern glTexSubImage2DEXTFunc _glTexSubImage2DEXT;
#define glTexSubImage2DEXT VE_ASSERT(_glTexSubImage2DEXT);_glTexSubImage2DEXT
typedef void (APIENTRY *glCopyTexImage1DEXTFunc)(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
extern glCopyTexImage1DEXTFunc _glCopyTexImage1DEXT;
#define glCopyTexImage1DEXT VE_ASSERT(_glCopyTexImage1DEXT);_glCopyTexImage1DEXT
typedef void (APIENTRY *glCopyTexImage2DEXTFunc)(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
extern glCopyTexImage2DEXTFunc _glCopyTexImage2DEXT;
#define glCopyTexImage2DEXT VE_ASSERT(_glCopyTexImage2DEXT);_glCopyTexImage2DEXT
typedef void (APIENTRY *glCopyTexSubImage1DEXTFunc)(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
extern glCopyTexSubImage1DEXTFunc _glCopyTexSubImage1DEXT;
#define glCopyTexSubImage1DEXT VE_ASSERT(_glCopyTexSubImage1DEXT);_glCopyTexSubImage1DEXT
typedef void (APIENTRY *glCopyTexSubImage2DEXTFunc)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
extern glCopyTexSubImage2DEXTFunc _glCopyTexSubImage2DEXT;
#define glCopyTexSubImage2DEXT VE_ASSERT(_glCopyTexSubImage2DEXT);_glCopyTexSubImage2DEXT
typedef void (APIENTRY *glCopyTexSubImage3DEXTFunc)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
extern glCopyTexSubImage3DEXTFunc _glCopyTexSubImage3DEXT;
#define glCopyTexSubImage3DEXT VE_ASSERT(_glCopyTexSubImage3DEXT);_glCopyTexSubImage3DEXT
typedef void (APIENTRY *glGetHistogramEXTFunc)(GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid* values);
extern glGetHistogramEXTFunc _glGetHistogramEXT;
#define glGetHistogramEXT VE_ASSERT(_glGetHistogramEXT);_glGetHistogramEXT
typedef void (APIENTRY *glGetHistogramParameterfvEXTFunc)(GLenum target, GLenum pname, GLfloat* params);
extern glGetHistogramParameterfvEXTFunc _glGetHistogramParameterfvEXT;
#define glGetHistogramParameterfvEXT VE_ASSERT(_glGetHistogramParameterfvEXT);_glGetHistogramParameterfvEXT
typedef void (APIENTRY *glGetHistogramParameterivEXTFunc)(GLenum target, GLenum pname, GLint* params);
extern glGetHistogramParameterivEXTFunc _glGetHistogramParameterivEXT;
#define glGetHistogramParameterivEXT VE_ASSERT(_glGetHistogramParameterivEXT);_glGetHistogramParameterivEXT
typedef void (APIENTRY *glGetMinmaxEXTFunc)(GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid* values);
extern glGetMinmaxEXTFunc _glGetMinmaxEXT;
#define glGetMinmaxEXT VE_ASSERT(_glGetMinmaxEXT);_glGetMinmaxEXT
typedef void (APIENTRY *glGetMinmaxParameterfvEXTFunc)(GLenum target, GLenum pname, GLfloat* params);
extern glGetMinmaxParameterfvEXTFunc _glGetMinmaxParameterfvEXT;
#define glGetMinmaxParameterfvEXT VE_ASSERT(_glGetMinmaxParameterfvEXT);_glGetMinmaxParameterfvEXT
typedef void (APIENTRY *glGetMinmaxParameterivEXTFunc)(GLenum target, GLenum pname, GLint* params);
extern glGetMinmaxParameterivEXTFunc _glGetMinmaxParameterivEXT;
#define glGetMinmaxParameterivEXT VE_ASSERT(_glGetMinmaxParameterivEXT);_glGetMinmaxParameterivEXT
typedef void (APIENTRY *glHistogramEXTFunc)(GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);
extern glHistogramEXTFunc _glHistogramEXT;
#define glHistogramEXT VE_ASSERT(_glHistogramEXT);_glHistogramEXT
typedef void (APIENTRY *glMinmaxEXTFunc)(GLenum target, GLenum internalformat, GLboolean sink);
extern glMinmaxEXTFunc _glMinmaxEXT;
#define glMinmaxEXT VE_ASSERT(_glMinmaxEXT);_glMinmaxEXT
typedef void (APIENTRY *glResetHistogramEXTFunc)(GLenum target);
extern glResetHistogramEXTFunc _glResetHistogramEXT;
#define glResetHistogramEXT VE_ASSERT(_glResetHistogramEXT);_glResetHistogramEXT
typedef void (APIENTRY *glResetMinmaxEXTFunc)(GLenum target);
extern glResetMinmaxEXTFunc _glResetMinmaxEXT;
#define glResetMinmaxEXT VE_ASSERT(_glResetMinmaxEXT);_glResetMinmaxEXT
typedef void (APIENTRY *glConvolutionFilter1DEXTFunc)(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, GLvoid* image);
extern glConvolutionFilter1DEXTFunc _glConvolutionFilter1DEXT;
#define glConvolutionFilter1DEXT VE_ASSERT(_glConvolutionFilter1DEXT);_glConvolutionFilter1DEXT
typedef void (APIENTRY *glConvolutionFilter2DEXTFunc)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid* image);
extern glConvolutionFilter2DEXTFunc _glConvolutionFilter2DEXT;
#define glConvolutionFilter2DEXT VE_ASSERT(_glConvolutionFilter2DEXT);_glConvolutionFilter2DEXT
typedef void (APIENTRY *glConvolutionParameterfEXTFunc)(GLenum target, GLenum pname, GLfloat params);
extern glConvolutionParameterfEXTFunc _glConvolutionParameterfEXT;
#define glConvolutionParameterfEXT VE_ASSERT(_glConvolutionParameterfEXT);_glConvolutionParameterfEXT
typedef void (APIENTRY *glConvolutionParameterfvEXTFunc)(GLenum target, GLenum pname, GLfloat* params);
extern glConvolutionParameterfvEXTFunc _glConvolutionParameterfvEXT;
#define glConvolutionParameterfvEXT VE_ASSERT(_glConvolutionParameterfvEXT);_glConvolutionParameterfvEXT
typedef void (APIENTRY *glConvolutionParameteriEXTFunc)(GLenum target, GLenum pname, GLint params);
extern glConvolutionParameteriEXTFunc _glConvolutionParameteriEXT;
#define glConvolutionParameteriEXT VE_ASSERT(_glConvolutionParameteriEXT);_glConvolutionParameteriEXT
typedef void (APIENTRY *glConvolutionParameterivEXTFunc)(GLenum target, GLenum pname, GLint* params);
extern glConvolutionParameterivEXTFunc _glConvolutionParameterivEXT;
#define glConvolutionParameterivEXT VE_ASSERT(_glConvolutionParameterivEXT);_glConvolutionParameterivEXT
typedef void (APIENTRY *glCopyConvolutionFilter1DEXTFunc)(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
extern glCopyConvolutionFilter1DEXTFunc _glCopyConvolutionFilter1DEXT;
#define glCopyConvolutionFilter1DEXT VE_ASSERT(_glCopyConvolutionFilter1DEXT);_glCopyConvolutionFilter1DEXT
typedef void (APIENTRY *glCopyConvolutionFilter2DEXTFunc)(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);
extern glCopyConvolutionFilter2DEXTFunc _glCopyConvolutionFilter2DEXT;
#define glCopyConvolutionFilter2DEXT VE_ASSERT(_glCopyConvolutionFilter2DEXT);_glCopyConvolutionFilter2DEXT
typedef void (APIENTRY *glGetConvolutionFilterEXTFunc)(GLenum target, GLenum format, GLenum type, GLvoid* image);
extern glGetConvolutionFilterEXTFunc _glGetConvolutionFilterEXT;
#define glGetConvolutionFilterEXT VE_ASSERT(_glGetConvolutionFilterEXT);_glGetConvolutionFilterEXT
typedef void (APIENTRY *glGetConvolutionParameterfvEXTFunc)(GLenum target, GLenum pname, GLfloat* params);
extern glGetConvolutionParameterfvEXTFunc _glGetConvolutionParameterfvEXT;
#define glGetConvolutionParameterfvEXT VE_ASSERT(_glGetConvolutionParameterfvEXT);_glGetConvolutionParameterfvEXT
typedef void (APIENTRY *glGetConvolutionParameterivEXTFunc)(GLenum target, GLenum pname, GLint* params);
extern glGetConvolutionParameterivEXTFunc _glGetConvolutionParameterivEXT;
#define glGetConvolutionParameterivEXT VE_ASSERT(_glGetConvolutionParameterivEXT);_glGetConvolutionParameterivEXT
typedef void (APIENTRY *glGetSeparableFilterEXTFunc)(GLenum target, GLenum format, GLenum type, GLvoid* row, GLvoid* column, GLvoid* span);
extern glGetSeparableFilterEXTFunc _glGetSeparableFilterEXT;
#define glGetSeparableFilterEXT VE_ASSERT(_glGetSeparableFilterEXT);_glGetSeparableFilterEXT
typedef void (APIENTRY *glSeparableFilter2DEXTFunc)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid* row, GLvoid* column);
extern glSeparableFilter2DEXTFunc _glSeparableFilter2DEXT;
#define glSeparableFilter2DEXT VE_ASSERT(_glSeparableFilter2DEXT);_glSeparableFilter2DEXT
typedef void (APIENTRY *glColorTableSGIFunc)(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, GLvoid* table);
extern glColorTableSGIFunc _glColorTableSGI;
#define glColorTableSGI VE_ASSERT(_glColorTableSGI);_glColorTableSGI
typedef void (APIENTRY *glColorTableParameterfvSGIFunc)(GLenum target, GLenum pname, GLfloat* params);
extern glColorTableParameterfvSGIFunc _glColorTableParameterfvSGI;
#define glColorTableParameterfvSGI VE_ASSERT(_glColorTableParameterfvSGI);_glColorTableParameterfvSGI
typedef void (APIENTRY *glColorTableParameterivSGIFunc)(GLenum target, GLenum pname, GLint* params);
extern glColorTableParameterivSGIFunc _glColorTableParameterivSGI;
#define glColorTableParameterivSGI VE_ASSERT(_glColorTableParameterivSGI);_glColorTableParameterivSGI
typedef void (APIENTRY *glCopyColorTableSGIFunc)(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
extern glCopyColorTableSGIFunc _glCopyColorTableSGI;
#define glCopyColorTableSGI VE_ASSERT(_glCopyColorTableSGI);_glCopyColorTableSGI
typedef void (APIENTRY *glGetColorTableSGIFunc)(GLenum target, GLenum format, GLenum type, GLvoid* table);
extern glGetColorTableSGIFunc _glGetColorTableSGI;
#define glGetColorTableSGI VE_ASSERT(_glGetColorTableSGI);_glGetColorTableSGI
typedef void (APIENTRY *glGetColorTableParameterfvSGIFunc)(GLenum target, GLenum pname, GLfloat* params);
extern glGetColorTableParameterfvSGIFunc _glGetColorTableParameterfvSGI;
#define glGetColorTableParameterfvSGI VE_ASSERT(_glGetColorTableParameterfvSGI);_glGetColorTableParameterfvSGI
typedef void (APIENTRY *glGetColorTableParameterivSGIFunc)(GLenum target, GLenum pname, GLint* params);
extern glGetColorTableParameterivSGIFunc _glGetColorTableParameterivSGI;
#define glGetColorTableParameterivSGI VE_ASSERT(_glGetColorTableParameterivSGI);_glGetColorTableParameterivSGI
typedef void (APIENTRY *glPixelTexGenSGIXFunc)(GLenum mode);
extern glPixelTexGenSGIXFunc _glPixelTexGenSGIX;
#define glPixelTexGenSGIX VE_ASSERT(_glPixelTexGenSGIX);_glPixelTexGenSGIX
typedef void (APIENTRY *glPixelTexGenParameteriSGISFunc)(GLenum pname, GLint param);
extern glPixelTexGenParameteriSGISFunc _glPixelTexGenParameteriSGIS;
#define glPixelTexGenParameteriSGIS VE_ASSERT(_glPixelTexGenParameteriSGIS);_glPixelTexGenParameteriSGIS
typedef void (APIENTRY *glPixelTexGenParameterivSGISFunc)(GLenum pname, GLint* params);
extern glPixelTexGenParameterivSGISFunc _glPixelTexGenParameterivSGIS;
#define glPixelTexGenParameterivSGIS VE_ASSERT(_glPixelTexGenParameterivSGIS);_glPixelTexGenParameterivSGIS
typedef void (APIENTRY *glPixelTexGenParameterfSGISFunc)(GLenum pname, GLfloat param);
extern glPixelTexGenParameterfSGISFunc _glPixelTexGenParameterfSGIS;
#define glPixelTexGenParameterfSGIS VE_ASSERT(_glPixelTexGenParameterfSGIS);_glPixelTexGenParameterfSGIS
typedef void (APIENTRY *glPixelTexGenParameterfvSGISFunc)(GLenum pname, GLfloat* params);
extern glPixelTexGenParameterfvSGISFunc _glPixelTexGenParameterfvSGIS;
#define glPixelTexGenParameterfvSGIS VE_ASSERT(_glPixelTexGenParameterfvSGIS);_glPixelTexGenParameterfvSGIS
typedef void (APIENTRY *glGetPixelTexGenParameterivSGISFunc)(GLenum pname, GLint* params);
extern glGetPixelTexGenParameterivSGISFunc _glGetPixelTexGenParameterivSGIS;
#define glGetPixelTexGenParameterivSGIS VE_ASSERT(_glGetPixelTexGenParameterivSGIS);_glGetPixelTexGenParameterivSGIS
typedef void (APIENTRY *glGetPixelTexGenParameterfvSGISFunc)(GLenum pname, GLfloat* params);
extern glGetPixelTexGenParameterfvSGISFunc _glGetPixelTexGenParameterfvSGIS;
#define glGetPixelTexGenParameterfvSGIS VE_ASSERT(_glGetPixelTexGenParameterfvSGIS);_glGetPixelTexGenParameterfvSGIS
typedef void (APIENTRY *glTexImage4DSGISFunc)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLint border, GLenum format, GLenum type, GLvoid* pixels);
extern glTexImage4DSGISFunc _glTexImage4DSGIS;
#define glTexImage4DSGIS VE_ASSERT(_glTexImage4DSGIS);_glTexImage4DSGIS
typedef void (APIENTRY *glTexSubImage4DSGISFunc)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint woffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLenum format, GLenum type, GLvoid* pixels);
extern glTexSubImage4DSGISFunc _glTexSubImage4DSGIS;
#define glTexSubImage4DSGIS VE_ASSERT(_glTexSubImage4DSGIS);_glTexSubImage4DSGIS
typedef GLboolean (APIENTRY *glAreTexturesResidentEXTFunc)(GLsizei n, GLuint* textures, GLboolean* residences);
extern glAreTexturesResidentEXTFunc _glAreTexturesResidentEXT;
#define glAreTexturesResidentEXT _glAreTexturesResidentEXT
typedef void (APIENTRY *glBindTextureEXTFunc)(GLenum target, GLuint texture);
extern glBindTextureEXTFunc _glBindTextureEXT;
#define glBindTextureEXT VE_ASSERT(_glBindTextureEXT);_glBindTextureEXT
typedef void (APIENTRY *glDeleteTexturesEXTFunc)(GLsizei n, GLuint* textures);
extern glDeleteTexturesEXTFunc _glDeleteTexturesEXT;
#define glDeleteTexturesEXT VE_ASSERT(_glDeleteTexturesEXT);_glDeleteTexturesEXT
typedef void (APIENTRY *glGenTexturesEXTFunc)(GLsizei n, GLuint* textures);
extern glGenTexturesEXTFunc _glGenTexturesEXT;
#define glGenTexturesEXT VE_ASSERT(_glGenTexturesEXT);_glGenTexturesEXT
typedef GLboolean (APIENTRY *glIsTextureEXTFunc)(GLuint texture);
extern glIsTextureEXTFunc _glIsTextureEXT;
#define glIsTextureEXT _glIsTextureEXT
typedef void (APIENTRY *glPrioritizeTexturesEXTFunc)(GLsizei n, GLuint* textures, GLclampf* priorities);
extern glPrioritizeTexturesEXTFunc _glPrioritizeTexturesEXT;
#define glPrioritizeTexturesEXT VE_ASSERT(_glPrioritizeTexturesEXT);_glPrioritizeTexturesEXT
typedef void (APIENTRY *glDetailTexFuncSGISFunc)(GLenum target, GLsizei n, GLfloat* points);
extern glDetailTexFuncSGISFunc _glDetailTexFuncSGIS;
#define glDetailTexFuncSGIS VE_ASSERT(_glDetailTexFuncSGIS);_glDetailTexFuncSGIS
typedef void (APIENTRY *glGetDetailTexFuncSGISFunc)(GLenum target, GLfloat* points);
extern glGetDetailTexFuncSGISFunc _glGetDetailTexFuncSGIS;
#define glGetDetailTexFuncSGIS VE_ASSERT(_glGetDetailTexFuncSGIS);_glGetDetailTexFuncSGIS
typedef void (APIENTRY *glSharpenTexFuncSGISFunc)(GLenum target, GLsizei n, GLfloat* points);
extern glSharpenTexFuncSGISFunc _glSharpenTexFuncSGIS;
#define glSharpenTexFuncSGIS VE_ASSERT(_glSharpenTexFuncSGIS);_glSharpenTexFuncSGIS
typedef void (APIENTRY *glGetSharpenTexFuncSGISFunc)(GLenum target, GLfloat* points);
extern glGetSharpenTexFuncSGISFunc _glGetSharpenTexFuncSGIS;
#define glGetSharpenTexFuncSGIS VE_ASSERT(_glGetSharpenTexFuncSGIS);_glGetSharpenTexFuncSGIS
typedef void (APIENTRY *glSampleMaskSGISFunc)(GLclampf value, GLboolean invert);
extern glSampleMaskSGISFunc _glSampleMaskSGIS;
#define glSampleMaskSGIS VE_ASSERT(_glSampleMaskSGIS);_glSampleMaskSGIS
typedef void (APIENTRY *glSamplePatternSGISFunc)(GLenum pattern);
extern glSamplePatternSGISFunc _glSamplePatternSGIS;
#define glSamplePatternSGIS VE_ASSERT(_glSamplePatternSGIS);_glSamplePatternSGIS
typedef void (APIENTRY *glArrayElementEXTFunc)(GLint i);
extern glArrayElementEXTFunc _glArrayElementEXT;
#define glArrayElementEXT VE_ASSERT(_glArrayElementEXT);_glArrayElementEXT
typedef void (APIENTRY *glColorPointerEXTFunc)(GLint size, GLenum type, GLsizei stride, GLsizei count, GLvoid* pointer);
extern glColorPointerEXTFunc _glColorPointerEXT;
#define glColorPointerEXT VE_ASSERT(_glColorPointerEXT);_glColorPointerEXT
typedef void (APIENTRY *glDrawArraysEXTFunc)(GLenum mode, GLint first, GLsizei count);
extern glDrawArraysEXTFunc _glDrawArraysEXT;
#define glDrawArraysEXT VE_ASSERT(_glDrawArraysEXT);_glDrawArraysEXT
typedef void (APIENTRY *glEdgeFlagPointerEXTFunc)(GLsizei stride, GLsizei count, GLboolean* pointer);
extern glEdgeFlagPointerEXTFunc _glEdgeFlagPointerEXT;
#define glEdgeFlagPointerEXT VE_ASSERT(_glEdgeFlagPointerEXT);_glEdgeFlagPointerEXT
typedef void (APIENTRY *glGetPointervEXTFunc)(GLenum pname, GLvoid** params);
extern glGetPointervEXTFunc _glGetPointervEXT;
#define glGetPointervEXT VE_ASSERT(_glGetPointervEXT);_glGetPointervEXT
typedef void (APIENTRY *glIndexPointerEXTFunc)(GLenum type, GLsizei stride, GLsizei count, GLvoid* pointer);
extern glIndexPointerEXTFunc _glIndexPointerEXT;
#define glIndexPointerEXT VE_ASSERT(_glIndexPointerEXT);_glIndexPointerEXT
typedef void (APIENTRY *glNormalPointerEXTFunc)(GLenum type, GLsizei stride, GLsizei count, GLvoid* pointer);
extern glNormalPointerEXTFunc _glNormalPointerEXT;
#define glNormalPointerEXT VE_ASSERT(_glNormalPointerEXT);_glNormalPointerEXT
typedef void (APIENTRY *glTexCoordPointerEXTFunc)(GLint size, GLenum type, GLsizei stride, GLsizei count, GLvoid* pointer);
extern glTexCoordPointerEXTFunc _glTexCoordPointerEXT;
#define glTexCoordPointerEXT VE_ASSERT(_glTexCoordPointerEXT);_glTexCoordPointerEXT
typedef void (APIENTRY *glVertexPointerEXTFunc)(GLint size, GLenum type, GLsizei stride, GLsizei count, GLvoid* pointer);
extern glVertexPointerEXTFunc _glVertexPointerEXT;
#define glVertexPointerEXT VE_ASSERT(_glVertexPointerEXT);_glVertexPointerEXT
typedef void (APIENTRY *glBlendEquationEXTFunc)(GLenum mode);
extern glBlendEquationEXTFunc _glBlendEquationEXT;
#define glBlendEquationEXT VE_ASSERT(_glBlendEquationEXT);_glBlendEquationEXT
typedef void (APIENTRY *glSpriteParameterfSGIXFunc)(GLenum pname, GLfloat param);
extern glSpriteParameterfSGIXFunc _glSpriteParameterfSGIX;
#define glSpriteParameterfSGIX VE_ASSERT(_glSpriteParameterfSGIX);_glSpriteParameterfSGIX
typedef void (APIENTRY *glSpriteParameterfvSGIXFunc)(GLenum pname, GLfloat* params);
extern glSpriteParameterfvSGIXFunc _glSpriteParameterfvSGIX;
#define glSpriteParameterfvSGIX VE_ASSERT(_glSpriteParameterfvSGIX);_glSpriteParameterfvSGIX
typedef void (APIENTRY *glSpriteParameteriSGIXFunc)(GLenum pname, GLint param);
extern glSpriteParameteriSGIXFunc _glSpriteParameteriSGIX;
#define glSpriteParameteriSGIX VE_ASSERT(_glSpriteParameteriSGIX);_glSpriteParameteriSGIX
typedef void (APIENTRY *glSpriteParameterivSGIXFunc)(GLenum pname, GLint* params);
extern glSpriteParameterivSGIXFunc _glSpriteParameterivSGIX;
#define glSpriteParameterivSGIX VE_ASSERT(_glSpriteParameterivSGIX);_glSpriteParameterivSGIX
typedef void (APIENTRY *glPointParameterfEXTFunc)(GLenum pname, GLfloat param);
extern glPointParameterfEXTFunc _glPointParameterfEXT;
#define glPointParameterfEXT VE_ASSERT(_glPointParameterfEXT);_glPointParameterfEXT
typedef void (APIENTRY *glPointParameterfvEXTFunc)(GLenum pname, GLfloat* params);
extern glPointParameterfvEXTFunc _glPointParameterfvEXT;
#define glPointParameterfvEXT VE_ASSERT(_glPointParameterfvEXT);_glPointParameterfvEXT
typedef void (APIENTRY *glPointParameterfSGISFunc)(GLenum pname, GLfloat param);
extern glPointParameterfSGISFunc _glPointParameterfSGIS;
#define glPointParameterfSGIS VE_ASSERT(_glPointParameterfSGIS);_glPointParameterfSGIS
typedef void (APIENTRY *glPointParameterfvSGISFunc)(GLenum pname, GLfloat* params);
extern glPointParameterfvSGISFunc _glPointParameterfvSGIS;
#define glPointParameterfvSGIS VE_ASSERT(_glPointParameterfvSGIS);_glPointParameterfvSGIS
typedef GLint (APIENTRY *glGetInstrumentsSGIXFunc)();
extern glGetInstrumentsSGIXFunc _glGetInstrumentsSGIX;
#define glGetInstrumentsSGIX _glGetInstrumentsSGIX
typedef void (APIENTRY *glInstrumentsBufferSGIXFunc)(GLsizei size, GLint* buffer);
extern glInstrumentsBufferSGIXFunc _glInstrumentsBufferSGIX;
#define glInstrumentsBufferSGIX VE_ASSERT(_glInstrumentsBufferSGIX);_glInstrumentsBufferSGIX
typedef GLint (APIENTRY *glPollInstrumentsSGIXFunc)(GLint* marker_p);
extern glPollInstrumentsSGIXFunc _glPollInstrumentsSGIX;
#define glPollInstrumentsSGIX _glPollInstrumentsSGIX
typedef void (APIENTRY *glReadInstrumentsSGIXFunc)(GLint marker);
extern glReadInstrumentsSGIXFunc _glReadInstrumentsSGIX;
#define glReadInstrumentsSGIX VE_ASSERT(_glReadInstrumentsSGIX);_glReadInstrumentsSGIX
typedef void (APIENTRY *glStartInstrumentsSGIXFunc)();
extern glStartInstrumentsSGIXFunc _glStartInstrumentsSGIX;
#define glStartInstrumentsSGIX VE_ASSERT(_glStartInstrumentsSGIX);_glStartInstrumentsSGIX
typedef void (APIENTRY *glStopInstrumentsSGIXFunc)(GLint marker);
extern glStopInstrumentsSGIXFunc _glStopInstrumentsSGIX;
#define glStopInstrumentsSGIX VE_ASSERT(_glStopInstrumentsSGIX);_glStopInstrumentsSGIX
typedef void (APIENTRY *glFrameZoomSGIXFunc)(GLint factor);
extern glFrameZoomSGIXFunc _glFrameZoomSGIX;
#define glFrameZoomSGIX VE_ASSERT(_glFrameZoomSGIX);_glFrameZoomSGIX
typedef void (APIENTRY *glTagSampleBufferSGIXFunc)();
extern glTagSampleBufferSGIXFunc _glTagSampleBufferSGIX;
#define glTagSampleBufferSGIX VE_ASSERT(_glTagSampleBufferSGIX);_glTagSampleBufferSGIX
typedef void (APIENTRY *glDeformationMap3dSGIXFunc)(GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, GLdouble w1, GLdouble w2, GLint wstride, GLint worder, GLdouble* points);
extern glDeformationMap3dSGIXFunc _glDeformationMap3dSGIX;
#define glDeformationMap3dSGIX VE_ASSERT(_glDeformationMap3dSGIX);_glDeformationMap3dSGIX
typedef void (APIENTRY *glDeformationMap3fSGIXFunc)(GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, GLfloat w1, GLfloat w2, GLint wstride, GLint worder, GLfloat* points);
extern glDeformationMap3fSGIXFunc _glDeformationMap3fSGIX;
#define glDeformationMap3fSGIX VE_ASSERT(_glDeformationMap3fSGIX);_glDeformationMap3fSGIX
typedef void (APIENTRY *glDeformSGIXFunc)(GLbitfield mask);
extern glDeformSGIXFunc _glDeformSGIX;
#define glDeformSGIX VE_ASSERT(_glDeformSGIX);_glDeformSGIX
typedef void (APIENTRY *glLoadIdentityDeformationMapSGIXFunc)(GLbitfield mask);
extern glLoadIdentityDeformationMapSGIXFunc _glLoadIdentityDeformationMapSGIX;
#define glLoadIdentityDeformationMapSGIX VE_ASSERT(_glLoadIdentityDeformationMapSGIX);_glLoadIdentityDeformationMapSGIX
typedef void (APIENTRY *glReferencePlaneSGIXFunc)(GLdouble* equation);
extern glReferencePlaneSGIXFunc _glReferencePlaneSGIX;
#define glReferencePlaneSGIX VE_ASSERT(_glReferencePlaneSGIX);_glReferencePlaneSGIX
typedef void (APIENTRY *glFlushRasterSGIXFunc)();
extern glFlushRasterSGIXFunc _glFlushRasterSGIX;
#define glFlushRasterSGIX VE_ASSERT(_glFlushRasterSGIX);_glFlushRasterSGIX
typedef void (APIENTRY *glFogFuncSGISFunc)(GLsizei n, GLfloat* points);
extern glFogFuncSGISFunc _glFogFuncSGIS;
#define glFogFuncSGIS VE_ASSERT(_glFogFuncSGIS);_glFogFuncSGIS
typedef void (APIENTRY *glGetFogFuncSGISFunc)(GLfloat* points);
extern glGetFogFuncSGISFunc _glGetFogFuncSGIS;
#define glGetFogFuncSGIS VE_ASSERT(_glGetFogFuncSGIS);_glGetFogFuncSGIS
typedef void (APIENTRY *glImageTransformParameteriHPFunc)(GLenum target, GLenum pname, GLint param);
extern glImageTransformParameteriHPFunc _glImageTransformParameteriHP;
#define glImageTransformParameteriHP VE_ASSERT(_glImageTransformParameteriHP);_glImageTransformParameteriHP
typedef void (APIENTRY *glImageTransformParameterfHPFunc)(GLenum target, GLenum pname, GLfloat param);
extern glImageTransformParameterfHPFunc _glImageTransformParameterfHP;
#define glImageTransformParameterfHP VE_ASSERT(_glImageTransformParameterfHP);_glImageTransformParameterfHP
typedef void (APIENTRY *glImageTransformParameterivHPFunc)(GLenum target, GLenum pname, GLint* params);
extern glImageTransformParameterivHPFunc _glImageTransformParameterivHP;
#define glImageTransformParameterivHP VE_ASSERT(_glImageTransformParameterivHP);_glImageTransformParameterivHP
typedef void (APIENTRY *glImageTransformParameterfvHPFunc)(GLenum target, GLenum pname, GLfloat* params);
extern glImageTransformParameterfvHPFunc _glImageTransformParameterfvHP;
#define glImageTransformParameterfvHP VE_ASSERT(_glImageTransformParameterfvHP);_glImageTransformParameterfvHP
typedef void (APIENTRY *glGetImageTransformParameterivHPFunc)(GLenum target, GLenum pname, GLint* params);
extern glGetImageTransformParameterivHPFunc _glGetImageTransformParameterivHP;
#define glGetImageTransformParameterivHP VE_ASSERT(_glGetImageTransformParameterivHP);_glGetImageTransformParameterivHP
typedef void (APIENTRY *glGetImageTransformParameterfvHPFunc)(GLenum target, GLenum pname, GLfloat* params);
extern glGetImageTransformParameterfvHPFunc _glGetImageTransformParameterfvHP;
#define glGetImageTransformParameterfvHP VE_ASSERT(_glGetImageTransformParameterfvHP);_glGetImageTransformParameterfvHP
typedef void (APIENTRY *glColorSubTableEXTFunc)(GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, GLvoid* data);
extern glColorSubTableEXTFunc _glColorSubTableEXT;
#define glColorSubTableEXT VE_ASSERT(_glColorSubTableEXT);_glColorSubTableEXT
typedef void (APIENTRY *glCopyColorSubTableEXTFunc)(GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);
extern glCopyColorSubTableEXTFunc _glCopyColorSubTableEXT;
#define glCopyColorSubTableEXT VE_ASSERT(_glCopyColorSubTableEXT);_glCopyColorSubTableEXT
typedef void (APIENTRY *glHintPGIFunc)(GLenum target, GLint mode);
extern glHintPGIFunc _glHintPGI;
#define glHintPGI VE_ASSERT(_glHintPGI);_glHintPGI
typedef void (APIENTRY *glColorTableEXTFunc)(GLenum target, GLenum internalFormat, GLsizei width, GLenum format, GLenum type, GLvoid* table);
extern glColorTableEXTFunc _glColorTableEXT;
#define glColorTableEXT VE_ASSERT(_glColorTableEXT);_glColorTableEXT
typedef void (APIENTRY *glGetColorTableEXTFunc)(GLenum target, GLenum format, GLenum type, GLvoid* data);
extern glGetColorTableEXTFunc _glGetColorTableEXT;
#define glGetColorTableEXT VE_ASSERT(_glGetColorTableEXT);_glGetColorTableEXT
typedef void (APIENTRY *glGetColorTableParameterivEXTFunc)(GLenum target, GLenum pname, GLint* params);
extern glGetColorTableParameterivEXTFunc _glGetColorTableParameterivEXT;
#define glGetColorTableParameterivEXT VE_ASSERT(_glGetColorTableParameterivEXT);_glGetColorTableParameterivEXT
typedef void (APIENTRY *glGetColorTableParameterfvEXTFunc)(GLenum target, GLenum pname, GLfloat* params);
extern glGetColorTableParameterfvEXTFunc _glGetColorTableParameterfvEXT;
#define glGetColorTableParameterfvEXT VE_ASSERT(_glGetColorTableParameterfvEXT);_glGetColorTableParameterfvEXT
typedef void (APIENTRY *glGetListParameterfvSGIXFunc)(GLuint list, GLenum pname, GLfloat* params);
extern glGetListParameterfvSGIXFunc _glGetListParameterfvSGIX;
#define glGetListParameterfvSGIX VE_ASSERT(_glGetListParameterfvSGIX);_glGetListParameterfvSGIX
typedef void (APIENTRY *glGetListParameterivSGIXFunc)(GLuint list, GLenum pname, GLint* params);
extern glGetListParameterivSGIXFunc _glGetListParameterivSGIX;
#define glGetListParameterivSGIX VE_ASSERT(_glGetListParameterivSGIX);_glGetListParameterivSGIX
typedef void (APIENTRY *glListParameterfSGIXFunc)(GLuint list, GLenum pname, GLfloat param);
extern glListParameterfSGIXFunc _glListParameterfSGIX;
#define glListParameterfSGIX VE_ASSERT(_glListParameterfSGIX);_glListParameterfSGIX
typedef void (APIENTRY *glListParameterfvSGIXFunc)(GLuint list, GLenum pname, GLfloat* params);
extern glListParameterfvSGIXFunc _glListParameterfvSGIX;
#define glListParameterfvSGIX VE_ASSERT(_glListParameterfvSGIX);_glListParameterfvSGIX
typedef void (APIENTRY *glListParameteriSGIXFunc)(GLuint list, GLenum pname, GLint param);
extern glListParameteriSGIXFunc _glListParameteriSGIX;
#define glListParameteriSGIX VE_ASSERT(_glListParameteriSGIX);_glListParameteriSGIX
typedef void (APIENTRY *glListParameterivSGIXFunc)(GLuint list, GLenum pname, GLint* params);
extern glListParameterivSGIXFunc _glListParameterivSGIX;
#define glListParameterivSGIX VE_ASSERT(_glListParameterivSGIX);_glListParameterivSGIX
typedef void (APIENTRY *glIndexMaterialEXTFunc)(GLenum face, GLenum mode);
extern glIndexMaterialEXTFunc _glIndexMaterialEXT;
#define glIndexMaterialEXT VE_ASSERT(_glIndexMaterialEXT);_glIndexMaterialEXT
typedef void (APIENTRY *glIndexFuncEXTFunc)(GLenum func, GLclampf ref);
extern glIndexFuncEXTFunc _glIndexFuncEXT;
#define glIndexFuncEXT VE_ASSERT(_glIndexFuncEXT);_glIndexFuncEXT
typedef void (APIENTRY *glLockArraysEXTFunc)(GLint first, GLsizei count);
extern glLockArraysEXTFunc _glLockArraysEXT;
#define glLockArraysEXT VE_ASSERT(_glLockArraysEXT);_glLockArraysEXT
typedef void (APIENTRY *glUnlockArraysEXTFunc)();
extern glUnlockArraysEXTFunc _glUnlockArraysEXT;
#define glUnlockArraysEXT VE_ASSERT(_glUnlockArraysEXT);_glUnlockArraysEXT
typedef void (APIENTRY *glCullParameterdvEXTFunc)(GLenum pname, GLdouble* params);
extern glCullParameterdvEXTFunc _glCullParameterdvEXT;
#define glCullParameterdvEXT VE_ASSERT(_glCullParameterdvEXT);_glCullParameterdvEXT
typedef void (APIENTRY *glCullParameterfvEXTFunc)(GLenum pname, GLfloat* params);
extern glCullParameterfvEXTFunc _glCullParameterfvEXT;
#define glCullParameterfvEXT VE_ASSERT(_glCullParameterfvEXT);_glCullParameterfvEXT
typedef void (APIENTRY *glFragmentColorMaterialSGIXFunc)(GLenum face, GLenum mode);
extern glFragmentColorMaterialSGIXFunc _glFragmentColorMaterialSGIX;
#define glFragmentColorMaterialSGIX VE_ASSERT(_glFragmentColorMaterialSGIX);_glFragmentColorMaterialSGIX
typedef void (APIENTRY *glFragmentLightfSGIXFunc)(GLenum light, GLenum pname, GLfloat param);
extern glFragmentLightfSGIXFunc _glFragmentLightfSGIX;
#define glFragmentLightfSGIX VE_ASSERT(_glFragmentLightfSGIX);_glFragmentLightfSGIX
typedef void (APIENTRY *glFragmentLightfvSGIXFunc)(GLenum light, GLenum pname, GLfloat* params);
extern glFragmentLightfvSGIXFunc _glFragmentLightfvSGIX;
#define glFragmentLightfvSGIX VE_ASSERT(_glFragmentLightfvSGIX);_glFragmentLightfvSGIX
typedef void (APIENTRY *glFragmentLightiSGIXFunc)(GLenum light, GLenum pname, GLint param);
extern glFragmentLightiSGIXFunc _glFragmentLightiSGIX;
#define glFragmentLightiSGIX VE_ASSERT(_glFragmentLightiSGIX);_glFragmentLightiSGIX
typedef void (APIENTRY *glFragmentLightivSGIXFunc)(GLenum light, GLenum pname, GLint* params);
extern glFragmentLightivSGIXFunc _glFragmentLightivSGIX;
#define glFragmentLightivSGIX VE_ASSERT(_glFragmentLightivSGIX);_glFragmentLightivSGIX
typedef void (APIENTRY *glFragmentLightModelfSGIXFunc)(GLenum pname, GLfloat param);
extern glFragmentLightModelfSGIXFunc _glFragmentLightModelfSGIX;
#define glFragmentLightModelfSGIX VE_ASSERT(_glFragmentLightModelfSGIX);_glFragmentLightModelfSGIX
typedef void (APIENTRY *glFragmentLightModelfvSGIXFunc)(GLenum pname, GLfloat* params);
extern glFragmentLightModelfvSGIXFunc _glFragmentLightModelfvSGIX;
#define glFragmentLightModelfvSGIX VE_ASSERT(_glFragmentLightModelfvSGIX);_glFragmentLightModelfvSGIX
typedef void (APIENTRY *glFragmentLightModeliSGIXFunc)(GLenum pname, GLint param);
extern glFragmentLightModeliSGIXFunc _glFragmentLightModeliSGIX;
#define glFragmentLightModeliSGIX VE_ASSERT(_glFragmentLightModeliSGIX);_glFragmentLightModeliSGIX
typedef void (APIENTRY *glFragmentLightModelivSGIXFunc)(GLenum pname, GLint* params);
extern glFragmentLightModelivSGIXFunc _glFragmentLightModelivSGIX;
#define glFragmentLightModelivSGIX VE_ASSERT(_glFragmentLightModelivSGIX);_glFragmentLightModelivSGIX
typedef void (APIENTRY *glFragmentMaterialfSGIXFunc)(GLenum face, GLenum pname, GLfloat param);
extern glFragmentMaterialfSGIXFunc _glFragmentMaterialfSGIX;
#define glFragmentMaterialfSGIX VE_ASSERT(_glFragmentMaterialfSGIX);_glFragmentMaterialfSGIX
typedef void (APIENTRY *glFragmentMaterialfvSGIXFunc)(GLenum face, GLenum pname, GLfloat* params);
extern glFragmentMaterialfvSGIXFunc _glFragmentMaterialfvSGIX;
#define glFragmentMaterialfvSGIX VE_ASSERT(_glFragmentMaterialfvSGIX);_glFragmentMaterialfvSGIX
typedef void (APIENTRY *glFragmentMaterialiSGIXFunc)(GLenum face, GLenum pname, GLint param);
extern glFragmentMaterialiSGIXFunc _glFragmentMaterialiSGIX;
#define glFragmentMaterialiSGIX VE_ASSERT(_glFragmentMaterialiSGIX);_glFragmentMaterialiSGIX
typedef void (APIENTRY *glFragmentMaterialivSGIXFunc)(GLenum face, GLenum pname, GLint* params);
extern glFragmentMaterialivSGIXFunc _glFragmentMaterialivSGIX;
#define glFragmentMaterialivSGIX VE_ASSERT(_glFragmentMaterialivSGIX);_glFragmentMaterialivSGIX
typedef void (APIENTRY *glGetFragmentLightfvSGIXFunc)(GLenum light, GLenum pname, GLfloat* params);
extern glGetFragmentLightfvSGIXFunc _glGetFragmentLightfvSGIX;
#define glGetFragmentLightfvSGIX VE_ASSERT(_glGetFragmentLightfvSGIX);_glGetFragmentLightfvSGIX
typedef void (APIENTRY *glGetFragmentLightivSGIXFunc)(GLenum light, GLenum pname, GLint* params);
extern glGetFragmentLightivSGIXFunc _glGetFragmentLightivSGIX;
#define glGetFragmentLightivSGIX VE_ASSERT(_glGetFragmentLightivSGIX);_glGetFragmentLightivSGIX
typedef void (APIENTRY *glGetFragmentMaterialfvSGIXFunc)(GLenum face, GLenum pname, GLfloat* params);
extern glGetFragmentMaterialfvSGIXFunc _glGetFragmentMaterialfvSGIX;
#define glGetFragmentMaterialfvSGIX VE_ASSERT(_glGetFragmentMaterialfvSGIX);_glGetFragmentMaterialfvSGIX
typedef void (APIENTRY *glGetFragmentMaterialivSGIXFunc)(GLenum face, GLenum pname, GLint* params);
extern glGetFragmentMaterialivSGIXFunc _glGetFragmentMaterialivSGIX;
#define glGetFragmentMaterialivSGIX VE_ASSERT(_glGetFragmentMaterialivSGIX);_glGetFragmentMaterialivSGIX
typedef void (APIENTRY *glLightEnviSGIXFunc)(GLenum pname, GLint param);
extern glLightEnviSGIXFunc _glLightEnviSGIX;
#define glLightEnviSGIX VE_ASSERT(_glLightEnviSGIX);_glLightEnviSGIX
typedef void (APIENTRY *glDrawRangeElementsEXTFunc)(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, GLvoid* indices);
extern glDrawRangeElementsEXTFunc _glDrawRangeElementsEXT;
#define glDrawRangeElementsEXT VE_ASSERT(_glDrawRangeElementsEXT);_glDrawRangeElementsEXT
typedef void (APIENTRY *glApplyTextureEXTFunc)(GLenum mode);
extern glApplyTextureEXTFunc _glApplyTextureEXT;
#define glApplyTextureEXT VE_ASSERT(_glApplyTextureEXT);_glApplyTextureEXT
typedef void (APIENTRY *glTextureLightEXTFunc)(GLenum pname);
extern glTextureLightEXTFunc _glTextureLightEXT;
#define glTextureLightEXT VE_ASSERT(_glTextureLightEXT);_glTextureLightEXT
typedef void (APIENTRY *glTextureMaterialEXTFunc)(GLenum face, GLenum mode);
extern glTextureMaterialEXTFunc _glTextureMaterialEXT;
#define glTextureMaterialEXT VE_ASSERT(_glTextureMaterialEXT);_glTextureMaterialEXT
typedef void (APIENTRY *glAsyncMarkerSGIXFunc)(GLuint marker);
extern glAsyncMarkerSGIXFunc _glAsyncMarkerSGIX;
#define glAsyncMarkerSGIX VE_ASSERT(_glAsyncMarkerSGIX);_glAsyncMarkerSGIX
typedef GLint (APIENTRY *glFinishAsyncSGIXFunc)(GLuint* markerp);
extern glFinishAsyncSGIXFunc _glFinishAsyncSGIX;
#define glFinishAsyncSGIX _glFinishAsyncSGIX
typedef GLint (APIENTRY *glPollAsyncSGIXFunc)(GLuint* markerp);
extern glPollAsyncSGIXFunc _glPollAsyncSGIX;
#define glPollAsyncSGIX _glPollAsyncSGIX
typedef GLuint (APIENTRY *glGenAsyncMarkersSGIXFunc)(GLsizei range);
extern glGenAsyncMarkersSGIXFunc _glGenAsyncMarkersSGIX;
#define glGenAsyncMarkersSGIX _glGenAsyncMarkersSGIX
typedef void (APIENTRY *glDeleteAsyncMarkersSGIXFunc)(GLuint marker, GLsizei range);
extern glDeleteAsyncMarkersSGIXFunc _glDeleteAsyncMarkersSGIX;
#define glDeleteAsyncMarkersSGIX VE_ASSERT(_glDeleteAsyncMarkersSGIX);_glDeleteAsyncMarkersSGIX
typedef GLboolean (APIENTRY *glIsAsyncMarkerSGIXFunc)(GLuint marker);
extern glIsAsyncMarkerSGIXFunc _glIsAsyncMarkerSGIX;
#define glIsAsyncMarkerSGIX _glIsAsyncMarkerSGIX
typedef void (APIENTRY *glVertexPointervINTELFunc)(GLint size, GLenum type, GLvoid** pointer);
extern glVertexPointervINTELFunc _glVertexPointervINTEL;
#define glVertexPointervINTEL VE_ASSERT(_glVertexPointervINTEL);_glVertexPointervINTEL
typedef void (APIENTRY *glNormalPointervINTELFunc)(GLenum type, GLvoid** pointer);
extern glNormalPointervINTELFunc _glNormalPointervINTEL;
#define glNormalPointervINTEL VE_ASSERT(_glNormalPointervINTEL);_glNormalPointervINTEL
typedef void (APIENTRY *glColorPointervINTELFunc)(GLint size, GLenum type, GLvoid** pointer);
extern glColorPointervINTELFunc _glColorPointervINTEL;
#define glColorPointervINTEL VE_ASSERT(_glColorPointervINTEL);_glColorPointervINTEL
typedef void (APIENTRY *glTexCoordPointervINTELFunc)(GLint size, GLenum type, GLvoid** pointer);
extern glTexCoordPointervINTELFunc _glTexCoordPointervINTEL;
#define glTexCoordPointervINTEL VE_ASSERT(_glTexCoordPointervINTEL);_glTexCoordPointervINTEL
typedef void (APIENTRY *glPixelTransformParameteriEXTFunc)(GLenum target, GLenum pname, GLint param);
extern glPixelTransformParameteriEXTFunc _glPixelTransformParameteriEXT;
#define glPixelTransformParameteriEXT VE_ASSERT(_glPixelTransformParameteriEXT);_glPixelTransformParameteriEXT
typedef void (APIENTRY *glPixelTransformParameterfEXTFunc)(GLenum target, GLenum pname, GLfloat param);
extern glPixelTransformParameterfEXTFunc _glPixelTransformParameterfEXT;
#define glPixelTransformParameterfEXT VE_ASSERT(_glPixelTransformParameterfEXT);_glPixelTransformParameterfEXT
typedef void (APIENTRY *glPixelTransformParameterivEXTFunc)(GLenum target, GLenum pname, GLint* params);
extern glPixelTransformParameterivEXTFunc _glPixelTransformParameterivEXT;
#define glPixelTransformParameterivEXT VE_ASSERT(_glPixelTransformParameterivEXT);_glPixelTransformParameterivEXT
typedef void (APIENTRY *glPixelTransformParameterfvEXTFunc)(GLenum target, GLenum pname, GLfloat* params);
extern glPixelTransformParameterfvEXTFunc _glPixelTransformParameterfvEXT;
#define glPixelTransformParameterfvEXT VE_ASSERT(_glPixelTransformParameterfvEXT);_glPixelTransformParameterfvEXT
typedef void (APIENTRY *glGetPixelTransformParameterivEXTFunc)(GLenum target, GLenum pname, GLint* params);
extern glGetPixelTransformParameterivEXTFunc _glGetPixelTransformParameterivEXT;
#define glGetPixelTransformParameterivEXT VE_ASSERT(_glGetPixelTransformParameterivEXT);_glGetPixelTransformParameterivEXT
typedef void (APIENTRY *glGetPixelTransformParameterfvEXTFunc)(GLenum target, GLenum pname, GLfloat* params);
extern glGetPixelTransformParameterfvEXTFunc _glGetPixelTransformParameterfvEXT;
#define glGetPixelTransformParameterfvEXT VE_ASSERT(_glGetPixelTransformParameterfvEXT);_glGetPixelTransformParameterfvEXT
typedef void (APIENTRY *glSecondaryColor3bEXTFunc)(GLbyte red, GLbyte green, GLbyte blue);
extern glSecondaryColor3bEXTFunc _glSecondaryColor3bEXT;
#define glSecondaryColor3bEXT VE_ASSERT(_glSecondaryColor3bEXT);_glSecondaryColor3bEXT
typedef void (APIENTRY *glSecondaryColor3bvEXTFunc)(GLbyte* v);
extern glSecondaryColor3bvEXTFunc _glSecondaryColor3bvEXT;
#define glSecondaryColor3bvEXT VE_ASSERT(_glSecondaryColor3bvEXT);_glSecondaryColor3bvEXT
typedef void (APIENTRY *glSecondaryColor3dEXTFunc)(GLdouble red, GLdouble green, GLdouble blue);
extern glSecondaryColor3dEXTFunc _glSecondaryColor3dEXT;
#define glSecondaryColor3dEXT VE_ASSERT(_glSecondaryColor3dEXT);_glSecondaryColor3dEXT
typedef void (APIENTRY *glSecondaryColor3dvEXTFunc)(GLdouble* v);
extern glSecondaryColor3dvEXTFunc _glSecondaryColor3dvEXT;
#define glSecondaryColor3dvEXT VE_ASSERT(_glSecondaryColor3dvEXT);_glSecondaryColor3dvEXT
typedef void (APIENTRY *glSecondaryColor3fEXTFunc)(GLfloat red, GLfloat green, GLfloat blue);
extern glSecondaryColor3fEXTFunc _glSecondaryColor3fEXT;
#define glSecondaryColor3fEXT VE_ASSERT(_glSecondaryColor3fEXT);_glSecondaryColor3fEXT
typedef void (APIENTRY *glSecondaryColor3fvEXTFunc)(GLfloat* v);
extern glSecondaryColor3fvEXTFunc _glSecondaryColor3fvEXT;
#define glSecondaryColor3fvEXT VE_ASSERT(_glSecondaryColor3fvEXT);_glSecondaryColor3fvEXT
typedef void (APIENTRY *glSecondaryColor3iEXTFunc)(GLint red, GLint green, GLint blue);
extern glSecondaryColor3iEXTFunc _glSecondaryColor3iEXT;
#define glSecondaryColor3iEXT VE_ASSERT(_glSecondaryColor3iEXT);_glSecondaryColor3iEXT
typedef void (APIENTRY *glSecondaryColor3ivEXTFunc)(GLint* v);
extern glSecondaryColor3ivEXTFunc _glSecondaryColor3ivEXT;
#define glSecondaryColor3ivEXT VE_ASSERT(_glSecondaryColor3ivEXT);_glSecondaryColor3ivEXT
typedef void (APIENTRY *glSecondaryColor3sEXTFunc)(GLshort red, GLshort green, GLshort blue);
extern glSecondaryColor3sEXTFunc _glSecondaryColor3sEXT;
#define glSecondaryColor3sEXT VE_ASSERT(_glSecondaryColor3sEXT);_glSecondaryColor3sEXT
typedef void (APIENTRY *glSecondaryColor3svEXTFunc)(GLshort* v);
extern glSecondaryColor3svEXTFunc _glSecondaryColor3svEXT;
#define glSecondaryColor3svEXT VE_ASSERT(_glSecondaryColor3svEXT);_glSecondaryColor3svEXT
typedef void (APIENTRY *glSecondaryColor3ubEXTFunc)(GLubyte red, GLubyte green, GLubyte blue);
extern glSecondaryColor3ubEXTFunc _glSecondaryColor3ubEXT;
#define glSecondaryColor3ubEXT VE_ASSERT(_glSecondaryColor3ubEXT);_glSecondaryColor3ubEXT
typedef void (APIENTRY *glSecondaryColor3ubvEXTFunc)(GLubyte* v);
extern glSecondaryColor3ubvEXTFunc _glSecondaryColor3ubvEXT;
#define glSecondaryColor3ubvEXT VE_ASSERT(_glSecondaryColor3ubvEXT);_glSecondaryColor3ubvEXT
typedef void (APIENTRY *glSecondaryColor3uiEXTFunc)(GLuint red, GLuint green, GLuint blue);
extern glSecondaryColor3uiEXTFunc _glSecondaryColor3uiEXT;
#define glSecondaryColor3uiEXT VE_ASSERT(_glSecondaryColor3uiEXT);_glSecondaryColor3uiEXT
typedef void (APIENTRY *glSecondaryColor3uivEXTFunc)(GLuint* v);
extern glSecondaryColor3uivEXTFunc _glSecondaryColor3uivEXT;
#define glSecondaryColor3uivEXT VE_ASSERT(_glSecondaryColor3uivEXT);_glSecondaryColor3uivEXT
typedef void (APIENTRY *glSecondaryColor3usEXTFunc)(GLushort red, GLushort green, GLushort blue);
extern glSecondaryColor3usEXTFunc _glSecondaryColor3usEXT;
#define glSecondaryColor3usEXT VE_ASSERT(_glSecondaryColor3usEXT);_glSecondaryColor3usEXT
typedef void (APIENTRY *glSecondaryColor3usvEXTFunc)(GLushort* v);
extern glSecondaryColor3usvEXTFunc _glSecondaryColor3usvEXT;
#define glSecondaryColor3usvEXT VE_ASSERT(_glSecondaryColor3usvEXT);_glSecondaryColor3usvEXT
typedef void (APIENTRY *glSecondaryColorPointerEXTFunc)(GLint size, GLenum type, GLsizei stride, GLvoid* pointer);
extern glSecondaryColorPointerEXTFunc _glSecondaryColorPointerEXT;
#define glSecondaryColorPointerEXT VE_ASSERT(_glSecondaryColorPointerEXT);_glSecondaryColorPointerEXT
typedef void (APIENTRY *glTextureNormalEXTFunc)(GLenum mode);
extern glTextureNormalEXTFunc _glTextureNormalEXT;
#define glTextureNormalEXT VE_ASSERT(_glTextureNormalEXT);_glTextureNormalEXT
typedef void (APIENTRY *glMultiDrawArraysEXTFunc)(GLenum mode, GLint* first, GLsizei* count, GLsizei primcount);
extern glMultiDrawArraysEXTFunc _glMultiDrawArraysEXT;
#define glMultiDrawArraysEXT VE_ASSERT(_glMultiDrawArraysEXT);_glMultiDrawArraysEXT
typedef void (APIENTRY *glMultiDrawElementsEXTFunc)(GLenum mode, GLsizei* count, GLenum type, GLvoid** indices, GLsizei primcount);
extern glMultiDrawElementsEXTFunc _glMultiDrawElementsEXT;
#define glMultiDrawElementsEXT VE_ASSERT(_glMultiDrawElementsEXT);_glMultiDrawElementsEXT
typedef void (APIENTRY *glFogCoordfEXTFunc)(GLfloat coord);
extern glFogCoordfEXTFunc _glFogCoordfEXT;
#define glFogCoordfEXT VE_ASSERT(_glFogCoordfEXT);_glFogCoordfEXT
typedef void (APIENTRY *glFogCoordfvEXTFunc)(GLfloat* coord);
extern glFogCoordfvEXTFunc _glFogCoordfvEXT;
#define glFogCoordfvEXT VE_ASSERT(_glFogCoordfvEXT);_glFogCoordfvEXT
typedef void (APIENTRY *glFogCoorddEXTFunc)(GLdouble coord);
extern glFogCoorddEXTFunc _glFogCoorddEXT;
#define glFogCoorddEXT VE_ASSERT(_glFogCoorddEXT);_glFogCoorddEXT
typedef void (APIENTRY *glFogCoorddvEXTFunc)(GLdouble* coord);
extern glFogCoorddvEXTFunc _glFogCoorddvEXT;
#define glFogCoorddvEXT VE_ASSERT(_glFogCoorddvEXT);_glFogCoorddvEXT
typedef void (APIENTRY *glFogCoordPointerEXTFunc)(GLenum type, GLsizei stride, GLvoid* pointer);
extern glFogCoordPointerEXTFunc _glFogCoordPointerEXT;
#define glFogCoordPointerEXT VE_ASSERT(_glFogCoordPointerEXT);_glFogCoordPointerEXT
typedef void (APIENTRY *glTangent3bEXTFunc)(GLbyte tx, GLbyte ty, GLbyte tz);
extern glTangent3bEXTFunc _glTangent3bEXT;
#define glTangent3bEXT VE_ASSERT(_glTangent3bEXT);_glTangent3bEXT
typedef void (APIENTRY *glTangent3bvEXTFunc)(GLbyte* v);
extern glTangent3bvEXTFunc _glTangent3bvEXT;
#define glTangent3bvEXT VE_ASSERT(_glTangent3bvEXT);_glTangent3bvEXT
typedef void (APIENTRY *glTangent3dEXTFunc)(GLdouble tx, GLdouble ty, GLdouble tz);
extern glTangent3dEXTFunc _glTangent3dEXT;
#define glTangent3dEXT VE_ASSERT(_glTangent3dEXT);_glTangent3dEXT
typedef void (APIENTRY *glTangent3dvEXTFunc)(GLdouble* v);
extern glTangent3dvEXTFunc _glTangent3dvEXT;
#define glTangent3dvEXT VE_ASSERT(_glTangent3dvEXT);_glTangent3dvEXT
typedef void (APIENTRY *glTangent3fEXTFunc)(GLfloat tx, GLfloat ty, GLfloat tz);
extern glTangent3fEXTFunc _glTangent3fEXT;
#define glTangent3fEXT VE_ASSERT(_glTangent3fEXT);_glTangent3fEXT
typedef void (APIENTRY *glTangent3fvEXTFunc)(GLfloat* v);
extern glTangent3fvEXTFunc _glTangent3fvEXT;
#define glTangent3fvEXT VE_ASSERT(_glTangent3fvEXT);_glTangent3fvEXT
typedef void (APIENTRY *glTangent3iEXTFunc)(GLint tx, GLint ty, GLint tz);
extern glTangent3iEXTFunc _glTangent3iEXT;
#define glTangent3iEXT VE_ASSERT(_glTangent3iEXT);_glTangent3iEXT
typedef void (APIENTRY *glTangent3ivEXTFunc)(GLint* v);
extern glTangent3ivEXTFunc _glTangent3ivEXT;
#define glTangent3ivEXT VE_ASSERT(_glTangent3ivEXT);_glTangent3ivEXT
typedef void (APIENTRY *glTangent3sEXTFunc)(GLshort tx, GLshort ty, GLshort tz);
extern glTangent3sEXTFunc _glTangent3sEXT;
#define glTangent3sEXT VE_ASSERT(_glTangent3sEXT);_glTangent3sEXT
typedef void (APIENTRY *glTangent3svEXTFunc)(GLshort* v);
extern glTangent3svEXTFunc _glTangent3svEXT;
#define glTangent3svEXT VE_ASSERT(_glTangent3svEXT);_glTangent3svEXT
typedef void (APIENTRY *glBinormal3bEXTFunc)(GLbyte bx, GLbyte by, GLbyte bz);
extern glBinormal3bEXTFunc _glBinormal3bEXT;
#define glBinormal3bEXT VE_ASSERT(_glBinormal3bEXT);_glBinormal3bEXT
typedef void (APIENTRY *glBinormal3bvEXTFunc)(GLbyte* v);
extern glBinormal3bvEXTFunc _glBinormal3bvEXT;
#define glBinormal3bvEXT VE_ASSERT(_glBinormal3bvEXT);_glBinormal3bvEXT
typedef void (APIENTRY *glBinormal3dEXTFunc)(GLdouble bx, GLdouble by, GLdouble bz);
extern glBinormal3dEXTFunc _glBinormal3dEXT;
#define glBinormal3dEXT VE_ASSERT(_glBinormal3dEXT);_glBinormal3dEXT
typedef void (APIENTRY *glBinormal3dvEXTFunc)(GLdouble* v);
extern glBinormal3dvEXTFunc _glBinormal3dvEXT;
#define glBinormal3dvEXT VE_ASSERT(_glBinormal3dvEXT);_glBinormal3dvEXT
typedef void (APIENTRY *glBinormal3fEXTFunc)(GLfloat bx, GLfloat by, GLfloat bz);
extern glBinormal3fEXTFunc _glBinormal3fEXT;
#define glBinormal3fEXT VE_ASSERT(_glBinormal3fEXT);_glBinormal3fEXT
typedef void (APIENTRY *glBinormal3fvEXTFunc)(GLfloat* v);
extern glBinormal3fvEXTFunc _glBinormal3fvEXT;
#define glBinormal3fvEXT VE_ASSERT(_glBinormal3fvEXT);_glBinormal3fvEXT
typedef void (APIENTRY *glBinormal3iEXTFunc)(GLint bx, GLint by, GLint bz);
extern glBinormal3iEXTFunc _glBinormal3iEXT;
#define glBinormal3iEXT VE_ASSERT(_glBinormal3iEXT);_glBinormal3iEXT
typedef void (APIENTRY *glBinormal3ivEXTFunc)(GLint* v);
extern glBinormal3ivEXTFunc _glBinormal3ivEXT;
#define glBinormal3ivEXT VE_ASSERT(_glBinormal3ivEXT);_glBinormal3ivEXT
typedef void (APIENTRY *glBinormal3sEXTFunc)(GLshort bx, GLshort by, GLshort bz);
extern glBinormal3sEXTFunc _glBinormal3sEXT;
#define glBinormal3sEXT VE_ASSERT(_glBinormal3sEXT);_glBinormal3sEXT
typedef void (APIENTRY *glBinormal3svEXTFunc)(GLshort* v);
extern glBinormal3svEXTFunc _glBinormal3svEXT;
#define glBinormal3svEXT VE_ASSERT(_glBinormal3svEXT);_glBinormal3svEXT
typedef void (APIENTRY *glTangentPointerEXTFunc)(GLenum type, GLsizei stride, GLvoid* pointer);
extern glTangentPointerEXTFunc _glTangentPointerEXT;
#define glTangentPointerEXT VE_ASSERT(_glTangentPointerEXT);_glTangentPointerEXT
typedef void (APIENTRY *glBinormalPointerEXTFunc)(GLenum type, GLsizei stride, GLvoid* pointer);
extern glBinormalPointerEXTFunc _glBinormalPointerEXT;
#define glBinormalPointerEXT VE_ASSERT(_glBinormalPointerEXT);_glBinormalPointerEXT
typedef void (APIENTRY *glFinishTextureSUNXFunc)();
extern glFinishTextureSUNXFunc _glFinishTextureSUNX;
#define glFinishTextureSUNX VE_ASSERT(_glFinishTextureSUNX);_glFinishTextureSUNX
typedef void (APIENTRY *glGlobalAlphaFactorbSUNFunc)(GLbyte factor);
extern glGlobalAlphaFactorbSUNFunc _glGlobalAlphaFactorbSUN;
#define glGlobalAlphaFactorbSUN VE_ASSERT(_glGlobalAlphaFactorbSUN);_glGlobalAlphaFactorbSUN
typedef void (APIENTRY *glGlobalAlphaFactorsSUNFunc)(GLshort factor);
extern glGlobalAlphaFactorsSUNFunc _glGlobalAlphaFactorsSUN;
#define glGlobalAlphaFactorsSUN VE_ASSERT(_glGlobalAlphaFactorsSUN);_glGlobalAlphaFactorsSUN
typedef void (APIENTRY *glGlobalAlphaFactoriSUNFunc)(GLint factor);
extern glGlobalAlphaFactoriSUNFunc _glGlobalAlphaFactoriSUN;
#define glGlobalAlphaFactoriSUN VE_ASSERT(_glGlobalAlphaFactoriSUN);_glGlobalAlphaFactoriSUN
typedef void (APIENTRY *glGlobalAlphaFactorfSUNFunc)(GLfloat factor);
extern glGlobalAlphaFactorfSUNFunc _glGlobalAlphaFactorfSUN;
#define glGlobalAlphaFactorfSUN VE_ASSERT(_glGlobalAlphaFactorfSUN);_glGlobalAlphaFactorfSUN
typedef void (APIENTRY *glGlobalAlphaFactordSUNFunc)(GLdouble factor);
extern glGlobalAlphaFactordSUNFunc _glGlobalAlphaFactordSUN;
#define glGlobalAlphaFactordSUN VE_ASSERT(_glGlobalAlphaFactordSUN);_glGlobalAlphaFactordSUN
typedef void (APIENTRY *glGlobalAlphaFactorubSUNFunc)(GLubyte factor);
extern glGlobalAlphaFactorubSUNFunc _glGlobalAlphaFactorubSUN;
#define glGlobalAlphaFactorubSUN VE_ASSERT(_glGlobalAlphaFactorubSUN);_glGlobalAlphaFactorubSUN
typedef void (APIENTRY *glGlobalAlphaFactorusSUNFunc)(GLushort factor);
extern glGlobalAlphaFactorusSUNFunc _glGlobalAlphaFactorusSUN;
#define glGlobalAlphaFactorusSUN VE_ASSERT(_glGlobalAlphaFactorusSUN);_glGlobalAlphaFactorusSUN
typedef void (APIENTRY *glGlobalAlphaFactoruiSUNFunc)(GLuint factor);
extern glGlobalAlphaFactoruiSUNFunc _glGlobalAlphaFactoruiSUN;
#define glGlobalAlphaFactoruiSUN VE_ASSERT(_glGlobalAlphaFactoruiSUN);_glGlobalAlphaFactoruiSUN
typedef void (APIENTRY *glReplacementCodeuiSUNFunc)(GLuint code);
extern glReplacementCodeuiSUNFunc _glReplacementCodeuiSUN;
#define glReplacementCodeuiSUN VE_ASSERT(_glReplacementCodeuiSUN);_glReplacementCodeuiSUN
typedef void (APIENTRY *glReplacementCodeusSUNFunc)(GLushort code);
extern glReplacementCodeusSUNFunc _glReplacementCodeusSUN;
#define glReplacementCodeusSUN VE_ASSERT(_glReplacementCodeusSUN);_glReplacementCodeusSUN
typedef void (APIENTRY *glReplacementCodeubSUNFunc)(GLubyte code);
extern glReplacementCodeubSUNFunc _glReplacementCodeubSUN;
#define glReplacementCodeubSUN VE_ASSERT(_glReplacementCodeubSUN);_glReplacementCodeubSUN
typedef void (APIENTRY *glReplacementCodeuivSUNFunc)(GLuint* code);
extern glReplacementCodeuivSUNFunc _glReplacementCodeuivSUN;
#define glReplacementCodeuivSUN VE_ASSERT(_glReplacementCodeuivSUN);_glReplacementCodeuivSUN
typedef void (APIENTRY *glReplacementCodeusvSUNFunc)(GLushort* code);
extern glReplacementCodeusvSUNFunc _glReplacementCodeusvSUN;
#define glReplacementCodeusvSUN VE_ASSERT(_glReplacementCodeusvSUN);_glReplacementCodeusvSUN
typedef void (APIENTRY *glReplacementCodeubvSUNFunc)(GLubyte* code);
extern glReplacementCodeubvSUNFunc _glReplacementCodeubvSUN;
#define glReplacementCodeubvSUN VE_ASSERT(_glReplacementCodeubvSUN);_glReplacementCodeubvSUN
typedef void (APIENTRY *glReplacementCodePointerSUNFunc)(GLenum type, GLsizei stride, GLvoid** pointer);
extern glReplacementCodePointerSUNFunc _glReplacementCodePointerSUN;
#define glReplacementCodePointerSUN VE_ASSERT(_glReplacementCodePointerSUN);_glReplacementCodePointerSUN
typedef void (APIENTRY *glColor4ubVertex2fSUNFunc)(GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y);
extern glColor4ubVertex2fSUNFunc _glColor4ubVertex2fSUN;
#define glColor4ubVertex2fSUN VE_ASSERT(_glColor4ubVertex2fSUN);_glColor4ubVertex2fSUN
typedef void (APIENTRY *glColor4ubVertex2fvSUNFunc)(GLubyte* c, GLfloat* v);
extern glColor4ubVertex2fvSUNFunc _glColor4ubVertex2fvSUN;
#define glColor4ubVertex2fvSUN VE_ASSERT(_glColor4ubVertex2fvSUN);_glColor4ubVertex2fvSUN
typedef void (APIENTRY *glColor4ubVertex3fSUNFunc)(GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);
extern glColor4ubVertex3fSUNFunc _glColor4ubVertex3fSUN;
#define glColor4ubVertex3fSUN VE_ASSERT(_glColor4ubVertex3fSUN);_glColor4ubVertex3fSUN
typedef void (APIENTRY *glColor4ubVertex3fvSUNFunc)(GLubyte* c, GLfloat* v);
extern glColor4ubVertex3fvSUNFunc _glColor4ubVertex3fvSUN;
#define glColor4ubVertex3fvSUN VE_ASSERT(_glColor4ubVertex3fvSUN);_glColor4ubVertex3fvSUN
typedef void (APIENTRY *glColor3fVertex3fSUNFunc)(GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);
extern glColor3fVertex3fSUNFunc _glColor3fVertex3fSUN;
#define glColor3fVertex3fSUN VE_ASSERT(_glColor3fVertex3fSUN);_glColor3fVertex3fSUN
typedef void (APIENTRY *glColor3fVertex3fvSUNFunc)(GLfloat* c, GLfloat* v);
extern glColor3fVertex3fvSUNFunc _glColor3fVertex3fvSUN;
#define glColor3fVertex3fvSUN VE_ASSERT(_glColor3fVertex3fvSUN);_glColor3fVertex3fvSUN
typedef void (APIENTRY *glNormal3fVertex3fSUNFunc)(GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
extern glNormal3fVertex3fSUNFunc _glNormal3fVertex3fSUN;
#define glNormal3fVertex3fSUN VE_ASSERT(_glNormal3fVertex3fSUN);_glNormal3fVertex3fSUN
typedef void (APIENTRY *glNormal3fVertex3fvSUNFunc)(GLfloat* n, GLfloat* v);
extern glNormal3fVertex3fvSUNFunc _glNormal3fVertex3fvSUN;
#define glNormal3fVertex3fvSUN VE_ASSERT(_glNormal3fVertex3fvSUN);_glNormal3fVertex3fvSUN
typedef void (APIENTRY *glColor4fNormal3fVertex3fSUNFunc)(GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
extern glColor4fNormal3fVertex3fSUNFunc _glColor4fNormal3fVertex3fSUN;
#define glColor4fNormal3fVertex3fSUN VE_ASSERT(_glColor4fNormal3fVertex3fSUN);_glColor4fNormal3fVertex3fSUN
typedef void (APIENTRY *glColor4fNormal3fVertex3fvSUNFunc)(GLfloat* c, GLfloat* n, GLfloat* v);
extern glColor4fNormal3fVertex3fvSUNFunc _glColor4fNormal3fVertex3fvSUN;
#define glColor4fNormal3fVertex3fvSUN VE_ASSERT(_glColor4fNormal3fVertex3fvSUN);_glColor4fNormal3fVertex3fvSUN
typedef void (APIENTRY *glTexCoord2fVertex3fSUNFunc)(GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z);
extern glTexCoord2fVertex3fSUNFunc _glTexCoord2fVertex3fSUN;
#define glTexCoord2fVertex3fSUN VE_ASSERT(_glTexCoord2fVertex3fSUN);_glTexCoord2fVertex3fSUN
typedef void (APIENTRY *glTexCoord2fVertex3fvSUNFunc)(GLfloat* tc, GLfloat* v);
extern glTexCoord2fVertex3fvSUNFunc _glTexCoord2fVertex3fvSUN;
#define glTexCoord2fVertex3fvSUN VE_ASSERT(_glTexCoord2fVertex3fvSUN);_glTexCoord2fVertex3fvSUN
typedef void (APIENTRY *glTexCoord4fVertex4fSUNFunc)(GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
extern glTexCoord4fVertex4fSUNFunc _glTexCoord4fVertex4fSUN;
#define glTexCoord4fVertex4fSUN VE_ASSERT(_glTexCoord4fVertex4fSUN);_glTexCoord4fVertex4fSUN
typedef void (APIENTRY *glTexCoord4fVertex4fvSUNFunc)(GLfloat* tc, GLfloat* v);
extern glTexCoord4fVertex4fvSUNFunc _glTexCoord4fVertex4fvSUN;
#define glTexCoord4fVertex4fvSUN VE_ASSERT(_glTexCoord4fVertex4fvSUN);_glTexCoord4fVertex4fvSUN
typedef void (APIENTRY *glTexCoord2fColor4ubVertex3fSUNFunc)(GLfloat s, GLfloat t, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);
extern glTexCoord2fColor4ubVertex3fSUNFunc _glTexCoord2fColor4ubVertex3fSUN;
#define glTexCoord2fColor4ubVertex3fSUN VE_ASSERT(_glTexCoord2fColor4ubVertex3fSUN);_glTexCoord2fColor4ubVertex3fSUN
typedef void (APIENTRY *glTexCoord2fColor4ubVertex3fvSUNFunc)(GLfloat* tc, GLubyte* c, GLfloat* v);
extern glTexCoord2fColor4ubVertex3fvSUNFunc _glTexCoord2fColor4ubVertex3fvSUN;
#define glTexCoord2fColor4ubVertex3fvSUN VE_ASSERT(_glTexCoord2fColor4ubVertex3fvSUN);_glTexCoord2fColor4ubVertex3fvSUN
typedef void (APIENTRY *glTexCoord2fColor3fVertex3fSUNFunc)(GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);
extern glTexCoord2fColor3fVertex3fSUNFunc _glTexCoord2fColor3fVertex3fSUN;
#define glTexCoord2fColor3fVertex3fSUN VE_ASSERT(_glTexCoord2fColor3fVertex3fSUN);_glTexCoord2fColor3fVertex3fSUN
typedef void (APIENTRY *glTexCoord2fColor3fVertex3fvSUNFunc)(GLfloat* tc, GLfloat* c, GLfloat* v);
extern glTexCoord2fColor3fVertex3fvSUNFunc _glTexCoord2fColor3fVertex3fvSUN;
#define glTexCoord2fColor3fVertex3fvSUN VE_ASSERT(_glTexCoord2fColor3fVertex3fvSUN);_glTexCoord2fColor3fVertex3fvSUN
typedef void (APIENTRY *glTexCoord2fNormal3fVertex3fSUNFunc)(GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
extern glTexCoord2fNormal3fVertex3fSUNFunc _glTexCoord2fNormal3fVertex3fSUN;
#define glTexCoord2fNormal3fVertex3fSUN VE_ASSERT(_glTexCoord2fNormal3fVertex3fSUN);_glTexCoord2fNormal3fVertex3fSUN
typedef void (APIENTRY *glTexCoord2fNormal3fVertex3fvSUNFunc)(GLfloat* tc, GLfloat* n, GLfloat* v);
extern glTexCoord2fNormal3fVertex3fvSUNFunc _glTexCoord2fNormal3fVertex3fvSUN;
#define glTexCoord2fNormal3fVertex3fvSUN VE_ASSERT(_glTexCoord2fNormal3fVertex3fvSUN);_glTexCoord2fNormal3fVertex3fvSUN
typedef void (APIENTRY *glTexCoord2fColor4fNormal3fVertex3fSUNFunc)(GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
extern glTexCoord2fColor4fNormal3fVertex3fSUNFunc _glTexCoord2fColor4fNormal3fVertex3fSUN;
#define glTexCoord2fColor4fNormal3fVertex3fSUN VE_ASSERT(_glTexCoord2fColor4fNormal3fVertex3fSUN);_glTexCoord2fColor4fNormal3fVertex3fSUN
typedef void (APIENTRY *glTexCoord2fColor4fNormal3fVertex3fvSUNFunc)(GLfloat* tc, GLfloat* c, GLfloat* n, GLfloat* v);
extern glTexCoord2fColor4fNormal3fVertex3fvSUNFunc _glTexCoord2fColor4fNormal3fVertex3fvSUN;
#define glTexCoord2fColor4fNormal3fVertex3fvSUN VE_ASSERT(_glTexCoord2fColor4fNormal3fVertex3fvSUN);_glTexCoord2fColor4fNormal3fVertex3fvSUN
typedef void (APIENTRY *glTexCoord4fColor4fNormal3fVertex4fSUNFunc)(GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
extern glTexCoord4fColor4fNormal3fVertex4fSUNFunc _glTexCoord4fColor4fNormal3fVertex4fSUN;
#define glTexCoord4fColor4fNormal3fVertex4fSUN VE_ASSERT(_glTexCoord4fColor4fNormal3fVertex4fSUN);_glTexCoord4fColor4fNormal3fVertex4fSUN
typedef void (APIENTRY *glTexCoord4fColor4fNormal3fVertex4fvSUNFunc)(GLfloat* tc, GLfloat* c, GLfloat* n, GLfloat* v);
extern glTexCoord4fColor4fNormal3fVertex4fvSUNFunc _glTexCoord4fColor4fNormal3fVertex4fvSUN;
#define glTexCoord4fColor4fNormal3fVertex4fvSUN VE_ASSERT(_glTexCoord4fColor4fNormal3fVertex4fvSUN);_glTexCoord4fColor4fNormal3fVertex4fvSUN
typedef void (APIENTRY *glReplacementCodeuiVertex3fSUNFunc)(GLuint rc, GLfloat x, GLfloat y, GLfloat z);
extern glReplacementCodeuiVertex3fSUNFunc _glReplacementCodeuiVertex3fSUN;
#define glReplacementCodeuiVertex3fSUN VE_ASSERT(_glReplacementCodeuiVertex3fSUN);_glReplacementCodeuiVertex3fSUN
typedef void (APIENTRY *glReplacementCodeuiVertex3fvSUNFunc)(GLuint* rc, GLfloat* v);
extern glReplacementCodeuiVertex3fvSUNFunc _glReplacementCodeuiVertex3fvSUN;
#define glReplacementCodeuiVertex3fvSUN VE_ASSERT(_glReplacementCodeuiVertex3fvSUN);_glReplacementCodeuiVertex3fvSUN
typedef void (APIENTRY *glReplacementCodeuiColor4ubVertex3fSUNFunc)(GLuint rc, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);
extern glReplacementCodeuiColor4ubVertex3fSUNFunc _glReplacementCodeuiColor4ubVertex3fSUN;
#define glReplacementCodeuiColor4ubVertex3fSUN VE_ASSERT(_glReplacementCodeuiColor4ubVertex3fSUN);_glReplacementCodeuiColor4ubVertex3fSUN
typedef void (APIENTRY *glReplacementCodeuiColor4ubVertex3fvSUNFunc)(GLuint* rc, GLubyte* c, GLfloat* v);
extern glReplacementCodeuiColor4ubVertex3fvSUNFunc _glReplacementCodeuiColor4ubVertex3fvSUN;
#define glReplacementCodeuiColor4ubVertex3fvSUN VE_ASSERT(_glReplacementCodeuiColor4ubVertex3fvSUN);_glReplacementCodeuiColor4ubVertex3fvSUN
typedef void (APIENTRY *glReplacementCodeuiColor3fVertex3fSUNFunc)(GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);
extern glReplacementCodeuiColor3fVertex3fSUNFunc _glReplacementCodeuiColor3fVertex3fSUN;
#define glReplacementCodeuiColor3fVertex3fSUN VE_ASSERT(_glReplacementCodeuiColor3fVertex3fSUN);_glReplacementCodeuiColor3fVertex3fSUN
typedef void (APIENTRY *glReplacementCodeuiColor3fVertex3fvSUNFunc)(GLuint* rc, GLfloat* c, GLfloat* v);
extern glReplacementCodeuiColor3fVertex3fvSUNFunc _glReplacementCodeuiColor3fVertex3fvSUN;
#define glReplacementCodeuiColor3fVertex3fvSUN VE_ASSERT(_glReplacementCodeuiColor3fVertex3fvSUN);_glReplacementCodeuiColor3fVertex3fvSUN
typedef void (APIENTRY *glReplacementCodeuiNormal3fVertex3fSUNFunc)(GLuint rc, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
extern glReplacementCodeuiNormal3fVertex3fSUNFunc _glReplacementCodeuiNormal3fVertex3fSUN;
#define glReplacementCodeuiNormal3fVertex3fSUN VE_ASSERT(_glReplacementCodeuiNormal3fVertex3fSUN);_glReplacementCodeuiNormal3fVertex3fSUN
typedef void (APIENTRY *glReplacementCodeuiNormal3fVertex3fvSUNFunc)(GLuint* rc, GLfloat* n, GLfloat* v);
extern glReplacementCodeuiNormal3fVertex3fvSUNFunc _glReplacementCodeuiNormal3fVertex3fvSUN;
#define glReplacementCodeuiNormal3fVertex3fvSUN VE_ASSERT(_glReplacementCodeuiNormal3fVertex3fvSUN);_glReplacementCodeuiNormal3fVertex3fvSUN
typedef void (APIENTRY *glReplacementCodeuiColor4fNormal3fVertex3fSUNFunc)(GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
extern glReplacementCodeuiColor4fNormal3fVertex3fSUNFunc _glReplacementCodeuiColor4fNormal3fVertex3fSUN;
#define glReplacementCodeuiColor4fNormal3fVertex3fSUN VE_ASSERT(_glReplacementCodeuiColor4fNormal3fVertex3fSUN);_glReplacementCodeuiColor4fNormal3fVertex3fSUN
typedef void (APIENTRY *glReplacementCodeuiColor4fNormal3fVertex3fvSUNFunc)(GLuint* rc, GLfloat* c, GLfloat* n, GLfloat* v);
extern glReplacementCodeuiColor4fNormal3fVertex3fvSUNFunc _glReplacementCodeuiColor4fNormal3fVertex3fvSUN;
#define glReplacementCodeuiColor4fNormal3fVertex3fvSUN VE_ASSERT(_glReplacementCodeuiColor4fNormal3fVertex3fvSUN);_glReplacementCodeuiColor4fNormal3fVertex3fvSUN
typedef void (APIENTRY *glReplacementCodeuiTexCoord2fVertex3fSUNFunc)(GLuint rc, GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z);
extern glReplacementCodeuiTexCoord2fVertex3fSUNFunc _glReplacementCodeuiTexCoord2fVertex3fSUN;
#define glReplacementCodeuiTexCoord2fVertex3fSUN VE_ASSERT(_glReplacementCodeuiTexCoord2fVertex3fSUN);_glReplacementCodeuiTexCoord2fVertex3fSUN
typedef void (APIENTRY *glReplacementCodeuiTexCoord2fVertex3fvSUNFunc)(GLuint* rc, GLfloat* tc, GLfloat* v);
extern glReplacementCodeuiTexCoord2fVertex3fvSUNFunc _glReplacementCodeuiTexCoord2fVertex3fvSUN;
#define glReplacementCodeuiTexCoord2fVertex3fvSUN VE_ASSERT(_glReplacementCodeuiTexCoord2fVertex3fvSUN);_glReplacementCodeuiTexCoord2fVertex3fvSUN
typedef void (APIENTRY *glReplacementCodeuiTexCoord2fNormal3fVertex3fSUNFunc)(GLuint rc, GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
extern glReplacementCodeuiTexCoord2fNormal3fVertex3fSUNFunc _glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN;
#define glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN VE_ASSERT(_glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN);_glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN
typedef void (APIENTRY *glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUNFunc)(GLuint* rc, GLfloat* tc, GLfloat* n, GLfloat* v);
extern glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUNFunc _glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN;
#define glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN VE_ASSERT(_glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN);_glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN
typedef void (APIENTRY *glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUNFunc)(GLuint rc, GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
extern glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUNFunc _glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN;
#define glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN VE_ASSERT(_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN);_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN
typedef void (APIENTRY *glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUNFunc)(GLuint* rc, GLfloat* tc, GLfloat* c, GLfloat* n, GLfloat* v);
extern glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUNFunc _glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN;
#define glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN VE_ASSERT(_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN);_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN
typedef void (APIENTRY *glBlendFuncSeparateEXTFunc)(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
extern glBlendFuncSeparateEXTFunc _glBlendFuncSeparateEXT;
#define glBlendFuncSeparateEXT VE_ASSERT(_glBlendFuncSeparateEXT);_glBlendFuncSeparateEXT
typedef void (APIENTRY *glBlendFuncSeparateINGRFunc)(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
extern glBlendFuncSeparateINGRFunc _glBlendFuncSeparateINGR;
#define glBlendFuncSeparateINGR VE_ASSERT(_glBlendFuncSeparateINGR);_glBlendFuncSeparateINGR
typedef void (APIENTRY *glVertexWeightfEXTFunc)(GLfloat weight);
extern glVertexWeightfEXTFunc _glVertexWeightfEXT;
#define glVertexWeightfEXT VE_ASSERT(_glVertexWeightfEXT);_glVertexWeightfEXT
typedef void (APIENTRY *glVertexWeightfvEXTFunc)(GLfloat* weight);
extern glVertexWeightfvEXTFunc _glVertexWeightfvEXT;
#define glVertexWeightfvEXT VE_ASSERT(_glVertexWeightfvEXT);_glVertexWeightfvEXT
typedef void (APIENTRY *glVertexWeightPointerEXTFunc)(GLint size, GLenum type, GLsizei stride, GLvoid* pointer);
extern glVertexWeightPointerEXTFunc _glVertexWeightPointerEXT;
#define glVertexWeightPointerEXT VE_ASSERT(_glVertexWeightPointerEXT);_glVertexWeightPointerEXT
typedef void (APIENTRY *glFlushVertexArrayRangeNVFunc)();
extern glFlushVertexArrayRangeNVFunc _glFlushVertexArrayRangeNV;
#define glFlushVertexArrayRangeNV VE_ASSERT(_glFlushVertexArrayRangeNV);_glFlushVertexArrayRangeNV
typedef void (APIENTRY *glVertexArrayRangeNVFunc)(GLsizei length, GLvoid* pointer);
extern glVertexArrayRangeNVFunc _glVertexArrayRangeNV;
#define glVertexArrayRangeNV VE_ASSERT(_glVertexArrayRangeNV);_glVertexArrayRangeNV
typedef void (APIENTRY *glCombinerParameterfvNVFunc)(GLenum pname, GLfloat* params);
extern glCombinerParameterfvNVFunc _glCombinerParameterfvNV;
#define glCombinerParameterfvNV VE_ASSERT(_glCombinerParameterfvNV);_glCombinerParameterfvNV
typedef void (APIENTRY *glCombinerParameterfNVFunc)(GLenum pname, GLfloat param);
extern glCombinerParameterfNVFunc _glCombinerParameterfNV;
#define glCombinerParameterfNV VE_ASSERT(_glCombinerParameterfNV);_glCombinerParameterfNV
typedef void (APIENTRY *glCombinerParameterivNVFunc)(GLenum pname, GLint* params);
extern glCombinerParameterivNVFunc _glCombinerParameterivNV;
#define glCombinerParameterivNV VE_ASSERT(_glCombinerParameterivNV);_glCombinerParameterivNV
typedef void (APIENTRY *glCombinerParameteriNVFunc)(GLenum pname, GLint param);
extern glCombinerParameteriNVFunc _glCombinerParameteriNV;
#define glCombinerParameteriNV VE_ASSERT(_glCombinerParameteriNV);_glCombinerParameteriNV
typedef void (APIENTRY *glCombinerInputNVFunc)(GLenum stage, GLenum portion, GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);
extern glCombinerInputNVFunc _glCombinerInputNV;
#define glCombinerInputNV VE_ASSERT(_glCombinerInputNV);_glCombinerInputNV
typedef void (APIENTRY *glCombinerOutputNVFunc)(GLenum stage, GLenum portion, GLenum abOutput, GLenum cdOutput, GLenum sumOutput, GLenum scale, GLenum bias, GLboolean abDotProduct, GLboolean cdDotProduct, GLboolean muxSum);
extern glCombinerOutputNVFunc _glCombinerOutputNV;
#define glCombinerOutputNV VE_ASSERT(_glCombinerOutputNV);_glCombinerOutputNV
typedef void (APIENTRY *glFinalCombinerInputNVFunc)(GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);
extern glFinalCombinerInputNVFunc _glFinalCombinerInputNV;
#define glFinalCombinerInputNV VE_ASSERT(_glFinalCombinerInputNV);_glFinalCombinerInputNV
typedef void (APIENTRY *glGetCombinerInputParameterfvNVFunc)(GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLfloat* params);
extern glGetCombinerInputParameterfvNVFunc _glGetCombinerInputParameterfvNV;
#define glGetCombinerInputParameterfvNV VE_ASSERT(_glGetCombinerInputParameterfvNV);_glGetCombinerInputParameterfvNV
typedef void (APIENTRY *glGetCombinerInputParameterivNVFunc)(GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLint* params);
extern glGetCombinerInputParameterivNVFunc _glGetCombinerInputParameterivNV;
#define glGetCombinerInputParameterivNV VE_ASSERT(_glGetCombinerInputParameterivNV);_glGetCombinerInputParameterivNV
typedef void (APIENTRY *glGetCombinerOutputParameterfvNVFunc)(GLenum stage, GLenum portion, GLenum pname, GLfloat* params);
extern glGetCombinerOutputParameterfvNVFunc _glGetCombinerOutputParameterfvNV;
#define glGetCombinerOutputParameterfvNV VE_ASSERT(_glGetCombinerOutputParameterfvNV);_glGetCombinerOutputParameterfvNV
typedef void (APIENTRY *glGetCombinerOutputParameterivNVFunc)(GLenum stage, GLenum portion, GLenum pname, GLint* params);
extern glGetCombinerOutputParameterivNVFunc _glGetCombinerOutputParameterivNV;
#define glGetCombinerOutputParameterivNV VE_ASSERT(_glGetCombinerOutputParameterivNV);_glGetCombinerOutputParameterivNV
typedef void (APIENTRY *glGetFinalCombinerInputParameterfvNVFunc)(GLenum variable, GLenum pname, GLfloat* params);
extern glGetFinalCombinerInputParameterfvNVFunc _glGetFinalCombinerInputParameterfvNV;
#define glGetFinalCombinerInputParameterfvNV VE_ASSERT(_glGetFinalCombinerInputParameterfvNV);_glGetFinalCombinerInputParameterfvNV
typedef void (APIENTRY *glGetFinalCombinerInputParameterivNVFunc)(GLenum variable, GLenum pname, GLint* params);
extern glGetFinalCombinerInputParameterivNVFunc _glGetFinalCombinerInputParameterivNV;
#define glGetFinalCombinerInputParameterivNV VE_ASSERT(_glGetFinalCombinerInputParameterivNV);_glGetFinalCombinerInputParameterivNV
typedef void (APIENTRY *glResizeBuffersMESAFunc)();
extern glResizeBuffersMESAFunc _glResizeBuffersMESA;
#define glResizeBuffersMESA VE_ASSERT(_glResizeBuffersMESA);_glResizeBuffersMESA
typedef void (APIENTRY *glWindowPos2dMESAFunc)(GLdouble x, GLdouble y);
extern glWindowPos2dMESAFunc _glWindowPos2dMESA;
#define glWindowPos2dMESA VE_ASSERT(_glWindowPos2dMESA);_glWindowPos2dMESA
typedef void (APIENTRY *glWindowPos2dvMESAFunc)(GLdouble* v);
extern glWindowPos2dvMESAFunc _glWindowPos2dvMESA;
#define glWindowPos2dvMESA VE_ASSERT(_glWindowPos2dvMESA);_glWindowPos2dvMESA
typedef void (APIENTRY *glWindowPos2fMESAFunc)(GLfloat x, GLfloat y);
extern glWindowPos2fMESAFunc _glWindowPos2fMESA;
#define glWindowPos2fMESA VE_ASSERT(_glWindowPos2fMESA);_glWindowPos2fMESA
typedef void (APIENTRY *glWindowPos2fvMESAFunc)(GLfloat* v);
extern glWindowPos2fvMESAFunc _glWindowPos2fvMESA;
#define glWindowPos2fvMESA VE_ASSERT(_glWindowPos2fvMESA);_glWindowPos2fvMESA
typedef void (APIENTRY *glWindowPos2iMESAFunc)(GLint x, GLint y);
extern glWindowPos2iMESAFunc _glWindowPos2iMESA;
#define glWindowPos2iMESA VE_ASSERT(_glWindowPos2iMESA);_glWindowPos2iMESA
typedef void (APIENTRY *glWindowPos2ivMESAFunc)(GLint* v);
extern glWindowPos2ivMESAFunc _glWindowPos2ivMESA;
#define glWindowPos2ivMESA VE_ASSERT(_glWindowPos2ivMESA);_glWindowPos2ivMESA
typedef void (APIENTRY *glWindowPos2sMESAFunc)(GLshort x, GLshort y);
extern glWindowPos2sMESAFunc _glWindowPos2sMESA;
#define glWindowPos2sMESA VE_ASSERT(_glWindowPos2sMESA);_glWindowPos2sMESA
typedef void (APIENTRY *glWindowPos2svMESAFunc)(GLshort* v);
extern glWindowPos2svMESAFunc _glWindowPos2svMESA;
#define glWindowPos2svMESA VE_ASSERT(_glWindowPos2svMESA);_glWindowPos2svMESA
typedef void (APIENTRY *glWindowPos3dMESAFunc)(GLdouble x, GLdouble y, GLdouble z);
extern glWindowPos3dMESAFunc _glWindowPos3dMESA;
#define glWindowPos3dMESA VE_ASSERT(_glWindowPos3dMESA);_glWindowPos3dMESA
typedef void (APIENTRY *glWindowPos3dvMESAFunc)(GLdouble* v);
extern glWindowPos3dvMESAFunc _glWindowPos3dvMESA;
#define glWindowPos3dvMESA VE_ASSERT(_glWindowPos3dvMESA);_glWindowPos3dvMESA
typedef void (APIENTRY *glWindowPos3fMESAFunc)(GLfloat x, GLfloat y, GLfloat z);
extern glWindowPos3fMESAFunc _glWindowPos3fMESA;
#define glWindowPos3fMESA VE_ASSERT(_glWindowPos3fMESA);_glWindowPos3fMESA
typedef void (APIENTRY *glWindowPos3fvMESAFunc)(GLfloat* v);
extern glWindowPos3fvMESAFunc _glWindowPos3fvMESA;
#define glWindowPos3fvMESA VE_ASSERT(_glWindowPos3fvMESA);_glWindowPos3fvMESA
typedef void (APIENTRY *glWindowPos3iMESAFunc)(GLint x, GLint y, GLint z);
extern glWindowPos3iMESAFunc _glWindowPos3iMESA;
#define glWindowPos3iMESA VE_ASSERT(_glWindowPos3iMESA);_glWindowPos3iMESA
typedef void (APIENTRY *glWindowPos3ivMESAFunc)(GLint* v);
extern glWindowPos3ivMESAFunc _glWindowPos3ivMESA;
#define glWindowPos3ivMESA VE_ASSERT(_glWindowPos3ivMESA);_glWindowPos3ivMESA
typedef void (APIENTRY *glWindowPos3sMESAFunc)(GLshort x, GLshort y, GLshort z);
extern glWindowPos3sMESAFunc _glWindowPos3sMESA;
#define glWindowPos3sMESA VE_ASSERT(_glWindowPos3sMESA);_glWindowPos3sMESA
typedef void (APIENTRY *glWindowPos3svMESAFunc)(GLshort* v);
extern glWindowPos3svMESAFunc _glWindowPos3svMESA;
#define glWindowPos3svMESA VE_ASSERT(_glWindowPos3svMESA);_glWindowPos3svMESA
typedef void (APIENTRY *glWindowPos4dMESAFunc)(GLdouble x, GLdouble y, GLdouble z, GLdouble w);
extern glWindowPos4dMESAFunc _glWindowPos4dMESA;
#define glWindowPos4dMESA VE_ASSERT(_glWindowPos4dMESA);_glWindowPos4dMESA
typedef void (APIENTRY *glWindowPos4dvMESAFunc)(GLdouble* v);
extern glWindowPos4dvMESAFunc _glWindowPos4dvMESA;
#define glWindowPos4dvMESA VE_ASSERT(_glWindowPos4dvMESA);_glWindowPos4dvMESA
typedef void (APIENTRY *glWindowPos4fMESAFunc)(GLfloat x, GLfloat y, GLfloat z, GLfloat w);
extern glWindowPos4fMESAFunc _glWindowPos4fMESA;
#define glWindowPos4fMESA VE_ASSERT(_glWindowPos4fMESA);_glWindowPos4fMESA
typedef void (APIENTRY *glWindowPos4fvMESAFunc)(GLfloat* v);
extern glWindowPos4fvMESAFunc _glWindowPos4fvMESA;
#define glWindowPos4fvMESA VE_ASSERT(_glWindowPos4fvMESA);_glWindowPos4fvMESA
typedef void (APIENTRY *glWindowPos4iMESAFunc)(GLint x, GLint y, GLint z, GLint w);
extern glWindowPos4iMESAFunc _glWindowPos4iMESA;
#define glWindowPos4iMESA VE_ASSERT(_glWindowPos4iMESA);_glWindowPos4iMESA
typedef void (APIENTRY *glWindowPos4ivMESAFunc)(GLint* v);
extern glWindowPos4ivMESAFunc _glWindowPos4ivMESA;
#define glWindowPos4ivMESA VE_ASSERT(_glWindowPos4ivMESA);_glWindowPos4ivMESA
typedef void (APIENTRY *glWindowPos4sMESAFunc)(GLshort x, GLshort y, GLshort z, GLshort w);
extern glWindowPos4sMESAFunc _glWindowPos4sMESA;
#define glWindowPos4sMESA VE_ASSERT(_glWindowPos4sMESA);_glWindowPos4sMESA
typedef void (APIENTRY *glWindowPos4svMESAFunc)(GLshort* v);
extern glWindowPos4svMESAFunc _glWindowPos4svMESA;
#define glWindowPos4svMESA VE_ASSERT(_glWindowPos4svMESA);_glWindowPos4svMESA
typedef void (APIENTRY *glMultiModeDrawArraysIBMFunc)(GLenum* mode, GLint* first, GLsizei* count, GLsizei primcount, GLint modestride);
extern glMultiModeDrawArraysIBMFunc _glMultiModeDrawArraysIBM;
#define glMultiModeDrawArraysIBM VE_ASSERT(_glMultiModeDrawArraysIBM);_glMultiModeDrawArraysIBM
typedef void (APIENTRY *glMultiModeDrawElementsIBMFunc)(GLenum* mode, GLsizei* count, GLenum type, GLvoid* const* indices, GLsizei primcount, GLint modestride);
extern glMultiModeDrawElementsIBMFunc _glMultiModeDrawElementsIBM;
#define glMultiModeDrawElementsIBM VE_ASSERT(_glMultiModeDrawElementsIBM);_glMultiModeDrawElementsIBM
typedef void (APIENTRY *glColorPointerListIBMFunc)(GLint size, GLenum type, GLint stride, GLvoid** pointer, GLint ptrstride);
extern glColorPointerListIBMFunc _glColorPointerListIBM;
#define glColorPointerListIBM VE_ASSERT(_glColorPointerListIBM);_glColorPointerListIBM
typedef void (APIENTRY *glSecondaryColorPointerListIBMFunc)(GLint size, GLenum type, GLint stride, GLvoid** pointer, GLint ptrstride);
extern glSecondaryColorPointerListIBMFunc _glSecondaryColorPointerListIBM;
#define glSecondaryColorPointerListIBM VE_ASSERT(_glSecondaryColorPointerListIBM);_glSecondaryColorPointerListIBM
typedef void (APIENTRY *glEdgeFlagPointerListIBMFunc)(GLint stride, GLboolean** pointer, GLint ptrstride);
extern glEdgeFlagPointerListIBMFunc _glEdgeFlagPointerListIBM;
#define glEdgeFlagPointerListIBM VE_ASSERT(_glEdgeFlagPointerListIBM);_glEdgeFlagPointerListIBM
typedef void (APIENTRY *glFogCoordPointerListIBMFunc)(GLenum type, GLint stride, GLvoid** pointer, GLint ptrstride);
extern glFogCoordPointerListIBMFunc _glFogCoordPointerListIBM;
#define glFogCoordPointerListIBM VE_ASSERT(_glFogCoordPointerListIBM);_glFogCoordPointerListIBM
typedef void (APIENTRY *glIndexPointerListIBMFunc)(GLenum type, GLint stride, GLvoid** pointer, GLint ptrstride);
extern glIndexPointerListIBMFunc _glIndexPointerListIBM;
#define glIndexPointerListIBM VE_ASSERT(_glIndexPointerListIBM);_glIndexPointerListIBM
typedef void (APIENTRY *glNormalPointerListIBMFunc)(GLenum type, GLint stride, GLvoid** pointer, GLint ptrstride);
extern glNormalPointerListIBMFunc _glNormalPointerListIBM;
#define glNormalPointerListIBM VE_ASSERT(_glNormalPointerListIBM);_glNormalPointerListIBM
typedef void (APIENTRY *glTexCoordPointerListIBMFunc)(GLint size, GLenum type, GLint stride, GLvoid** pointer, GLint ptrstride);
extern glTexCoordPointerListIBMFunc _glTexCoordPointerListIBM;
#define glTexCoordPointerListIBM VE_ASSERT(_glTexCoordPointerListIBM);_glTexCoordPointerListIBM
typedef void (APIENTRY *glVertexPointerListIBMFunc)(GLint size, GLenum type, GLint stride, GLvoid** pointer, GLint ptrstride);
extern glVertexPointerListIBMFunc _glVertexPointerListIBM;
#define glVertexPointerListIBM VE_ASSERT(_glVertexPointerListIBM);_glVertexPointerListIBM
typedef void (APIENTRY *glTbufferMask3DFXFunc)(GLuint mask);
extern glTbufferMask3DFXFunc _glTbufferMask3DFX;
#define glTbufferMask3DFX VE_ASSERT(_glTbufferMask3DFX);_glTbufferMask3DFX
typedef void (APIENTRY *glSampleMaskEXTFunc)(GLclampf value, GLboolean invert);
extern glSampleMaskEXTFunc _glSampleMaskEXT;
#define glSampleMaskEXT VE_ASSERT(_glSampleMaskEXT);_glSampleMaskEXT
typedef void (APIENTRY *glSamplePatternEXTFunc)(GLenum pattern);
extern glSamplePatternEXTFunc _glSamplePatternEXT;
#define glSamplePatternEXT VE_ASSERT(_glSamplePatternEXT);_glSamplePatternEXT
typedef void (APIENTRY *glTextureColorMaskSGISFunc)(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
extern glTextureColorMaskSGISFunc _glTextureColorMaskSGIS;
#define glTextureColorMaskSGIS VE_ASSERT(_glTextureColorMaskSGIS);_glTextureColorMaskSGIS
typedef void (APIENTRY *glIglooInterfaceSGIXFunc)(GLenum pname, GLvoid* params);
extern glIglooInterfaceSGIXFunc _glIglooInterfaceSGIX;
#define glIglooInterfaceSGIX VE_ASSERT(_glIglooInterfaceSGIX);_glIglooInterfaceSGIX
typedef void (APIENTRY *glDeleteFencesNVFunc)(GLsizei n, GLuint* fences);
extern glDeleteFencesNVFunc _glDeleteFencesNV;
#define glDeleteFencesNV VE_ASSERT(_glDeleteFencesNV);_glDeleteFencesNV
typedef void (APIENTRY *glGenFencesNVFunc)(GLsizei n, GLuint* fences);
extern glGenFencesNVFunc _glGenFencesNV;
#define glGenFencesNV VE_ASSERT(_glGenFencesNV);_glGenFencesNV
typedef GLboolean (APIENTRY *glIsFenceNVFunc)(GLuint fence);
extern glIsFenceNVFunc _glIsFenceNV;
#define glIsFenceNV _glIsFenceNV
typedef GLboolean (APIENTRY *glTestFenceNVFunc)(GLuint fence);
extern glTestFenceNVFunc _glTestFenceNV;
#define glTestFenceNV _glTestFenceNV
typedef void (APIENTRY *glGetFenceivNVFunc)(GLuint fence, GLenum pname, GLint* params);
extern glGetFenceivNVFunc _glGetFenceivNV;
#define glGetFenceivNV VE_ASSERT(_glGetFenceivNV);_glGetFenceivNV
typedef void (APIENTRY *glFinishFenceNVFunc)(GLuint fence);
extern glFinishFenceNVFunc _glFinishFenceNV;
#define glFinishFenceNV VE_ASSERT(_glFinishFenceNV);_glFinishFenceNV
typedef void (APIENTRY *glSetFenceNVFunc)(GLuint fence, GLenum condition);
extern glSetFenceNVFunc _glSetFenceNV;
#define glSetFenceNV VE_ASSERT(_glSetFenceNV);_glSetFenceNV
typedef void (APIENTRY *glMapControlPointsNVFunc)(GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLint uorder, GLint vorder, GLboolean packed, GLvoid* points);
extern glMapControlPointsNVFunc _glMapControlPointsNV;
#define glMapControlPointsNV VE_ASSERT(_glMapControlPointsNV);_glMapControlPointsNV
typedef void (APIENTRY *glMapParameterivNVFunc)(GLenum target, GLenum pname, GLint* params);
extern glMapParameterivNVFunc _glMapParameterivNV;
#define glMapParameterivNV VE_ASSERT(_glMapParameterivNV);_glMapParameterivNV
typedef void (APIENTRY *glMapParameterfvNVFunc)(GLenum target, GLenum pname, GLfloat* params);
extern glMapParameterfvNVFunc _glMapParameterfvNV;
#define glMapParameterfvNV VE_ASSERT(_glMapParameterfvNV);_glMapParameterfvNV
typedef void (APIENTRY *glGetMapControlPointsNVFunc)(GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLboolean packed, GLvoid* points);
extern glGetMapControlPointsNVFunc _glGetMapControlPointsNV;
#define glGetMapControlPointsNV VE_ASSERT(_glGetMapControlPointsNV);_glGetMapControlPointsNV
typedef void (APIENTRY *glGetMapParameterivNVFunc)(GLenum target, GLenum pname, GLint* params);
extern glGetMapParameterivNVFunc _glGetMapParameterivNV;
#define glGetMapParameterivNV VE_ASSERT(_glGetMapParameterivNV);_glGetMapParameterivNV
typedef void (APIENTRY *glGetMapParameterfvNVFunc)(GLenum target, GLenum pname, GLfloat* params);
extern glGetMapParameterfvNVFunc _glGetMapParameterfvNV;
#define glGetMapParameterfvNV VE_ASSERT(_glGetMapParameterfvNV);_glGetMapParameterfvNV
typedef void (APIENTRY *glGetMapAttribParameterivNVFunc)(GLenum target, GLuint index, GLenum pname, GLint* params);
extern glGetMapAttribParameterivNVFunc _glGetMapAttribParameterivNV;
#define glGetMapAttribParameterivNV VE_ASSERT(_glGetMapAttribParameterivNV);_glGetMapAttribParameterivNV
typedef void (APIENTRY *glGetMapAttribParameterfvNVFunc)(GLenum target, GLuint index, GLenum pname, GLfloat* params);
extern glGetMapAttribParameterfvNVFunc _glGetMapAttribParameterfvNV;
#define glGetMapAttribParameterfvNV VE_ASSERT(_glGetMapAttribParameterfvNV);_glGetMapAttribParameterfvNV
typedef void (APIENTRY *glEvalMapsNVFunc)(GLenum target, GLenum mode);
extern glEvalMapsNVFunc _glEvalMapsNV;
#define glEvalMapsNV VE_ASSERT(_glEvalMapsNV);_glEvalMapsNV
typedef void (APIENTRY *glCombinerStageParameterfvNVFunc)(GLenum stage, GLenum pname, GLfloat* params);
extern glCombinerStageParameterfvNVFunc _glCombinerStageParameterfvNV;
#define glCombinerStageParameterfvNV VE_ASSERT(_glCombinerStageParameterfvNV);_glCombinerStageParameterfvNV
typedef void (APIENTRY *glGetCombinerStageParameterfvNVFunc)(GLenum stage, GLenum pname, GLfloat* params);
extern glGetCombinerStageParameterfvNVFunc _glGetCombinerStageParameterfvNV;
#define glGetCombinerStageParameterfvNV VE_ASSERT(_glGetCombinerStageParameterfvNV);_glGetCombinerStageParameterfvNV
typedef GLboolean (APIENTRY *glAreProgramsResidentNVFunc)(GLsizei n, GLuint* programs, GLboolean* residences);
extern glAreProgramsResidentNVFunc _glAreProgramsResidentNV;
#define glAreProgramsResidentNV _glAreProgramsResidentNV
typedef void (APIENTRY *glBindProgramNVFunc)(GLenum target, GLuint id);
extern glBindProgramNVFunc _glBindProgramNV;
#define glBindProgramNV VE_ASSERT(_glBindProgramNV);_glBindProgramNV
typedef void (APIENTRY *glDeleteProgramsNVFunc)(GLsizei n, GLuint* programs);
extern glDeleteProgramsNVFunc _glDeleteProgramsNV;
#define glDeleteProgramsNV VE_ASSERT(_glDeleteProgramsNV);_glDeleteProgramsNV
typedef void (APIENTRY *glExecuteProgramNVFunc)(GLenum target, GLuint id, GLfloat* params);
extern glExecuteProgramNVFunc _glExecuteProgramNV;
#define glExecuteProgramNV VE_ASSERT(_glExecuteProgramNV);_glExecuteProgramNV
typedef void (APIENTRY *glGenProgramsNVFunc)(GLsizei n, GLuint* programs);
extern glGenProgramsNVFunc _glGenProgramsNV;
#define glGenProgramsNV VE_ASSERT(_glGenProgramsNV);_glGenProgramsNV
typedef void (APIENTRY *glGetProgramParameterdvNVFunc)(GLenum target, GLuint index, GLenum pname, GLdouble* params);
extern glGetProgramParameterdvNVFunc _glGetProgramParameterdvNV;
#define glGetProgramParameterdvNV VE_ASSERT(_glGetProgramParameterdvNV);_glGetProgramParameterdvNV
typedef void (APIENTRY *glGetProgramParameterfvNVFunc)(GLenum target, GLuint index, GLenum pname, GLfloat* params);
extern glGetProgramParameterfvNVFunc _glGetProgramParameterfvNV;
#define glGetProgramParameterfvNV VE_ASSERT(_glGetProgramParameterfvNV);_glGetProgramParameterfvNV
typedef void (APIENTRY *glGetProgramivNVFunc)(GLuint id, GLenum pname, GLint* params);
extern glGetProgramivNVFunc _glGetProgramivNV;
#define glGetProgramivNV VE_ASSERT(_glGetProgramivNV);_glGetProgramivNV
typedef void (APIENTRY *glGetProgramStringNVFunc)(GLuint id, GLenum pname, GLubyte* program);
extern glGetProgramStringNVFunc _glGetProgramStringNV;
#define glGetProgramStringNV VE_ASSERT(_glGetProgramStringNV);_glGetProgramStringNV
typedef void (APIENTRY *glGetTrackMatrixivNVFunc)(GLenum target, GLuint address, GLenum pname, GLint* params);
extern glGetTrackMatrixivNVFunc _glGetTrackMatrixivNV;
#define glGetTrackMatrixivNV VE_ASSERT(_glGetTrackMatrixivNV);_glGetTrackMatrixivNV
typedef void (APIENTRY *glGetVertexAttribdvNVFunc)(GLuint index, GLenum pname, GLdouble* params);
extern glGetVertexAttribdvNVFunc _glGetVertexAttribdvNV;
#define glGetVertexAttribdvNV VE_ASSERT(_glGetVertexAttribdvNV);_glGetVertexAttribdvNV
typedef void (APIENTRY *glGetVertexAttribfvNVFunc)(GLuint index, GLenum pname, GLfloat* params);
extern glGetVertexAttribfvNVFunc _glGetVertexAttribfvNV;
#define glGetVertexAttribfvNV VE_ASSERT(_glGetVertexAttribfvNV);_glGetVertexAttribfvNV
typedef void (APIENTRY *glGetVertexAttribivNVFunc)(GLuint index, GLenum pname, GLint* params);
extern glGetVertexAttribivNVFunc _glGetVertexAttribivNV;
#define glGetVertexAttribivNV VE_ASSERT(_glGetVertexAttribivNV);_glGetVertexAttribivNV
typedef void (APIENTRY *glGetVertexAttribPointervNVFunc)(GLuint index, GLenum pname, GLvoid** pointer);
extern glGetVertexAttribPointervNVFunc _glGetVertexAttribPointervNV;
#define glGetVertexAttribPointervNV VE_ASSERT(_glGetVertexAttribPointervNV);_glGetVertexAttribPointervNV
typedef GLboolean (APIENTRY *glIsProgramNVFunc)(GLuint id);
extern glIsProgramNVFunc _glIsProgramNV;
#define glIsProgramNV _glIsProgramNV
typedef void (APIENTRY *glLoadProgramNVFunc)(GLenum target, GLuint id, GLsizei len, GLubyte* program);
extern glLoadProgramNVFunc _glLoadProgramNV;
#define glLoadProgramNV VE_ASSERT(_glLoadProgramNV);_glLoadProgramNV
typedef void (APIENTRY *glProgramParameter4dNVFunc)(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
extern glProgramParameter4dNVFunc _glProgramParameter4dNV;
#define glProgramParameter4dNV VE_ASSERT(_glProgramParameter4dNV);_glProgramParameter4dNV
typedef void (APIENTRY *glProgramParameter4dvNVFunc)(GLenum target, GLuint index, GLdouble* v);
extern glProgramParameter4dvNVFunc _glProgramParameter4dvNV;
#define glProgramParameter4dvNV VE_ASSERT(_glProgramParameter4dvNV);_glProgramParameter4dvNV
typedef void (APIENTRY *glProgramParameter4fNVFunc)(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
extern glProgramParameter4fNVFunc _glProgramParameter4fNV;
#define glProgramParameter4fNV VE_ASSERT(_glProgramParameter4fNV);_glProgramParameter4fNV
typedef void (APIENTRY *glProgramParameter4fvNVFunc)(GLenum target, GLuint index, GLfloat* v);
extern glProgramParameter4fvNVFunc _glProgramParameter4fvNV;
#define glProgramParameter4fvNV VE_ASSERT(_glProgramParameter4fvNV);_glProgramParameter4fvNV
typedef void (APIENTRY *glProgramParameters4dvNVFunc)(GLenum target, GLuint index, GLsizei count, GLdouble* v);
extern glProgramParameters4dvNVFunc _glProgramParameters4dvNV;
#define glProgramParameters4dvNV VE_ASSERT(_glProgramParameters4dvNV);_glProgramParameters4dvNV
typedef void (APIENTRY *glProgramParameters4fvNVFunc)(GLenum target, GLuint index, GLsizei count, GLfloat* v);
extern glProgramParameters4fvNVFunc _glProgramParameters4fvNV;
#define glProgramParameters4fvNV VE_ASSERT(_glProgramParameters4fvNV);_glProgramParameters4fvNV
typedef void (APIENTRY *glRequestResidentProgramsNVFunc)(GLsizei n, GLuint* programs);
extern glRequestResidentProgramsNVFunc _glRequestResidentProgramsNV;
#define glRequestResidentProgramsNV VE_ASSERT(_glRequestResidentProgramsNV);_glRequestResidentProgramsNV
typedef void (APIENTRY *glTrackMatrixNVFunc)(GLenum target, GLuint address, GLenum matrix, GLenum transform);
extern glTrackMatrixNVFunc _glTrackMatrixNV;
#define glTrackMatrixNV VE_ASSERT(_glTrackMatrixNV);_glTrackMatrixNV
typedef void (APIENTRY *glVertexAttribPointerNVFunc)(GLuint index, GLint fsize, GLenum type, GLsizei stride, GLvoid* pointer);
extern glVertexAttribPointerNVFunc _glVertexAttribPointerNV;
#define glVertexAttribPointerNV VE_ASSERT(_glVertexAttribPointerNV);_glVertexAttribPointerNV
typedef void (APIENTRY *glVertexAttrib1dNVFunc)(GLuint index, GLdouble x);
extern glVertexAttrib1dNVFunc _glVertexAttrib1dNV;
#define glVertexAttrib1dNV VE_ASSERT(_glVertexAttrib1dNV);_glVertexAttrib1dNV
typedef void (APIENTRY *glVertexAttrib1dvNVFunc)(GLuint index, GLdouble* v);
extern glVertexAttrib1dvNVFunc _glVertexAttrib1dvNV;
#define glVertexAttrib1dvNV VE_ASSERT(_glVertexAttrib1dvNV);_glVertexAttrib1dvNV
typedef void (APIENTRY *glVertexAttrib1fNVFunc)(GLuint index, GLfloat x);
extern glVertexAttrib1fNVFunc _glVertexAttrib1fNV;
#define glVertexAttrib1fNV VE_ASSERT(_glVertexAttrib1fNV);_glVertexAttrib1fNV
typedef void (APIENTRY *glVertexAttrib1fvNVFunc)(GLuint index, GLfloat* v);
extern glVertexAttrib1fvNVFunc _glVertexAttrib1fvNV;
#define glVertexAttrib1fvNV VE_ASSERT(_glVertexAttrib1fvNV);_glVertexAttrib1fvNV
typedef void (APIENTRY *glVertexAttrib1sNVFunc)(GLuint index, GLshort x);
extern glVertexAttrib1sNVFunc _glVertexAttrib1sNV;
#define glVertexAttrib1sNV VE_ASSERT(_glVertexAttrib1sNV);_glVertexAttrib1sNV
typedef void (APIENTRY *glVertexAttrib1svNVFunc)(GLuint index, GLshort* v);
extern glVertexAttrib1svNVFunc _glVertexAttrib1svNV;
#define glVertexAttrib1svNV VE_ASSERT(_glVertexAttrib1svNV);_glVertexAttrib1svNV
typedef void (APIENTRY *glVertexAttrib2dNVFunc)(GLuint index, GLdouble x, GLdouble y);
extern glVertexAttrib2dNVFunc _glVertexAttrib2dNV;
#define glVertexAttrib2dNV VE_ASSERT(_glVertexAttrib2dNV);_glVertexAttrib2dNV
typedef void (APIENTRY *glVertexAttrib2dvNVFunc)(GLuint index, GLdouble* v);
extern glVertexAttrib2dvNVFunc _glVertexAttrib2dvNV;
#define glVertexAttrib2dvNV VE_ASSERT(_glVertexAttrib2dvNV);_glVertexAttrib2dvNV
typedef void (APIENTRY *glVertexAttrib2fNVFunc)(GLuint index, GLfloat x, GLfloat y);
extern glVertexAttrib2fNVFunc _glVertexAttrib2fNV;
#define glVertexAttrib2fNV VE_ASSERT(_glVertexAttrib2fNV);_glVertexAttrib2fNV
typedef void (APIENTRY *glVertexAttrib2fvNVFunc)(GLuint index, GLfloat* v);
extern glVertexAttrib2fvNVFunc _glVertexAttrib2fvNV;
#define glVertexAttrib2fvNV VE_ASSERT(_glVertexAttrib2fvNV);_glVertexAttrib2fvNV
typedef void (APIENTRY *glVertexAttrib2sNVFunc)(GLuint index, GLshort x, GLshort y);
extern glVertexAttrib2sNVFunc _glVertexAttrib2sNV;
#define glVertexAttrib2sNV VE_ASSERT(_glVertexAttrib2sNV);_glVertexAttrib2sNV
typedef void (APIENTRY *glVertexAttrib2svNVFunc)(GLuint index, GLshort* v);
extern glVertexAttrib2svNVFunc _glVertexAttrib2svNV;
#define glVertexAttrib2svNV VE_ASSERT(_glVertexAttrib2svNV);_glVertexAttrib2svNV
typedef void (APIENTRY *glVertexAttrib3dNVFunc)(GLuint index, GLdouble x, GLdouble y, GLdouble z);
extern glVertexAttrib3dNVFunc _glVertexAttrib3dNV;
#define glVertexAttrib3dNV VE_ASSERT(_glVertexAttrib3dNV);_glVertexAttrib3dNV
typedef void (APIENTRY *glVertexAttrib3dvNVFunc)(GLuint index, GLdouble* v);
extern glVertexAttrib3dvNVFunc _glVertexAttrib3dvNV;
#define glVertexAttrib3dvNV VE_ASSERT(_glVertexAttrib3dvNV);_glVertexAttrib3dvNV
typedef void (APIENTRY *glVertexAttrib3fNVFunc)(GLuint index, GLfloat x, GLfloat y, GLfloat z);
extern glVertexAttrib3fNVFunc _glVertexAttrib3fNV;
#define glVertexAttrib3fNV VE_ASSERT(_glVertexAttrib3fNV);_glVertexAttrib3fNV
typedef void (APIENTRY *glVertexAttrib3fvNVFunc)(GLuint index, GLfloat* v);
extern glVertexAttrib3fvNVFunc _glVertexAttrib3fvNV;
#define glVertexAttrib3fvNV VE_ASSERT(_glVertexAttrib3fvNV);_glVertexAttrib3fvNV
typedef void (APIENTRY *glVertexAttrib3sNVFunc)(GLuint index, GLshort x, GLshort y, GLshort z);
extern glVertexAttrib3sNVFunc _glVertexAttrib3sNV;
#define glVertexAttrib3sNV VE_ASSERT(_glVertexAttrib3sNV);_glVertexAttrib3sNV
typedef void (APIENTRY *glVertexAttrib3svNVFunc)(GLuint index, GLshort* v);
extern glVertexAttrib3svNVFunc _glVertexAttrib3svNV;
#define glVertexAttrib3svNV VE_ASSERT(_glVertexAttrib3svNV);_glVertexAttrib3svNV
typedef void (APIENTRY *glVertexAttrib4dNVFunc)(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
extern glVertexAttrib4dNVFunc _glVertexAttrib4dNV;
#define glVertexAttrib4dNV VE_ASSERT(_glVertexAttrib4dNV);_glVertexAttrib4dNV
typedef void (APIENTRY *glVertexAttrib4dvNVFunc)(GLuint index, GLdouble* v);
extern glVertexAttrib4dvNVFunc _glVertexAttrib4dvNV;
#define glVertexAttrib4dvNV VE_ASSERT(_glVertexAttrib4dvNV);_glVertexAttrib4dvNV
typedef void (APIENTRY *glVertexAttrib4fNVFunc)(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
extern glVertexAttrib4fNVFunc _glVertexAttrib4fNV;
#define glVertexAttrib4fNV VE_ASSERT(_glVertexAttrib4fNV);_glVertexAttrib4fNV
typedef void (APIENTRY *glVertexAttrib4fvNVFunc)(GLuint index, GLfloat* v);
extern glVertexAttrib4fvNVFunc _glVertexAttrib4fvNV;
#define glVertexAttrib4fvNV VE_ASSERT(_glVertexAttrib4fvNV);_glVertexAttrib4fvNV
typedef void (APIENTRY *glVertexAttrib4sNVFunc)(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
extern glVertexAttrib4sNVFunc _glVertexAttrib4sNV;
#define glVertexAttrib4sNV VE_ASSERT(_glVertexAttrib4sNV);_glVertexAttrib4sNV
typedef void (APIENTRY *glVertexAttrib4svNVFunc)(GLuint index, GLshort* v);
extern glVertexAttrib4svNVFunc _glVertexAttrib4svNV;
#define glVertexAttrib4svNV VE_ASSERT(_glVertexAttrib4svNV);_glVertexAttrib4svNV
typedef void (APIENTRY *glVertexAttrib4ubNVFunc)(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
extern glVertexAttrib4ubNVFunc _glVertexAttrib4ubNV;
#define glVertexAttrib4ubNV VE_ASSERT(_glVertexAttrib4ubNV);_glVertexAttrib4ubNV
typedef void (APIENTRY *glVertexAttrib4ubvNVFunc)(GLuint index, GLubyte* v);
extern glVertexAttrib4ubvNVFunc _glVertexAttrib4ubvNV;
#define glVertexAttrib4ubvNV VE_ASSERT(_glVertexAttrib4ubvNV);_glVertexAttrib4ubvNV
typedef void (APIENTRY *glVertexAttribs1dvNVFunc)(GLuint index, GLsizei count, GLdouble* v);
extern glVertexAttribs1dvNVFunc _glVertexAttribs1dvNV;
#define glVertexAttribs1dvNV VE_ASSERT(_glVertexAttribs1dvNV);_glVertexAttribs1dvNV
typedef void (APIENTRY *glVertexAttribs1fvNVFunc)(GLuint index, GLsizei count, GLfloat* v);
extern glVertexAttribs1fvNVFunc _glVertexAttribs1fvNV;
#define glVertexAttribs1fvNV VE_ASSERT(_glVertexAttribs1fvNV);_glVertexAttribs1fvNV
typedef void (APIENTRY *glVertexAttribs1svNVFunc)(GLuint index, GLsizei count, GLshort* v);
extern glVertexAttribs1svNVFunc _glVertexAttribs1svNV;
#define glVertexAttribs1svNV VE_ASSERT(_glVertexAttribs1svNV);_glVertexAttribs1svNV
typedef void (APIENTRY *glVertexAttribs2dvNVFunc)(GLuint index, GLsizei count, GLdouble* v);
extern glVertexAttribs2dvNVFunc _glVertexAttribs2dvNV;
#define glVertexAttribs2dvNV VE_ASSERT(_glVertexAttribs2dvNV);_glVertexAttribs2dvNV
typedef void (APIENTRY *glVertexAttribs2fvNVFunc)(GLuint index, GLsizei count, GLfloat* v);
extern glVertexAttribs2fvNVFunc _glVertexAttribs2fvNV;
#define glVertexAttribs2fvNV VE_ASSERT(_glVertexAttribs2fvNV);_glVertexAttribs2fvNV
typedef void (APIENTRY *glVertexAttribs2svNVFunc)(GLuint index, GLsizei count, GLshort* v);
extern glVertexAttribs2svNVFunc _glVertexAttribs2svNV;
#define glVertexAttribs2svNV VE_ASSERT(_glVertexAttribs2svNV);_glVertexAttribs2svNV
typedef void (APIENTRY *glVertexAttribs3dvNVFunc)(GLuint index, GLsizei count, GLdouble* v);
extern glVertexAttribs3dvNVFunc _glVertexAttribs3dvNV;
#define glVertexAttribs3dvNV VE_ASSERT(_glVertexAttribs3dvNV);_glVertexAttribs3dvNV
typedef void (APIENTRY *glVertexAttribs3fvNVFunc)(GLuint index, GLsizei count, GLfloat* v);
extern glVertexAttribs3fvNVFunc _glVertexAttribs3fvNV;
#define glVertexAttribs3fvNV VE_ASSERT(_glVertexAttribs3fvNV);_glVertexAttribs3fvNV
typedef void (APIENTRY *glVertexAttribs3svNVFunc)(GLuint index, GLsizei count, GLshort* v);
extern glVertexAttribs3svNVFunc _glVertexAttribs3svNV;
#define glVertexAttribs3svNV VE_ASSERT(_glVertexAttribs3svNV);_glVertexAttribs3svNV
typedef void (APIENTRY *glVertexAttribs4dvNVFunc)(GLuint index, GLsizei count, GLdouble* v);
extern glVertexAttribs4dvNVFunc _glVertexAttribs4dvNV;
#define glVertexAttribs4dvNV VE_ASSERT(_glVertexAttribs4dvNV);_glVertexAttribs4dvNV
typedef void (APIENTRY *glVertexAttribs4fvNVFunc)(GLuint index, GLsizei count, GLfloat* v);
extern glVertexAttribs4fvNVFunc _glVertexAttribs4fvNV;
#define glVertexAttribs4fvNV VE_ASSERT(_glVertexAttribs4fvNV);_glVertexAttribs4fvNV
typedef void (APIENTRY *glVertexAttribs4svNVFunc)(GLuint index, GLsizei count, GLshort* v);
extern glVertexAttribs4svNVFunc _glVertexAttribs4svNV;
#define glVertexAttribs4svNV VE_ASSERT(_glVertexAttribs4svNV);_glVertexAttribs4svNV
typedef void (APIENTRY *glVertexAttribs4ubvNVFunc)(GLuint index, GLsizei count, GLubyte* v);
extern glVertexAttribs4ubvNVFunc _glVertexAttribs4ubvNV;
#define glVertexAttribs4ubvNV VE_ASSERT(_glVertexAttribs4ubvNV);_glVertexAttribs4ubvNV
typedef void (APIENTRY *glTexBumpParameterivATIFunc)(GLenum pname, GLint* param);
extern glTexBumpParameterivATIFunc _glTexBumpParameterivATI;
#define glTexBumpParameterivATI VE_ASSERT(_glTexBumpParameterivATI);_glTexBumpParameterivATI
typedef void (APIENTRY *glTexBumpParameterfvATIFunc)(GLenum pname, GLfloat* param);
extern glTexBumpParameterfvATIFunc _glTexBumpParameterfvATI;
#define glTexBumpParameterfvATI VE_ASSERT(_glTexBumpParameterfvATI);_glTexBumpParameterfvATI
typedef void (APIENTRY *glGetTexBumpParameterivATIFunc)(GLenum pname, GLint* param);
extern glGetTexBumpParameterivATIFunc _glGetTexBumpParameterivATI;
#define glGetTexBumpParameterivATI VE_ASSERT(_glGetTexBumpParameterivATI);_glGetTexBumpParameterivATI
typedef void (APIENTRY *glGetTexBumpParameterfvATIFunc)(GLenum pname, GLfloat* param);
extern glGetTexBumpParameterfvATIFunc _glGetTexBumpParameterfvATI;
#define glGetTexBumpParameterfvATI VE_ASSERT(_glGetTexBumpParameterfvATI);_glGetTexBumpParameterfvATI
typedef GLuint (APIENTRY *glGenFragmentShadersATIFunc)(GLuint range);
extern glGenFragmentShadersATIFunc _glGenFragmentShadersATI;
#define glGenFragmentShadersATI _glGenFragmentShadersATI
typedef void (APIENTRY *glBindFragmentShaderATIFunc)(GLuint id);
extern glBindFragmentShaderATIFunc _glBindFragmentShaderATI;
#define glBindFragmentShaderATI VE_ASSERT(_glBindFragmentShaderATI);_glBindFragmentShaderATI
typedef void (APIENTRY *glDeleteFragmentShaderATIFunc)(GLuint id);
extern glDeleteFragmentShaderATIFunc _glDeleteFragmentShaderATI;
#define glDeleteFragmentShaderATI VE_ASSERT(_glDeleteFragmentShaderATI);_glDeleteFragmentShaderATI
typedef void (APIENTRY *glBeginFragmentShaderATIFunc)();
extern glBeginFragmentShaderATIFunc _glBeginFragmentShaderATI;
#define glBeginFragmentShaderATI VE_ASSERT(_glBeginFragmentShaderATI);_glBeginFragmentShaderATI
typedef void (APIENTRY *glEndFragmentShaderATIFunc)();
extern glEndFragmentShaderATIFunc _glEndFragmentShaderATI;
#define glEndFragmentShaderATI VE_ASSERT(_glEndFragmentShaderATI);_glEndFragmentShaderATI
typedef void (APIENTRY *glPassTexCoordATIFunc)(GLuint dst, GLuint coord, GLenum swizzle);
extern glPassTexCoordATIFunc _glPassTexCoordATI;
#define glPassTexCoordATI VE_ASSERT(_glPassTexCoordATI);_glPassTexCoordATI
typedef void (APIENTRY *glSampleMapATIFunc)(GLuint dst, GLuint interp, GLenum swizzle);
extern glSampleMapATIFunc _glSampleMapATI;
#define glSampleMapATI VE_ASSERT(_glSampleMapATI);_glSampleMapATI
typedef void (APIENTRY *glColorFragmentOp1ATIFunc)(GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);
extern glColorFragmentOp1ATIFunc _glColorFragmentOp1ATI;
#define glColorFragmentOp1ATI VE_ASSERT(_glColorFragmentOp1ATI);_glColorFragmentOp1ATI
typedef void (APIENTRY *glColorFragmentOp2ATIFunc)(GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);
extern glColorFragmentOp2ATIFunc _glColorFragmentOp2ATI;
#define glColorFragmentOp2ATI VE_ASSERT(_glColorFragmentOp2ATI);_glColorFragmentOp2ATI
typedef void (APIENTRY *glColorFragmentOp3ATIFunc)(GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);
extern glColorFragmentOp3ATIFunc _glColorFragmentOp3ATI;
#define glColorFragmentOp3ATI VE_ASSERT(_glColorFragmentOp3ATI);_glColorFragmentOp3ATI
typedef void (APIENTRY *glAlphaFragmentOp1ATIFunc)(GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);
extern glAlphaFragmentOp1ATIFunc _glAlphaFragmentOp1ATI;
#define glAlphaFragmentOp1ATI VE_ASSERT(_glAlphaFragmentOp1ATI);_glAlphaFragmentOp1ATI
typedef void (APIENTRY *glAlphaFragmentOp2ATIFunc)(GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);
extern glAlphaFragmentOp2ATIFunc _glAlphaFragmentOp2ATI;
#define glAlphaFragmentOp2ATI VE_ASSERT(_glAlphaFragmentOp2ATI);_glAlphaFragmentOp2ATI
typedef void (APIENTRY *glAlphaFragmentOp3ATIFunc)(GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);
extern glAlphaFragmentOp3ATIFunc _glAlphaFragmentOp3ATI;
#define glAlphaFragmentOp3ATI VE_ASSERT(_glAlphaFragmentOp3ATI);_glAlphaFragmentOp3ATI
typedef void (APIENTRY *glSetFragmentShaderConstantATIFunc)(GLuint dst, GLfloat* value);
extern glSetFragmentShaderConstantATIFunc _glSetFragmentShaderConstantATI;
#define glSetFragmentShaderConstantATI VE_ASSERT(_glSetFragmentShaderConstantATI);_glSetFragmentShaderConstantATI
typedef void (APIENTRY *glPNTrianglesiATIFunc)(GLenum pname, GLint param);
extern glPNTrianglesiATIFunc _glPNTrianglesiATI;
#define glPNTrianglesiATI VE_ASSERT(_glPNTrianglesiATI);_glPNTrianglesiATI
typedef void (APIENTRY *glPNTrianglesfATIFunc)(GLenum pname, GLfloat param);
extern glPNTrianglesfATIFunc _glPNTrianglesfATI;
#define glPNTrianglesfATI VE_ASSERT(_glPNTrianglesfATI);_glPNTrianglesfATI
typedef GLuint (APIENTRY *glNewObjectBufferATIFunc)(GLsizei size, GLvoid* pointer, GLenum usage);
extern glNewObjectBufferATIFunc _glNewObjectBufferATI;
#define glNewObjectBufferATI _glNewObjectBufferATI
typedef GLboolean (APIENTRY *glIsObjectBufferATIFunc)(GLuint buffer);
extern glIsObjectBufferATIFunc _glIsObjectBufferATI;
#define glIsObjectBufferATI _glIsObjectBufferATI
typedef void (APIENTRY *glUpdateObjectBufferATIFunc)(GLuint buffer, GLuint offset, GLsizei size, GLvoid* pointer, GLenum preserve);
extern glUpdateObjectBufferATIFunc _glUpdateObjectBufferATI;
#define glUpdateObjectBufferATI VE_ASSERT(_glUpdateObjectBufferATI);_glUpdateObjectBufferATI
typedef void (APIENTRY *glGetObjectBufferfvATIFunc)(GLuint buffer, GLenum pname, GLfloat* params);
extern glGetObjectBufferfvATIFunc _glGetObjectBufferfvATI;
#define glGetObjectBufferfvATI VE_ASSERT(_glGetObjectBufferfvATI);_glGetObjectBufferfvATI
typedef void (APIENTRY *glGetObjectBufferivATIFunc)(GLuint buffer, GLenum pname, GLint* params);
extern glGetObjectBufferivATIFunc _glGetObjectBufferivATI;
#define glGetObjectBufferivATI VE_ASSERT(_glGetObjectBufferivATI);_glGetObjectBufferivATI
typedef void (APIENTRY *glFreeObjectBufferATIFunc)(GLuint buffer);
extern glFreeObjectBufferATIFunc _glFreeObjectBufferATI;
#define glFreeObjectBufferATI VE_ASSERT(_glFreeObjectBufferATI);_glFreeObjectBufferATI
typedef void (APIENTRY *glArrayObjectATIFunc)(GLenum array, GLint size, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
extern glArrayObjectATIFunc _glArrayObjectATI;
#define glArrayObjectATI VE_ASSERT(_glArrayObjectATI);_glArrayObjectATI
typedef void (APIENTRY *glGetArrayObjectfvATIFunc)(GLenum array, GLenum pname, GLfloat* params);
extern glGetArrayObjectfvATIFunc _glGetArrayObjectfvATI;
#define glGetArrayObjectfvATI VE_ASSERT(_glGetArrayObjectfvATI);_glGetArrayObjectfvATI
typedef void (APIENTRY *glGetArrayObjectivATIFunc)(GLenum array, GLenum pname, GLint* params);
extern glGetArrayObjectivATIFunc _glGetArrayObjectivATI;
#define glGetArrayObjectivATI VE_ASSERT(_glGetArrayObjectivATI);_glGetArrayObjectivATI
typedef void (APIENTRY *glVariantArrayObjectATIFunc)(GLuint id, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
extern glVariantArrayObjectATIFunc _glVariantArrayObjectATI;
#define glVariantArrayObjectATI VE_ASSERT(_glVariantArrayObjectATI);_glVariantArrayObjectATI
typedef void (APIENTRY *glGetVariantArrayObjectfvATIFunc)(GLuint id, GLenum pname, GLfloat* params);
extern glGetVariantArrayObjectfvATIFunc _glGetVariantArrayObjectfvATI;
#define glGetVariantArrayObjectfvATI VE_ASSERT(_glGetVariantArrayObjectfvATI);_glGetVariantArrayObjectfvATI
typedef void (APIENTRY *glGetVariantArrayObjectivATIFunc)(GLuint id, GLenum pname, GLint* params);
extern glGetVariantArrayObjectivATIFunc _glGetVariantArrayObjectivATI;
#define glGetVariantArrayObjectivATI VE_ASSERT(_glGetVariantArrayObjectivATI);_glGetVariantArrayObjectivATI
typedef void (APIENTRY *glBeginVertexShaderEXTFunc)();
extern glBeginVertexShaderEXTFunc _glBeginVertexShaderEXT;
#define glBeginVertexShaderEXT VE_ASSERT(_glBeginVertexShaderEXT);_glBeginVertexShaderEXT
typedef void (APIENTRY *glEndVertexShaderEXTFunc)();
extern glEndVertexShaderEXTFunc _glEndVertexShaderEXT;
#define glEndVertexShaderEXT VE_ASSERT(_glEndVertexShaderEXT);_glEndVertexShaderEXT
typedef void (APIENTRY *glBindVertexShaderEXTFunc)(GLuint id);
extern glBindVertexShaderEXTFunc _glBindVertexShaderEXT;
#define glBindVertexShaderEXT VE_ASSERT(_glBindVertexShaderEXT);_glBindVertexShaderEXT
typedef GLuint (APIENTRY *glGenVertexShadersEXTFunc)(GLuint range);
extern glGenVertexShadersEXTFunc _glGenVertexShadersEXT;
#define glGenVertexShadersEXT _glGenVertexShadersEXT
typedef void (APIENTRY *glDeleteVertexShaderEXTFunc)(GLuint id);
extern glDeleteVertexShaderEXTFunc _glDeleteVertexShaderEXT;
#define glDeleteVertexShaderEXT VE_ASSERT(_glDeleteVertexShaderEXT);_glDeleteVertexShaderEXT
typedef void (APIENTRY *glShaderOp1EXTFunc)(GLenum op, GLuint res, GLuint arg1);
extern glShaderOp1EXTFunc _glShaderOp1EXT;
#define glShaderOp1EXT VE_ASSERT(_glShaderOp1EXT);_glShaderOp1EXT
typedef void (APIENTRY *glShaderOp2EXTFunc)(GLenum op, GLuint res, GLuint arg1, GLuint arg2);
extern glShaderOp2EXTFunc _glShaderOp2EXT;
#define glShaderOp2EXT VE_ASSERT(_glShaderOp2EXT);_glShaderOp2EXT
typedef void (APIENTRY *glShaderOp3EXTFunc)(GLenum op, GLuint res, GLuint arg1, GLuint arg2, GLuint arg3);
extern glShaderOp3EXTFunc _glShaderOp3EXT;
#define glShaderOp3EXT VE_ASSERT(_glShaderOp3EXT);_glShaderOp3EXT
typedef void (APIENTRY *glSwizzleEXTFunc)(GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW);
extern glSwizzleEXTFunc _glSwizzleEXT;
#define glSwizzleEXT VE_ASSERT(_glSwizzleEXT);_glSwizzleEXT
typedef void (APIENTRY *glWriteMaskEXTFunc)(GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW);
extern glWriteMaskEXTFunc _glWriteMaskEXT;
#define glWriteMaskEXT VE_ASSERT(_glWriteMaskEXT);_glWriteMaskEXT
typedef void (APIENTRY *glInsertComponentEXTFunc)(GLuint res, GLuint src, GLuint num);
extern glInsertComponentEXTFunc _glInsertComponentEXT;
#define glInsertComponentEXT VE_ASSERT(_glInsertComponentEXT);_glInsertComponentEXT
typedef void (APIENTRY *glExtractComponentEXTFunc)(GLuint res, GLuint src, GLuint num);
extern glExtractComponentEXTFunc _glExtractComponentEXT;
#define glExtractComponentEXT VE_ASSERT(_glExtractComponentEXT);_glExtractComponentEXT
typedef GLuint (APIENTRY *glGenSymbolsEXTFunc)(GLenum datatype, GLenum storagetype, GLenum range, GLuint components);
extern glGenSymbolsEXTFunc _glGenSymbolsEXT;
#define glGenSymbolsEXT _glGenSymbolsEXT
typedef void (APIENTRY *glSetInvariantEXTFunc)(GLuint id, GLenum type, GLvoid* addr);
extern glSetInvariantEXTFunc _glSetInvariantEXT;
#define glSetInvariantEXT VE_ASSERT(_glSetInvariantEXT);_glSetInvariantEXT
typedef void (APIENTRY *glSetLocalConstantEXTFunc)(GLuint id, GLenum type, GLvoid* addr);
extern glSetLocalConstantEXTFunc _glSetLocalConstantEXT;
#define glSetLocalConstantEXT VE_ASSERT(_glSetLocalConstantEXT);_glSetLocalConstantEXT
typedef void (APIENTRY *glVariantbvEXTFunc)(GLuint id, GLbyte* addr);
extern glVariantbvEXTFunc _glVariantbvEXT;
#define glVariantbvEXT VE_ASSERT(_glVariantbvEXT);_glVariantbvEXT
typedef void (APIENTRY *glVariantsvEXTFunc)(GLuint id, GLshort* addr);
extern glVariantsvEXTFunc _glVariantsvEXT;
#define glVariantsvEXT VE_ASSERT(_glVariantsvEXT);_glVariantsvEXT
typedef void (APIENTRY *glVariantivEXTFunc)(GLuint id, GLint* addr);
extern glVariantivEXTFunc _glVariantivEXT;
#define glVariantivEXT VE_ASSERT(_glVariantivEXT);_glVariantivEXT
typedef void (APIENTRY *glVariantfvEXTFunc)(GLuint id, GLfloat* addr);
extern glVariantfvEXTFunc _glVariantfvEXT;
#define glVariantfvEXT VE_ASSERT(_glVariantfvEXT);_glVariantfvEXT
typedef void (APIENTRY *glVariantdvEXTFunc)(GLuint id, GLdouble* addr);
extern glVariantdvEXTFunc _glVariantdvEXT;
#define glVariantdvEXT VE_ASSERT(_glVariantdvEXT);_glVariantdvEXT
typedef void (APIENTRY *glVariantubvEXTFunc)(GLuint id, GLubyte* addr);
extern glVariantubvEXTFunc _glVariantubvEXT;
#define glVariantubvEXT VE_ASSERT(_glVariantubvEXT);_glVariantubvEXT
typedef void (APIENTRY *glVariantusvEXTFunc)(GLuint id, GLushort* addr);
extern glVariantusvEXTFunc _glVariantusvEXT;
#define glVariantusvEXT VE_ASSERT(_glVariantusvEXT);_glVariantusvEXT
typedef void (APIENTRY *glVariantuivEXTFunc)(GLuint id, GLuint* addr);
extern glVariantuivEXTFunc _glVariantuivEXT;
#define glVariantuivEXT VE_ASSERT(_glVariantuivEXT);_glVariantuivEXT
typedef void (APIENTRY *glVariantPointerEXTFunc)(GLuint id, GLenum type, GLuint stride, GLvoid* addr);
extern glVariantPointerEXTFunc _glVariantPointerEXT;
#define glVariantPointerEXT VE_ASSERT(_glVariantPointerEXT);_glVariantPointerEXT
typedef void (APIENTRY *glEnableVariantClientStateEXTFunc)(GLuint id);
extern glEnableVariantClientStateEXTFunc _glEnableVariantClientStateEXT;
#define glEnableVariantClientStateEXT VE_ASSERT(_glEnableVariantClientStateEXT);_glEnableVariantClientStateEXT
typedef void (APIENTRY *glDisableVariantClientStateEXTFunc)(GLuint id);
extern glDisableVariantClientStateEXTFunc _glDisableVariantClientStateEXT;
#define glDisableVariantClientStateEXT VE_ASSERT(_glDisableVariantClientStateEXT);_glDisableVariantClientStateEXT
typedef GLuint (APIENTRY *glBindLightParameterEXTFunc)(GLenum light, GLenum value);
extern glBindLightParameterEXTFunc _glBindLightParameterEXT;
#define glBindLightParameterEXT _glBindLightParameterEXT
typedef GLuint (APIENTRY *glBindMaterialParameterEXTFunc)(GLenum face, GLenum value);
extern glBindMaterialParameterEXTFunc _glBindMaterialParameterEXT;
#define glBindMaterialParameterEXT _glBindMaterialParameterEXT
typedef GLuint (APIENTRY *glBindTexGenParameterEXTFunc)(GLenum unit, GLenum coord, GLenum value);
extern glBindTexGenParameterEXTFunc _glBindTexGenParameterEXT;
#define glBindTexGenParameterEXT _glBindTexGenParameterEXT
typedef GLuint (APIENTRY *glBindTextureUnitParameterEXTFunc)(GLenum unit, GLenum value);
extern glBindTextureUnitParameterEXTFunc _glBindTextureUnitParameterEXT;
#define glBindTextureUnitParameterEXT _glBindTextureUnitParameterEXT
typedef GLuint (APIENTRY *glBindParameterEXTFunc)(GLenum value);
extern glBindParameterEXTFunc _glBindParameterEXT;
#define glBindParameterEXT _glBindParameterEXT
typedef GLboolean (APIENTRY *glIsVariantEnabledEXTFunc)(GLuint id, GLenum cap);
extern glIsVariantEnabledEXTFunc _glIsVariantEnabledEXT;
#define glIsVariantEnabledEXT _glIsVariantEnabledEXT
typedef void (APIENTRY *glGetVariantBooleanvEXTFunc)(GLuint id, GLenum value, GLboolean* data);
extern glGetVariantBooleanvEXTFunc _glGetVariantBooleanvEXT;
#define glGetVariantBooleanvEXT VE_ASSERT(_glGetVariantBooleanvEXT);_glGetVariantBooleanvEXT
typedef void (APIENTRY *glGetVariantIntegervEXTFunc)(GLuint id, GLenum value, GLint* data);
extern glGetVariantIntegervEXTFunc _glGetVariantIntegervEXT;
#define glGetVariantIntegervEXT VE_ASSERT(_glGetVariantIntegervEXT);_glGetVariantIntegervEXT
typedef void (APIENTRY *glGetVariantFloatvEXTFunc)(GLuint id, GLenum value, GLfloat* data);
extern glGetVariantFloatvEXTFunc _glGetVariantFloatvEXT;
#define glGetVariantFloatvEXT VE_ASSERT(_glGetVariantFloatvEXT);_glGetVariantFloatvEXT
typedef void (APIENTRY *glGetVariantPointervEXTFunc)(GLuint id, GLenum value, GLvoid** data);
extern glGetVariantPointervEXTFunc _glGetVariantPointervEXT;
#define glGetVariantPointervEXT VE_ASSERT(_glGetVariantPointervEXT);_glGetVariantPointervEXT
typedef void (APIENTRY *glGetInvariantBooleanvEXTFunc)(GLuint id, GLenum value, GLboolean* data);
extern glGetInvariantBooleanvEXTFunc _glGetInvariantBooleanvEXT;
#define glGetInvariantBooleanvEXT VE_ASSERT(_glGetInvariantBooleanvEXT);_glGetInvariantBooleanvEXT
typedef void (APIENTRY *glGetInvariantIntegervEXTFunc)(GLuint id, GLenum value, GLint* data);
extern glGetInvariantIntegervEXTFunc _glGetInvariantIntegervEXT;
#define glGetInvariantIntegervEXT VE_ASSERT(_glGetInvariantIntegervEXT);_glGetInvariantIntegervEXT
typedef void (APIENTRY *glGetInvariantFloatvEXTFunc)(GLuint id, GLenum value, GLfloat* data);
extern glGetInvariantFloatvEXTFunc _glGetInvariantFloatvEXT;
#define glGetInvariantFloatvEXT VE_ASSERT(_glGetInvariantFloatvEXT);_glGetInvariantFloatvEXT
typedef void (APIENTRY *glGetLocalConstantBooleanvEXTFunc)(GLuint id, GLenum value, GLboolean* data);
extern glGetLocalConstantBooleanvEXTFunc _glGetLocalConstantBooleanvEXT;
#define glGetLocalConstantBooleanvEXT VE_ASSERT(_glGetLocalConstantBooleanvEXT);_glGetLocalConstantBooleanvEXT
typedef void (APIENTRY *glGetLocalConstantIntegervEXTFunc)(GLuint id, GLenum value, GLint* data);
extern glGetLocalConstantIntegervEXTFunc _glGetLocalConstantIntegervEXT;
#define glGetLocalConstantIntegervEXT VE_ASSERT(_glGetLocalConstantIntegervEXT);_glGetLocalConstantIntegervEXT
typedef void (APIENTRY *glGetLocalConstantFloatvEXTFunc)(GLuint id, GLenum value, GLfloat* data);
extern glGetLocalConstantFloatvEXTFunc _glGetLocalConstantFloatvEXT;
#define glGetLocalConstantFloatvEXT VE_ASSERT(_glGetLocalConstantFloatvEXT);_glGetLocalConstantFloatvEXT
typedef void (APIENTRY *glVertexStream1sATIFunc)(GLenum stream, GLshort x);
extern glVertexStream1sATIFunc _glVertexStream1sATI;
#define glVertexStream1sATI VE_ASSERT(_glVertexStream1sATI);_glVertexStream1sATI
typedef void (APIENTRY *glVertexStream1svATIFunc)(GLenum stream, GLshort* coords);
extern glVertexStream1svATIFunc _glVertexStream1svATI;
#define glVertexStream1svATI VE_ASSERT(_glVertexStream1svATI);_glVertexStream1svATI
typedef void (APIENTRY *glVertexStream1iATIFunc)(GLenum stream, GLint x);
extern glVertexStream1iATIFunc _glVertexStream1iATI;
#define glVertexStream1iATI VE_ASSERT(_glVertexStream1iATI);_glVertexStream1iATI
typedef void (APIENTRY *glVertexStream1ivATIFunc)(GLenum stream, GLint* coords);
extern glVertexStream1ivATIFunc _glVertexStream1ivATI;
#define glVertexStream1ivATI VE_ASSERT(_glVertexStream1ivATI);_glVertexStream1ivATI
typedef void (APIENTRY *glVertexStream1fATIFunc)(GLenum stream, GLfloat x);
extern glVertexStream1fATIFunc _glVertexStream1fATI;
#define glVertexStream1fATI VE_ASSERT(_glVertexStream1fATI);_glVertexStream1fATI
typedef void (APIENTRY *glVertexStream1fvATIFunc)(GLenum stream, GLfloat* coords);
extern glVertexStream1fvATIFunc _glVertexStream1fvATI;
#define glVertexStream1fvATI VE_ASSERT(_glVertexStream1fvATI);_glVertexStream1fvATI
typedef void (APIENTRY *glVertexStream1dATIFunc)(GLenum stream, GLdouble x);
extern glVertexStream1dATIFunc _glVertexStream1dATI;
#define glVertexStream1dATI VE_ASSERT(_glVertexStream1dATI);_glVertexStream1dATI
typedef void (APIENTRY *glVertexStream1dvATIFunc)(GLenum stream, GLdouble* coords);
extern glVertexStream1dvATIFunc _glVertexStream1dvATI;
#define glVertexStream1dvATI VE_ASSERT(_glVertexStream1dvATI);_glVertexStream1dvATI
typedef void (APIENTRY *glVertexStream2sATIFunc)(GLenum stream, GLshort x, GLshort y);
extern glVertexStream2sATIFunc _glVertexStream2sATI;
#define glVertexStream2sATI VE_ASSERT(_glVertexStream2sATI);_glVertexStream2sATI
typedef void (APIENTRY *glVertexStream2svATIFunc)(GLenum stream, GLshort* coords);
extern glVertexStream2svATIFunc _glVertexStream2svATI;
#define glVertexStream2svATI VE_ASSERT(_glVertexStream2svATI);_glVertexStream2svATI
typedef void (APIENTRY *glVertexStream2iATIFunc)(GLenum stream, GLint x, GLint y);
extern glVertexStream2iATIFunc _glVertexStream2iATI;
#define glVertexStream2iATI VE_ASSERT(_glVertexStream2iATI);_glVertexStream2iATI
typedef void (APIENTRY *glVertexStream2ivATIFunc)(GLenum stream, GLint* coords);
extern glVertexStream2ivATIFunc _glVertexStream2ivATI;
#define glVertexStream2ivATI VE_ASSERT(_glVertexStream2ivATI);_glVertexStream2ivATI
typedef void (APIENTRY *glVertexStream2fATIFunc)(GLenum stream, GLfloat x, GLfloat y);
extern glVertexStream2fATIFunc _glVertexStream2fATI;
#define glVertexStream2fATI VE_ASSERT(_glVertexStream2fATI);_glVertexStream2fATI
typedef void (APIENTRY *glVertexStream2fvATIFunc)(GLenum stream, GLfloat* coords);
extern glVertexStream2fvATIFunc _glVertexStream2fvATI;
#define glVertexStream2fvATI VE_ASSERT(_glVertexStream2fvATI);_glVertexStream2fvATI
typedef void (APIENTRY *glVertexStream2dATIFunc)(GLenum stream, GLdouble x, GLdouble y);
extern glVertexStream2dATIFunc _glVertexStream2dATI;
#define glVertexStream2dATI VE_ASSERT(_glVertexStream2dATI);_glVertexStream2dATI
typedef void (APIENTRY *glVertexStream2dvATIFunc)(GLenum stream, GLdouble* coords);
extern glVertexStream2dvATIFunc _glVertexStream2dvATI;
#define glVertexStream2dvATI VE_ASSERT(_glVertexStream2dvATI);_glVertexStream2dvATI
typedef void (APIENTRY *glVertexStream3sATIFunc)(GLenum stream, GLshort x, GLshort y, GLshort z);
extern glVertexStream3sATIFunc _glVertexStream3sATI;
#define glVertexStream3sATI VE_ASSERT(_glVertexStream3sATI);_glVertexStream3sATI
typedef void (APIENTRY *glVertexStream3svATIFunc)(GLenum stream, GLshort* coords);
extern glVertexStream3svATIFunc _glVertexStream3svATI;
#define glVertexStream3svATI VE_ASSERT(_glVertexStream3svATI);_glVertexStream3svATI
typedef void (APIENTRY *glVertexStream3iATIFunc)(GLenum stream, GLint x, GLint y, GLint z);
extern glVertexStream3iATIFunc _glVertexStream3iATI;
#define glVertexStream3iATI VE_ASSERT(_glVertexStream3iATI);_glVertexStream3iATI
typedef void (APIENTRY *glVertexStream3ivATIFunc)(GLenum stream, GLint* coords);
extern glVertexStream3ivATIFunc _glVertexStream3ivATI;
#define glVertexStream3ivATI VE_ASSERT(_glVertexStream3ivATI);_glVertexStream3ivATI
typedef void (APIENTRY *glVertexStream3fATIFunc)(GLenum stream, GLfloat x, GLfloat y, GLfloat z);
extern glVertexStream3fATIFunc _glVertexStream3fATI;
#define glVertexStream3fATI VE_ASSERT(_glVertexStream3fATI);_glVertexStream3fATI
typedef void (APIENTRY *glVertexStream3fvATIFunc)(GLenum stream, GLfloat* coords);
extern glVertexStream3fvATIFunc _glVertexStream3fvATI;
#define glVertexStream3fvATI VE_ASSERT(_glVertexStream3fvATI);_glVertexStream3fvATI
typedef void (APIENTRY *glVertexStream3dATIFunc)(GLenum stream, GLdouble x, GLdouble y, GLdouble z);
extern glVertexStream3dATIFunc _glVertexStream3dATI;
#define glVertexStream3dATI VE_ASSERT(_glVertexStream3dATI);_glVertexStream3dATI
typedef void (APIENTRY *glVertexStream3dvATIFunc)(GLenum stream, GLdouble* coords);
extern glVertexStream3dvATIFunc _glVertexStream3dvATI;
#define glVertexStream3dvATI VE_ASSERT(_glVertexStream3dvATI);_glVertexStream3dvATI
typedef void (APIENTRY *glVertexStream4sATIFunc)(GLenum stream, GLshort x, GLshort y, GLshort z, GLshort w);
extern glVertexStream4sATIFunc _glVertexStream4sATI;
#define glVertexStream4sATI VE_ASSERT(_glVertexStream4sATI);_glVertexStream4sATI
typedef void (APIENTRY *glVertexStream4svATIFunc)(GLenum stream, GLshort* coords);
extern glVertexStream4svATIFunc _glVertexStream4svATI;
#define glVertexStream4svATI VE_ASSERT(_glVertexStream4svATI);_glVertexStream4svATI
typedef void (APIENTRY *glVertexStream4iATIFunc)(GLenum stream, GLint x, GLint y, GLint z, GLint w);
extern glVertexStream4iATIFunc _glVertexStream4iATI;
#define glVertexStream4iATI VE_ASSERT(_glVertexStream4iATI);_glVertexStream4iATI
typedef void (APIENTRY *glVertexStream4ivATIFunc)(GLenum stream, GLint* coords);
extern glVertexStream4ivATIFunc _glVertexStream4ivATI;
#define glVertexStream4ivATI VE_ASSERT(_glVertexStream4ivATI);_glVertexStream4ivATI
typedef void (APIENTRY *glVertexStream4fATIFunc)(GLenum stream, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
extern glVertexStream4fATIFunc _glVertexStream4fATI;
#define glVertexStream4fATI VE_ASSERT(_glVertexStream4fATI);_glVertexStream4fATI
typedef void (APIENTRY *glVertexStream4fvATIFunc)(GLenum stream, GLfloat* coords);
extern glVertexStream4fvATIFunc _glVertexStream4fvATI;
#define glVertexStream4fvATI VE_ASSERT(_glVertexStream4fvATI);_glVertexStream4fvATI
typedef void (APIENTRY *glVertexStream4dATIFunc)(GLenum stream, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
extern glVertexStream4dATIFunc _glVertexStream4dATI;
#define glVertexStream4dATI VE_ASSERT(_glVertexStream4dATI);_glVertexStream4dATI
typedef void (APIENTRY *glVertexStream4dvATIFunc)(GLenum stream, GLdouble* coords);
extern glVertexStream4dvATIFunc _glVertexStream4dvATI;
#define glVertexStream4dvATI VE_ASSERT(_glVertexStream4dvATI);_glVertexStream4dvATI
typedef void (APIENTRY *glNormalStream3bATIFunc)(GLenum stream, GLbyte nx, GLbyte ny, GLbyte nz);
extern glNormalStream3bATIFunc _glNormalStream3bATI;
#define glNormalStream3bATI VE_ASSERT(_glNormalStream3bATI);_glNormalStream3bATI
typedef void (APIENTRY *glNormalStream3bvATIFunc)(GLenum stream, GLbyte* coords);
extern glNormalStream3bvATIFunc _glNormalStream3bvATI;
#define glNormalStream3bvATI VE_ASSERT(_glNormalStream3bvATI);_glNormalStream3bvATI
typedef void (APIENTRY *glNormalStream3sATIFunc)(GLenum stream, GLshort nx, GLshort ny, GLshort nz);
extern glNormalStream3sATIFunc _glNormalStream3sATI;
#define glNormalStream3sATI VE_ASSERT(_glNormalStream3sATI);_glNormalStream3sATI
typedef void (APIENTRY *glNormalStream3svATIFunc)(GLenum stream, GLshort* coords);
extern glNormalStream3svATIFunc _glNormalStream3svATI;
#define glNormalStream3svATI VE_ASSERT(_glNormalStream3svATI);_glNormalStream3svATI
typedef void (APIENTRY *glNormalStream3iATIFunc)(GLenum stream, GLint nx, GLint ny, GLint nz);
extern glNormalStream3iATIFunc _glNormalStream3iATI;
#define glNormalStream3iATI VE_ASSERT(_glNormalStream3iATI);_glNormalStream3iATI
typedef void (APIENTRY *glNormalStream3ivATIFunc)(GLenum stream, GLint* coords);
extern glNormalStream3ivATIFunc _glNormalStream3ivATI;
#define glNormalStream3ivATI VE_ASSERT(_glNormalStream3ivATI);_glNormalStream3ivATI
typedef void (APIENTRY *glNormalStream3fATIFunc)(GLenum stream, GLfloat nx, GLfloat ny, GLfloat nz);
extern glNormalStream3fATIFunc _glNormalStream3fATI;
#define glNormalStream3fATI VE_ASSERT(_glNormalStream3fATI);_glNormalStream3fATI
typedef void (APIENTRY *glNormalStream3fvATIFunc)(GLenum stream, GLfloat* coords);
extern glNormalStream3fvATIFunc _glNormalStream3fvATI;
#define glNormalStream3fvATI VE_ASSERT(_glNormalStream3fvATI);_glNormalStream3fvATI
typedef void (APIENTRY *glNormalStream3dATIFunc)(GLenum stream, GLdouble nx, GLdouble ny, GLdouble nz);
extern glNormalStream3dATIFunc _glNormalStream3dATI;
#define glNormalStream3dATI VE_ASSERT(_glNormalStream3dATI);_glNormalStream3dATI
typedef void (APIENTRY *glNormalStream3dvATIFunc)(GLenum stream, GLdouble* coords);
extern glNormalStream3dvATIFunc _glNormalStream3dvATI;
#define glNormalStream3dvATI VE_ASSERT(_glNormalStream3dvATI);_glNormalStream3dvATI
typedef void (APIENTRY *glClientActiveVertexStreamATIFunc)(GLenum stream);
extern glClientActiveVertexStreamATIFunc _glClientActiveVertexStreamATI;
#define glClientActiveVertexStreamATI VE_ASSERT(_glClientActiveVertexStreamATI);_glClientActiveVertexStreamATI
typedef void (APIENTRY *glVertexBlendEnviATIFunc)(GLenum pname, GLint param);
extern glVertexBlendEnviATIFunc _glVertexBlendEnviATI;
#define glVertexBlendEnviATI VE_ASSERT(_glVertexBlendEnviATI);_glVertexBlendEnviATI
typedef void (APIENTRY *glVertexBlendEnvfATIFunc)(GLenum pname, GLfloat param);
extern glVertexBlendEnvfATIFunc _glVertexBlendEnvfATI;
#define glVertexBlendEnvfATI VE_ASSERT(_glVertexBlendEnvfATI);_glVertexBlendEnvfATI
typedef void (APIENTRY *glElementPointerATIFunc)(GLenum type, GLvoid* pointer);
extern glElementPointerATIFunc _glElementPointerATI;
#define glElementPointerATI VE_ASSERT(_glElementPointerATI);_glElementPointerATI
typedef void (APIENTRY *glDrawElementArrayATIFunc)(GLenum mode, GLsizei count);
extern glDrawElementArrayATIFunc _glDrawElementArrayATI;
#define glDrawElementArrayATI VE_ASSERT(_glDrawElementArrayATI);_glDrawElementArrayATI
typedef void (APIENTRY *glDrawRangeElementArrayATIFunc)(GLenum mode, GLuint start, GLuint end, GLsizei count);
extern glDrawRangeElementArrayATIFunc _glDrawRangeElementArrayATI;
#define glDrawRangeElementArrayATI VE_ASSERT(_glDrawRangeElementArrayATI);_glDrawRangeElementArrayATI
typedef void (APIENTRY *glDrawMeshArraysSUNFunc)(GLenum mode, GLint first, GLsizei count, GLsizei width);
extern glDrawMeshArraysSUNFunc _glDrawMeshArraysSUN;
#define glDrawMeshArraysSUN VE_ASSERT(_glDrawMeshArraysSUN);_glDrawMeshArraysSUN
typedef void (APIENTRY *glGenOcclusionQueriesNVFunc)(GLsizei n, GLuint* ids);
extern glGenOcclusionQueriesNVFunc _glGenOcclusionQueriesNV;
#define glGenOcclusionQueriesNV VE_ASSERT(_glGenOcclusionQueriesNV);_glGenOcclusionQueriesNV
typedef void (APIENTRY *glDeleteOcclusionQueriesNVFunc)(GLsizei n, GLuint* ids);
extern glDeleteOcclusionQueriesNVFunc _glDeleteOcclusionQueriesNV;
#define glDeleteOcclusionQueriesNV VE_ASSERT(_glDeleteOcclusionQueriesNV);_glDeleteOcclusionQueriesNV
typedef GLboolean (APIENTRY *glIsOcclusionQueryNVFunc)(GLuint id);
extern glIsOcclusionQueryNVFunc _glIsOcclusionQueryNV;
#define glIsOcclusionQueryNV _glIsOcclusionQueryNV
typedef void (APIENTRY *glBeginOcclusionQueryNVFunc)(GLuint id);
extern glBeginOcclusionQueryNVFunc _glBeginOcclusionQueryNV;
#define glBeginOcclusionQueryNV VE_ASSERT(_glBeginOcclusionQueryNV);_glBeginOcclusionQueryNV
typedef void (APIENTRY *glEndOcclusionQueryNVFunc)();
extern glEndOcclusionQueryNVFunc _glEndOcclusionQueryNV;
#define glEndOcclusionQueryNV VE_ASSERT(_glEndOcclusionQueryNV);_glEndOcclusionQueryNV
typedef void (APIENTRY *glGetOcclusionQueryivNVFunc)(GLuint id, GLenum pname, GLint* params);
extern glGetOcclusionQueryivNVFunc _glGetOcclusionQueryivNV;
#define glGetOcclusionQueryivNV VE_ASSERT(_glGetOcclusionQueryivNV);_glGetOcclusionQueryivNV
typedef void (APIENTRY *glGetOcclusionQueryuivNVFunc)(GLuint id, GLenum pname, GLuint* params);
extern glGetOcclusionQueryuivNVFunc _glGetOcclusionQueryuivNV;
#define glGetOcclusionQueryuivNV VE_ASSERT(_glGetOcclusionQueryuivNV);_glGetOcclusionQueryuivNV
typedef void (APIENTRY *glPointParameteriNVFunc)(GLenum pname, GLint param);
extern glPointParameteriNVFunc _glPointParameteriNV;
#define glPointParameteriNV VE_ASSERT(_glPointParameteriNV);_glPointParameteriNV
typedef void (APIENTRY *glPointParameterivNVFunc)(GLenum pname, GLint* params);
extern glPointParameterivNVFunc _glPointParameterivNV;
#define glPointParameterivNV VE_ASSERT(_glPointParameterivNV);_glPointParameterivNV
typedef void (APIENTRY *glActiveStencilFaceEXTFunc)(GLenum face);
extern glActiveStencilFaceEXTFunc _glActiveStencilFaceEXT;
#define glActiveStencilFaceEXT VE_ASSERT(_glActiveStencilFaceEXT);_glActiveStencilFaceEXT
typedef void (APIENTRY *glElementPointerAPPLEFunc)(GLenum type, GLvoid* pointer);
extern glElementPointerAPPLEFunc _glElementPointerAPPLE;
#define glElementPointerAPPLE VE_ASSERT(_glElementPointerAPPLE);_glElementPointerAPPLE
typedef void (APIENTRY *glDrawElementArrayAPPLEFunc)(GLenum mode, GLint first, GLsizei count);
extern glDrawElementArrayAPPLEFunc _glDrawElementArrayAPPLE;
#define glDrawElementArrayAPPLE VE_ASSERT(_glDrawElementArrayAPPLE);_glDrawElementArrayAPPLE
typedef void (APIENTRY *glDrawRangeElementArrayAPPLEFunc)(GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count);
extern glDrawRangeElementArrayAPPLEFunc _glDrawRangeElementArrayAPPLE;
#define glDrawRangeElementArrayAPPLE VE_ASSERT(_glDrawRangeElementArrayAPPLE);_glDrawRangeElementArrayAPPLE
typedef void (APIENTRY *glMultiDrawElementArrayAPPLEFunc)(GLenum mode, GLint* first, GLsizei* count, GLsizei primcount);
extern glMultiDrawElementArrayAPPLEFunc _glMultiDrawElementArrayAPPLE;
#define glMultiDrawElementArrayAPPLE VE_ASSERT(_glMultiDrawElementArrayAPPLE);_glMultiDrawElementArrayAPPLE
typedef void (APIENTRY *glMultiDrawRangeElementArrayAPPLEFunc)(GLenum mode, GLuint start, GLuint end, GLint* first, GLsizei* count, GLsizei primcount);
extern glMultiDrawRangeElementArrayAPPLEFunc _glMultiDrawRangeElementArrayAPPLE;
#define glMultiDrawRangeElementArrayAPPLE VE_ASSERT(_glMultiDrawRangeElementArrayAPPLE);_glMultiDrawRangeElementArrayAPPLE
typedef void (APIENTRY *glGenFencesAPPLEFunc)(GLsizei n, GLuint* fences);
extern glGenFencesAPPLEFunc _glGenFencesAPPLE;
#define glGenFencesAPPLE VE_ASSERT(_glGenFencesAPPLE);_glGenFencesAPPLE
typedef void (APIENTRY *glDeleteFencesAPPLEFunc)(GLsizei n, GLuint* fences);
extern glDeleteFencesAPPLEFunc _glDeleteFencesAPPLE;
#define glDeleteFencesAPPLE VE_ASSERT(_glDeleteFencesAPPLE);_glDeleteFencesAPPLE
typedef void (APIENTRY *glSetFenceAPPLEFunc)(GLuint fence);
extern glSetFenceAPPLEFunc _glSetFenceAPPLE;
#define glSetFenceAPPLE VE_ASSERT(_glSetFenceAPPLE);_glSetFenceAPPLE
typedef GLboolean (APIENTRY *glIsFenceAPPLEFunc)(GLuint fence);
extern glIsFenceAPPLEFunc _glIsFenceAPPLE;
#define glIsFenceAPPLE _glIsFenceAPPLE
typedef GLboolean (APIENTRY *glTestFenceAPPLEFunc)(GLuint fence);
extern glTestFenceAPPLEFunc _glTestFenceAPPLE;
#define glTestFenceAPPLE _glTestFenceAPPLE
typedef void (APIENTRY *glFinishFenceAPPLEFunc)(GLuint fence);
extern glFinishFenceAPPLEFunc _glFinishFenceAPPLE;
#define glFinishFenceAPPLE VE_ASSERT(_glFinishFenceAPPLE);_glFinishFenceAPPLE
typedef GLboolean (APIENTRY *glTestObjectAPPLEFunc)(GLenum object, GLuint name);
extern glTestObjectAPPLEFunc _glTestObjectAPPLE;
#define glTestObjectAPPLE _glTestObjectAPPLE
typedef void (APIENTRY *glFinishObjectAPPLEFunc)(GLenum object, GLint name);
extern glFinishObjectAPPLEFunc _glFinishObjectAPPLE;
#define glFinishObjectAPPLE VE_ASSERT(_glFinishObjectAPPLE);_glFinishObjectAPPLE
typedef void (APIENTRY *glBindVertexArrayAPPLEFunc)(GLuint array);
extern glBindVertexArrayAPPLEFunc _glBindVertexArrayAPPLE;
#define glBindVertexArrayAPPLE VE_ASSERT(_glBindVertexArrayAPPLE);_glBindVertexArrayAPPLE
typedef void (APIENTRY *glDeleteVertexArraysAPPLEFunc)(GLsizei n, GLuint* arrays);
extern glDeleteVertexArraysAPPLEFunc _glDeleteVertexArraysAPPLE;
#define glDeleteVertexArraysAPPLE VE_ASSERT(_glDeleteVertexArraysAPPLE);_glDeleteVertexArraysAPPLE
typedef void (APIENTRY *glGenVertexArraysAPPLEFunc)(GLsizei n, GLuint* arrays);
extern glGenVertexArraysAPPLEFunc _glGenVertexArraysAPPLE;
#define glGenVertexArraysAPPLE VE_ASSERT(_glGenVertexArraysAPPLE);_glGenVertexArraysAPPLE
typedef GLboolean (APIENTRY *glIsVertexArrayAPPLEFunc)(GLuint array);
extern glIsVertexArrayAPPLEFunc _glIsVertexArrayAPPLE;
#define glIsVertexArrayAPPLE _glIsVertexArrayAPPLE
typedef void (APIENTRY *glVertexArrayRangeAPPLEFunc)(GLsizei length, GLvoid* pointer);
extern glVertexArrayRangeAPPLEFunc _glVertexArrayRangeAPPLE;
#define glVertexArrayRangeAPPLE VE_ASSERT(_glVertexArrayRangeAPPLE);_glVertexArrayRangeAPPLE
typedef void (APIENTRY *glFlushVertexArrayRangeAPPLEFunc)(GLsizei length, GLvoid* pointer);
extern glFlushVertexArrayRangeAPPLEFunc _glFlushVertexArrayRangeAPPLE;
#define glFlushVertexArrayRangeAPPLE VE_ASSERT(_glFlushVertexArrayRangeAPPLE);_glFlushVertexArrayRangeAPPLE
typedef void (APIENTRY *glVertexArrayParameteriAPPLEFunc)(GLenum pname, GLint param);
extern glVertexArrayParameteriAPPLEFunc _glVertexArrayParameteriAPPLE;
#define glVertexArrayParameteriAPPLE VE_ASSERT(_glVertexArrayParameteriAPPLE);_glVertexArrayParameteriAPPLE
typedef void (APIENTRY *glDrawBuffersATIFunc)(GLsizei n, GLenum* bufs);
extern glDrawBuffersATIFunc _glDrawBuffersATI;
#define glDrawBuffersATI VE_ASSERT(_glDrawBuffersATI);_glDrawBuffersATI
/* This is really a WGL extension, but defines some associated GL enums.
* ATI does not export "GL_ATI_pixel_format_float" in the GL_EXTENSIONS string.
*/
/* Some NV_fragment_program entry points are shared with ARB_vertex_program. */
typedef void (APIENTRY *glProgramNamedParameter4fNVFunc)(GLuint id, GLsizei len, GLubyte* name, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
extern glProgramNamedParameter4fNVFunc _glProgramNamedParameter4fNV;
#define glProgramNamedParameter4fNV VE_ASSERT(_glProgramNamedParameter4fNV);_glProgramNamedParameter4fNV
typedef void (APIENTRY *glProgramNamedParameter4dNVFunc)(GLuint id, GLsizei len, GLubyte* name, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
extern glProgramNamedParameter4dNVFunc _glProgramNamedParameter4dNV;
#define glProgramNamedParameter4dNV VE_ASSERT(_glProgramNamedParameter4dNV);_glProgramNamedParameter4dNV
typedef void (APIENTRY *glProgramNamedParameter4fvNVFunc)(GLuint id, GLsizei len, GLubyte* name, GLfloat* v);
extern glProgramNamedParameter4fvNVFunc _glProgramNamedParameter4fvNV;
#define glProgramNamedParameter4fvNV VE_ASSERT(_glProgramNamedParameter4fvNV);_glProgramNamedParameter4fvNV
typedef void (APIENTRY *glProgramNamedParameter4dvNVFunc)(GLuint id, GLsizei len, GLubyte* name, GLdouble* v);
extern glProgramNamedParameter4dvNVFunc _glProgramNamedParameter4dvNV;
#define glProgramNamedParameter4dvNV VE_ASSERT(_glProgramNamedParameter4dvNV);_glProgramNamedParameter4dvNV
typedef void (APIENTRY *glGetProgramNamedParameterfvNVFunc)(GLuint id, GLsizei len, GLubyte* name, GLfloat* params);
extern glGetProgramNamedParameterfvNVFunc _glGetProgramNamedParameterfvNV;
#define glGetProgramNamedParameterfvNV VE_ASSERT(_glGetProgramNamedParameterfvNV);_glGetProgramNamedParameterfvNV
typedef void (APIENTRY *glGetProgramNamedParameterdvNVFunc)(GLuint id, GLsizei len, GLubyte* name, GLdouble* params);
extern glGetProgramNamedParameterdvNVFunc _glGetProgramNamedParameterdvNV;
#define glGetProgramNamedParameterdvNV VE_ASSERT(_glGetProgramNamedParameterdvNV);_glGetProgramNamedParameterdvNV
typedef void (APIENTRY *glVertex2hNVFunc)(GLhalfNV x, GLhalfNV y);
extern glVertex2hNVFunc _glVertex2hNV;
#define glVertex2hNV VE_ASSERT(_glVertex2hNV);_glVertex2hNV
typedef void (APIENTRY *glVertex2hvNVFunc)(GLhalfNV* v);
extern glVertex2hvNVFunc _glVertex2hvNV;
#define glVertex2hvNV VE_ASSERT(_glVertex2hvNV);_glVertex2hvNV
typedef void (APIENTRY *glVertex3hNVFunc)(GLhalfNV x, GLhalfNV y, GLhalfNV z);
extern glVertex3hNVFunc _glVertex3hNV;
#define glVertex3hNV VE_ASSERT(_glVertex3hNV);_glVertex3hNV
typedef void (APIENTRY *glVertex3hvNVFunc)(GLhalfNV* v);
extern glVertex3hvNVFunc _glVertex3hvNV;
#define glVertex3hvNV VE_ASSERT(_glVertex3hvNV);_glVertex3hvNV
typedef void (APIENTRY *glVertex4hNVFunc)(GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w);
extern glVertex4hNVFunc _glVertex4hNV;
#define glVertex4hNV VE_ASSERT(_glVertex4hNV);_glVertex4hNV
typedef void (APIENTRY *glVertex4hvNVFunc)(GLhalfNV* v);
extern glVertex4hvNVFunc _glVertex4hvNV;
#define glVertex4hvNV VE_ASSERT(_glVertex4hvNV);_glVertex4hvNV
typedef void (APIENTRY *glNormal3hNVFunc)(GLhalfNV nx, GLhalfNV ny, GLhalfNV nz);
extern glNormal3hNVFunc _glNormal3hNV;
#define glNormal3hNV VE_ASSERT(_glNormal3hNV);_glNormal3hNV
typedef void (APIENTRY *glNormal3hvNVFunc)(GLhalfNV* v);
extern glNormal3hvNVFunc _glNormal3hvNV;
#define glNormal3hvNV VE_ASSERT(_glNormal3hvNV);_glNormal3hvNV
typedef void (APIENTRY *glColor3hNVFunc)(GLhalfNV red, GLhalfNV green, GLhalfNV blue);
extern glColor3hNVFunc _glColor3hNV;
#define glColor3hNV VE_ASSERT(_glColor3hNV);_glColor3hNV
typedef void (APIENTRY *glColor3hvNVFunc)(GLhalfNV* v);
extern glColor3hvNVFunc _glColor3hvNV;
#define glColor3hvNV VE_ASSERT(_glColor3hvNV);_glColor3hvNV
typedef void (APIENTRY *glColor4hNVFunc)(GLhalfNV red, GLhalfNV green, GLhalfNV blue, GLhalfNV alpha);
extern glColor4hNVFunc _glColor4hNV;
#define glColor4hNV VE_ASSERT(_glColor4hNV);_glColor4hNV
typedef void (APIENTRY *glColor4hvNVFunc)(GLhalfNV* v);
extern glColor4hvNVFunc _glColor4hvNV;
#define glColor4hvNV VE_ASSERT(_glColor4hvNV);_glColor4hvNV
typedef void (APIENTRY *glTexCoord1hNVFunc)(GLhalfNV s);
extern glTexCoord1hNVFunc _glTexCoord1hNV;
#define glTexCoord1hNV VE_ASSERT(_glTexCoord1hNV);_glTexCoord1hNV
typedef void (APIENTRY *glTexCoord1hvNVFunc)(GLhalfNV* v);
extern glTexCoord1hvNVFunc _glTexCoord1hvNV;
#define glTexCoord1hvNV VE_ASSERT(_glTexCoord1hvNV);_glTexCoord1hvNV
typedef void (APIENTRY *glTexCoord2hNVFunc)(GLhalfNV s, GLhalfNV t);
extern glTexCoord2hNVFunc _glTexCoord2hNV;
#define glTexCoord2hNV VE_ASSERT(_glTexCoord2hNV);_glTexCoord2hNV
typedef void (APIENTRY *glTexCoord2hvNVFunc)(GLhalfNV* v);
extern glTexCoord2hvNVFunc _glTexCoord2hvNV;
#define glTexCoord2hvNV VE_ASSERT(_glTexCoord2hvNV);_glTexCoord2hvNV
typedef void (APIENTRY *glTexCoord3hNVFunc)(GLhalfNV s, GLhalfNV t, GLhalfNV r);
extern glTexCoord3hNVFunc _glTexCoord3hNV;
#define glTexCoord3hNV VE_ASSERT(_glTexCoord3hNV);_glTexCoord3hNV
typedef void (APIENTRY *glTexCoord3hvNVFunc)(GLhalfNV* v);
extern glTexCoord3hvNVFunc _glTexCoord3hvNV;
#define glTexCoord3hvNV VE_ASSERT(_glTexCoord3hvNV);_glTexCoord3hvNV
typedef void (APIENTRY *glTexCoord4hNVFunc)(GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q);
extern glTexCoord4hNVFunc _glTexCoord4hNV;
#define glTexCoord4hNV VE_ASSERT(_glTexCoord4hNV);_glTexCoord4hNV
typedef void (APIENTRY *glTexCoord4hvNVFunc)(GLhalfNV* v);
extern glTexCoord4hvNVFunc _glTexCoord4hvNV;
#define glTexCoord4hvNV VE_ASSERT(_glTexCoord4hvNV);_glTexCoord4hvNV
typedef void (APIENTRY *glMultiTexCoord1hNVFunc)(GLenum target, GLhalfNV s);
extern glMultiTexCoord1hNVFunc _glMultiTexCoord1hNV;
#define glMultiTexCoord1hNV VE_ASSERT(_glMultiTexCoord1hNV);_glMultiTexCoord1hNV
typedef void (APIENTRY *glMultiTexCoord1hvNVFunc)(GLenum target, GLhalfNV* v);
extern glMultiTexCoord1hvNVFunc _glMultiTexCoord1hvNV;
#define glMultiTexCoord1hvNV VE_ASSERT(_glMultiTexCoord1hvNV);_glMultiTexCoord1hvNV
typedef void (APIENTRY *glMultiTexCoord2hNVFunc)(GLenum target, GLhalfNV s, GLhalfNV t);
extern glMultiTexCoord2hNVFunc _glMultiTexCoord2hNV;
#define glMultiTexCoord2hNV VE_ASSERT(_glMultiTexCoord2hNV);_glMultiTexCoord2hNV
typedef void (APIENTRY *glMultiTexCoord2hvNVFunc)(GLenum target, GLhalfNV* v);
extern glMultiTexCoord2hvNVFunc _glMultiTexCoord2hvNV;
#define glMultiTexCoord2hvNV VE_ASSERT(_glMultiTexCoord2hvNV);_glMultiTexCoord2hvNV
typedef void (APIENTRY *glMultiTexCoord3hNVFunc)(GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r);
extern glMultiTexCoord3hNVFunc _glMultiTexCoord3hNV;
#define glMultiTexCoord3hNV VE_ASSERT(_glMultiTexCoord3hNV);_glMultiTexCoord3hNV
typedef void (APIENTRY *glMultiTexCoord3hvNVFunc)(GLenum target, GLhalfNV* v);
extern glMultiTexCoord3hvNVFunc _glMultiTexCoord3hvNV;
#define glMultiTexCoord3hvNV VE_ASSERT(_glMultiTexCoord3hvNV);_glMultiTexCoord3hvNV
typedef void (APIENTRY *glMultiTexCoord4hNVFunc)(GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q);
extern glMultiTexCoord4hNVFunc _glMultiTexCoord4hNV;
#define glMultiTexCoord4hNV VE_ASSERT(_glMultiTexCoord4hNV);_glMultiTexCoord4hNV
typedef void (APIENTRY *glMultiTexCoord4hvNVFunc)(GLenum target, GLhalfNV* v);
extern glMultiTexCoord4hvNVFunc _glMultiTexCoord4hvNV;
#define glMultiTexCoord4hvNV VE_ASSERT(_glMultiTexCoord4hvNV);_glMultiTexCoord4hvNV
typedef void (APIENTRY *glFogCoordhNVFunc)(GLhalfNV fog);
extern glFogCoordhNVFunc _glFogCoordhNV;
#define glFogCoordhNV VE_ASSERT(_glFogCoordhNV);_glFogCoordhNV
typedef void (APIENTRY *glFogCoordhvNVFunc)(GLhalfNV* fog);
extern glFogCoordhvNVFunc _glFogCoordhvNV;
#define glFogCoordhvNV VE_ASSERT(_glFogCoordhvNV);_glFogCoordhvNV
typedef void (APIENTRY *glSecondaryColor3hNVFunc)(GLhalfNV red, GLhalfNV green, GLhalfNV blue);
extern glSecondaryColor3hNVFunc _glSecondaryColor3hNV;
#define glSecondaryColor3hNV VE_ASSERT(_glSecondaryColor3hNV);_glSecondaryColor3hNV
typedef void (APIENTRY *glSecondaryColor3hvNVFunc)(GLhalfNV* v);
extern glSecondaryColor3hvNVFunc _glSecondaryColor3hvNV;
#define glSecondaryColor3hvNV VE_ASSERT(_glSecondaryColor3hvNV);_glSecondaryColor3hvNV
typedef void (APIENTRY *glVertexWeighthNVFunc)(GLhalfNV weight);
extern glVertexWeighthNVFunc _glVertexWeighthNV;
#define glVertexWeighthNV VE_ASSERT(_glVertexWeighthNV);_glVertexWeighthNV
typedef void (APIENTRY *glVertexWeighthvNVFunc)(GLhalfNV* weight);
extern glVertexWeighthvNVFunc _glVertexWeighthvNV;
#define glVertexWeighthvNV VE_ASSERT(_glVertexWeighthvNV);_glVertexWeighthvNV
typedef void (APIENTRY *glVertexAttrib1hNVFunc)(GLuint index, GLhalfNV x);
extern glVertexAttrib1hNVFunc _glVertexAttrib1hNV;
#define glVertexAttrib1hNV VE_ASSERT(_glVertexAttrib1hNV);_glVertexAttrib1hNV
typedef void (APIENTRY *glVertexAttrib1hvNVFunc)(GLuint index, GLhalfNV* v);
extern glVertexAttrib1hvNVFunc _glVertexAttrib1hvNV;
#define glVertexAttrib1hvNV VE_ASSERT(_glVertexAttrib1hvNV);_glVertexAttrib1hvNV
typedef void (APIENTRY *glVertexAttrib2hNVFunc)(GLuint index, GLhalfNV x, GLhalfNV y);
extern glVertexAttrib2hNVFunc _glVertexAttrib2hNV;
#define glVertexAttrib2hNV VE_ASSERT(_glVertexAttrib2hNV);_glVertexAttrib2hNV
typedef void (APIENTRY *glVertexAttrib2hvNVFunc)(GLuint index, GLhalfNV* v);
extern glVertexAttrib2hvNVFunc _glVertexAttrib2hvNV;
#define glVertexAttrib2hvNV VE_ASSERT(_glVertexAttrib2hvNV);_glVertexAttrib2hvNV
typedef void (APIENTRY *glVertexAttrib3hNVFunc)(GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z);
extern glVertexAttrib3hNVFunc _glVertexAttrib3hNV;
#define glVertexAttrib3hNV VE_ASSERT(_glVertexAttrib3hNV);_glVertexAttrib3hNV
typedef void (APIENTRY *glVertexAttrib3hvNVFunc)(GLuint index, GLhalfNV* v);
extern glVertexAttrib3hvNVFunc _glVertexAttrib3hvNV;
#define glVertexAttrib3hvNV VE_ASSERT(_glVertexAttrib3hvNV);_glVertexAttrib3hvNV
typedef void (APIENTRY *glVertexAttrib4hNVFunc)(GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w);
extern glVertexAttrib4hNVFunc _glVertexAttrib4hNV;
#define glVertexAttrib4hNV VE_ASSERT(_glVertexAttrib4hNV);_glVertexAttrib4hNV
typedef void (APIENTRY *glVertexAttrib4hvNVFunc)(GLuint index, GLhalfNV* v);
extern glVertexAttrib4hvNVFunc _glVertexAttrib4hvNV;
#define glVertexAttrib4hvNV VE_ASSERT(_glVertexAttrib4hvNV);_glVertexAttrib4hvNV
typedef void (APIENTRY *glVertexAttribs1hvNVFunc)(GLuint index, GLsizei n, GLhalfNV* v);
extern glVertexAttribs1hvNVFunc _glVertexAttribs1hvNV;
#define glVertexAttribs1hvNV VE_ASSERT(_glVertexAttribs1hvNV);_glVertexAttribs1hvNV
typedef void (APIENTRY *glVertexAttribs2hvNVFunc)(GLuint index, GLsizei n, GLhalfNV* v);
extern glVertexAttribs2hvNVFunc _glVertexAttribs2hvNV;
#define glVertexAttribs2hvNV VE_ASSERT(_glVertexAttribs2hvNV);_glVertexAttribs2hvNV
typedef void (APIENTRY *glVertexAttribs3hvNVFunc)(GLuint index, GLsizei n, GLhalfNV* v);
extern glVertexAttribs3hvNVFunc _glVertexAttribs3hvNV;
#define glVertexAttribs3hvNV VE_ASSERT(_glVertexAttribs3hvNV);_glVertexAttribs3hvNV
typedef void (APIENTRY *glVertexAttribs4hvNVFunc)(GLuint index, GLsizei n, GLhalfNV* v);
extern glVertexAttribs4hvNVFunc _glVertexAttribs4hvNV;
#define glVertexAttribs4hvNV VE_ASSERT(_glVertexAttribs4hvNV);_glVertexAttribs4hvNV
typedef void (APIENTRY *glPixelDataRangeNVFunc)(GLenum target, GLsizei length, GLvoid* pointer);
extern glPixelDataRangeNVFunc _glPixelDataRangeNV;
#define glPixelDataRangeNV VE_ASSERT(_glPixelDataRangeNV);_glPixelDataRangeNV
typedef void (APIENTRY *glFlushPixelDataRangeNVFunc)(GLenum target);
extern glFlushPixelDataRangeNVFunc _glFlushPixelDataRangeNV;
#define glFlushPixelDataRangeNV VE_ASSERT(_glFlushPixelDataRangeNV);_glFlushPixelDataRangeNV
typedef void (APIENTRY *glPrimitiveRestartNVFunc)();
extern glPrimitiveRestartNVFunc _glPrimitiveRestartNV;
#define glPrimitiveRestartNV VE_ASSERT(_glPrimitiveRestartNV);_glPrimitiveRestartNV
typedef void (APIENTRY *glPrimitiveRestartIndexNVFunc)(GLuint index);
extern glPrimitiveRestartIndexNVFunc _glPrimitiveRestartIndexNV;
#define glPrimitiveRestartIndexNV VE_ASSERT(_glPrimitiveRestartIndexNV);_glPrimitiveRestartIndexNV
typedef GLvoid* (APIENTRY *glMapObjectBufferATIFunc)(GLuint buffer);
extern glMapObjectBufferATIFunc _glMapObjectBufferATI;
#define glMapObjectBufferATI _glMapObjectBufferATI
typedef void (APIENTRY *glUnmapObjectBufferATIFunc)(GLuint buffer);
extern glUnmapObjectBufferATIFunc _glUnmapObjectBufferATI;
#define glUnmapObjectBufferATI VE_ASSERT(_glUnmapObjectBufferATI);_glUnmapObjectBufferATI
typedef void (APIENTRY *glStencilOpSeparateATIFunc)(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
extern glStencilOpSeparateATIFunc _glStencilOpSeparateATI;
#define glStencilOpSeparateATI VE_ASSERT(_glStencilOpSeparateATI);_glStencilOpSeparateATI
typedef void (APIENTRY *glStencilFuncSeparateATIFunc)(GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask);
extern glStencilFuncSeparateATIFunc _glStencilFuncSeparateATI;
#define glStencilFuncSeparateATI VE_ASSERT(_glStencilFuncSeparateATI);_glStencilFuncSeparateATI
typedef void (APIENTRY *glVertexAttribArrayObjectATIFunc)(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLuint buffer, GLuint offset);
extern glVertexAttribArrayObjectATIFunc _glVertexAttribArrayObjectATI;
#define glVertexAttribArrayObjectATI VE_ASSERT(_glVertexAttribArrayObjectATI);_glVertexAttribArrayObjectATI
typedef void (APIENTRY *glGetVertexAttribArrayObjectfvATIFunc)(GLuint index, GLenum pname, GLfloat* params);
extern glGetVertexAttribArrayObjectfvATIFunc _glGetVertexAttribArrayObjectfvATI;
#define glGetVertexAttribArrayObjectfvATI VE_ASSERT(_glGetVertexAttribArrayObjectfvATI);_glGetVertexAttribArrayObjectfvATI
typedef void (APIENTRY *glGetVertexAttribArrayObjectivATIFunc)(GLuint index, GLenum pname, GLint* params);
extern glGetVertexAttribArrayObjectivATIFunc _glGetVertexAttribArrayObjectivATI;
#define glGetVertexAttribArrayObjectivATI VE_ASSERT(_glGetVertexAttribArrayObjectivATI);_glGetVertexAttribArrayObjectivATI
typedef void (APIENTRY *glDepthBoundsEXTFunc)(GLclampd zmin, GLclampd zmax);
extern glDepthBoundsEXTFunc _glDepthBoundsEXT;
#define glDepthBoundsEXT VE_ASSERT(_glDepthBoundsEXT);_glDepthBoundsEXT
typedef void (APIENTRY *glBlendEquationSeparateEXTFunc)(GLenum modeRGB, GLenum modeAlpha);
extern glBlendEquationSeparateEXTFunc _glBlendEquationSeparateEXT;
#define glBlendEquationSeparateEXT VE_ASSERT(_glBlendEquationSeparateEXT);_glBlendEquationSeparateEXT
typedef GLboolean (APIENTRY *glIsRenderbufferEXTFunc)(GLuint renderbuffer);
extern glIsRenderbufferEXTFunc _glIsRenderbufferEXT;
#define glIsRenderbufferEXT _glIsRenderbufferEXT
typedef void (APIENTRY *glBindRenderbufferEXTFunc)(GLenum target, GLuint renderbuffer);
extern glBindRenderbufferEXTFunc _glBindRenderbufferEXT;
#define glBindRenderbufferEXT VE_ASSERT(_glBindRenderbufferEXT);_glBindRenderbufferEXT
typedef void (APIENTRY *glDeleteRenderbuffersEXTFunc)(GLsizei n, GLuint* renderbuffers);
extern glDeleteRenderbuffersEXTFunc _glDeleteRenderbuffersEXT;
#define glDeleteRenderbuffersEXT VE_ASSERT(_glDeleteRenderbuffersEXT);_glDeleteRenderbuffersEXT
typedef void (APIENTRY *glGenRenderbuffersEXTFunc)(GLsizei n, GLuint* renderbuffers);
extern glGenRenderbuffersEXTFunc _glGenRenderbuffersEXT;
#define glGenRenderbuffersEXT VE_ASSERT(_glGenRenderbuffersEXT);_glGenRenderbuffersEXT
typedef void (APIENTRY *glRenderbufferStorageEXTFunc)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
extern glRenderbufferStorageEXTFunc _glRenderbufferStorageEXT;
#define glRenderbufferStorageEXT VE_ASSERT(_glRenderbufferStorageEXT);_glRenderbufferStorageEXT
typedef void (APIENTRY *glGetRenderbufferParameterivEXTFunc)(GLenum target, GLenum pname, GLint* params);
extern glGetRenderbufferParameterivEXTFunc _glGetRenderbufferParameterivEXT;
#define glGetRenderbufferParameterivEXT VE_ASSERT(_glGetRenderbufferParameterivEXT);_glGetRenderbufferParameterivEXT
typedef GLboolean (APIENTRY *glIsFramebufferEXTFunc)(GLuint framebuffer);
extern glIsFramebufferEXTFunc _glIsFramebufferEXT;
#define glIsFramebufferEXT _glIsFramebufferEXT
typedef void (APIENTRY *glBindFramebufferEXTFunc)(GLenum target, GLuint framebuffer);
extern glBindFramebufferEXTFunc _glBindFramebufferEXT;
#define glBindFramebufferEXT VE_ASSERT(_glBindFramebufferEXT);_glBindFramebufferEXT
typedef void (APIENTRY *glDeleteFramebuffersEXTFunc)(GLsizei n, GLuint* framebuffers);
extern glDeleteFramebuffersEXTFunc _glDeleteFramebuffersEXT;
#define glDeleteFramebuffersEXT VE_ASSERT(_glDeleteFramebuffersEXT);_glDeleteFramebuffersEXT
typedef void (APIENTRY *glGenFramebuffersEXTFunc)(GLsizei n, GLuint* framebuffers);
extern glGenFramebuffersEXTFunc _glGenFramebuffersEXT;
#define glGenFramebuffersEXT VE_ASSERT(_glGenFramebuffersEXT);_glGenFramebuffersEXT
typedef GLenum (APIENTRY *glCheckFramebufferStatusEXTFunc)(GLenum target);
extern glCheckFramebufferStatusEXTFunc _glCheckFramebufferStatusEXT;
#define glCheckFramebufferStatusEXT _glCheckFramebufferStatusEXT
typedef void (APIENTRY *glFramebufferTexture1DEXTFunc)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
extern glFramebufferTexture1DEXTFunc _glFramebufferTexture1DEXT;
#define glFramebufferTexture1DEXT VE_ASSERT(_glFramebufferTexture1DEXT);_glFramebufferTexture1DEXT
typedef void (APIENTRY *glFramebufferTexture2DEXTFunc)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
extern glFramebufferTexture2DEXTFunc _glFramebufferTexture2DEXT;
#define glFramebufferTexture2DEXT VE_ASSERT(_glFramebufferTexture2DEXT);_glFramebufferTexture2DEXT
typedef void (APIENTRY *glFramebufferTexture3DEXTFunc)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
extern glFramebufferTexture3DEXTFunc _glFramebufferTexture3DEXT;
#define glFramebufferTexture3DEXT VE_ASSERT(_glFramebufferTexture3DEXT);_glFramebufferTexture3DEXT
typedef void (APIENTRY *glFramebufferRenderbufferEXTFunc)(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
extern glFramebufferRenderbufferEXTFunc _glFramebufferRenderbufferEXT;
#define glFramebufferRenderbufferEXT VE_ASSERT(_glFramebufferRenderbufferEXT);_glFramebufferRenderbufferEXT
typedef void (APIENTRY *glGetFramebufferAttachmentParameterivEXTFunc)(GLenum target, GLenum attachment, GLenum pname, GLint* params);
extern glGetFramebufferAttachmentParameterivEXTFunc _glGetFramebufferAttachmentParameterivEXT;
#define glGetFramebufferAttachmentParameterivEXT VE_ASSERT(_glGetFramebufferAttachmentParameterivEXT);_glGetFramebufferAttachmentParameterivEXT
typedef void (APIENTRY *glGenerateMipmapEXTFunc)(GLenum target);
extern glGenerateMipmapEXTFunc _glGenerateMipmapEXT;
#define glGenerateMipmapEXT VE_ASSERT(_glGenerateMipmapEXT);_glGenerateMipmapEXT
typedef void (APIENTRY *glStringMarkerGREMEDYFunc)(GLsizei len, GLvoid* string);
extern glStringMarkerGREMEDYFunc _glStringMarkerGREMEDY;
#define glStringMarkerGREMEDY VE_ASSERT(_glStringMarkerGREMEDY);_glStringMarkerGREMEDY
typedef void (APIENTRY *glStencilClearTagEXTFunc)(GLsizei stencilTagBits, GLuint stencilClearTag);
extern glStencilClearTagEXTFunc _glStencilClearTagEXT;
#define glStencilClearTagEXT VE_ASSERT(_glStencilClearTagEXT);_glStencilClearTagEXT
typedef void (APIENTRY *glBlitFramebufferEXTFunc)(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
extern glBlitFramebufferEXTFunc _glBlitFramebufferEXT;
#define glBlitFramebufferEXT VE_ASSERT(_glBlitFramebufferEXT);_glBlitFramebufferEXT
typedef void (APIENTRY *glRenderbufferStorageMultisampleEXTFunc)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
extern glRenderbufferStorageMultisampleEXTFunc _glRenderbufferStorageMultisampleEXT;
#define glRenderbufferStorageMultisampleEXT VE_ASSERT(_glRenderbufferStorageMultisampleEXT);_glRenderbufferStorageMultisampleEXT
typedef void (APIENTRY *glGetQueryObjecti64vEXTFunc)(GLuint id, GLenum pname, GLint64EXT* params);
extern glGetQueryObjecti64vEXTFunc _glGetQueryObjecti64vEXT;
#define glGetQueryObjecti64vEXT VE_ASSERT(_glGetQueryObjecti64vEXT);_glGetQueryObjecti64vEXT
typedef void (APIENTRY *glGetQueryObjectui64vEXTFunc)(GLuint id, GLenum pname, GLuint64EXT* params);
extern glGetQueryObjectui64vEXTFunc _glGetQueryObjectui64vEXT;
#define glGetQueryObjectui64vEXT VE_ASSERT(_glGetQueryObjectui64vEXT);_glGetQueryObjectui64vEXT
typedef void (APIENTRY *glProgramEnvParameters4fvEXTFunc)(GLenum target, GLuint index, GLsizei count, GLfloat* params);
extern glProgramEnvParameters4fvEXTFunc _glProgramEnvParameters4fvEXT;
#define glProgramEnvParameters4fvEXT VE_ASSERT(_glProgramEnvParameters4fvEXT);_glProgramEnvParameters4fvEXT
typedef void (APIENTRY *glProgramLocalParameters4fvEXTFunc)(GLenum target, GLuint index, GLsizei count, GLfloat* params);
extern glProgramLocalParameters4fvEXTFunc _glProgramLocalParameters4fvEXT;
#define glProgramLocalParameters4fvEXT VE_ASSERT(_glProgramLocalParameters4fvEXT);_glProgramLocalParameters4fvEXT
typedef void (APIENTRY *glBufferParameteriAPPLEFunc)(GLenum target, GLenum pname, GLint param);
extern glBufferParameteriAPPLEFunc _glBufferParameteriAPPLE;
#define glBufferParameteriAPPLE VE_ASSERT(_glBufferParameteriAPPLE);_glBufferParameteriAPPLE
typedef void (APIENTRY *glFlushMappedBufferRangeAPPLEFunc)(GLenum target, GLintptr offset, GLsizeiptr size);
extern glFlushMappedBufferRangeAPPLEFunc _glFlushMappedBufferRangeAPPLE;
#define glFlushMappedBufferRangeAPPLE VE_ASSERT(_glFlushMappedBufferRangeAPPLE);_glFlushMappedBufferRangeAPPLE
typedef void (APIENTRY *glProgramLocalParameterI4iNVFunc)(GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);
extern glProgramLocalParameterI4iNVFunc _glProgramLocalParameterI4iNV;
#define glProgramLocalParameterI4iNV VE_ASSERT(_glProgramLocalParameterI4iNV);_glProgramLocalParameterI4iNV
typedef void (APIENTRY *glProgramLocalParameterI4ivNVFunc)(GLenum target, GLuint index, GLint* params);
extern glProgramLocalParameterI4ivNVFunc _glProgramLocalParameterI4ivNV;
#define glProgramLocalParameterI4ivNV VE_ASSERT(_glProgramLocalParameterI4ivNV);_glProgramLocalParameterI4ivNV
typedef void (APIENTRY *glProgramLocalParametersI4ivNVFunc)(GLenum target, GLuint index, GLsizei count, GLint* params);
extern glProgramLocalParametersI4ivNVFunc _glProgramLocalParametersI4ivNV;
#define glProgramLocalParametersI4ivNV VE_ASSERT(_glProgramLocalParametersI4ivNV);_glProgramLocalParametersI4ivNV
typedef void (APIENTRY *glProgramLocalParameterI4uiNVFunc)(GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
extern glProgramLocalParameterI4uiNVFunc _glProgramLocalParameterI4uiNV;
#define glProgramLocalParameterI4uiNV VE_ASSERT(_glProgramLocalParameterI4uiNV);_glProgramLocalParameterI4uiNV
typedef void (APIENTRY *glProgramLocalParameterI4uivNVFunc)(GLenum target, GLuint index, GLuint* params);
extern glProgramLocalParameterI4uivNVFunc _glProgramLocalParameterI4uivNV;
#define glProgramLocalParameterI4uivNV VE_ASSERT(_glProgramLocalParameterI4uivNV);_glProgramLocalParameterI4uivNV
typedef void (APIENTRY *glProgramLocalParametersI4uivNVFunc)(GLenum target, GLuint index, GLsizei count, GLuint* params);
extern glProgramLocalParametersI4uivNVFunc _glProgramLocalParametersI4uivNV;
#define glProgramLocalParametersI4uivNV VE_ASSERT(_glProgramLocalParametersI4uivNV);_glProgramLocalParametersI4uivNV
typedef void (APIENTRY *glProgramEnvParameterI4iNVFunc)(GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);
extern glProgramEnvParameterI4iNVFunc _glProgramEnvParameterI4iNV;
#define glProgramEnvParameterI4iNV VE_ASSERT(_glProgramEnvParameterI4iNV);_glProgramEnvParameterI4iNV
typedef void (APIENTRY *glProgramEnvParameterI4ivNVFunc)(GLenum target, GLuint index, GLint* params);
extern glProgramEnvParameterI4ivNVFunc _glProgramEnvParameterI4ivNV;
#define glProgramEnvParameterI4ivNV VE_ASSERT(_glProgramEnvParameterI4ivNV);_glProgramEnvParameterI4ivNV
typedef void (APIENTRY *glProgramEnvParametersI4ivNVFunc)(GLenum target, GLuint index, GLsizei count, GLint* params);
extern glProgramEnvParametersI4ivNVFunc _glProgramEnvParametersI4ivNV;
#define glProgramEnvParametersI4ivNV VE_ASSERT(_glProgramEnvParametersI4ivNV);_glProgramEnvParametersI4ivNV
typedef void (APIENTRY *glProgramEnvParameterI4uiNVFunc)(GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
extern glProgramEnvParameterI4uiNVFunc _glProgramEnvParameterI4uiNV;
#define glProgramEnvParameterI4uiNV VE_ASSERT(_glProgramEnvParameterI4uiNV);_glProgramEnvParameterI4uiNV
typedef void (APIENTRY *glProgramEnvParameterI4uivNVFunc)(GLenum target, GLuint index, GLuint* params);
extern glProgramEnvParameterI4uivNVFunc _glProgramEnvParameterI4uivNV;
#define glProgramEnvParameterI4uivNV VE_ASSERT(_glProgramEnvParameterI4uivNV);_glProgramEnvParameterI4uivNV
typedef void (APIENTRY *glProgramEnvParametersI4uivNVFunc)(GLenum target, GLuint index, GLsizei count, GLuint* params);
extern glProgramEnvParametersI4uivNVFunc _glProgramEnvParametersI4uivNV;
#define glProgramEnvParametersI4uivNV VE_ASSERT(_glProgramEnvParametersI4uivNV);_glProgramEnvParametersI4uivNV
typedef void (APIENTRY *glGetProgramLocalParameterIivNVFunc)(GLenum target, GLuint index, GLint* params);
extern glGetProgramLocalParameterIivNVFunc _glGetProgramLocalParameterIivNV;
#define glGetProgramLocalParameterIivNV VE_ASSERT(_glGetProgramLocalParameterIivNV);_glGetProgramLocalParameterIivNV
typedef void (APIENTRY *glGetProgramLocalParameterIuivNVFunc)(GLenum target, GLuint index, GLuint* params);
extern glGetProgramLocalParameterIuivNVFunc _glGetProgramLocalParameterIuivNV;
#define glGetProgramLocalParameterIuivNV VE_ASSERT(_glGetProgramLocalParameterIuivNV);_glGetProgramLocalParameterIuivNV
typedef void (APIENTRY *glGetProgramEnvParameterIivNVFunc)(GLenum target, GLuint index, GLint* params);
extern glGetProgramEnvParameterIivNVFunc _glGetProgramEnvParameterIivNV;
#define glGetProgramEnvParameterIivNV VE_ASSERT(_glGetProgramEnvParameterIivNV);_glGetProgramEnvParameterIivNV
typedef void (APIENTRY *glGetProgramEnvParameterIuivNVFunc)(GLenum target, GLuint index, GLuint* params);
extern glGetProgramEnvParameterIuivNVFunc _glGetProgramEnvParameterIuivNV;
#define glGetProgramEnvParameterIuivNV VE_ASSERT(_glGetProgramEnvParameterIuivNV);_glGetProgramEnvParameterIuivNV
typedef void (APIENTRY *glProgramVertexLimitNVFunc)(GLenum target, GLint limit);
extern glProgramVertexLimitNVFunc _glProgramVertexLimitNV;
#define glProgramVertexLimitNV VE_ASSERT(_glProgramVertexLimitNV);_glProgramVertexLimitNV
typedef void (APIENTRY *glFramebufferTextureEXTFunc)(GLenum target, GLenum attachment, GLuint texture, GLint level);
extern glFramebufferTextureEXTFunc _glFramebufferTextureEXT;
#define glFramebufferTextureEXT VE_ASSERT(_glFramebufferTextureEXT);_glFramebufferTextureEXT
typedef void (APIENTRY *glFramebufferTextureLayerEXTFunc)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
extern glFramebufferTextureLayerEXTFunc _glFramebufferTextureLayerEXT;
#define glFramebufferTextureLayerEXT VE_ASSERT(_glFramebufferTextureLayerEXT);_glFramebufferTextureLayerEXT
typedef void (APIENTRY *glFramebufferTextureFaceEXTFunc)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);
extern glFramebufferTextureFaceEXTFunc _glFramebufferTextureFaceEXT;
#define glFramebufferTextureFaceEXT VE_ASSERT(_glFramebufferTextureFaceEXT);_glFramebufferTextureFaceEXT
typedef void (APIENTRY *glProgramParameteriEXTFunc)(GLuint program, GLenum pname, GLint value);
extern glProgramParameteriEXTFunc _glProgramParameteriEXT;
#define glProgramParameteriEXT VE_ASSERT(_glProgramParameteriEXT);_glProgramParameteriEXT
typedef void (APIENTRY *glVertexAttribI1iEXTFunc)(GLuint index, GLint x);
extern glVertexAttribI1iEXTFunc _glVertexAttribI1iEXT;
#define glVertexAttribI1iEXT VE_ASSERT(_glVertexAttribI1iEXT);_glVertexAttribI1iEXT
typedef void (APIENTRY *glVertexAttribI2iEXTFunc)(GLuint index, GLint x, GLint y);
extern glVertexAttribI2iEXTFunc _glVertexAttribI2iEXT;
#define glVertexAttribI2iEXT VE_ASSERT(_glVertexAttribI2iEXT);_glVertexAttribI2iEXT
typedef void (APIENTRY *glVertexAttribI3iEXTFunc)(GLuint index, GLint x, GLint y, GLint z);
extern glVertexAttribI3iEXTFunc _glVertexAttribI3iEXT;
#define glVertexAttribI3iEXT VE_ASSERT(_glVertexAttribI3iEXT);_glVertexAttribI3iEXT
typedef void (APIENTRY *glVertexAttribI4iEXTFunc)(GLuint index, GLint x, GLint y, GLint z, GLint w);
extern glVertexAttribI4iEXTFunc _glVertexAttribI4iEXT;
#define glVertexAttribI4iEXT VE_ASSERT(_glVertexAttribI4iEXT);_glVertexAttribI4iEXT
typedef void (APIENTRY *glVertexAttribI1uiEXTFunc)(GLuint index, GLuint x);
extern glVertexAttribI1uiEXTFunc _glVertexAttribI1uiEXT;
#define glVertexAttribI1uiEXT VE_ASSERT(_glVertexAttribI1uiEXT);_glVertexAttribI1uiEXT
typedef void (APIENTRY *glVertexAttribI2uiEXTFunc)(GLuint index, GLuint x, GLuint y);
extern glVertexAttribI2uiEXTFunc _glVertexAttribI2uiEXT;
#define glVertexAttribI2uiEXT VE_ASSERT(_glVertexAttribI2uiEXT);_glVertexAttribI2uiEXT
typedef void (APIENTRY *glVertexAttribI3uiEXTFunc)(GLuint index, GLuint x, GLuint y, GLuint z);
extern glVertexAttribI3uiEXTFunc _glVertexAttribI3uiEXT;
#define glVertexAttribI3uiEXT VE_ASSERT(_glVertexAttribI3uiEXT);_glVertexAttribI3uiEXT
typedef void (APIENTRY *glVertexAttribI4uiEXTFunc)(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
extern glVertexAttribI4uiEXTFunc _glVertexAttribI4uiEXT;
#define glVertexAttribI4uiEXT VE_ASSERT(_glVertexAttribI4uiEXT);_glVertexAttribI4uiEXT
typedef void (APIENTRY *glVertexAttribI1ivEXTFunc)(GLuint index, GLint* v);
extern glVertexAttribI1ivEXTFunc _glVertexAttribI1ivEXT;
#define glVertexAttribI1ivEXT VE_ASSERT(_glVertexAttribI1ivEXT);_glVertexAttribI1ivEXT
typedef void (APIENTRY *glVertexAttribI2ivEXTFunc)(GLuint index, GLint* v);
extern glVertexAttribI2ivEXTFunc _glVertexAttribI2ivEXT;
#define glVertexAttribI2ivEXT VE_ASSERT(_glVertexAttribI2ivEXT);_glVertexAttribI2ivEXT
typedef void (APIENTRY *glVertexAttribI3ivEXTFunc)(GLuint index, GLint* v);
extern glVertexAttribI3ivEXTFunc _glVertexAttribI3ivEXT;
#define glVertexAttribI3ivEXT VE_ASSERT(_glVertexAttribI3ivEXT);_glVertexAttribI3ivEXT
typedef void (APIENTRY *glVertexAttribI4ivEXTFunc)(GLuint index, GLint* v);
extern glVertexAttribI4ivEXTFunc _glVertexAttribI4ivEXT;
#define glVertexAttribI4ivEXT VE_ASSERT(_glVertexAttribI4ivEXT);_glVertexAttribI4ivEXT
typedef void (APIENTRY *glVertexAttribI1uivEXTFunc)(GLuint index, GLuint* v);
extern glVertexAttribI1uivEXTFunc _glVertexAttribI1uivEXT;
#define glVertexAttribI1uivEXT VE_ASSERT(_glVertexAttribI1uivEXT);_glVertexAttribI1uivEXT
typedef void (APIENTRY *glVertexAttribI2uivEXTFunc)(GLuint index, GLuint* v);
extern glVertexAttribI2uivEXTFunc _glVertexAttribI2uivEXT;
#define glVertexAttribI2uivEXT VE_ASSERT(_glVertexAttribI2uivEXT);_glVertexAttribI2uivEXT
typedef void (APIENTRY *glVertexAttribI3uivEXTFunc)(GLuint index, GLuint* v);
extern glVertexAttribI3uivEXTFunc _glVertexAttribI3uivEXT;
#define glVertexAttribI3uivEXT VE_ASSERT(_glVertexAttribI3uivEXT);_glVertexAttribI3uivEXT
typedef void (APIENTRY *glVertexAttribI4uivEXTFunc)(GLuint index, GLuint* v);
extern glVertexAttribI4uivEXTFunc _glVertexAttribI4uivEXT;
#define glVertexAttribI4uivEXT VE_ASSERT(_glVertexAttribI4uivEXT);_glVertexAttribI4uivEXT
typedef void (APIENTRY *glVertexAttribI4bvEXTFunc)(GLuint index, GLbyte* v);
extern glVertexAttribI4bvEXTFunc _glVertexAttribI4bvEXT;
#define glVertexAttribI4bvEXT VE_ASSERT(_glVertexAttribI4bvEXT);_glVertexAttribI4bvEXT
typedef void (APIENTRY *glVertexAttribI4svEXTFunc)(GLuint index, GLshort* v);
extern glVertexAttribI4svEXTFunc _glVertexAttribI4svEXT;
#define glVertexAttribI4svEXT VE_ASSERT(_glVertexAttribI4svEXT);_glVertexAttribI4svEXT
typedef void (APIENTRY *glVertexAttribI4ubvEXTFunc)(GLuint index, GLubyte* v);
extern glVertexAttribI4ubvEXTFunc _glVertexAttribI4ubvEXT;
#define glVertexAttribI4ubvEXT VE_ASSERT(_glVertexAttribI4ubvEXT);_glVertexAttribI4ubvEXT
typedef void (APIENTRY *glVertexAttribI4usvEXTFunc)(GLuint index, GLushort* v);
extern glVertexAttribI4usvEXTFunc _glVertexAttribI4usvEXT;
#define glVertexAttribI4usvEXT VE_ASSERT(_glVertexAttribI4usvEXT);_glVertexAttribI4usvEXT
typedef void (APIENTRY *glVertexAttribIPointerEXTFunc)(GLuint index, GLint size, GLenum type, GLsizei stride, GLvoid* pointer);
extern glVertexAttribIPointerEXTFunc _glVertexAttribIPointerEXT;
#define glVertexAttribIPointerEXT VE_ASSERT(_glVertexAttribIPointerEXT);_glVertexAttribIPointerEXT
typedef void (APIENTRY *glGetVertexAttribIivEXTFunc)(GLuint index, GLenum pname, GLint* params);
extern glGetVertexAttribIivEXTFunc _glGetVertexAttribIivEXT;
#define glGetVertexAttribIivEXT VE_ASSERT(_glGetVertexAttribIivEXT);_glGetVertexAttribIivEXT
typedef void (APIENTRY *glGetVertexAttribIuivEXTFunc)(GLuint index, GLenum pname, GLuint* params);
extern glGetVertexAttribIuivEXTFunc _glGetVertexAttribIuivEXT;
#define glGetVertexAttribIuivEXT VE_ASSERT(_glGetVertexAttribIuivEXT);_glGetVertexAttribIuivEXT
typedef void (APIENTRY *glGetUniformuivEXTFunc)(GLuint program, GLint location, GLuint* params);
extern glGetUniformuivEXTFunc _glGetUniformuivEXT;
#define glGetUniformuivEXT VE_ASSERT(_glGetUniformuivEXT);_glGetUniformuivEXT
typedef void (APIENTRY *glBindFragDataLocationEXTFunc)(GLuint program, GLuint color, GLchar* name);
extern glBindFragDataLocationEXTFunc _glBindFragDataLocationEXT;
#define glBindFragDataLocationEXT VE_ASSERT(_glBindFragDataLocationEXT);_glBindFragDataLocationEXT
typedef GLint (APIENTRY *glGetFragDataLocationEXTFunc)(GLuint program, GLchar* name);
extern glGetFragDataLocationEXTFunc _glGetFragDataLocationEXT;
#define glGetFragDataLocationEXT _glGetFragDataLocationEXT
typedef void (APIENTRY *glUniform1uiEXTFunc)(GLint location, GLuint v0);
extern glUniform1uiEXTFunc _glUniform1uiEXT;
#define glUniform1uiEXT VE_ASSERT(_glUniform1uiEXT);_glUniform1uiEXT
typedef void (APIENTRY *glUniform2uiEXTFunc)(GLint location, GLuint v0, GLuint v1);
extern glUniform2uiEXTFunc _glUniform2uiEXT;
#define glUniform2uiEXT VE_ASSERT(_glUniform2uiEXT);_glUniform2uiEXT
typedef void (APIENTRY *glUniform3uiEXTFunc)(GLint location, GLuint v0, GLuint v1, GLuint v2);
extern glUniform3uiEXTFunc _glUniform3uiEXT;
#define glUniform3uiEXT VE_ASSERT(_glUniform3uiEXT);_glUniform3uiEXT
typedef void (APIENTRY *glUniform4uiEXTFunc)(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
extern glUniform4uiEXTFunc _glUniform4uiEXT;
#define glUniform4uiEXT VE_ASSERT(_glUniform4uiEXT);_glUniform4uiEXT
typedef void (APIENTRY *glUniform1uivEXTFunc)(GLint location, GLsizei count, GLuint* value);
extern glUniform1uivEXTFunc _glUniform1uivEXT;
#define glUniform1uivEXT VE_ASSERT(_glUniform1uivEXT);_glUniform1uivEXT
typedef void (APIENTRY *glUniform2uivEXTFunc)(GLint location, GLsizei count, GLuint* value);
extern glUniform2uivEXTFunc _glUniform2uivEXT;
#define glUniform2uivEXT VE_ASSERT(_glUniform2uivEXT);_glUniform2uivEXT
typedef void (APIENTRY *glUniform3uivEXTFunc)(GLint location, GLsizei count, GLuint* value);
extern glUniform3uivEXTFunc _glUniform3uivEXT;
#define glUniform3uivEXT VE_ASSERT(_glUniform3uivEXT);_glUniform3uivEXT
typedef void (APIENTRY *glUniform4uivEXTFunc)(GLint location, GLsizei count, GLuint* value);
extern glUniform4uivEXTFunc _glUniform4uivEXT;
#define glUniform4uivEXT VE_ASSERT(_glUniform4uivEXT);_glUniform4uivEXT
typedef void (APIENTRY *glDrawArraysInstancedEXTFunc)(GLenum mode, GLint start, GLsizei count, GLsizei primcount);
extern glDrawArraysInstancedEXTFunc _glDrawArraysInstancedEXT;
#define glDrawArraysInstancedEXT VE_ASSERT(_glDrawArraysInstancedEXT);_glDrawArraysInstancedEXT
typedef void (APIENTRY *glDrawElementsInstancedEXTFunc)(GLenum mode, GLsizei count, GLenum type, GLvoid* indices, GLsizei primcount);
extern glDrawElementsInstancedEXTFunc _glDrawElementsInstancedEXT;
#define glDrawElementsInstancedEXT VE_ASSERT(_glDrawElementsInstancedEXT);_glDrawElementsInstancedEXT
typedef void (APIENTRY *glTexBufferEXTFunc)(GLenum target, GLenum internalformat, GLuint buffer);
extern glTexBufferEXTFunc _glTexBufferEXT;
#define glTexBufferEXT VE_ASSERT(_glTexBufferEXT);_glTexBufferEXT
typedef void (APIENTRY *glDepthRangedNVFunc)(GLdouble zNear, GLdouble zFar);
extern glDepthRangedNVFunc _glDepthRangedNV;
#define glDepthRangedNV VE_ASSERT(_glDepthRangedNV);_glDepthRangedNV
typedef void (APIENTRY *glClearDepthdNVFunc)(GLdouble depth);
extern glClearDepthdNVFunc _glClearDepthdNV;
#define glClearDepthdNV VE_ASSERT(_glClearDepthdNV);_glClearDepthdNV
typedef void (APIENTRY *glDepthBoundsdNVFunc)(GLdouble zmin, GLdouble zmax);
extern glDepthBoundsdNVFunc _glDepthBoundsdNV;
#define glDepthBoundsdNV VE_ASSERT(_glDepthBoundsdNV);_glDepthBoundsdNV
typedef void (APIENTRY *glRenderbufferStorageMultisampleCoverageNVFunc)(GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height);
extern glRenderbufferStorageMultisampleCoverageNVFunc _glRenderbufferStorageMultisampleCoverageNV;
#define glRenderbufferStorageMultisampleCoverageNV VE_ASSERT(_glRenderbufferStorageMultisampleCoverageNV);_glRenderbufferStorageMultisampleCoverageNV
typedef void (APIENTRY *glProgramBufferParametersfvNVFunc)(GLenum target, GLuint buffer, GLuint index, GLsizei count, GLfloat* params);
extern glProgramBufferParametersfvNVFunc _glProgramBufferParametersfvNV;
#define glProgramBufferParametersfvNV VE_ASSERT(_glProgramBufferParametersfvNV);_glProgramBufferParametersfvNV
typedef void (APIENTRY *glProgramBufferParametersIivNVFunc)(GLenum target, GLuint buffer, GLuint index, GLsizei count, GLint* params);
extern glProgramBufferParametersIivNVFunc _glProgramBufferParametersIivNV;
#define glProgramBufferParametersIivNV VE_ASSERT(_glProgramBufferParametersIivNV);_glProgramBufferParametersIivNV
typedef void (APIENTRY *glProgramBufferParametersIuivNVFunc)(GLenum target, GLuint buffer, GLuint index, GLsizei count, GLuint* params);
extern glProgramBufferParametersIuivNVFunc _glProgramBufferParametersIuivNV;
#define glProgramBufferParametersIuivNV VE_ASSERT(_glProgramBufferParametersIuivNV);_glProgramBufferParametersIuivNV
typedef void (APIENTRY *glColorMaskIndexedEXTFunc)(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
extern glColorMaskIndexedEXTFunc _glColorMaskIndexedEXT;
#define glColorMaskIndexedEXT VE_ASSERT(_glColorMaskIndexedEXT);_glColorMaskIndexedEXT
typedef void (APIENTRY *glGetBooleanIndexedvEXTFunc)(GLenum target, GLuint index, GLboolean* data);
extern glGetBooleanIndexedvEXTFunc _glGetBooleanIndexedvEXT;
#define glGetBooleanIndexedvEXT VE_ASSERT(_glGetBooleanIndexedvEXT);_glGetBooleanIndexedvEXT
typedef void (APIENTRY *glGetIntegerIndexedvEXTFunc)(GLenum target, GLuint index, GLint* data);
extern glGetIntegerIndexedvEXTFunc _glGetIntegerIndexedvEXT;
#define glGetIntegerIndexedvEXT VE_ASSERT(_glGetIntegerIndexedvEXT);_glGetIntegerIndexedvEXT
typedef void (APIENTRY *glEnableIndexedEXTFunc)(GLenum target, GLuint index);
extern glEnableIndexedEXTFunc _glEnableIndexedEXT;
#define glEnableIndexedEXT VE_ASSERT(_glEnableIndexedEXT);_glEnableIndexedEXT
typedef void (APIENTRY *glDisableIndexedEXTFunc)(GLenum target, GLuint index);
extern glDisableIndexedEXTFunc _glDisableIndexedEXT;
#define glDisableIndexedEXT VE_ASSERT(_glDisableIndexedEXT);_glDisableIndexedEXT
typedef GLboolean (APIENTRY *glIsEnabledIndexedEXTFunc)(GLenum target, GLuint index);
extern glIsEnabledIndexedEXTFunc _glIsEnabledIndexedEXT;
#define glIsEnabledIndexedEXT _glIsEnabledIndexedEXT
typedef void (APIENTRY *glBeginTransformFeedbackNVFunc)(GLenum primitiveMode);
extern glBeginTransformFeedbackNVFunc _glBeginTransformFeedbackNV;
#define glBeginTransformFeedbackNV VE_ASSERT(_glBeginTransformFeedbackNV);_glBeginTransformFeedbackNV
typedef void (APIENTRY *glEndTransformFeedbackNVFunc)();
extern glEndTransformFeedbackNVFunc _glEndTransformFeedbackNV;
#define glEndTransformFeedbackNV VE_ASSERT(_glEndTransformFeedbackNV);_glEndTransformFeedbackNV
typedef void (APIENTRY *glTransformFeedbackAttribsNVFunc)(GLuint count, GLint* attribs, GLenum bufferMode);
extern glTransformFeedbackAttribsNVFunc _glTransformFeedbackAttribsNV;
#define glTransformFeedbackAttribsNV VE_ASSERT(_glTransformFeedbackAttribsNV);_glTransformFeedbackAttribsNV
typedef void (APIENTRY *glBindBufferRangeNVFunc)(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
extern glBindBufferRangeNVFunc _glBindBufferRangeNV;
#define glBindBufferRangeNV VE_ASSERT(_glBindBufferRangeNV);_glBindBufferRangeNV
typedef void (APIENTRY *glBindBufferOffsetNVFunc)(GLenum target, GLuint index, GLuint buffer, GLintptr offset);
extern glBindBufferOffsetNVFunc _glBindBufferOffsetNV;
#define glBindBufferOffsetNV VE_ASSERT(_glBindBufferOffsetNV);_glBindBufferOffsetNV
typedef void (APIENTRY *glBindBufferBaseNVFunc)(GLenum target, GLuint index, GLuint buffer);
extern glBindBufferBaseNVFunc _glBindBufferBaseNV;
#define glBindBufferBaseNV VE_ASSERT(_glBindBufferBaseNV);_glBindBufferBaseNV
typedef void (APIENTRY *glTransformFeedbackVaryingsNVFunc)(GLuint program, GLsizei count, GLint* locations, GLenum bufferMode);
extern glTransformFeedbackVaryingsNVFunc _glTransformFeedbackVaryingsNV;
#define glTransformFeedbackVaryingsNV VE_ASSERT(_glTransformFeedbackVaryingsNV);_glTransformFeedbackVaryingsNV
typedef void (APIENTRY *glActiveVaryingNVFunc)(GLuint program, GLchar* name);
extern glActiveVaryingNVFunc _glActiveVaryingNV;
#define glActiveVaryingNV VE_ASSERT(_glActiveVaryingNV);_glActiveVaryingNV
typedef GLint (APIENTRY *glGetVaryingLocationNVFunc)(GLuint program, GLchar* name);
extern glGetVaryingLocationNVFunc _glGetVaryingLocationNV;
#define glGetVaryingLocationNV _glGetVaryingLocationNV
typedef void (APIENTRY *glGetActiveVaryingNVFunc)(GLuint program, GLuint index, GLsizei bufSize, GLsizei* length, GLsizei* size, GLenum* type, GLchar* name);
extern glGetActiveVaryingNVFunc _glGetActiveVaryingNV;
#define glGetActiveVaryingNV VE_ASSERT(_glGetActiveVaryingNV);_glGetActiveVaryingNV
typedef void (APIENTRY *glGetTransformFeedbackVaryingNVFunc)(GLuint program, GLuint index, GLint* location);
extern glGetTransformFeedbackVaryingNVFunc _glGetTransformFeedbackVaryingNV;
#define glGetTransformFeedbackVaryingNV VE_ASSERT(_glGetTransformFeedbackVaryingNV);_glGetTransformFeedbackVaryingNV
typedef void (APIENTRY *glTransformFeedbackStreamAttribsNVFunc)(GLsizei count, GLint* attribs, GLsizei nbuffers, GLint* bufstreams, GLenum bufferMode);
extern glTransformFeedbackStreamAttribsNVFunc _glTransformFeedbackStreamAttribsNV;
#define glTransformFeedbackStreamAttribsNV VE_ASSERT(_glTransformFeedbackStreamAttribsNV);_glTransformFeedbackStreamAttribsNV
typedef void (APIENTRY *glUniformBufferEXTFunc)(GLuint program, GLint location, GLuint buffer);
extern glUniformBufferEXTFunc _glUniformBufferEXT;
#define glUniformBufferEXT VE_ASSERT(_glUniformBufferEXT);_glUniformBufferEXT
typedef GLint (APIENTRY *glGetUniformBufferSizeEXTFunc)(GLuint program, GLint location);
extern glGetUniformBufferSizeEXTFunc _glGetUniformBufferSizeEXT;
#define glGetUniformBufferSizeEXT _glGetUniformBufferSizeEXT
typedef GLintptr (APIENTRY *glGetUniformOffsetEXTFunc)(GLuint program, GLint location);
extern glGetUniformOffsetEXTFunc _glGetUniformOffsetEXT;
#define glGetUniformOffsetEXT _glGetUniformOffsetEXT
typedef void (APIENTRY *glTexParameterIivEXTFunc)(GLenum target, GLenum pname, GLint* params);
extern glTexParameterIivEXTFunc _glTexParameterIivEXT;
#define glTexParameterIivEXT VE_ASSERT(_glTexParameterIivEXT);_glTexParameterIivEXT
typedef void (APIENTRY *glTexParameterIuivEXTFunc)(GLenum target, GLenum pname, GLuint* params);
extern glTexParameterIuivEXTFunc _glTexParameterIuivEXT;
#define glTexParameterIuivEXT VE_ASSERT(_glTexParameterIuivEXT);_glTexParameterIuivEXT
typedef void (APIENTRY *glGetTexParameterIivEXTFunc)(GLenum target, GLenum pname, GLint* params);
extern glGetTexParameterIivEXTFunc _glGetTexParameterIivEXT;
#define glGetTexParameterIivEXT VE_ASSERT(_glGetTexParameterIivEXT);_glGetTexParameterIivEXT
typedef void (APIENTRY *glGetTexParameterIuivEXTFunc)(GLenum target, GLenum pname, GLuint* params);
extern glGetTexParameterIuivEXTFunc _glGetTexParameterIuivEXT;
#define glGetTexParameterIuivEXT VE_ASSERT(_glGetTexParameterIuivEXT);_glGetTexParameterIuivEXT
typedef void (APIENTRY *glClearColorIiEXTFunc)(GLint red, GLint green, GLint blue, GLint alpha);
extern glClearColorIiEXTFunc _glClearColorIiEXT;
#define glClearColorIiEXT VE_ASSERT(_glClearColorIiEXT);_glClearColorIiEXT
typedef void (APIENTRY *glClearColorIuiEXTFunc)(GLuint red, GLuint green, GLuint blue, GLuint alpha);
extern glClearColorIuiEXTFunc _glClearColorIuiEXT;
#define glClearColorIuiEXT VE_ASSERT(_glClearColorIuiEXT);_glClearColorIuiEXT
typedef void (APIENTRY *glFrameTerminatorGREMEDYFunc)();
extern glFrameTerminatorGREMEDYFunc _glFrameTerminatorGREMEDY;
#define glFrameTerminatorGREMEDY VE_ASSERT(_glFrameTerminatorGREMEDY);_glFrameTerminatorGREMEDY
typedef void (APIENTRY *glBeginConditionalRenderNVFunc)(GLuint id, GLenum mode);
extern glBeginConditionalRenderNVFunc _glBeginConditionalRenderNV;
#define glBeginConditionalRenderNV VE_ASSERT(_glBeginConditionalRenderNV);_glBeginConditionalRenderNV
typedef void (APIENTRY *glEndConditionalRenderNVFunc)();
extern glEndConditionalRenderNVFunc _glEndConditionalRenderNV;
#define glEndConditionalRenderNV VE_ASSERT(_glEndConditionalRenderNV);_glEndConditionalRenderNV
typedef void (APIENTRY *glPresentFrameKeyedNVFunc)(GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLuint key0, GLenum target1, GLuint fill1, GLuint key1);
extern glPresentFrameKeyedNVFunc _glPresentFrameKeyedNV;
#define glPresentFrameKeyedNV VE_ASSERT(_glPresentFrameKeyedNV);_glPresentFrameKeyedNV
typedef void (APIENTRY *glPresentFrameDualFillNVFunc)(GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLenum target1, GLuint fill1, GLenum target2, GLuint fill2, GLenum target3, GLuint fill3);
extern glPresentFrameDualFillNVFunc _glPresentFrameDualFillNV;
#define glPresentFrameDualFillNV VE_ASSERT(_glPresentFrameDualFillNV);_glPresentFrameDualFillNV
typedef void (APIENTRY *glGetVideoivNVFunc)(GLuint video_slot, GLenum pname, GLint* params);
extern glGetVideoivNVFunc _glGetVideoivNV;
#define glGetVideoivNV VE_ASSERT(_glGetVideoivNV);_glGetVideoivNV
typedef void (APIENTRY *glGetVideouivNVFunc)(GLuint video_slot, GLenum pname, GLuint* params);
extern glGetVideouivNVFunc _glGetVideouivNV;
#define glGetVideouivNV VE_ASSERT(_glGetVideouivNV);_glGetVideouivNV
typedef void (APIENTRY *glGetVideoi64vNVFunc)(GLuint video_slot, GLenum pname, GLint64EXT* params);
extern glGetVideoi64vNVFunc _glGetVideoi64vNV;
#define glGetVideoi64vNV VE_ASSERT(_glGetVideoi64vNV);_glGetVideoi64vNV
typedef void (APIENTRY *glGetVideoui64vNVFunc)(GLuint video_slot, GLenum pname, GLuint64EXT* params);
extern glGetVideoui64vNVFunc _glGetVideoui64vNV;
#define glGetVideoui64vNV VE_ASSERT(_glGetVideoui64vNV);_glGetVideoui64vNV
typedef void (APIENTRY *glBeginTransformFeedbackEXTFunc)(GLenum primitiveMode);
extern glBeginTransformFeedbackEXTFunc _glBeginTransformFeedbackEXT;
#define glBeginTransformFeedbackEXT VE_ASSERT(_glBeginTransformFeedbackEXT);_glBeginTransformFeedbackEXT
typedef void (APIENTRY *glEndTransformFeedbackEXTFunc)();
extern glEndTransformFeedbackEXTFunc _glEndTransformFeedbackEXT;
#define glEndTransformFeedbackEXT VE_ASSERT(_glEndTransformFeedbackEXT);_glEndTransformFeedbackEXT
typedef void (APIENTRY *glBindBufferRangeEXTFunc)(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
extern glBindBufferRangeEXTFunc _glBindBufferRangeEXT;
#define glBindBufferRangeEXT VE_ASSERT(_glBindBufferRangeEXT);_glBindBufferRangeEXT
typedef void (APIENTRY *glBindBufferOffsetEXTFunc)(GLenum target, GLuint index, GLuint buffer, GLintptr offset);
extern glBindBufferOffsetEXTFunc _glBindBufferOffsetEXT;
#define glBindBufferOffsetEXT VE_ASSERT(_glBindBufferOffsetEXT);_glBindBufferOffsetEXT
typedef void (APIENTRY *glBindBufferBaseEXTFunc)(GLenum target, GLuint index, GLuint buffer);
extern glBindBufferBaseEXTFunc _glBindBufferBaseEXT;
#define glBindBufferBaseEXT VE_ASSERT(_glBindBufferBaseEXT);_glBindBufferBaseEXT
typedef void (APIENTRY *glTransformFeedbackVaryingsEXTFunc)(GLuint program, GLsizei count, GLchar** varyings, GLenum bufferMode);
extern glTransformFeedbackVaryingsEXTFunc _glTransformFeedbackVaryingsEXT;
#define glTransformFeedbackVaryingsEXT VE_ASSERT(_glTransformFeedbackVaryingsEXT);_glTransformFeedbackVaryingsEXT
typedef void (APIENTRY *glGetTransformFeedbackVaryingEXTFunc)(GLuint program, GLuint index, GLsizei bufSize, GLsizei* length, GLsizei* size, GLenum* type, GLchar* name);
extern glGetTransformFeedbackVaryingEXTFunc _glGetTransformFeedbackVaryingEXT;
#define glGetTransformFeedbackVaryingEXT VE_ASSERT(_glGetTransformFeedbackVaryingEXT);_glGetTransformFeedbackVaryingEXT
typedef void (APIENTRY *glClientAttribDefaultEXTFunc)(GLbitfield mask);
extern glClientAttribDefaultEXTFunc _glClientAttribDefaultEXT;
#define glClientAttribDefaultEXT VE_ASSERT(_glClientAttribDefaultEXT);_glClientAttribDefaultEXT
typedef void (APIENTRY *glPushClientAttribDefaultEXTFunc)(GLbitfield mask);
extern glPushClientAttribDefaultEXTFunc _glPushClientAttribDefaultEXT;
#define glPushClientAttribDefaultEXT VE_ASSERT(_glPushClientAttribDefaultEXT);_glPushClientAttribDefaultEXT
typedef void (APIENTRY *glMatrixLoadfEXTFunc)(GLenum mode, GLfloat* m);
extern glMatrixLoadfEXTFunc _glMatrixLoadfEXT;
#define glMatrixLoadfEXT VE_ASSERT(_glMatrixLoadfEXT);_glMatrixLoadfEXT
typedef void (APIENTRY *glMatrixLoaddEXTFunc)(GLenum mode, GLdouble* m);
extern glMatrixLoaddEXTFunc _glMatrixLoaddEXT;
#define glMatrixLoaddEXT VE_ASSERT(_glMatrixLoaddEXT);_glMatrixLoaddEXT
typedef void (APIENTRY *glMatrixMultfEXTFunc)(GLenum mode, GLfloat* m);
extern glMatrixMultfEXTFunc _glMatrixMultfEXT;
#define glMatrixMultfEXT VE_ASSERT(_glMatrixMultfEXT);_glMatrixMultfEXT
typedef void (APIENTRY *glMatrixMultdEXTFunc)(GLenum mode, GLdouble* m);
extern glMatrixMultdEXTFunc _glMatrixMultdEXT;
#define glMatrixMultdEXT VE_ASSERT(_glMatrixMultdEXT);_glMatrixMultdEXT
typedef void (APIENTRY *glMatrixLoadIdentityEXTFunc)(GLenum mode);
extern glMatrixLoadIdentityEXTFunc _glMatrixLoadIdentityEXT;
#define glMatrixLoadIdentityEXT VE_ASSERT(_glMatrixLoadIdentityEXT);_glMatrixLoadIdentityEXT
typedef void (APIENTRY *glMatrixRotatefEXTFunc)(GLenum mode, GLfloat angle, GLfloat x, GLfloat y, GLfloat z);
extern glMatrixRotatefEXTFunc _glMatrixRotatefEXT;
#define glMatrixRotatefEXT VE_ASSERT(_glMatrixRotatefEXT);_glMatrixRotatefEXT
typedef void (APIENTRY *glMatrixRotatedEXTFunc)(GLenum mode, GLdouble angle, GLdouble x, GLdouble y, GLdouble z);
extern glMatrixRotatedEXTFunc _glMatrixRotatedEXT;
#define glMatrixRotatedEXT VE_ASSERT(_glMatrixRotatedEXT);_glMatrixRotatedEXT
typedef void (APIENTRY *glMatrixScalefEXTFunc)(GLenum mode, GLfloat x, GLfloat y, GLfloat z);
extern glMatrixScalefEXTFunc _glMatrixScalefEXT;
#define glMatrixScalefEXT VE_ASSERT(_glMatrixScalefEXT);_glMatrixScalefEXT
typedef void (APIENTRY *glMatrixScaledEXTFunc)(GLenum mode, GLdouble x, GLdouble y, GLdouble z);
extern glMatrixScaledEXTFunc _glMatrixScaledEXT;
#define glMatrixScaledEXT VE_ASSERT(_glMatrixScaledEXT);_glMatrixScaledEXT
typedef void (APIENTRY *glMatrixTranslatefEXTFunc)(GLenum mode, GLfloat x, GLfloat y, GLfloat z);
extern glMatrixTranslatefEXTFunc _glMatrixTranslatefEXT;
#define glMatrixTranslatefEXT VE_ASSERT(_glMatrixTranslatefEXT);_glMatrixTranslatefEXT
typedef void (APIENTRY *glMatrixTranslatedEXTFunc)(GLenum mode, GLdouble x, GLdouble y, GLdouble z);
extern glMatrixTranslatedEXTFunc _glMatrixTranslatedEXT;
#define glMatrixTranslatedEXT VE_ASSERT(_glMatrixTranslatedEXT);_glMatrixTranslatedEXT
typedef void (APIENTRY *glMatrixFrustumEXTFunc)(GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
extern glMatrixFrustumEXTFunc _glMatrixFrustumEXT;
#define glMatrixFrustumEXT VE_ASSERT(_glMatrixFrustumEXT);_glMatrixFrustumEXT
typedef void (APIENTRY *glMatrixOrthoEXTFunc)(GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
extern glMatrixOrthoEXTFunc _glMatrixOrthoEXT;
#define glMatrixOrthoEXT VE_ASSERT(_glMatrixOrthoEXT);_glMatrixOrthoEXT
typedef void (APIENTRY *glMatrixPopEXTFunc)(GLenum mode);
extern glMatrixPopEXTFunc _glMatrixPopEXT;
#define glMatrixPopEXT VE_ASSERT(_glMatrixPopEXT);_glMatrixPopEXT
typedef void (APIENTRY *glMatrixPushEXTFunc)(GLenum mode);
extern glMatrixPushEXTFunc _glMatrixPushEXT;
#define glMatrixPushEXT VE_ASSERT(_glMatrixPushEXT);_glMatrixPushEXT
typedef void (APIENTRY *glMatrixLoadTransposefEXTFunc)(GLenum mode, GLfloat* m);
extern glMatrixLoadTransposefEXTFunc _glMatrixLoadTransposefEXT;
#define glMatrixLoadTransposefEXT VE_ASSERT(_glMatrixLoadTransposefEXT);_glMatrixLoadTransposefEXT
typedef void (APIENTRY *glMatrixLoadTransposedEXTFunc)(GLenum mode, GLdouble* m);
extern glMatrixLoadTransposedEXTFunc _glMatrixLoadTransposedEXT;
#define glMatrixLoadTransposedEXT VE_ASSERT(_glMatrixLoadTransposedEXT);_glMatrixLoadTransposedEXT
typedef void (APIENTRY *glMatrixMultTransposefEXTFunc)(GLenum mode, GLfloat* m);
extern glMatrixMultTransposefEXTFunc _glMatrixMultTransposefEXT;
#define glMatrixMultTransposefEXT VE_ASSERT(_glMatrixMultTransposefEXT);_glMatrixMultTransposefEXT
typedef void (APIENTRY *glMatrixMultTransposedEXTFunc)(GLenum mode, GLdouble* m);
extern glMatrixMultTransposedEXTFunc _glMatrixMultTransposedEXT;
#define glMatrixMultTransposedEXT VE_ASSERT(_glMatrixMultTransposedEXT);_glMatrixMultTransposedEXT
typedef void (APIENTRY *glTextureParameterfEXTFunc)(GLuint texture, GLenum target, GLenum pname, GLfloat param);
extern glTextureParameterfEXTFunc _glTextureParameterfEXT;
#define glTextureParameterfEXT VE_ASSERT(_glTextureParameterfEXT);_glTextureParameterfEXT
typedef void (APIENTRY *glTextureParameterfvEXTFunc)(GLuint texture, GLenum target, GLenum pname, GLfloat* params);
extern glTextureParameterfvEXTFunc _glTextureParameterfvEXT;
#define glTextureParameterfvEXT VE_ASSERT(_glTextureParameterfvEXT);_glTextureParameterfvEXT
typedef void (APIENTRY *glTextureParameteriEXTFunc)(GLuint texture, GLenum target, GLenum pname, GLint param);
extern glTextureParameteriEXTFunc _glTextureParameteriEXT;
#define glTextureParameteriEXT VE_ASSERT(_glTextureParameteriEXT);_glTextureParameteriEXT
typedef void (APIENTRY *glTextureParameterivEXTFunc)(GLuint texture, GLenum target, GLenum pname, GLint* params);
extern glTextureParameterivEXTFunc _glTextureParameterivEXT;
#define glTextureParameterivEXT VE_ASSERT(_glTextureParameterivEXT);_glTextureParameterivEXT
typedef void (APIENTRY *glTextureImage1DEXTFunc)(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLenum format, GLenum type, GLvoid* pixels);
extern glTextureImage1DEXTFunc _glTextureImage1DEXT;
#define glTextureImage1DEXT VE_ASSERT(_glTextureImage1DEXT);_glTextureImage1DEXT
typedef void (APIENTRY *glTextureImage2DEXTFunc)(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, GLvoid* pixels);
extern glTextureImage2DEXTFunc _glTextureImage2DEXT;
#define glTextureImage2DEXT VE_ASSERT(_glTextureImage2DEXT);_glTextureImage2DEXT
typedef void (APIENTRY *glTextureSubImage1DEXTFunc)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, GLvoid* pixels);
extern glTextureSubImage1DEXTFunc _glTextureSubImage1DEXT;
#define glTextureSubImage1DEXT VE_ASSERT(_glTextureSubImage1DEXT);_glTextureSubImage1DEXT
typedef void (APIENTRY *glTextureSubImage2DEXTFunc)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid* pixels);
extern glTextureSubImage2DEXTFunc _glTextureSubImage2DEXT;
#define glTextureSubImage2DEXT VE_ASSERT(_glTextureSubImage2DEXT);_glTextureSubImage2DEXT
typedef void (APIENTRY *glCopyTextureImage1DEXTFunc)(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
extern glCopyTextureImage1DEXTFunc _glCopyTextureImage1DEXT;
#define glCopyTextureImage1DEXT VE_ASSERT(_glCopyTextureImage1DEXT);_glCopyTextureImage1DEXT
typedef void (APIENTRY *glCopyTextureImage2DEXTFunc)(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
extern glCopyTextureImage2DEXTFunc _glCopyTextureImage2DEXT;
#define glCopyTextureImage2DEXT VE_ASSERT(_glCopyTextureImage2DEXT);_glCopyTextureImage2DEXT
typedef void (APIENTRY *glCopyTextureSubImage1DEXTFunc)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
extern glCopyTextureSubImage1DEXTFunc _glCopyTextureSubImage1DEXT;
#define glCopyTextureSubImage1DEXT VE_ASSERT(_glCopyTextureSubImage1DEXT);_glCopyTextureSubImage1DEXT
typedef void (APIENTRY *glCopyTextureSubImage2DEXTFunc)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
extern glCopyTextureSubImage2DEXTFunc _glCopyTextureSubImage2DEXT;
#define glCopyTextureSubImage2DEXT VE_ASSERT(_glCopyTextureSubImage2DEXT);_glCopyTextureSubImage2DEXT
typedef void (APIENTRY *glGetTextureImageEXTFunc)(GLuint texture, GLenum target, GLint level, GLenum format, GLenum type, GLvoid* pixels);
extern glGetTextureImageEXTFunc _glGetTextureImageEXT;
#define glGetTextureImageEXT VE_ASSERT(_glGetTextureImageEXT);_glGetTextureImageEXT
typedef void (APIENTRY *glGetTextureParameterfvEXTFunc)(GLuint texture, GLenum target, GLenum pname, GLfloat* params);
extern glGetTextureParameterfvEXTFunc _glGetTextureParameterfvEXT;
#define glGetTextureParameterfvEXT VE_ASSERT(_glGetTextureParameterfvEXT);_glGetTextureParameterfvEXT
typedef void (APIENTRY *glGetTextureParameterivEXTFunc)(GLuint texture, GLenum target, GLenum pname, GLint* params);
extern glGetTextureParameterivEXTFunc _glGetTextureParameterivEXT;
#define glGetTextureParameterivEXT VE_ASSERT(_glGetTextureParameterivEXT);_glGetTextureParameterivEXT
typedef void (APIENTRY *glGetTextureLevelParameterfvEXTFunc)(GLuint texture, GLenum target, GLint level, GLenum pname, GLfloat* params);
extern glGetTextureLevelParameterfvEXTFunc _glGetTextureLevelParameterfvEXT;
#define glGetTextureLevelParameterfvEXT VE_ASSERT(_glGetTextureLevelParameterfvEXT);_glGetTextureLevelParameterfvEXT
typedef void (APIENTRY *glGetTextureLevelParameterivEXTFunc)(GLuint texture, GLenum target, GLint level, GLenum pname, GLint* params);
extern glGetTextureLevelParameterivEXTFunc _glGetTextureLevelParameterivEXT;
#define glGetTextureLevelParameterivEXT VE_ASSERT(_glGetTextureLevelParameterivEXT);_glGetTextureLevelParameterivEXT
typedef void (APIENTRY *glTextureImage3DEXTFunc)(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, GLvoid* pixels);
extern glTextureImage3DEXTFunc _glTextureImage3DEXT;
#define glTextureImage3DEXT VE_ASSERT(_glTextureImage3DEXT);_glTextureImage3DEXT
typedef void (APIENTRY *glTextureSubImage3DEXTFunc)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLvoid* pixels);
extern glTextureSubImage3DEXTFunc _glTextureSubImage3DEXT;
#define glTextureSubImage3DEXT VE_ASSERT(_glTextureSubImage3DEXT);_glTextureSubImage3DEXT
typedef void (APIENTRY *glCopyTextureSubImage3DEXTFunc)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
extern glCopyTextureSubImage3DEXTFunc _glCopyTextureSubImage3DEXT;
#define glCopyTextureSubImage3DEXT VE_ASSERT(_glCopyTextureSubImage3DEXT);_glCopyTextureSubImage3DEXT
typedef void (APIENTRY *glMultiTexParameterfEXTFunc)(GLenum texunit, GLenum target, GLenum pname, GLfloat param);
extern glMultiTexParameterfEXTFunc _glMultiTexParameterfEXT;
#define glMultiTexParameterfEXT VE_ASSERT(_glMultiTexParameterfEXT);_glMultiTexParameterfEXT
typedef void (APIENTRY *glMultiTexParameterfvEXTFunc)(GLenum texunit, GLenum target, GLenum pname, GLfloat* params);
extern glMultiTexParameterfvEXTFunc _glMultiTexParameterfvEXT;
#define glMultiTexParameterfvEXT VE_ASSERT(_glMultiTexParameterfvEXT);_glMultiTexParameterfvEXT
typedef void (APIENTRY *glMultiTexParameteriEXTFunc)(GLenum texunit, GLenum target, GLenum pname, GLint param);
extern glMultiTexParameteriEXTFunc _glMultiTexParameteriEXT;
#define glMultiTexParameteriEXT VE_ASSERT(_glMultiTexParameteriEXT);_glMultiTexParameteriEXT
typedef void (APIENTRY *glMultiTexParameterivEXTFunc)(GLenum texunit, GLenum target, GLenum pname, GLint* params);
extern glMultiTexParameterivEXTFunc _glMultiTexParameterivEXT;
#define glMultiTexParameterivEXT VE_ASSERT(_glMultiTexParameterivEXT);_glMultiTexParameterivEXT
typedef void (APIENTRY *glMultiTexImage1DEXTFunc)(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLenum format, GLenum type, GLvoid* pixels);
extern glMultiTexImage1DEXTFunc _glMultiTexImage1DEXT;
#define glMultiTexImage1DEXT VE_ASSERT(_glMultiTexImage1DEXT);_glMultiTexImage1DEXT
typedef void (APIENTRY *glMultiTexImage2DEXTFunc)(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, GLvoid* pixels);
extern glMultiTexImage2DEXTFunc _glMultiTexImage2DEXT;
#define glMultiTexImage2DEXT VE_ASSERT(_glMultiTexImage2DEXT);_glMultiTexImage2DEXT
typedef void (APIENTRY *glMultiTexSubImage1DEXTFunc)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, GLvoid* pixels);
extern glMultiTexSubImage1DEXTFunc _glMultiTexSubImage1DEXT;
#define glMultiTexSubImage1DEXT VE_ASSERT(_glMultiTexSubImage1DEXT);_glMultiTexSubImage1DEXT
typedef void (APIENTRY *glMultiTexSubImage2DEXTFunc)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid* pixels);
extern glMultiTexSubImage2DEXTFunc _glMultiTexSubImage2DEXT;
#define glMultiTexSubImage2DEXT VE_ASSERT(_glMultiTexSubImage2DEXT);_glMultiTexSubImage2DEXT
typedef void (APIENTRY *glCopyMultiTexImage1DEXTFunc)(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
extern glCopyMultiTexImage1DEXTFunc _glCopyMultiTexImage1DEXT;
#define glCopyMultiTexImage1DEXT VE_ASSERT(_glCopyMultiTexImage1DEXT);_glCopyMultiTexImage1DEXT
typedef void (APIENTRY *glCopyMultiTexImage2DEXTFunc)(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
extern glCopyMultiTexImage2DEXTFunc _glCopyMultiTexImage2DEXT;
#define glCopyMultiTexImage2DEXT VE_ASSERT(_glCopyMultiTexImage2DEXT);_glCopyMultiTexImage2DEXT
typedef void (APIENTRY *glCopyMultiTexSubImage1DEXTFunc)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
extern glCopyMultiTexSubImage1DEXTFunc _glCopyMultiTexSubImage1DEXT;
#define glCopyMultiTexSubImage1DEXT VE_ASSERT(_glCopyMultiTexSubImage1DEXT);_glCopyMultiTexSubImage1DEXT
typedef void (APIENTRY *glCopyMultiTexSubImage2DEXTFunc)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
extern glCopyMultiTexSubImage2DEXTFunc _glCopyMultiTexSubImage2DEXT;
#define glCopyMultiTexSubImage2DEXT VE_ASSERT(_glCopyMultiTexSubImage2DEXT);_glCopyMultiTexSubImage2DEXT
typedef void (APIENTRY *glGetMultiTexImageEXTFunc)(GLenum texunit, GLenum target, GLint level, GLenum format, GLenum type, GLvoid* pixels);
extern glGetMultiTexImageEXTFunc _glGetMultiTexImageEXT;
#define glGetMultiTexImageEXT VE_ASSERT(_glGetMultiTexImageEXT);_glGetMultiTexImageEXT
typedef void (APIENTRY *glGetMultiTexParameterfvEXTFunc)(GLenum texunit, GLenum target, GLenum pname, GLfloat* params);
extern glGetMultiTexParameterfvEXTFunc _glGetMultiTexParameterfvEXT;
#define glGetMultiTexParameterfvEXT VE_ASSERT(_glGetMultiTexParameterfvEXT);_glGetMultiTexParameterfvEXT
typedef void (APIENTRY *glGetMultiTexParameterivEXTFunc)(GLenum texunit, GLenum target, GLenum pname, GLint* params);
extern glGetMultiTexParameterivEXTFunc _glGetMultiTexParameterivEXT;
#define glGetMultiTexParameterivEXT VE_ASSERT(_glGetMultiTexParameterivEXT);_glGetMultiTexParameterivEXT
typedef void (APIENTRY *glGetMultiTexLevelParameterfvEXTFunc)(GLenum texunit, GLenum target, GLint level, GLenum pname, GLfloat* params);
extern glGetMultiTexLevelParameterfvEXTFunc _glGetMultiTexLevelParameterfvEXT;
#define glGetMultiTexLevelParameterfvEXT VE_ASSERT(_glGetMultiTexLevelParameterfvEXT);_glGetMultiTexLevelParameterfvEXT
typedef void (APIENTRY *glGetMultiTexLevelParameterivEXTFunc)(GLenum texunit, GLenum target, GLint level, GLenum pname, GLint* params);
extern glGetMultiTexLevelParameterivEXTFunc _glGetMultiTexLevelParameterivEXT;
#define glGetMultiTexLevelParameterivEXT VE_ASSERT(_glGetMultiTexLevelParameterivEXT);_glGetMultiTexLevelParameterivEXT
typedef void (APIENTRY *glMultiTexImage3DEXTFunc)(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, GLvoid* pixels);
extern glMultiTexImage3DEXTFunc _glMultiTexImage3DEXT;
#define glMultiTexImage3DEXT VE_ASSERT(_glMultiTexImage3DEXT);_glMultiTexImage3DEXT
typedef void (APIENTRY *glMultiTexSubImage3DEXTFunc)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLvoid* pixels);
extern glMultiTexSubImage3DEXTFunc _glMultiTexSubImage3DEXT;
#define glMultiTexSubImage3DEXT VE_ASSERT(_glMultiTexSubImage3DEXT);_glMultiTexSubImage3DEXT
typedef void (APIENTRY *glCopyMultiTexSubImage3DEXTFunc)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
extern glCopyMultiTexSubImage3DEXTFunc _glCopyMultiTexSubImage3DEXT;
#define glCopyMultiTexSubImage3DEXT VE_ASSERT(_glCopyMultiTexSubImage3DEXT);_glCopyMultiTexSubImage3DEXT
typedef void (APIENTRY *glBindMultiTextureEXTFunc)(GLenum texunit, GLenum target, GLuint texture);
extern glBindMultiTextureEXTFunc _glBindMultiTextureEXT;
#define glBindMultiTextureEXT VE_ASSERT(_glBindMultiTextureEXT);_glBindMultiTextureEXT
typedef void (APIENTRY *glEnableClientStateIndexedEXTFunc)(GLenum array, GLuint index);
extern glEnableClientStateIndexedEXTFunc _glEnableClientStateIndexedEXT;
#define glEnableClientStateIndexedEXT VE_ASSERT(_glEnableClientStateIndexedEXT);_glEnableClientStateIndexedEXT
typedef void (APIENTRY *glDisableClientStateIndexedEXTFunc)(GLenum array, GLuint index);
extern glDisableClientStateIndexedEXTFunc _glDisableClientStateIndexedEXT;
#define glDisableClientStateIndexedEXT VE_ASSERT(_glDisableClientStateIndexedEXT);_glDisableClientStateIndexedEXT
typedef void (APIENTRY *glMultiTexCoordPointerEXTFunc)(GLenum texunit, GLint size, GLenum type, GLsizei stride, GLvoid* pointer);
extern glMultiTexCoordPointerEXTFunc _glMultiTexCoordPointerEXT;
#define glMultiTexCoordPointerEXT VE_ASSERT(_glMultiTexCoordPointerEXT);_glMultiTexCoordPointerEXT
typedef void (APIENTRY *glMultiTexEnvfEXTFunc)(GLenum texunit, GLenum target, GLenum pname, GLfloat param);
extern glMultiTexEnvfEXTFunc _glMultiTexEnvfEXT;
#define glMultiTexEnvfEXT VE_ASSERT(_glMultiTexEnvfEXT);_glMultiTexEnvfEXT
typedef void (APIENTRY *glMultiTexEnvfvEXTFunc)(GLenum texunit, GLenum target, GLenum pname, GLfloat* params);
extern glMultiTexEnvfvEXTFunc _glMultiTexEnvfvEXT;
#define glMultiTexEnvfvEXT VE_ASSERT(_glMultiTexEnvfvEXT);_glMultiTexEnvfvEXT
typedef void (APIENTRY *glMultiTexEnviEXTFunc)(GLenum texunit, GLenum target, GLenum pname, GLint param);
extern glMultiTexEnviEXTFunc _glMultiTexEnviEXT;
#define glMultiTexEnviEXT VE_ASSERT(_glMultiTexEnviEXT);_glMultiTexEnviEXT
typedef void (APIENTRY *glMultiTexEnvivEXTFunc)(GLenum texunit, GLenum target, GLenum pname, GLint* params);
extern glMultiTexEnvivEXTFunc _glMultiTexEnvivEXT;
#define glMultiTexEnvivEXT VE_ASSERT(_glMultiTexEnvivEXT);_glMultiTexEnvivEXT
typedef void (APIENTRY *glMultiTexGendEXTFunc)(GLenum texunit, GLenum coord, GLenum pname, GLdouble param);
extern glMultiTexGendEXTFunc _glMultiTexGendEXT;
#define glMultiTexGendEXT VE_ASSERT(_glMultiTexGendEXT);_glMultiTexGendEXT
typedef void (APIENTRY *glMultiTexGendvEXTFunc)(GLenum texunit, GLenum coord, GLenum pname, GLdouble* params);
extern glMultiTexGendvEXTFunc _glMultiTexGendvEXT;
#define glMultiTexGendvEXT VE_ASSERT(_glMultiTexGendvEXT);_glMultiTexGendvEXT
typedef void (APIENTRY *glMultiTexGenfEXTFunc)(GLenum texunit, GLenum coord, GLenum pname, GLfloat param);
extern glMultiTexGenfEXTFunc _glMultiTexGenfEXT;
#define glMultiTexGenfEXT VE_ASSERT(_glMultiTexGenfEXT);_glMultiTexGenfEXT
typedef void (APIENTRY *glMultiTexGenfvEXTFunc)(GLenum texunit, GLenum coord, GLenum pname, GLfloat* params);
extern glMultiTexGenfvEXTFunc _glMultiTexGenfvEXT;
#define glMultiTexGenfvEXT VE_ASSERT(_glMultiTexGenfvEXT);_glMultiTexGenfvEXT
typedef void (APIENTRY *glMultiTexGeniEXTFunc)(GLenum texunit, GLenum coord, GLenum pname, GLint param);
extern glMultiTexGeniEXTFunc _glMultiTexGeniEXT;
#define glMultiTexGeniEXT VE_ASSERT(_glMultiTexGeniEXT);_glMultiTexGeniEXT
typedef void (APIENTRY *glMultiTexGenivEXTFunc)(GLenum texunit, GLenum coord, GLenum pname, GLint* params);
extern glMultiTexGenivEXTFunc _glMultiTexGenivEXT;
#define glMultiTexGenivEXT VE_ASSERT(_glMultiTexGenivEXT);_glMultiTexGenivEXT
typedef void (APIENTRY *glGetMultiTexEnvfvEXTFunc)(GLenum texunit, GLenum target, GLenum pname, GLfloat* params);
extern glGetMultiTexEnvfvEXTFunc _glGetMultiTexEnvfvEXT;
#define glGetMultiTexEnvfvEXT VE_ASSERT(_glGetMultiTexEnvfvEXT);_glGetMultiTexEnvfvEXT
typedef void (APIENTRY *glGetMultiTexEnvivEXTFunc)(GLenum texunit, GLenum target, GLenum pname, GLint* params);
extern glGetMultiTexEnvivEXTFunc _glGetMultiTexEnvivEXT;
#define glGetMultiTexEnvivEXT VE_ASSERT(_glGetMultiTexEnvivEXT);_glGetMultiTexEnvivEXT
typedef void (APIENTRY *glGetMultiTexGendvEXTFunc)(GLenum texunit, GLenum coord, GLenum pname, GLdouble* params);
extern glGetMultiTexGendvEXTFunc _glGetMultiTexGendvEXT;
#define glGetMultiTexGendvEXT VE_ASSERT(_glGetMultiTexGendvEXT);_glGetMultiTexGendvEXT
typedef void (APIENTRY *glGetMultiTexGenfvEXTFunc)(GLenum texunit, GLenum coord, GLenum pname, GLfloat* params);
extern glGetMultiTexGenfvEXTFunc _glGetMultiTexGenfvEXT;
#define glGetMultiTexGenfvEXT VE_ASSERT(_glGetMultiTexGenfvEXT);_glGetMultiTexGenfvEXT
typedef void (APIENTRY *glGetMultiTexGenivEXTFunc)(GLenum texunit, GLenum coord, GLenum pname, GLint* params);
extern glGetMultiTexGenivEXTFunc _glGetMultiTexGenivEXT;
#define glGetMultiTexGenivEXT VE_ASSERT(_glGetMultiTexGenivEXT);_glGetMultiTexGenivEXT
typedef void (APIENTRY *glGetFloatIndexedvEXTFunc)(GLenum target, GLuint index, GLfloat* data);
extern glGetFloatIndexedvEXTFunc _glGetFloatIndexedvEXT;
#define glGetFloatIndexedvEXT VE_ASSERT(_glGetFloatIndexedvEXT);_glGetFloatIndexedvEXT
typedef void (APIENTRY *glGetDoubleIndexedvEXTFunc)(GLenum target, GLuint index, GLdouble* data);
extern glGetDoubleIndexedvEXTFunc _glGetDoubleIndexedvEXT;
#define glGetDoubleIndexedvEXT VE_ASSERT(_glGetDoubleIndexedvEXT);_glGetDoubleIndexedvEXT
typedef void (APIENTRY *glGetPointerIndexedvEXTFunc)(GLenum target, GLuint index, GLvoid** data);
extern glGetPointerIndexedvEXTFunc _glGetPointerIndexedvEXT;
#define glGetPointerIndexedvEXT VE_ASSERT(_glGetPointerIndexedvEXT);_glGetPointerIndexedvEXT
typedef void (APIENTRY *glCompressedTextureImage3DEXTFunc)(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, GLvoid* bits);
extern glCompressedTextureImage3DEXTFunc _glCompressedTextureImage3DEXT;
#define glCompressedTextureImage3DEXT VE_ASSERT(_glCompressedTextureImage3DEXT);_glCompressedTextureImage3DEXT
typedef void (APIENTRY *glCompressedTextureImage2DEXTFunc)(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, GLvoid* bits);
extern glCompressedTextureImage2DEXTFunc _glCompressedTextureImage2DEXT;
#define glCompressedTextureImage2DEXT VE_ASSERT(_glCompressedTextureImage2DEXT);_glCompressedTextureImage2DEXT
typedef void (APIENTRY *glCompressedTextureImage1DEXTFunc)(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, GLvoid* bits);
extern glCompressedTextureImage1DEXTFunc _glCompressedTextureImage1DEXT;
#define glCompressedTextureImage1DEXT VE_ASSERT(_glCompressedTextureImage1DEXT);_glCompressedTextureImage1DEXT
typedef void (APIENTRY *glCompressedTextureSubImage3DEXTFunc)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, GLvoid* bits);
extern glCompressedTextureSubImage3DEXTFunc _glCompressedTextureSubImage3DEXT;
#define glCompressedTextureSubImage3DEXT VE_ASSERT(_glCompressedTextureSubImage3DEXT);_glCompressedTextureSubImage3DEXT
typedef void (APIENTRY *glCompressedTextureSubImage2DEXTFunc)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, GLvoid* bits);
extern glCompressedTextureSubImage2DEXTFunc _glCompressedTextureSubImage2DEXT;
#define glCompressedTextureSubImage2DEXT VE_ASSERT(_glCompressedTextureSubImage2DEXT);_glCompressedTextureSubImage2DEXT
typedef void (APIENTRY *glCompressedTextureSubImage1DEXTFunc)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, GLvoid* bits);
extern glCompressedTextureSubImage1DEXTFunc _glCompressedTextureSubImage1DEXT;
#define glCompressedTextureSubImage1DEXT VE_ASSERT(_glCompressedTextureSubImage1DEXT);_glCompressedTextureSubImage1DEXT
typedef void (APIENTRY *glGetCompressedTextureImageEXTFunc)(GLuint texture, GLenum target, GLint lod, GLvoid* img);
extern glGetCompressedTextureImageEXTFunc _glGetCompressedTextureImageEXT;
#define glGetCompressedTextureImageEXT VE_ASSERT(_glGetCompressedTextureImageEXT);_glGetCompressedTextureImageEXT
typedef void (APIENTRY *glCompressedMultiTexImage3DEXTFunc)(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, GLvoid* bits);
extern glCompressedMultiTexImage3DEXTFunc _glCompressedMultiTexImage3DEXT;
#define glCompressedMultiTexImage3DEXT VE_ASSERT(_glCompressedMultiTexImage3DEXT);_glCompressedMultiTexImage3DEXT
typedef void (APIENTRY *glCompressedMultiTexImage2DEXTFunc)(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, GLvoid* bits);
extern glCompressedMultiTexImage2DEXTFunc _glCompressedMultiTexImage2DEXT;
#define glCompressedMultiTexImage2DEXT VE_ASSERT(_glCompressedMultiTexImage2DEXT);_glCompressedMultiTexImage2DEXT
typedef void (APIENTRY *glCompressedMultiTexImage1DEXTFunc)(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, GLvoid* bits);
extern glCompressedMultiTexImage1DEXTFunc _glCompressedMultiTexImage1DEXT;
#define glCompressedMultiTexImage1DEXT VE_ASSERT(_glCompressedMultiTexImage1DEXT);_glCompressedMultiTexImage1DEXT
typedef void (APIENTRY *glCompressedMultiTexSubImage3DEXTFunc)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, GLvoid* bits);
extern glCompressedMultiTexSubImage3DEXTFunc _glCompressedMultiTexSubImage3DEXT;
#define glCompressedMultiTexSubImage3DEXT VE_ASSERT(_glCompressedMultiTexSubImage3DEXT);_glCompressedMultiTexSubImage3DEXT
typedef void (APIENTRY *glCompressedMultiTexSubImage2DEXTFunc)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, GLvoid* bits);
extern glCompressedMultiTexSubImage2DEXTFunc _glCompressedMultiTexSubImage2DEXT;
#define glCompressedMultiTexSubImage2DEXT VE_ASSERT(_glCompressedMultiTexSubImage2DEXT);_glCompressedMultiTexSubImage2DEXT
typedef void (APIENTRY *glCompressedMultiTexSubImage1DEXTFunc)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, GLvoid* bits);
extern glCompressedMultiTexSubImage1DEXTFunc _glCompressedMultiTexSubImage1DEXT;
#define glCompressedMultiTexSubImage1DEXT VE_ASSERT(_glCompressedMultiTexSubImage1DEXT);_glCompressedMultiTexSubImage1DEXT
typedef void (APIENTRY *glGetCompressedMultiTexImageEXTFunc)(GLenum texunit, GLenum target, GLint lod, GLvoid* img);
extern glGetCompressedMultiTexImageEXTFunc _glGetCompressedMultiTexImageEXT;
#define glGetCompressedMultiTexImageEXT VE_ASSERT(_glGetCompressedMultiTexImageEXT);_glGetCompressedMultiTexImageEXT
typedef void (APIENTRY *glNamedProgramStringEXTFunc)(GLuint program, GLenum target, GLenum format, GLsizei len, GLvoid* string);
extern glNamedProgramStringEXTFunc _glNamedProgramStringEXT;
#define glNamedProgramStringEXT VE_ASSERT(_glNamedProgramStringEXT);_glNamedProgramStringEXT
typedef void (APIENTRY *glNamedProgramLocalParameter4dEXTFunc)(GLuint program, GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
extern glNamedProgramLocalParameter4dEXTFunc _glNamedProgramLocalParameter4dEXT;
#define glNamedProgramLocalParameter4dEXT VE_ASSERT(_glNamedProgramLocalParameter4dEXT);_glNamedProgramLocalParameter4dEXT
typedef void (APIENTRY *glNamedProgramLocalParameter4dvEXTFunc)(GLuint program, GLenum target, GLuint index, GLdouble* params);
extern glNamedProgramLocalParameter4dvEXTFunc _glNamedProgramLocalParameter4dvEXT;
#define glNamedProgramLocalParameter4dvEXT VE_ASSERT(_glNamedProgramLocalParameter4dvEXT);_glNamedProgramLocalParameter4dvEXT
typedef void (APIENTRY *glNamedProgramLocalParameter4fEXTFunc)(GLuint program, GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
extern glNamedProgramLocalParameter4fEXTFunc _glNamedProgramLocalParameter4fEXT;
#define glNamedProgramLocalParameter4fEXT VE_ASSERT(_glNamedProgramLocalParameter4fEXT);_glNamedProgramLocalParameter4fEXT
typedef void (APIENTRY *glNamedProgramLocalParameter4fvEXTFunc)(GLuint program, GLenum target, GLuint index, GLfloat* params);
extern glNamedProgramLocalParameter4fvEXTFunc _glNamedProgramLocalParameter4fvEXT;
#define glNamedProgramLocalParameter4fvEXT VE_ASSERT(_glNamedProgramLocalParameter4fvEXT);_glNamedProgramLocalParameter4fvEXT
typedef void (APIENTRY *glGetNamedProgramLocalParameterdvEXTFunc)(GLuint program, GLenum target, GLuint index, GLdouble* params);
extern glGetNamedProgramLocalParameterdvEXTFunc _glGetNamedProgramLocalParameterdvEXT;
#define glGetNamedProgramLocalParameterdvEXT VE_ASSERT(_glGetNamedProgramLocalParameterdvEXT);_glGetNamedProgramLocalParameterdvEXT
typedef void (APIENTRY *glGetNamedProgramLocalParameterfvEXTFunc)(GLuint program, GLenum target, GLuint index, GLfloat* params);
extern glGetNamedProgramLocalParameterfvEXTFunc _glGetNamedProgramLocalParameterfvEXT;
#define glGetNamedProgramLocalParameterfvEXT VE_ASSERT(_glGetNamedProgramLocalParameterfvEXT);_glGetNamedProgramLocalParameterfvEXT
typedef void (APIENTRY *glGetNamedProgramivEXTFunc)(GLuint program, GLenum target, GLenum pname, GLint* params);
extern glGetNamedProgramivEXTFunc _glGetNamedProgramivEXT;
#define glGetNamedProgramivEXT VE_ASSERT(_glGetNamedProgramivEXT);_glGetNamedProgramivEXT
typedef void (APIENTRY *glGetNamedProgramStringEXTFunc)(GLuint program, GLenum target, GLenum pname, GLvoid* string);
extern glGetNamedProgramStringEXTFunc _glGetNamedProgramStringEXT;
#define glGetNamedProgramStringEXT VE_ASSERT(_glGetNamedProgramStringEXT);_glGetNamedProgramStringEXT
typedef void (APIENTRY *glNamedProgramLocalParameters4fvEXTFunc)(GLuint program, GLenum target, GLuint index, GLsizei count, GLfloat* params);
extern glNamedProgramLocalParameters4fvEXTFunc _glNamedProgramLocalParameters4fvEXT;
#define glNamedProgramLocalParameters4fvEXT VE_ASSERT(_glNamedProgramLocalParameters4fvEXT);_glNamedProgramLocalParameters4fvEXT
typedef void (APIENTRY *glNamedProgramLocalParameterI4iEXTFunc)(GLuint program, GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);
extern glNamedProgramLocalParameterI4iEXTFunc _glNamedProgramLocalParameterI4iEXT;
#define glNamedProgramLocalParameterI4iEXT VE_ASSERT(_glNamedProgramLocalParameterI4iEXT);_glNamedProgramLocalParameterI4iEXT
typedef void (APIENTRY *glNamedProgramLocalParameterI4ivEXTFunc)(GLuint program, GLenum target, GLuint index, GLint* params);
extern glNamedProgramLocalParameterI4ivEXTFunc _glNamedProgramLocalParameterI4ivEXT;
#define glNamedProgramLocalParameterI4ivEXT VE_ASSERT(_glNamedProgramLocalParameterI4ivEXT);_glNamedProgramLocalParameterI4ivEXT
typedef void (APIENTRY *glNamedProgramLocalParametersI4ivEXTFunc)(GLuint program, GLenum target, GLuint index, GLsizei count, GLint* params);
extern glNamedProgramLocalParametersI4ivEXTFunc _glNamedProgramLocalParametersI4ivEXT;
#define glNamedProgramLocalParametersI4ivEXT VE_ASSERT(_glNamedProgramLocalParametersI4ivEXT);_glNamedProgramLocalParametersI4ivEXT
typedef void (APIENTRY *glNamedProgramLocalParameterI4uiEXTFunc)(GLuint program, GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
extern glNamedProgramLocalParameterI4uiEXTFunc _glNamedProgramLocalParameterI4uiEXT;
#define glNamedProgramLocalParameterI4uiEXT VE_ASSERT(_glNamedProgramLocalParameterI4uiEXT);_glNamedProgramLocalParameterI4uiEXT
typedef void (APIENTRY *glNamedProgramLocalParameterI4uivEXTFunc)(GLuint program, GLenum target, GLuint index, GLuint* params);
extern glNamedProgramLocalParameterI4uivEXTFunc _glNamedProgramLocalParameterI4uivEXT;
#define glNamedProgramLocalParameterI4uivEXT VE_ASSERT(_glNamedProgramLocalParameterI4uivEXT);_glNamedProgramLocalParameterI4uivEXT
typedef void (APIENTRY *glNamedProgramLocalParametersI4uivEXTFunc)(GLuint program, GLenum target, GLuint index, GLsizei count, GLuint* params);
extern glNamedProgramLocalParametersI4uivEXTFunc _glNamedProgramLocalParametersI4uivEXT;
#define glNamedProgramLocalParametersI4uivEXT VE_ASSERT(_glNamedProgramLocalParametersI4uivEXT);_glNamedProgramLocalParametersI4uivEXT
typedef void (APIENTRY *glGetNamedProgramLocalParameterIivEXTFunc)(GLuint program, GLenum target, GLuint index, GLint* params);
extern glGetNamedProgramLocalParameterIivEXTFunc _glGetNamedProgramLocalParameterIivEXT;
#define glGetNamedProgramLocalParameterIivEXT VE_ASSERT(_glGetNamedProgramLocalParameterIivEXT);_glGetNamedProgramLocalParameterIivEXT
typedef void (APIENTRY *glGetNamedProgramLocalParameterIuivEXTFunc)(GLuint program, GLenum target, GLuint index, GLuint* params);
extern glGetNamedProgramLocalParameterIuivEXTFunc _glGetNamedProgramLocalParameterIuivEXT;
#define glGetNamedProgramLocalParameterIuivEXT VE_ASSERT(_glGetNamedProgramLocalParameterIuivEXT);_glGetNamedProgramLocalParameterIuivEXT
typedef void (APIENTRY *glTextureParameterIivEXTFunc)(GLuint texture, GLenum target, GLenum pname, GLint* params);
extern glTextureParameterIivEXTFunc _glTextureParameterIivEXT;
#define glTextureParameterIivEXT VE_ASSERT(_glTextureParameterIivEXT);_glTextureParameterIivEXT
typedef void (APIENTRY *glTextureParameterIuivEXTFunc)(GLuint texture, GLenum target, GLenum pname, GLuint* params);
extern glTextureParameterIuivEXTFunc _glTextureParameterIuivEXT;
#define glTextureParameterIuivEXT VE_ASSERT(_glTextureParameterIuivEXT);_glTextureParameterIuivEXT
typedef void (APIENTRY *glGetTextureParameterIivEXTFunc)(GLuint texture, GLenum target, GLenum pname, GLint* params);
extern glGetTextureParameterIivEXTFunc _glGetTextureParameterIivEXT;
#define glGetTextureParameterIivEXT VE_ASSERT(_glGetTextureParameterIivEXT);_glGetTextureParameterIivEXT
typedef void (APIENTRY *glGetTextureParameterIuivEXTFunc)(GLuint texture, GLenum target, GLenum pname, GLuint* params);
extern glGetTextureParameterIuivEXTFunc _glGetTextureParameterIuivEXT;
#define glGetTextureParameterIuivEXT VE_ASSERT(_glGetTextureParameterIuivEXT);_glGetTextureParameterIuivEXT
typedef void (APIENTRY *glMultiTexParameterIivEXTFunc)(GLenum texunit, GLenum target, GLenum pname, GLint* params);
extern glMultiTexParameterIivEXTFunc _glMultiTexParameterIivEXT;
#define glMultiTexParameterIivEXT VE_ASSERT(_glMultiTexParameterIivEXT);_glMultiTexParameterIivEXT
typedef void (APIENTRY *glMultiTexParameterIuivEXTFunc)(GLenum texunit, GLenum target, GLenum pname, GLuint* params);
extern glMultiTexParameterIuivEXTFunc _glMultiTexParameterIuivEXT;
#define glMultiTexParameterIuivEXT VE_ASSERT(_glMultiTexParameterIuivEXT);_glMultiTexParameterIuivEXT
typedef void (APIENTRY *glGetMultiTexParameterIivEXTFunc)(GLenum texunit, GLenum target, GLenum pname, GLint* params);
extern glGetMultiTexParameterIivEXTFunc _glGetMultiTexParameterIivEXT;
#define glGetMultiTexParameterIivEXT VE_ASSERT(_glGetMultiTexParameterIivEXT);_glGetMultiTexParameterIivEXT
typedef void (APIENTRY *glGetMultiTexParameterIuivEXTFunc)(GLenum texunit, GLenum target, GLenum pname, GLuint* params);
extern glGetMultiTexParameterIuivEXTFunc _glGetMultiTexParameterIuivEXT;
#define glGetMultiTexParameterIuivEXT VE_ASSERT(_glGetMultiTexParameterIuivEXT);_glGetMultiTexParameterIuivEXT
typedef void (APIENTRY *glProgramUniform1fEXTFunc)(GLuint program, GLint location, GLfloat v0);
extern glProgramUniform1fEXTFunc _glProgramUniform1fEXT;
#define glProgramUniform1fEXT VE_ASSERT(_glProgramUniform1fEXT);_glProgramUniform1fEXT
typedef void (APIENTRY *glProgramUniform2fEXTFunc)(GLuint program, GLint location, GLfloat v0, GLfloat v1);
extern glProgramUniform2fEXTFunc _glProgramUniform2fEXT;
#define glProgramUniform2fEXT VE_ASSERT(_glProgramUniform2fEXT);_glProgramUniform2fEXT
typedef void (APIENTRY *glProgramUniform3fEXTFunc)(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
extern glProgramUniform3fEXTFunc _glProgramUniform3fEXT;
#define glProgramUniform3fEXT VE_ASSERT(_glProgramUniform3fEXT);_glProgramUniform3fEXT
typedef void (APIENTRY *glProgramUniform4fEXTFunc)(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
extern glProgramUniform4fEXTFunc _glProgramUniform4fEXT;
#define glProgramUniform4fEXT VE_ASSERT(_glProgramUniform4fEXT);_glProgramUniform4fEXT
typedef void (APIENTRY *glProgramUniform1iEXTFunc)(GLuint program, GLint location, GLint v0);
extern glProgramUniform1iEXTFunc _glProgramUniform1iEXT;
#define glProgramUniform1iEXT VE_ASSERT(_glProgramUniform1iEXT);_glProgramUniform1iEXT
typedef void (APIENTRY *glProgramUniform2iEXTFunc)(GLuint program, GLint location, GLint v0, GLint v1);
extern glProgramUniform2iEXTFunc _glProgramUniform2iEXT;
#define glProgramUniform2iEXT VE_ASSERT(_glProgramUniform2iEXT);_glProgramUniform2iEXT
typedef void (APIENTRY *glProgramUniform3iEXTFunc)(GLuint program, GLint location, GLint v0, GLint v1, GLint v2);
extern glProgramUniform3iEXTFunc _glProgramUniform3iEXT;
#define glProgramUniform3iEXT VE_ASSERT(_glProgramUniform3iEXT);_glProgramUniform3iEXT
typedef void (APIENTRY *glProgramUniform4iEXTFunc)(GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
extern glProgramUniform4iEXTFunc _glProgramUniform4iEXT;
#define glProgramUniform4iEXT VE_ASSERT(_glProgramUniform4iEXT);_glProgramUniform4iEXT
typedef void (APIENTRY *glProgramUniform1fvEXTFunc)(GLuint program, GLint location, GLsizei count, GLfloat* value);
extern glProgramUniform1fvEXTFunc _glProgramUniform1fvEXT;
#define glProgramUniform1fvEXT VE_ASSERT(_glProgramUniform1fvEXT);_glProgramUniform1fvEXT
typedef void (APIENTRY *glProgramUniform2fvEXTFunc)(GLuint program, GLint location, GLsizei count, GLfloat* value);
extern glProgramUniform2fvEXTFunc _glProgramUniform2fvEXT;
#define glProgramUniform2fvEXT VE_ASSERT(_glProgramUniform2fvEXT);_glProgramUniform2fvEXT
typedef void (APIENTRY *glProgramUniform3fvEXTFunc)(GLuint program, GLint location, GLsizei count, GLfloat* value);
extern glProgramUniform3fvEXTFunc _glProgramUniform3fvEXT;
#define glProgramUniform3fvEXT VE_ASSERT(_glProgramUniform3fvEXT);_glProgramUniform3fvEXT
typedef void (APIENTRY *glProgramUniform4fvEXTFunc)(GLuint program, GLint location, GLsizei count, GLfloat* value);
extern glProgramUniform4fvEXTFunc _glProgramUniform4fvEXT;
#define glProgramUniform4fvEXT VE_ASSERT(_glProgramUniform4fvEXT);_glProgramUniform4fvEXT
typedef void (APIENTRY *glProgramUniform1ivEXTFunc)(GLuint program, GLint location, GLsizei count, GLint* value);
extern glProgramUniform1ivEXTFunc _glProgramUniform1ivEXT;
#define glProgramUniform1ivEXT VE_ASSERT(_glProgramUniform1ivEXT);_glProgramUniform1ivEXT
typedef void (APIENTRY *glProgramUniform2ivEXTFunc)(GLuint program, GLint location, GLsizei count, GLint* value);
extern glProgramUniform2ivEXTFunc _glProgramUniform2ivEXT;
#define glProgramUniform2ivEXT VE_ASSERT(_glProgramUniform2ivEXT);_glProgramUniform2ivEXT
typedef void (APIENTRY *glProgramUniform3ivEXTFunc)(GLuint program, GLint location, GLsizei count, GLint* value);
extern glProgramUniform3ivEXTFunc _glProgramUniform3ivEXT;
#define glProgramUniform3ivEXT VE_ASSERT(_glProgramUniform3ivEXT);_glProgramUniform3ivEXT
typedef void (APIENTRY *glProgramUniform4ivEXTFunc)(GLuint program, GLint location, GLsizei count, GLint* value);
extern glProgramUniform4ivEXTFunc _glProgramUniform4ivEXT;
#define glProgramUniform4ivEXT VE_ASSERT(_glProgramUniform4ivEXT);_glProgramUniform4ivEXT
typedef void (APIENTRY *glProgramUniformMatrix2fvEXTFunc)(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLfloat* value);
extern glProgramUniformMatrix2fvEXTFunc _glProgramUniformMatrix2fvEXT;
#define glProgramUniformMatrix2fvEXT VE_ASSERT(_glProgramUniformMatrix2fvEXT);_glProgramUniformMatrix2fvEXT
typedef void (APIENTRY *glProgramUniformMatrix3fvEXTFunc)(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLfloat* value);
extern glProgramUniformMatrix3fvEXTFunc _glProgramUniformMatrix3fvEXT;
#define glProgramUniformMatrix3fvEXT VE_ASSERT(_glProgramUniformMatrix3fvEXT);_glProgramUniformMatrix3fvEXT
typedef void (APIENTRY *glProgramUniformMatrix4fvEXTFunc)(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLfloat* value);
extern glProgramUniformMatrix4fvEXTFunc _glProgramUniformMatrix4fvEXT;
#define glProgramUniformMatrix4fvEXT VE_ASSERT(_glProgramUniformMatrix4fvEXT);_glProgramUniformMatrix4fvEXT
typedef void (APIENTRY *glProgramUniformMatrix2x3fvEXTFunc)(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLfloat* value);
extern glProgramUniformMatrix2x3fvEXTFunc _glProgramUniformMatrix2x3fvEXT;
#define glProgramUniformMatrix2x3fvEXT VE_ASSERT(_glProgramUniformMatrix2x3fvEXT);_glProgramUniformMatrix2x3fvEXT
typedef void (APIENTRY *glProgramUniformMatrix3x2fvEXTFunc)(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLfloat* value);
extern glProgramUniformMatrix3x2fvEXTFunc _glProgramUniformMatrix3x2fvEXT;
#define glProgramUniformMatrix3x2fvEXT VE_ASSERT(_glProgramUniformMatrix3x2fvEXT);_glProgramUniformMatrix3x2fvEXT
typedef void (APIENTRY *glProgramUniformMatrix2x4fvEXTFunc)(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLfloat* value);
extern glProgramUniformMatrix2x4fvEXTFunc _glProgramUniformMatrix2x4fvEXT;
#define glProgramUniformMatrix2x4fvEXT VE_ASSERT(_glProgramUniformMatrix2x4fvEXT);_glProgramUniformMatrix2x4fvEXT
typedef void (APIENTRY *glProgramUniformMatrix4x2fvEXTFunc)(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLfloat* value);
extern glProgramUniformMatrix4x2fvEXTFunc _glProgramUniformMatrix4x2fvEXT;
#define glProgramUniformMatrix4x2fvEXT VE_ASSERT(_glProgramUniformMatrix4x2fvEXT);_glProgramUniformMatrix4x2fvEXT
typedef void (APIENTRY *glProgramUniformMatrix3x4fvEXTFunc)(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLfloat* value);
extern glProgramUniformMatrix3x4fvEXTFunc _glProgramUniformMatrix3x4fvEXT;
#define glProgramUniformMatrix3x4fvEXT VE_ASSERT(_glProgramUniformMatrix3x4fvEXT);_glProgramUniformMatrix3x4fvEXT
typedef void (APIENTRY *glProgramUniformMatrix4x3fvEXTFunc)(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLfloat* value);
extern glProgramUniformMatrix4x3fvEXTFunc _glProgramUniformMatrix4x3fvEXT;
#define glProgramUniformMatrix4x3fvEXT VE_ASSERT(_glProgramUniformMatrix4x3fvEXT);_glProgramUniformMatrix4x3fvEXT
typedef void (APIENTRY *glProgramUniform1uiEXTFunc)(GLuint program, GLint location, GLuint v0);
extern glProgramUniform1uiEXTFunc _glProgramUniform1uiEXT;
#define glProgramUniform1uiEXT VE_ASSERT(_glProgramUniform1uiEXT);_glProgramUniform1uiEXT
typedef void (APIENTRY *glProgramUniform2uiEXTFunc)(GLuint program, GLint location, GLuint v0, GLuint v1);
extern glProgramUniform2uiEXTFunc _glProgramUniform2uiEXT;
#define glProgramUniform2uiEXT VE_ASSERT(_glProgramUniform2uiEXT);_glProgramUniform2uiEXT
typedef void (APIENTRY *glProgramUniform3uiEXTFunc)(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);
extern glProgramUniform3uiEXTFunc _glProgramUniform3uiEXT;
#define glProgramUniform3uiEXT VE_ASSERT(_glProgramUniform3uiEXT);_glProgramUniform3uiEXT
typedef void (APIENTRY *glProgramUniform4uiEXTFunc)(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
extern glProgramUniform4uiEXTFunc _glProgramUniform4uiEXT;
#define glProgramUniform4uiEXT VE_ASSERT(_glProgramUniform4uiEXT);_glProgramUniform4uiEXT
typedef void (APIENTRY *glProgramUniform1uivEXTFunc)(GLuint program, GLint location, GLsizei count, GLuint* value);
extern glProgramUniform1uivEXTFunc _glProgramUniform1uivEXT;
#define glProgramUniform1uivEXT VE_ASSERT(_glProgramUniform1uivEXT);_glProgramUniform1uivEXT
typedef void (APIENTRY *glProgramUniform2uivEXTFunc)(GLuint program, GLint location, GLsizei count, GLuint* value);
extern glProgramUniform2uivEXTFunc _glProgramUniform2uivEXT;
#define glProgramUniform2uivEXT VE_ASSERT(_glProgramUniform2uivEXT);_glProgramUniform2uivEXT
typedef void (APIENTRY *glProgramUniform3uivEXTFunc)(GLuint program, GLint location, GLsizei count, GLuint* value);
extern glProgramUniform3uivEXTFunc _glProgramUniform3uivEXT;
#define glProgramUniform3uivEXT VE_ASSERT(_glProgramUniform3uivEXT);_glProgramUniform3uivEXT
typedef void (APIENTRY *glProgramUniform4uivEXTFunc)(GLuint program, GLint location, GLsizei count, GLuint* value);
extern glProgramUniform4uivEXTFunc _glProgramUniform4uivEXT;
#define glProgramUniform4uivEXT VE_ASSERT(_glProgramUniform4uivEXT);_glProgramUniform4uivEXT
typedef void (APIENTRY *glNamedBufferDataEXTFunc)(GLuint buffer, GLsizeiptr size, GLvoid* data, GLenum usage);
extern glNamedBufferDataEXTFunc _glNamedBufferDataEXT;
#define glNamedBufferDataEXT VE_ASSERT(_glNamedBufferDataEXT);_glNamedBufferDataEXT
typedef void (APIENTRY *glNamedBufferSubDataEXTFunc)(GLuint buffer, GLintptr offset, GLsizeiptr size, GLvoid* data);
extern glNamedBufferSubDataEXTFunc _glNamedBufferSubDataEXT;
#define glNamedBufferSubDataEXT VE_ASSERT(_glNamedBufferSubDataEXT);_glNamedBufferSubDataEXT
typedef GLvoid* (APIENTRY *glMapNamedBufferEXTFunc)(GLuint buffer, GLenum access);
extern glMapNamedBufferEXTFunc _glMapNamedBufferEXT;
#define glMapNamedBufferEXT _glMapNamedBufferEXT
typedef GLboolean (APIENTRY *glUnmapNamedBufferEXTFunc)(GLuint buffer);
extern glUnmapNamedBufferEXTFunc _glUnmapNamedBufferEXT;
#define glUnmapNamedBufferEXT _glUnmapNamedBufferEXT
typedef GLvoid* (APIENTRY *glMapNamedBufferRangeEXTFunc)(GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access);
extern glMapNamedBufferRangeEXTFunc _glMapNamedBufferRangeEXT;
#define glMapNamedBufferRangeEXT _glMapNamedBufferRangeEXT
typedef void (APIENTRY *glFlushMappedNamedBufferRangeEXTFunc)(GLuint buffer, GLintptr offset, GLsizeiptr length);
extern glFlushMappedNamedBufferRangeEXTFunc _glFlushMappedNamedBufferRangeEXT;
#define glFlushMappedNamedBufferRangeEXT VE_ASSERT(_glFlushMappedNamedBufferRangeEXT);_glFlushMappedNamedBufferRangeEXT
typedef void (APIENTRY *glNamedCopyBufferSubDataEXTFunc)(GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
extern glNamedCopyBufferSubDataEXTFunc _glNamedCopyBufferSubDataEXT;
#define glNamedCopyBufferSubDataEXT VE_ASSERT(_glNamedCopyBufferSubDataEXT);_glNamedCopyBufferSubDataEXT
typedef void (APIENTRY *glGetNamedBufferParameterivEXTFunc)(GLuint buffer, GLenum pname, GLint* params);
extern glGetNamedBufferParameterivEXTFunc _glGetNamedBufferParameterivEXT;
#define glGetNamedBufferParameterivEXT VE_ASSERT(_glGetNamedBufferParameterivEXT);_glGetNamedBufferParameterivEXT
typedef void (APIENTRY *glGetNamedBufferPointervEXTFunc)(GLuint buffer, GLenum pname, GLvoid** params);
extern glGetNamedBufferPointervEXTFunc _glGetNamedBufferPointervEXT;
#define glGetNamedBufferPointervEXT VE_ASSERT(_glGetNamedBufferPointervEXT);_glGetNamedBufferPointervEXT
typedef void (APIENTRY *glGetNamedBufferSubDataEXTFunc)(GLuint buffer, GLintptr offset, GLsizeiptr size, GLvoid* data);
extern glGetNamedBufferSubDataEXTFunc _glGetNamedBufferSubDataEXT;
#define glGetNamedBufferSubDataEXT VE_ASSERT(_glGetNamedBufferSubDataEXT);_glGetNamedBufferSubDataEXT
typedef void (APIENTRY *glTextureBufferEXTFunc)(GLuint texture, GLenum target, GLenum internalformat, GLuint buffer);
extern glTextureBufferEXTFunc _glTextureBufferEXT;
#define glTextureBufferEXT VE_ASSERT(_glTextureBufferEXT);_glTextureBufferEXT
typedef void (APIENTRY *glMultiTexBufferEXTFunc)(GLenum texunit, GLenum target, GLenum internalformat, GLuint buffer);
extern glMultiTexBufferEXTFunc _glMultiTexBufferEXT;
#define glMultiTexBufferEXT VE_ASSERT(_glMultiTexBufferEXT);_glMultiTexBufferEXT
typedef void (APIENTRY *glNamedRenderbufferStorageEXTFunc)(GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height);
extern glNamedRenderbufferStorageEXTFunc _glNamedRenderbufferStorageEXT;
#define glNamedRenderbufferStorageEXT VE_ASSERT(_glNamedRenderbufferStorageEXT);_glNamedRenderbufferStorageEXT
typedef void (APIENTRY *glGetNamedRenderbufferParameterivEXTFunc)(GLuint renderbuffer, GLenum pname, GLint* params);
extern glGetNamedRenderbufferParameterivEXTFunc _glGetNamedRenderbufferParameterivEXT;
#define glGetNamedRenderbufferParameterivEXT VE_ASSERT(_glGetNamedRenderbufferParameterivEXT);_glGetNamedRenderbufferParameterivEXT
typedef GLenum (APIENTRY *glCheckNamedFramebufferStatusEXTFunc)(GLuint framebuffer, GLenum target);
extern glCheckNamedFramebufferStatusEXTFunc _glCheckNamedFramebufferStatusEXT;
#define glCheckNamedFramebufferStatusEXT _glCheckNamedFramebufferStatusEXT
typedef void (APIENTRY *glNamedFramebufferTexture1DEXTFunc)(GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
extern glNamedFramebufferTexture1DEXTFunc _glNamedFramebufferTexture1DEXT;
#define glNamedFramebufferTexture1DEXT VE_ASSERT(_glNamedFramebufferTexture1DEXT);_glNamedFramebufferTexture1DEXT
typedef void (APIENTRY *glNamedFramebufferTexture2DEXTFunc)(GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
extern glNamedFramebufferTexture2DEXTFunc _glNamedFramebufferTexture2DEXT;
#define glNamedFramebufferTexture2DEXT VE_ASSERT(_glNamedFramebufferTexture2DEXT);_glNamedFramebufferTexture2DEXT
typedef void (APIENTRY *glNamedFramebufferTexture3DEXTFunc)(GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
extern glNamedFramebufferTexture3DEXTFunc _glNamedFramebufferTexture3DEXT;
#define glNamedFramebufferTexture3DEXT VE_ASSERT(_glNamedFramebufferTexture3DEXT);_glNamedFramebufferTexture3DEXT
typedef void (APIENTRY *glNamedFramebufferRenderbufferEXTFunc)(GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
extern glNamedFramebufferRenderbufferEXTFunc _glNamedFramebufferRenderbufferEXT;
#define glNamedFramebufferRenderbufferEXT VE_ASSERT(_glNamedFramebufferRenderbufferEXT);_glNamedFramebufferRenderbufferEXT
typedef void (APIENTRY *glGetNamedFramebufferAttachmentParameterivEXTFunc)(GLuint framebuffer, GLenum attachment, GLenum pname, GLint* params);
extern glGetNamedFramebufferAttachmentParameterivEXTFunc _glGetNamedFramebufferAttachmentParameterivEXT;
#define glGetNamedFramebufferAttachmentParameterivEXT VE_ASSERT(_glGetNamedFramebufferAttachmentParameterivEXT);_glGetNamedFramebufferAttachmentParameterivEXT
typedef void (APIENTRY *glGenerateTextureMipmapEXTFunc)(GLuint texture, GLenum target);
extern glGenerateTextureMipmapEXTFunc _glGenerateTextureMipmapEXT;
#define glGenerateTextureMipmapEXT VE_ASSERT(_glGenerateTextureMipmapEXT);_glGenerateTextureMipmapEXT
typedef void (APIENTRY *glGenerateMultiTexMipmapEXTFunc)(GLenum texunit, GLenum target);
extern glGenerateMultiTexMipmapEXTFunc _glGenerateMultiTexMipmapEXT;
#define glGenerateMultiTexMipmapEXT VE_ASSERT(_glGenerateMultiTexMipmapEXT);_glGenerateMultiTexMipmapEXT
typedef void (APIENTRY *glFramebufferDrawBufferEXTFunc)(GLuint framebuffer, GLenum mode);
extern glFramebufferDrawBufferEXTFunc _glFramebufferDrawBufferEXT;
#define glFramebufferDrawBufferEXT VE_ASSERT(_glFramebufferDrawBufferEXT);_glFramebufferDrawBufferEXT
typedef void (APIENTRY *glFramebufferDrawBuffersEXTFunc)(GLuint framebuffer, GLsizei n, GLenum* bufs);
extern glFramebufferDrawBuffersEXTFunc _glFramebufferDrawBuffersEXT;
#define glFramebufferDrawBuffersEXT VE_ASSERT(_glFramebufferDrawBuffersEXT);_glFramebufferDrawBuffersEXT
typedef void (APIENTRY *glFramebufferReadBufferEXTFunc)(GLuint framebuffer, GLenum mode);
extern glFramebufferReadBufferEXTFunc _glFramebufferReadBufferEXT;
#define glFramebufferReadBufferEXT VE_ASSERT(_glFramebufferReadBufferEXT);_glFramebufferReadBufferEXT
typedef void (APIENTRY *glGetFramebufferParameterivEXTFunc)(GLuint framebuffer, GLenum pname, GLint* params);
extern glGetFramebufferParameterivEXTFunc _glGetFramebufferParameterivEXT;
#define glGetFramebufferParameterivEXT VE_ASSERT(_glGetFramebufferParameterivEXT);_glGetFramebufferParameterivEXT
typedef void (APIENTRY *glNamedRenderbufferStorageMultisampleEXTFunc)(GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
extern glNamedRenderbufferStorageMultisampleEXTFunc _glNamedRenderbufferStorageMultisampleEXT;
#define glNamedRenderbufferStorageMultisampleEXT VE_ASSERT(_glNamedRenderbufferStorageMultisampleEXT);_glNamedRenderbufferStorageMultisampleEXT
typedef void (APIENTRY *glNamedRenderbufferStorageMultisampleCoverageEXTFunc)(GLuint renderbuffer, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height);
extern glNamedRenderbufferStorageMultisampleCoverageEXTFunc _glNamedRenderbufferStorageMultisampleCoverageEXT;
#define glNamedRenderbufferStorageMultisampleCoverageEXT VE_ASSERT(_glNamedRenderbufferStorageMultisampleCoverageEXT);_glNamedRenderbufferStorageMultisampleCoverageEXT
typedef void (APIENTRY *glNamedFramebufferTextureEXTFunc)(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level);
extern glNamedFramebufferTextureEXTFunc _glNamedFramebufferTextureEXT;
#define glNamedFramebufferTextureEXT VE_ASSERT(_glNamedFramebufferTextureEXT);_glNamedFramebufferTextureEXT
typedef void (APIENTRY *glNamedFramebufferTextureLayerEXTFunc)(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer);
extern glNamedFramebufferTextureLayerEXTFunc _glNamedFramebufferTextureLayerEXT;
#define glNamedFramebufferTextureLayerEXT VE_ASSERT(_glNamedFramebufferTextureLayerEXT);_glNamedFramebufferTextureLayerEXT
typedef void (APIENTRY *glNamedFramebufferTextureFaceEXTFunc)(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLenum face);
extern glNamedFramebufferTextureFaceEXTFunc _glNamedFramebufferTextureFaceEXT;
#define glNamedFramebufferTextureFaceEXT VE_ASSERT(_glNamedFramebufferTextureFaceEXT);_glNamedFramebufferTextureFaceEXT
typedef void (APIENTRY *glTextureRenderbufferEXTFunc)(GLuint texture, GLenum target, GLuint renderbuffer);
extern glTextureRenderbufferEXTFunc _glTextureRenderbufferEXT;
#define glTextureRenderbufferEXT VE_ASSERT(_glTextureRenderbufferEXT);_glTextureRenderbufferEXT
typedef void (APIENTRY *glMultiTexRenderbufferEXTFunc)(GLenum texunit, GLenum target, GLuint renderbuffer);
extern glMultiTexRenderbufferEXTFunc _glMultiTexRenderbufferEXT;
#define glMultiTexRenderbufferEXT VE_ASSERT(_glMultiTexRenderbufferEXT);_glMultiTexRenderbufferEXT
typedef void (APIENTRY *glProgramUniform1dEXTFunc)(GLuint program, GLint location, GLdouble x);
extern glProgramUniform1dEXTFunc _glProgramUniform1dEXT;
#define glProgramUniform1dEXT VE_ASSERT(_glProgramUniform1dEXT);_glProgramUniform1dEXT
typedef void (APIENTRY *glProgramUniform2dEXTFunc)(GLuint program, GLint location, GLdouble x, GLdouble y);
extern glProgramUniform2dEXTFunc _glProgramUniform2dEXT;
#define glProgramUniform2dEXT VE_ASSERT(_glProgramUniform2dEXT);_glProgramUniform2dEXT
typedef void (APIENTRY *glProgramUniform3dEXTFunc)(GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z);
extern glProgramUniform3dEXTFunc _glProgramUniform3dEXT;
#define glProgramUniform3dEXT VE_ASSERT(_glProgramUniform3dEXT);_glProgramUniform3dEXT
typedef void (APIENTRY *glProgramUniform4dEXTFunc)(GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
extern glProgramUniform4dEXTFunc _glProgramUniform4dEXT;
#define glProgramUniform4dEXT VE_ASSERT(_glProgramUniform4dEXT);_glProgramUniform4dEXT
typedef void (APIENTRY *glProgramUniform1dvEXTFunc)(GLuint program, GLint location, GLsizei count, GLdouble* value);
extern glProgramUniform1dvEXTFunc _glProgramUniform1dvEXT;
#define glProgramUniform1dvEXT VE_ASSERT(_glProgramUniform1dvEXT);_glProgramUniform1dvEXT
typedef void (APIENTRY *glProgramUniform2dvEXTFunc)(GLuint program, GLint location, GLsizei count, GLdouble* value);
extern glProgramUniform2dvEXTFunc _glProgramUniform2dvEXT;
#define glProgramUniform2dvEXT VE_ASSERT(_glProgramUniform2dvEXT);_glProgramUniform2dvEXT
typedef void (APIENTRY *glProgramUniform3dvEXTFunc)(GLuint program, GLint location, GLsizei count, GLdouble* value);
extern glProgramUniform3dvEXTFunc _glProgramUniform3dvEXT;
#define glProgramUniform3dvEXT VE_ASSERT(_glProgramUniform3dvEXT);_glProgramUniform3dvEXT
typedef void (APIENTRY *glProgramUniform4dvEXTFunc)(GLuint program, GLint location, GLsizei count, GLdouble* value);
extern glProgramUniform4dvEXTFunc _glProgramUniform4dvEXT;
#define glProgramUniform4dvEXT VE_ASSERT(_glProgramUniform4dvEXT);_glProgramUniform4dvEXT
typedef void (APIENTRY *glProgramUniformMatrix2dvEXTFunc)(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLdouble* value);
extern glProgramUniformMatrix2dvEXTFunc _glProgramUniformMatrix2dvEXT;
#define glProgramUniformMatrix2dvEXT VE_ASSERT(_glProgramUniformMatrix2dvEXT);_glProgramUniformMatrix2dvEXT
typedef void (APIENTRY *glProgramUniformMatrix3dvEXTFunc)(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLdouble* value);
extern glProgramUniformMatrix3dvEXTFunc _glProgramUniformMatrix3dvEXT;
#define glProgramUniformMatrix3dvEXT VE_ASSERT(_glProgramUniformMatrix3dvEXT);_glProgramUniformMatrix3dvEXT
typedef void (APIENTRY *glProgramUniformMatrix4dvEXTFunc)(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLdouble* value);
extern glProgramUniformMatrix4dvEXTFunc _glProgramUniformMatrix4dvEXT;
#define glProgramUniformMatrix4dvEXT VE_ASSERT(_glProgramUniformMatrix4dvEXT);_glProgramUniformMatrix4dvEXT
typedef void (APIENTRY *glProgramUniformMatrix2x3dvEXTFunc)(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLdouble* value);
extern glProgramUniformMatrix2x3dvEXTFunc _glProgramUniformMatrix2x3dvEXT;
#define glProgramUniformMatrix2x3dvEXT VE_ASSERT(_glProgramUniformMatrix2x3dvEXT);_glProgramUniformMatrix2x3dvEXT
typedef void (APIENTRY *glProgramUniformMatrix2x4dvEXTFunc)(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLdouble* value);
extern glProgramUniformMatrix2x4dvEXTFunc _glProgramUniformMatrix2x4dvEXT;
#define glProgramUniformMatrix2x4dvEXT VE_ASSERT(_glProgramUniformMatrix2x4dvEXT);_glProgramUniformMatrix2x4dvEXT
typedef void (APIENTRY *glProgramUniformMatrix3x2dvEXTFunc)(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLdouble* value);
extern glProgramUniformMatrix3x2dvEXTFunc _glProgramUniformMatrix3x2dvEXT;
#define glProgramUniformMatrix3x2dvEXT VE_ASSERT(_glProgramUniformMatrix3x2dvEXT);_glProgramUniformMatrix3x2dvEXT
typedef void (APIENTRY *glProgramUniformMatrix3x4dvEXTFunc)(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLdouble* value);
extern glProgramUniformMatrix3x4dvEXTFunc _glProgramUniformMatrix3x4dvEXT;
#define glProgramUniformMatrix3x4dvEXT VE_ASSERT(_glProgramUniformMatrix3x4dvEXT);_glProgramUniformMatrix3x4dvEXT
typedef void (APIENTRY *glProgramUniformMatrix4x2dvEXTFunc)(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLdouble* value);
extern glProgramUniformMatrix4x2dvEXTFunc _glProgramUniformMatrix4x2dvEXT;
#define glProgramUniformMatrix4x2dvEXT VE_ASSERT(_glProgramUniformMatrix4x2dvEXT);_glProgramUniformMatrix4x2dvEXT
typedef void (APIENTRY *glProgramUniformMatrix4x3dvEXTFunc)(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLdouble* value);
extern glProgramUniformMatrix4x3dvEXTFunc _glProgramUniformMatrix4x3dvEXT;
#define glProgramUniformMatrix4x3dvEXT VE_ASSERT(_glProgramUniformMatrix4x3dvEXT);_glProgramUniformMatrix4x3dvEXT
typedef void (APIENTRY *glGetMultisamplefvNVFunc)(GLenum pname, GLuint index, GLfloat* val);
extern glGetMultisamplefvNVFunc _glGetMultisamplefvNV;
#define glGetMultisamplefvNV VE_ASSERT(_glGetMultisamplefvNV);_glGetMultisamplefvNV
typedef void (APIENTRY *glSampleMaskIndexedNVFunc)(GLuint index, GLbitfield mask);
extern glSampleMaskIndexedNVFunc _glSampleMaskIndexedNV;
#define glSampleMaskIndexedNV VE_ASSERT(_glSampleMaskIndexedNV);_glSampleMaskIndexedNV
typedef void (APIENTRY *glTexRenderbufferNVFunc)(GLenum target, GLuint renderbuffer);
extern glTexRenderbufferNVFunc _glTexRenderbufferNV;
#define glTexRenderbufferNV VE_ASSERT(_glTexRenderbufferNV);_glTexRenderbufferNV
typedef void (APIENTRY *glBindTransformFeedbackNVFunc)(GLenum target, GLuint id);
extern glBindTransformFeedbackNVFunc _glBindTransformFeedbackNV;
#define glBindTransformFeedbackNV VE_ASSERT(_glBindTransformFeedbackNV);_glBindTransformFeedbackNV
typedef void (APIENTRY *glDeleteTransformFeedbacksNVFunc)(GLsizei n, GLuint* ids);
extern glDeleteTransformFeedbacksNVFunc _glDeleteTransformFeedbacksNV;
#define glDeleteTransformFeedbacksNV VE_ASSERT(_glDeleteTransformFeedbacksNV);_glDeleteTransformFeedbacksNV
typedef void (APIENTRY *glGenTransformFeedbacksNVFunc)(GLsizei n, GLuint* ids);
extern glGenTransformFeedbacksNVFunc _glGenTransformFeedbacksNV;
#define glGenTransformFeedbacksNV VE_ASSERT(_glGenTransformFeedbacksNV);_glGenTransformFeedbacksNV
typedef GLboolean (APIENTRY *glIsTransformFeedbackNVFunc)(GLuint id);
extern glIsTransformFeedbackNVFunc _glIsTransformFeedbackNV;
#define glIsTransformFeedbackNV _glIsTransformFeedbackNV
typedef void (APIENTRY *glPauseTransformFeedbackNVFunc)();
extern glPauseTransformFeedbackNVFunc _glPauseTransformFeedbackNV;
#define glPauseTransformFeedbackNV VE_ASSERT(_glPauseTransformFeedbackNV);_glPauseTransformFeedbackNV
typedef void (APIENTRY *glResumeTransformFeedbackNVFunc)();
extern glResumeTransformFeedbackNVFunc _glResumeTransformFeedbackNV;
#define glResumeTransformFeedbackNV VE_ASSERT(_glResumeTransformFeedbackNV);_glResumeTransformFeedbackNV
typedef void (APIENTRY *glDrawTransformFeedbackNVFunc)(GLenum mode, GLuint id);
extern glDrawTransformFeedbackNVFunc _glDrawTransformFeedbackNV;
#define glDrawTransformFeedbackNV VE_ASSERT(_glDrawTransformFeedbackNV);_glDrawTransformFeedbackNV
typedef void (APIENTRY *glGetPerfMonitorGroupsAMDFunc)(GLint* numGroups, GLsizei groupsSize, GLuint* groups);
extern glGetPerfMonitorGroupsAMDFunc _glGetPerfMonitorGroupsAMD;
#define glGetPerfMonitorGroupsAMD VE_ASSERT(_glGetPerfMonitorGroupsAMD);_glGetPerfMonitorGroupsAMD
typedef void (APIENTRY *glGetPerfMonitorCountersAMDFunc)(GLuint group, GLint* numCounters, GLint* maxActiveCounters, GLsizei counterSize, GLuint* counters);
extern glGetPerfMonitorCountersAMDFunc _glGetPerfMonitorCountersAMD;
#define glGetPerfMonitorCountersAMD VE_ASSERT(_glGetPerfMonitorCountersAMD);_glGetPerfMonitorCountersAMD
typedef void (APIENTRY *glGetPerfMonitorGroupStringAMDFunc)(GLuint group, GLsizei bufSize, GLsizei* length, GLchar* groupString);
extern glGetPerfMonitorGroupStringAMDFunc _glGetPerfMonitorGroupStringAMD;
#define glGetPerfMonitorGroupStringAMD VE_ASSERT(_glGetPerfMonitorGroupStringAMD);_glGetPerfMonitorGroupStringAMD
typedef void (APIENTRY *glGetPerfMonitorCounterStringAMDFunc)(GLuint group, GLuint counter, GLsizei bufSize, GLsizei* length, GLchar* counterString);
extern glGetPerfMonitorCounterStringAMDFunc _glGetPerfMonitorCounterStringAMD;
#define glGetPerfMonitorCounterStringAMD VE_ASSERT(_glGetPerfMonitorCounterStringAMD);_glGetPerfMonitorCounterStringAMD
typedef void (APIENTRY *glGetPerfMonitorCounterInfoAMDFunc)(GLuint group, GLuint counter, GLenum pname, GLvoid* data);
extern glGetPerfMonitorCounterInfoAMDFunc _glGetPerfMonitorCounterInfoAMD;
#define glGetPerfMonitorCounterInfoAMD VE_ASSERT(_glGetPerfMonitorCounterInfoAMD);_glGetPerfMonitorCounterInfoAMD
typedef void (APIENTRY *glGenPerfMonitorsAMDFunc)(GLsizei n, GLuint* monitors);
extern glGenPerfMonitorsAMDFunc _glGenPerfMonitorsAMD;
#define glGenPerfMonitorsAMD VE_ASSERT(_glGenPerfMonitorsAMD);_glGenPerfMonitorsAMD
typedef void (APIENTRY *glDeletePerfMonitorsAMDFunc)(GLsizei n, GLuint* monitors);
extern glDeletePerfMonitorsAMDFunc _glDeletePerfMonitorsAMD;
#define glDeletePerfMonitorsAMD VE_ASSERT(_glDeletePerfMonitorsAMD);_glDeletePerfMonitorsAMD
typedef void (APIENTRY *glSelectPerfMonitorCountersAMDFunc)(GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint* counterList);
extern glSelectPerfMonitorCountersAMDFunc _glSelectPerfMonitorCountersAMD;
#define glSelectPerfMonitorCountersAMD VE_ASSERT(_glSelectPerfMonitorCountersAMD);_glSelectPerfMonitorCountersAMD
typedef void (APIENTRY *glBeginPerfMonitorAMDFunc)(GLuint monitor);
extern glBeginPerfMonitorAMDFunc _glBeginPerfMonitorAMD;
#define glBeginPerfMonitorAMD VE_ASSERT(_glBeginPerfMonitorAMD);_glBeginPerfMonitorAMD
typedef void (APIENTRY *glEndPerfMonitorAMDFunc)(GLuint monitor);
extern glEndPerfMonitorAMDFunc _glEndPerfMonitorAMD;
#define glEndPerfMonitorAMD VE_ASSERT(_glEndPerfMonitorAMD);_glEndPerfMonitorAMD
typedef void (APIENTRY *glGetPerfMonitorCounterDataAMDFunc)(GLuint monitor, GLenum pname, GLsizei dataSize, GLuint* data, GLint* bytesWritten);
extern glGetPerfMonitorCounterDataAMDFunc _glGetPerfMonitorCounterDataAMD;
#define glGetPerfMonitorCounterDataAMD VE_ASSERT(_glGetPerfMonitorCounterDataAMD);_glGetPerfMonitorCounterDataAMD
typedef void (APIENTRY *glTessellationFactorAMDFunc)(GLfloat factor);
extern glTessellationFactorAMDFunc _glTessellationFactorAMD;
#define glTessellationFactorAMD VE_ASSERT(_glTessellationFactorAMD);_glTessellationFactorAMD
typedef void (APIENTRY *glTessellationModeAMDFunc)(GLenum mode);
extern glTessellationModeAMDFunc _glTessellationModeAMD;
#define glTessellationModeAMD VE_ASSERT(_glTessellationModeAMD);_glTessellationModeAMD
typedef void (APIENTRY *glProvokingVertexEXTFunc)(GLenum mode);
extern glProvokingVertexEXTFunc _glProvokingVertexEXT;
#define glProvokingVertexEXT VE_ASSERT(_glProvokingVertexEXT);_glProvokingVertexEXT
typedef void (APIENTRY *glBlendFuncIndexedAMDFunc)(GLuint buf, GLenum src, GLenum dst);
extern glBlendFuncIndexedAMDFunc _glBlendFuncIndexedAMD;
#define glBlendFuncIndexedAMD VE_ASSERT(_glBlendFuncIndexedAMD);_glBlendFuncIndexedAMD
typedef void (APIENTRY *glBlendFuncSeparateIndexedAMDFunc)(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
extern glBlendFuncSeparateIndexedAMDFunc _glBlendFuncSeparateIndexedAMD;
#define glBlendFuncSeparateIndexedAMD VE_ASSERT(_glBlendFuncSeparateIndexedAMD);_glBlendFuncSeparateIndexedAMD
typedef void (APIENTRY *glBlendEquationIndexedAMDFunc)(GLuint buf, GLenum mode);
extern glBlendEquationIndexedAMDFunc _glBlendEquationIndexedAMD;
#define glBlendEquationIndexedAMD VE_ASSERT(_glBlendEquationIndexedAMD);_glBlendEquationIndexedAMD
typedef void (APIENTRY *glBlendEquationSeparateIndexedAMDFunc)(GLuint buf, GLenum modeRGB, GLenum modeAlpha);
extern glBlendEquationSeparateIndexedAMDFunc _glBlendEquationSeparateIndexedAMD;
#define glBlendEquationSeparateIndexedAMD VE_ASSERT(_glBlendEquationSeparateIndexedAMD);_glBlendEquationSeparateIndexedAMD
typedef void (APIENTRY *glTextureRangeAPPLEFunc)(GLenum target, GLsizei length, GLvoid* pointer);
extern glTextureRangeAPPLEFunc _glTextureRangeAPPLE;
#define glTextureRangeAPPLE VE_ASSERT(_glTextureRangeAPPLE);_glTextureRangeAPPLE
typedef void (APIENTRY *glGetTexParameterPointervAPPLEFunc)(GLenum target, GLenum pname, GLvoid** params);
extern glGetTexParameterPointervAPPLEFunc _glGetTexParameterPointervAPPLE;
#define glGetTexParameterPointervAPPLE VE_ASSERT(_glGetTexParameterPointervAPPLE);_glGetTexParameterPointervAPPLE
typedef void (APIENTRY *glEnableVertexAttribAPPLEFunc)(GLuint index, GLenum pname);
extern glEnableVertexAttribAPPLEFunc _glEnableVertexAttribAPPLE;
#define glEnableVertexAttribAPPLE VE_ASSERT(_glEnableVertexAttribAPPLE);_glEnableVertexAttribAPPLE
typedef void (APIENTRY *glDisableVertexAttribAPPLEFunc)(GLuint index, GLenum pname);
extern glDisableVertexAttribAPPLEFunc _glDisableVertexAttribAPPLE;
#define glDisableVertexAttribAPPLE VE_ASSERT(_glDisableVertexAttribAPPLE);_glDisableVertexAttribAPPLE
typedef GLboolean (APIENTRY *glIsVertexAttribEnabledAPPLEFunc)(GLuint index, GLenum pname);
extern glIsVertexAttribEnabledAPPLEFunc _glIsVertexAttribEnabledAPPLE;
#define glIsVertexAttribEnabledAPPLE _glIsVertexAttribEnabledAPPLE
typedef void (APIENTRY *glMapVertexAttrib1dAPPLEFunc)(GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint stride, GLint order, GLdouble* points);
extern glMapVertexAttrib1dAPPLEFunc _glMapVertexAttrib1dAPPLE;
#define glMapVertexAttrib1dAPPLE VE_ASSERT(_glMapVertexAttrib1dAPPLE);_glMapVertexAttrib1dAPPLE
typedef void (APIENTRY *glMapVertexAttrib1fAPPLEFunc)(GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint stride, GLint order, GLfloat* points);
extern glMapVertexAttrib1fAPPLEFunc _glMapVertexAttrib1fAPPLE;
#define glMapVertexAttrib1fAPPLE VE_ASSERT(_glMapVertexAttrib1fAPPLE);_glMapVertexAttrib1fAPPLE
typedef void (APIENTRY *glMapVertexAttrib2dAPPLEFunc)(GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, GLdouble* points);
extern glMapVertexAttrib2dAPPLEFunc _glMapVertexAttrib2dAPPLE;
#define glMapVertexAttrib2dAPPLE VE_ASSERT(_glMapVertexAttrib2dAPPLE);_glMapVertexAttrib2dAPPLE
typedef void (APIENTRY *glMapVertexAttrib2fAPPLEFunc)(GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, GLfloat* points);
extern glMapVertexAttrib2fAPPLEFunc _glMapVertexAttrib2fAPPLE;
#define glMapVertexAttrib2fAPPLE VE_ASSERT(_glMapVertexAttrib2fAPPLE);_glMapVertexAttrib2fAPPLE
typedef GLenum (APIENTRY *glObjectPurgeableAPPLEFunc)(GLenum objectType, GLuint name, GLenum option);
extern glObjectPurgeableAPPLEFunc _glObjectPurgeableAPPLE;
#define glObjectPurgeableAPPLE _glObjectPurgeableAPPLE
typedef GLenum (APIENTRY *glObjectUnpurgeableAPPLEFunc)(GLenum objectType, GLuint name, GLenum option);
extern glObjectUnpurgeableAPPLEFunc _glObjectUnpurgeableAPPLE;
#define glObjectUnpurgeableAPPLE _glObjectUnpurgeableAPPLE
typedef void (APIENTRY *glGetObjectParameterivAPPLEFunc)(GLenum objectType, GLuint name, GLenum pname, GLint* params);
extern glGetObjectParameterivAPPLEFunc _glGetObjectParameterivAPPLE;
#define glGetObjectParameterivAPPLE VE_ASSERT(_glGetObjectParameterivAPPLE);_glGetObjectParameterivAPPLE
typedef void (APIENTRY *glBeginVideoCaptureNVFunc)(GLuint video_capture_slot);
extern glBeginVideoCaptureNVFunc _glBeginVideoCaptureNV;
#define glBeginVideoCaptureNV VE_ASSERT(_glBeginVideoCaptureNV);_glBeginVideoCaptureNV
typedef void (APIENTRY *glBindVideoCaptureStreamBufferNVFunc)(GLuint video_capture_slot, GLuint stream, GLenum frame_region, GLintptrARB offset);
extern glBindVideoCaptureStreamBufferNVFunc _glBindVideoCaptureStreamBufferNV;
#define glBindVideoCaptureStreamBufferNV VE_ASSERT(_glBindVideoCaptureStreamBufferNV);_glBindVideoCaptureStreamBufferNV
typedef void (APIENTRY *glBindVideoCaptureStreamTextureNVFunc)(GLuint video_capture_slot, GLuint stream, GLenum frame_region, GLenum target, GLuint texture);
extern glBindVideoCaptureStreamTextureNVFunc _glBindVideoCaptureStreamTextureNV;
#define glBindVideoCaptureStreamTextureNV VE_ASSERT(_glBindVideoCaptureStreamTextureNV);_glBindVideoCaptureStreamTextureNV
typedef void (APIENTRY *glEndVideoCaptureNVFunc)(GLuint video_capture_slot);
extern glEndVideoCaptureNVFunc _glEndVideoCaptureNV;
#define glEndVideoCaptureNV VE_ASSERT(_glEndVideoCaptureNV);_glEndVideoCaptureNV
typedef void (APIENTRY *glGetVideoCaptureivNVFunc)(GLuint video_capture_slot, GLenum pname, GLint* params);
extern glGetVideoCaptureivNVFunc _glGetVideoCaptureivNV;
#define glGetVideoCaptureivNV VE_ASSERT(_glGetVideoCaptureivNV);_glGetVideoCaptureivNV
typedef void (APIENTRY *glGetVideoCaptureStreamivNVFunc)(GLuint video_capture_slot, GLuint stream, GLenum pname, GLint* params);
extern glGetVideoCaptureStreamivNVFunc _glGetVideoCaptureStreamivNV;
#define glGetVideoCaptureStreamivNV VE_ASSERT(_glGetVideoCaptureStreamivNV);_glGetVideoCaptureStreamivNV
typedef void (APIENTRY *glGetVideoCaptureStreamfvNVFunc)(GLuint video_capture_slot, GLuint stream, GLenum pname, GLfloat* params);
extern glGetVideoCaptureStreamfvNVFunc _glGetVideoCaptureStreamfvNV;
#define glGetVideoCaptureStreamfvNV VE_ASSERT(_glGetVideoCaptureStreamfvNV);_glGetVideoCaptureStreamfvNV
typedef void (APIENTRY *glGetVideoCaptureStreamdvNVFunc)(GLuint video_capture_slot, GLuint stream, GLenum pname, GLdouble* params);
extern glGetVideoCaptureStreamdvNVFunc _glGetVideoCaptureStreamdvNV;
#define glGetVideoCaptureStreamdvNV VE_ASSERT(_glGetVideoCaptureStreamdvNV);_glGetVideoCaptureStreamdvNV
typedef GLenum (APIENTRY *glVideoCaptureNVFunc)(GLuint video_capture_slot, GLuint* sequence_num, GLuint64EXT* capture_time);
extern glVideoCaptureNVFunc _glVideoCaptureNV;
#define glVideoCaptureNV _glVideoCaptureNV
typedef void (APIENTRY *glVideoCaptureStreamParameterivNVFunc)(GLuint video_capture_slot, GLuint stream, GLenum pname, GLint* params);
extern glVideoCaptureStreamParameterivNVFunc _glVideoCaptureStreamParameterivNV;
#define glVideoCaptureStreamParameterivNV VE_ASSERT(_glVideoCaptureStreamParameterivNV);_glVideoCaptureStreamParameterivNV
typedef void (APIENTRY *glVideoCaptureStreamParameterfvNVFunc)(GLuint video_capture_slot, GLuint stream, GLenum pname, GLfloat* params);
extern glVideoCaptureStreamParameterfvNVFunc _glVideoCaptureStreamParameterfvNV;
#define glVideoCaptureStreamParameterfvNV VE_ASSERT(_glVideoCaptureStreamParameterfvNV);_glVideoCaptureStreamParameterfvNV
typedef void (APIENTRY *glVideoCaptureStreamParameterdvNVFunc)(GLuint video_capture_slot, GLuint stream, GLenum pname, GLdouble* params);
extern glVideoCaptureStreamParameterdvNVFunc _glVideoCaptureStreamParameterdvNV;
#define glVideoCaptureStreamParameterdvNV VE_ASSERT(_glVideoCaptureStreamParameterdvNV);_glVideoCaptureStreamParameterdvNV
typedef void (APIENTRY *glCopyImageSubDataNVFunc)(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei width, GLsizei height, GLsizei depth);
extern glCopyImageSubDataNVFunc _glCopyImageSubDataNV;
#define glCopyImageSubDataNV VE_ASSERT(_glCopyImageSubDataNV);_glCopyImageSubDataNV
typedef void (APIENTRY *glUseShaderProgramEXTFunc)(GLenum type, GLuint program);
extern glUseShaderProgramEXTFunc _glUseShaderProgramEXT;
#define glUseShaderProgramEXT VE_ASSERT(_glUseShaderProgramEXT);_glUseShaderProgramEXT
typedef void (APIENTRY *glActiveProgramEXTFunc)(GLuint program);
extern glActiveProgramEXTFunc _glActiveProgramEXT;
#define glActiveProgramEXT VE_ASSERT(_glActiveProgramEXT);_glActiveProgramEXT
typedef GLuint (APIENTRY *glCreateShaderProgramEXTFunc)(GLenum type, GLchar* string);
extern glCreateShaderProgramEXTFunc _glCreateShaderProgramEXT;
#define glCreateShaderProgramEXT _glCreateShaderProgramEXT
typedef void (APIENTRY *glMakeBufferResidentNVFunc)(GLenum target, GLenum access);
extern glMakeBufferResidentNVFunc _glMakeBufferResidentNV;
#define glMakeBufferResidentNV VE_ASSERT(_glMakeBufferResidentNV);_glMakeBufferResidentNV
typedef void (APIENTRY *glMakeBufferNonResidentNVFunc)(GLenum target);
extern glMakeBufferNonResidentNVFunc _glMakeBufferNonResidentNV;
#define glMakeBufferNonResidentNV VE_ASSERT(_glMakeBufferNonResidentNV);_glMakeBufferNonResidentNV
typedef GLboolean (APIENTRY *glIsBufferResidentNVFunc)(GLenum target);
extern glIsBufferResidentNVFunc _glIsBufferResidentNV;
#define glIsBufferResidentNV _glIsBufferResidentNV
typedef void (APIENTRY *glMakeNamedBufferResidentNVFunc)(GLuint buffer, GLenum access);
extern glMakeNamedBufferResidentNVFunc _glMakeNamedBufferResidentNV;
#define glMakeNamedBufferResidentNV VE_ASSERT(_glMakeNamedBufferResidentNV);_glMakeNamedBufferResidentNV
typedef void (APIENTRY *glMakeNamedBufferNonResidentNVFunc)(GLuint buffer);
extern glMakeNamedBufferNonResidentNVFunc _glMakeNamedBufferNonResidentNV;
#define glMakeNamedBufferNonResidentNV VE_ASSERT(_glMakeNamedBufferNonResidentNV);_glMakeNamedBufferNonResidentNV
typedef GLboolean (APIENTRY *glIsNamedBufferResidentNVFunc)(GLuint buffer);
extern glIsNamedBufferResidentNVFunc _glIsNamedBufferResidentNV;
#define glIsNamedBufferResidentNV _glIsNamedBufferResidentNV
typedef void (APIENTRY *glGetBufferParameterui64vNVFunc)(GLenum target, GLenum pname, GLuint64EXT* params);
extern glGetBufferParameterui64vNVFunc _glGetBufferParameterui64vNV;
#define glGetBufferParameterui64vNV VE_ASSERT(_glGetBufferParameterui64vNV);_glGetBufferParameterui64vNV
typedef void (APIENTRY *glGetNamedBufferParameterui64vNVFunc)(GLuint buffer, GLenum pname, GLuint64EXT* params);
extern glGetNamedBufferParameterui64vNVFunc _glGetNamedBufferParameterui64vNV;
#define glGetNamedBufferParameterui64vNV VE_ASSERT(_glGetNamedBufferParameterui64vNV);_glGetNamedBufferParameterui64vNV
typedef void (APIENTRY *glGetIntegerui64vNVFunc)(GLenum value, GLuint64EXT result);
extern glGetIntegerui64vNVFunc _glGetIntegerui64vNV;
#define glGetIntegerui64vNV VE_ASSERT(_glGetIntegerui64vNV);_glGetIntegerui64vNV
typedef void (APIENTRY *glUniformui64NVFunc)(GLint location, GLuint64EXT value);
extern glUniformui64NVFunc _glUniformui64NV;
#define glUniformui64NV VE_ASSERT(_glUniformui64NV);_glUniformui64NV
typedef void (APIENTRY *glUniformui64vNVFunc)(GLint location, GLsizei count, GLuint64EXT* value);
extern glUniformui64vNVFunc _glUniformui64vNV;
#define glUniformui64vNV VE_ASSERT(_glUniformui64vNV);_glUniformui64vNV
typedef void (APIENTRY *glGetUniformui64vNVFunc)(GLuint program, GLint location, GLuint64EXT* params);
extern glGetUniformui64vNVFunc _glGetUniformui64vNV;
#define glGetUniformui64vNV VE_ASSERT(_glGetUniformui64vNV);_glGetUniformui64vNV
typedef void (APIENTRY *glProgramUniformui64NVFunc)(GLuint program, GLint location, GLuint64EXT value);
extern glProgramUniformui64NVFunc _glProgramUniformui64NV;
#define glProgramUniformui64NV VE_ASSERT(_glProgramUniformui64NV);_glProgramUniformui64NV
typedef void (APIENTRY *glProgramUniformui64vNVFunc)(GLuint program, GLint location, GLsizei count, GLuint64EXT* value);
extern glProgramUniformui64vNVFunc _glProgramUniformui64vNV;
#define glProgramUniformui64vNV VE_ASSERT(_glProgramUniformui64vNV);_glProgramUniformui64vNV
typedef void (APIENTRY *glBufferAddressRangeNVFunc)(GLenum pname, GLuint index, GLuint64EXT address, GLsizeiptr length);
extern glBufferAddressRangeNVFunc _glBufferAddressRangeNV;
#define glBufferAddressRangeNV VE_ASSERT(_glBufferAddressRangeNV);_glBufferAddressRangeNV
typedef void (APIENTRY *glVertexFormatNVFunc)(GLint size, GLenum type, GLsizei stride);
extern glVertexFormatNVFunc _glVertexFormatNV;
#define glVertexFormatNV VE_ASSERT(_glVertexFormatNV);_glVertexFormatNV
typedef void (APIENTRY *glNormalFormatNVFunc)(GLenum type, GLsizei stride);
extern glNormalFormatNVFunc _glNormalFormatNV;
#define glNormalFormatNV VE_ASSERT(_glNormalFormatNV);_glNormalFormatNV
typedef void (APIENTRY *glColorFormatNVFunc)(GLint size, GLenum type, GLsizei stride);
extern glColorFormatNVFunc _glColorFormatNV;
#define glColorFormatNV VE_ASSERT(_glColorFormatNV);_glColorFormatNV
typedef void (APIENTRY *glIndexFormatNVFunc)(GLenum type, GLsizei stride);
extern glIndexFormatNVFunc _glIndexFormatNV;
#define glIndexFormatNV VE_ASSERT(_glIndexFormatNV);_glIndexFormatNV
typedef void (APIENTRY *glTexCoordFormatNVFunc)(GLint size, GLenum type, GLsizei stride);
extern glTexCoordFormatNVFunc _glTexCoordFormatNV;
#define glTexCoordFormatNV VE_ASSERT(_glTexCoordFormatNV);_glTexCoordFormatNV
typedef void (APIENTRY *glEdgeFlagFormatNVFunc)(GLsizei stride);
extern glEdgeFlagFormatNVFunc _glEdgeFlagFormatNV;
#define glEdgeFlagFormatNV VE_ASSERT(_glEdgeFlagFormatNV);_glEdgeFlagFormatNV
typedef void (APIENTRY *glSecondaryColorFormatNVFunc)(GLint size, GLenum type, GLsizei stride);
extern glSecondaryColorFormatNVFunc _glSecondaryColorFormatNV;
#define glSecondaryColorFormatNV VE_ASSERT(_glSecondaryColorFormatNV);_glSecondaryColorFormatNV
typedef void (APIENTRY *glFogCoordFormatNVFunc)(GLenum type, GLsizei stride);
extern glFogCoordFormatNVFunc _glFogCoordFormatNV;
#define glFogCoordFormatNV VE_ASSERT(_glFogCoordFormatNV);_glFogCoordFormatNV
typedef void (APIENTRY *glVertexAttribFormatNVFunc)(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride);
extern glVertexAttribFormatNVFunc _glVertexAttribFormatNV;
#define glVertexAttribFormatNV VE_ASSERT(_glVertexAttribFormatNV);_glVertexAttribFormatNV
typedef void (APIENTRY *glVertexAttribIFormatNVFunc)(GLuint index, GLint size, GLenum type, GLsizei stride);
extern glVertexAttribIFormatNVFunc _glVertexAttribIFormatNV;
#define glVertexAttribIFormatNV VE_ASSERT(_glVertexAttribIFormatNV);_glVertexAttribIFormatNV
typedef void (APIENTRY *glGetIntegerui64i_vNVFunc)(GLenum value, GLuint index, GLuint64EXT result);
extern glGetIntegerui64i_vNVFunc _glGetIntegerui64i_vNV;
#define glGetIntegerui64i_vNV VE_ASSERT(_glGetIntegerui64i_vNV);_glGetIntegerui64i_vNV
typedef void (APIENTRY *glTextureBarrierNVFunc)();
extern glTextureBarrierNVFunc _glTextureBarrierNV;
#define glTextureBarrierNV VE_ASSERT(_glTextureBarrierNV);_glTextureBarrierNV
typedef void (APIENTRY *glBindImageTextureEXTFunc)(GLuint index, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLint format);
extern glBindImageTextureEXTFunc _glBindImageTextureEXT;
#define glBindImageTextureEXT VE_ASSERT(_glBindImageTextureEXT);_glBindImageTextureEXT
typedef void (APIENTRY *glMemoryBarrierEXTFunc)(GLbitfield barriers);
extern glMemoryBarrierEXTFunc _glMemoryBarrierEXT;
#define glMemoryBarrierEXT VE_ASSERT(_glMemoryBarrierEXT);_glMemoryBarrierEXT
typedef void (APIENTRY *glVertexAttribL1dEXTFunc)(GLuint index, GLdouble x);
extern glVertexAttribL1dEXTFunc _glVertexAttribL1dEXT;
#define glVertexAttribL1dEXT VE_ASSERT(_glVertexAttribL1dEXT);_glVertexAttribL1dEXT
typedef void (APIENTRY *glVertexAttribL2dEXTFunc)(GLuint index, GLdouble x, GLdouble y);
extern glVertexAttribL2dEXTFunc _glVertexAttribL2dEXT;
#define glVertexAttribL2dEXT VE_ASSERT(_glVertexAttribL2dEXT);_glVertexAttribL2dEXT
typedef void (APIENTRY *glVertexAttribL3dEXTFunc)(GLuint index, GLdouble x, GLdouble y, GLdouble z);
extern glVertexAttribL3dEXTFunc _glVertexAttribL3dEXT;
#define glVertexAttribL3dEXT VE_ASSERT(_glVertexAttribL3dEXT);_glVertexAttribL3dEXT
typedef void (APIENTRY *glVertexAttribL4dEXTFunc)(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
extern glVertexAttribL4dEXTFunc _glVertexAttribL4dEXT;
#define glVertexAttribL4dEXT VE_ASSERT(_glVertexAttribL4dEXT);_glVertexAttribL4dEXT
typedef void (APIENTRY *glVertexAttribL1dvEXTFunc)(GLuint index, GLdouble* v);
extern glVertexAttribL1dvEXTFunc _glVertexAttribL1dvEXT;
#define glVertexAttribL1dvEXT VE_ASSERT(_glVertexAttribL1dvEXT);_glVertexAttribL1dvEXT
typedef void (APIENTRY *glVertexAttribL2dvEXTFunc)(GLuint index, GLdouble* v);
extern glVertexAttribL2dvEXTFunc _glVertexAttribL2dvEXT;
#define glVertexAttribL2dvEXT VE_ASSERT(_glVertexAttribL2dvEXT);_glVertexAttribL2dvEXT
typedef void (APIENTRY *glVertexAttribL3dvEXTFunc)(GLuint index, GLdouble* v);
extern glVertexAttribL3dvEXTFunc _glVertexAttribL3dvEXT;
#define glVertexAttribL3dvEXT VE_ASSERT(_glVertexAttribL3dvEXT);_glVertexAttribL3dvEXT
typedef void (APIENTRY *glVertexAttribL4dvEXTFunc)(GLuint index, GLdouble* v);
extern glVertexAttribL4dvEXTFunc _glVertexAttribL4dvEXT;
#define glVertexAttribL4dvEXT VE_ASSERT(_glVertexAttribL4dvEXT);_glVertexAttribL4dvEXT
typedef void (APIENTRY *glVertexAttribLPointerEXTFunc)(GLuint index, GLint size, GLenum type, GLsizei stride, GLvoid* pointer);
extern glVertexAttribLPointerEXTFunc _glVertexAttribLPointerEXT;
#define glVertexAttribLPointerEXT VE_ASSERT(_glVertexAttribLPointerEXT);_glVertexAttribLPointerEXT
typedef void (APIENTRY *glGetVertexAttribLdvEXTFunc)(GLuint index, GLenum pname, GLdouble* params);
extern glGetVertexAttribLdvEXTFunc _glGetVertexAttribLdvEXT;
#define glGetVertexAttribLdvEXT VE_ASSERT(_glGetVertexAttribLdvEXT);_glGetVertexAttribLdvEXT
typedef void (APIENTRY *glVertexArrayVertexAttribLOffsetEXTFunc)(GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);
extern glVertexArrayVertexAttribLOffsetEXTFunc _glVertexArrayVertexAttribLOffsetEXT;
#define glVertexArrayVertexAttribLOffsetEXT VE_ASSERT(_glVertexArrayVertexAttribLOffsetEXT);_glVertexArrayVertexAttribLOffsetEXT
typedef void (APIENTRY *glProgramSubroutineParametersuivNVFunc)(GLenum target, GLsizei count, GLuint* params);
extern glProgramSubroutineParametersuivNVFunc _glProgramSubroutineParametersuivNV;
#define glProgramSubroutineParametersuivNV VE_ASSERT(_glProgramSubroutineParametersuivNV);_glProgramSubroutineParametersuivNV
typedef void (APIENTRY *glGetProgramSubroutineParameteruivNVFunc)(GLenum target, GLuint index, GLuint* param);
extern glGetProgramSubroutineParameteruivNVFunc _glGetProgramSubroutineParameteruivNV;
#define glGetProgramSubroutineParameteruivNV VE_ASSERT(_glGetProgramSubroutineParameteruivNV);_glGetProgramSubroutineParameteruivNV
typedef void (APIENTRY *glUniform1i64NVFunc)(GLint location, GLint64EXT x);
extern glUniform1i64NVFunc _glUniform1i64NV;
#define glUniform1i64NV VE_ASSERT(_glUniform1i64NV);_glUniform1i64NV
typedef void (APIENTRY *glUniform2i64NVFunc)(GLint location, GLint64EXT x, GLint64EXT y);
extern glUniform2i64NVFunc _glUniform2i64NV;
#define glUniform2i64NV VE_ASSERT(_glUniform2i64NV);_glUniform2i64NV
typedef void (APIENTRY *glUniform3i64NVFunc)(GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z);
extern glUniform3i64NVFunc _glUniform3i64NV;
#define glUniform3i64NV VE_ASSERT(_glUniform3i64NV);_glUniform3i64NV
typedef void (APIENTRY *glUniform4i64NVFunc)(GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);
extern glUniform4i64NVFunc _glUniform4i64NV;
#define glUniform4i64NV VE_ASSERT(_glUniform4i64NV);_glUniform4i64NV
typedef void (APIENTRY *glUniform1i64vNVFunc)(GLint location, GLsizei count, GLint64EXT* value);
extern glUniform1i64vNVFunc _glUniform1i64vNV;
#define glUniform1i64vNV VE_ASSERT(_glUniform1i64vNV);_glUniform1i64vNV
typedef void (APIENTRY *glUniform2i64vNVFunc)(GLint location, GLsizei count, GLint64EXT* value);
extern glUniform2i64vNVFunc _glUniform2i64vNV;
#define glUniform2i64vNV VE_ASSERT(_glUniform2i64vNV);_glUniform2i64vNV
typedef void (APIENTRY *glUniform3i64vNVFunc)(GLint location, GLsizei count, GLint64EXT* value);
extern glUniform3i64vNVFunc _glUniform3i64vNV;
#define glUniform3i64vNV VE_ASSERT(_glUniform3i64vNV);_glUniform3i64vNV
typedef void (APIENTRY *glUniform4i64vNVFunc)(GLint location, GLsizei count, GLint64EXT* value);
extern glUniform4i64vNVFunc _glUniform4i64vNV;
#define glUniform4i64vNV VE_ASSERT(_glUniform4i64vNV);_glUniform4i64vNV
typedef void (APIENTRY *glUniform1ui64NVFunc)(GLint location, GLuint64EXT x);
extern glUniform1ui64NVFunc _glUniform1ui64NV;
#define glUniform1ui64NV VE_ASSERT(_glUniform1ui64NV);_glUniform1ui64NV
typedef void (APIENTRY *glUniform2ui64NVFunc)(GLint location, GLuint64EXT x, GLuint64EXT y);
extern glUniform2ui64NVFunc _glUniform2ui64NV;
#define glUniform2ui64NV VE_ASSERT(_glUniform2ui64NV);_glUniform2ui64NV
typedef void (APIENTRY *glUniform3ui64NVFunc)(GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);
extern glUniform3ui64NVFunc _glUniform3ui64NV;
#define glUniform3ui64NV VE_ASSERT(_glUniform3ui64NV);_glUniform3ui64NV
typedef void (APIENTRY *glUniform4ui64NVFunc)(GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);
extern glUniform4ui64NVFunc _glUniform4ui64NV;
#define glUniform4ui64NV VE_ASSERT(_glUniform4ui64NV);_glUniform4ui64NV
typedef void (APIENTRY *glUniform1ui64vNVFunc)(GLint location, GLsizei count, GLuint64EXT* value);
extern glUniform1ui64vNVFunc _glUniform1ui64vNV;
#define glUniform1ui64vNV VE_ASSERT(_glUniform1ui64vNV);_glUniform1ui64vNV
typedef void (APIENTRY *glUniform2ui64vNVFunc)(GLint location, GLsizei count, GLuint64EXT* value);
extern glUniform2ui64vNVFunc _glUniform2ui64vNV;
#define glUniform2ui64vNV VE_ASSERT(_glUniform2ui64vNV);_glUniform2ui64vNV
typedef void (APIENTRY *glUniform3ui64vNVFunc)(GLint location, GLsizei count, GLuint64EXT* value);
extern glUniform3ui64vNVFunc _glUniform3ui64vNV;
#define glUniform3ui64vNV VE_ASSERT(_glUniform3ui64vNV);_glUniform3ui64vNV
typedef void (APIENTRY *glUniform4ui64vNVFunc)(GLint location, GLsizei count, GLuint64EXT* value);
extern glUniform4ui64vNVFunc _glUniform4ui64vNV;
#define glUniform4ui64vNV VE_ASSERT(_glUniform4ui64vNV);_glUniform4ui64vNV
typedef void (APIENTRY *glGetUniformi64vNVFunc)(GLuint program, GLint location, GLint64EXT* params);
extern glGetUniformi64vNVFunc _glGetUniformi64vNV;
#define glGetUniformi64vNV VE_ASSERT(_glGetUniformi64vNV);_glGetUniformi64vNV
typedef void (APIENTRY *glProgramUniform1i64NVFunc)(GLuint program, GLint location, GLint64EXT x);
extern glProgramUniform1i64NVFunc _glProgramUniform1i64NV;
#define glProgramUniform1i64NV VE_ASSERT(_glProgramUniform1i64NV);_glProgramUniform1i64NV
typedef void (APIENTRY *glProgramUniform2i64NVFunc)(GLuint program, GLint location, GLint64EXT x, GLint64EXT y);
extern glProgramUniform2i64NVFunc _glProgramUniform2i64NV;
#define glProgramUniform2i64NV VE_ASSERT(_glProgramUniform2i64NV);_glProgramUniform2i64NV
typedef void (APIENTRY *glProgramUniform3i64NVFunc)(GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z);
extern glProgramUniform3i64NVFunc _glProgramUniform3i64NV;
#define glProgramUniform3i64NV VE_ASSERT(_glProgramUniform3i64NV);_glProgramUniform3i64NV
typedef void (APIENTRY *glProgramUniform4i64NVFunc)(GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);
extern glProgramUniform4i64NVFunc _glProgramUniform4i64NV;
#define glProgramUniform4i64NV VE_ASSERT(_glProgramUniform4i64NV);_glProgramUniform4i64NV
typedef void (APIENTRY *glProgramUniform1i64vNVFunc)(GLuint program, GLint location, GLsizei count, GLint64EXT* value);
extern glProgramUniform1i64vNVFunc _glProgramUniform1i64vNV;
#define glProgramUniform1i64vNV VE_ASSERT(_glProgramUniform1i64vNV);_glProgramUniform1i64vNV
typedef void (APIENTRY *glProgramUniform2i64vNVFunc)(GLuint program, GLint location, GLsizei count, GLint64EXT* value);
extern glProgramUniform2i64vNVFunc _glProgramUniform2i64vNV;
#define glProgramUniform2i64vNV VE_ASSERT(_glProgramUniform2i64vNV);_glProgramUniform2i64vNV
typedef void (APIENTRY *glProgramUniform3i64vNVFunc)(GLuint program, GLint location, GLsizei count, GLint64EXT* value);
extern glProgramUniform3i64vNVFunc _glProgramUniform3i64vNV;
#define glProgramUniform3i64vNV VE_ASSERT(_glProgramUniform3i64vNV);_glProgramUniform3i64vNV
typedef void (APIENTRY *glProgramUniform4i64vNVFunc)(GLuint program, GLint location, GLsizei count, GLint64EXT* value);
extern glProgramUniform4i64vNVFunc _glProgramUniform4i64vNV;
#define glProgramUniform4i64vNV VE_ASSERT(_glProgramUniform4i64vNV);_glProgramUniform4i64vNV
typedef void (APIENTRY *glProgramUniform1ui64NVFunc)(GLuint program, GLint location, GLuint64EXT x);
extern glProgramUniform1ui64NVFunc _glProgramUniform1ui64NV;
#define glProgramUniform1ui64NV VE_ASSERT(_glProgramUniform1ui64NV);_glProgramUniform1ui64NV
typedef void (APIENTRY *glProgramUniform2ui64NVFunc)(GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y);
extern glProgramUniform2ui64NVFunc _glProgramUniform2ui64NV;
#define glProgramUniform2ui64NV VE_ASSERT(_glProgramUniform2ui64NV);_glProgramUniform2ui64NV
typedef void (APIENTRY *glProgramUniform3ui64NVFunc)(GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);
extern glProgramUniform3ui64NVFunc _glProgramUniform3ui64NV;
#define glProgramUniform3ui64NV VE_ASSERT(_glProgramUniform3ui64NV);_glProgramUniform3ui64NV
typedef void (APIENTRY *glProgramUniform4ui64NVFunc)(GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);
extern glProgramUniform4ui64NVFunc _glProgramUniform4ui64NV;
#define glProgramUniform4ui64NV VE_ASSERT(_glProgramUniform4ui64NV);_glProgramUniform4ui64NV
typedef void (APIENTRY *glProgramUniform1ui64vNVFunc)(GLuint program, GLint location, GLsizei count, GLuint64EXT* value);
extern glProgramUniform1ui64vNVFunc _glProgramUniform1ui64vNV;
#define glProgramUniform1ui64vNV VE_ASSERT(_glProgramUniform1ui64vNV);_glProgramUniform1ui64vNV
typedef void (APIENTRY *glProgramUniform2ui64vNVFunc)(GLuint program, GLint location, GLsizei count, GLuint64EXT* value);
extern glProgramUniform2ui64vNVFunc _glProgramUniform2ui64vNV;
#define glProgramUniform2ui64vNV VE_ASSERT(_glProgramUniform2ui64vNV);_glProgramUniform2ui64vNV
typedef void (APIENTRY *glProgramUniform3ui64vNVFunc)(GLuint program, GLint location, GLsizei count, GLuint64EXT* value);
extern glProgramUniform3ui64vNVFunc _glProgramUniform3ui64vNV;
#define glProgramUniform3ui64vNV VE_ASSERT(_glProgramUniform3ui64vNV);_glProgramUniform3ui64vNV
typedef void (APIENTRY *glProgramUniform4ui64vNVFunc)(GLuint program, GLint location, GLsizei count, GLuint64EXT* value);
extern glProgramUniform4ui64vNVFunc _glProgramUniform4ui64vNV;
#define glProgramUniform4ui64vNV VE_ASSERT(_glProgramUniform4ui64vNV);_glProgramUniform4ui64vNV
typedef void (APIENTRY *glVertexAttribL1i64NVFunc)(GLuint index, GLint64EXT x);
extern glVertexAttribL1i64NVFunc _glVertexAttribL1i64NV;
#define glVertexAttribL1i64NV VE_ASSERT(_glVertexAttribL1i64NV);_glVertexAttribL1i64NV
typedef void (APIENTRY *glVertexAttribL2i64NVFunc)(GLuint index, GLint64EXT x, GLint64EXT y);
extern glVertexAttribL2i64NVFunc _glVertexAttribL2i64NV;
#define glVertexAttribL2i64NV VE_ASSERT(_glVertexAttribL2i64NV);_glVertexAttribL2i64NV
typedef void (APIENTRY *glVertexAttribL3i64NVFunc)(GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z);
extern glVertexAttribL3i64NVFunc _glVertexAttribL3i64NV;
#define glVertexAttribL3i64NV VE_ASSERT(_glVertexAttribL3i64NV);_glVertexAttribL3i64NV
typedef void (APIENTRY *glVertexAttribL4i64NVFunc)(GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);
extern glVertexAttribL4i64NVFunc _glVertexAttribL4i64NV;
#define glVertexAttribL4i64NV VE_ASSERT(_glVertexAttribL4i64NV);_glVertexAttribL4i64NV
typedef void (APIENTRY *glVertexAttribL1i64vNVFunc)(GLuint index, GLint64EXT* v);
extern glVertexAttribL1i64vNVFunc _glVertexAttribL1i64vNV;
#define glVertexAttribL1i64vNV VE_ASSERT(_glVertexAttribL1i64vNV);_glVertexAttribL1i64vNV
typedef void (APIENTRY *glVertexAttribL2i64vNVFunc)(GLuint index, GLint64EXT* v);
extern glVertexAttribL2i64vNVFunc _glVertexAttribL2i64vNV;
#define glVertexAttribL2i64vNV VE_ASSERT(_glVertexAttribL2i64vNV);_glVertexAttribL2i64vNV
typedef void (APIENTRY *glVertexAttribL3i64vNVFunc)(GLuint index, GLint64EXT* v);
extern glVertexAttribL3i64vNVFunc _glVertexAttribL3i64vNV;
#define glVertexAttribL3i64vNV VE_ASSERT(_glVertexAttribL3i64vNV);_glVertexAttribL3i64vNV
typedef void (APIENTRY *glVertexAttribL4i64vNVFunc)(GLuint index, GLint64EXT* v);
extern glVertexAttribL4i64vNVFunc _glVertexAttribL4i64vNV;
#define glVertexAttribL4i64vNV VE_ASSERT(_glVertexAttribL4i64vNV);_glVertexAttribL4i64vNV
typedef void (APIENTRY *glVertexAttribL1ui64NVFunc)(GLuint index, GLuint64EXT x);
extern glVertexAttribL1ui64NVFunc _glVertexAttribL1ui64NV;
#define glVertexAttribL1ui64NV VE_ASSERT(_glVertexAttribL1ui64NV);_glVertexAttribL1ui64NV
typedef void (APIENTRY *glVertexAttribL2ui64NVFunc)(GLuint index, GLuint64EXT x, GLuint64EXT y);
extern glVertexAttribL2ui64NVFunc _glVertexAttribL2ui64NV;
#define glVertexAttribL2ui64NV VE_ASSERT(_glVertexAttribL2ui64NV);_glVertexAttribL2ui64NV
typedef void (APIENTRY *glVertexAttribL3ui64NVFunc)(GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);
extern glVertexAttribL3ui64NVFunc _glVertexAttribL3ui64NV;
#define glVertexAttribL3ui64NV VE_ASSERT(_glVertexAttribL3ui64NV);_glVertexAttribL3ui64NV
typedef void (APIENTRY *glVertexAttribL4ui64NVFunc)(GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);
extern glVertexAttribL4ui64NVFunc _glVertexAttribL4ui64NV;
#define glVertexAttribL4ui64NV VE_ASSERT(_glVertexAttribL4ui64NV);_glVertexAttribL4ui64NV
typedef void (APIENTRY *glVertexAttribL1ui64vNVFunc)(GLuint index, GLuint64EXT* v);
extern glVertexAttribL1ui64vNVFunc _glVertexAttribL1ui64vNV;
#define glVertexAttribL1ui64vNV VE_ASSERT(_glVertexAttribL1ui64vNV);_glVertexAttribL1ui64vNV
typedef void (APIENTRY *glVertexAttribL2ui64vNVFunc)(GLuint index, GLuint64EXT* v);
extern glVertexAttribL2ui64vNVFunc _glVertexAttribL2ui64vNV;
#define glVertexAttribL2ui64vNV VE_ASSERT(_glVertexAttribL2ui64vNV);_glVertexAttribL2ui64vNV
typedef void (APIENTRY *glVertexAttribL3ui64vNVFunc)(GLuint index, GLuint64EXT* v);
extern glVertexAttribL3ui64vNVFunc _glVertexAttribL3ui64vNV;
#define glVertexAttribL3ui64vNV VE_ASSERT(_glVertexAttribL3ui64vNV);_glVertexAttribL3ui64vNV
typedef void (APIENTRY *glVertexAttribL4ui64vNVFunc)(GLuint index, GLuint64EXT* v);
extern glVertexAttribL4ui64vNVFunc _glVertexAttribL4ui64vNV;
#define glVertexAttribL4ui64vNV VE_ASSERT(_glVertexAttribL4ui64vNV);_glVertexAttribL4ui64vNV
typedef void (APIENTRY *glGetVertexAttribLi64vNVFunc)(GLuint index, GLenum pname, GLint64EXT* params);
extern glGetVertexAttribLi64vNVFunc _glGetVertexAttribLi64vNV;
#define glGetVertexAttribLi64vNV VE_ASSERT(_glGetVertexAttribLi64vNV);_glGetVertexAttribLi64vNV
typedef void (APIENTRY *glGetVertexAttribLui64vNVFunc)(GLuint index, GLenum pname, GLuint64EXT* params);
extern glGetVertexAttribLui64vNVFunc _glGetVertexAttribLui64vNV;
#define glGetVertexAttribLui64vNV VE_ASSERT(_glGetVertexAttribLui64vNV);_glGetVertexAttribLui64vNV
typedef void (APIENTRY *glVertexAttribLFormatNVFunc)(GLuint index, GLint size, GLenum type, GLsizei stride);
extern glVertexAttribLFormatNVFunc _glVertexAttribLFormatNV;
#define glVertexAttribLFormatNV VE_ASSERT(_glVertexAttribLFormatNV);_glVertexAttribLFormatNV
typedef void (APIENTRY *glGenNamesAMDFunc)(GLenum identifier, GLuint num, GLuint* names);
extern glGenNamesAMDFunc _glGenNamesAMD;
#define glGenNamesAMD VE_ASSERT(_glGenNamesAMD);_glGenNamesAMD
typedef void (APIENTRY *glDeleteNamesAMDFunc)(GLenum identifier, GLuint num, GLuint* names);
extern glDeleteNamesAMDFunc _glDeleteNamesAMD;
#define glDeleteNamesAMD VE_ASSERT(_glDeleteNamesAMD);_glDeleteNamesAMD
typedef GLboolean (APIENTRY *glIsNameAMDFunc)(GLenum identifier, GLuint name);
extern glIsNameAMDFunc _glIsNameAMD;
#define glIsNameAMD _glIsNameAMD
typedef void (APIENTRY *glDebugMessageEnableAMDFunc)(GLenum category, GLenum severity, GLsizei count, GLuint* ids, GLboolean enabled);
extern glDebugMessageEnableAMDFunc _glDebugMessageEnableAMD;
#define glDebugMessageEnableAMD VE_ASSERT(_glDebugMessageEnableAMD);_glDebugMessageEnableAMD
typedef void (APIENTRY *glDebugMessageInsertAMDFunc)(GLenum category, GLenum severity, GLuint id, GLsizei length, GLchar* buf);
extern glDebugMessageInsertAMDFunc _glDebugMessageInsertAMD;
#define glDebugMessageInsertAMD VE_ASSERT(_glDebugMessageInsertAMD);_glDebugMessageInsertAMD
typedef void (APIENTRY *glDebugMessageCallbackAMDFunc)(GLDEBUGPROCAMD callback, GLvoid* userParam);
extern glDebugMessageCallbackAMDFunc _glDebugMessageCallbackAMD;
#define glDebugMessageCallbackAMD VE_ASSERT(_glDebugMessageCallbackAMD);_glDebugMessageCallbackAMD
typedef GLuint (APIENTRY *glGetDebugMessageLogAMDFunc)(GLuint count, GLsizei bufsize, GLenum* categories, GLuint* severities, GLuint* ids, GLsizei* lengths, GLchar* message);
extern glGetDebugMessageLogAMDFunc _glGetDebugMessageLogAMD;
#define glGetDebugMessageLogAMD _glGetDebugMessageLogAMD
typedef void (APIENTRY *glVDPAUInitNVFunc)(GLvoid* vdpDevice, GLvoid* getProcAddress);
extern glVDPAUInitNVFunc _glVDPAUInitNV;
#define glVDPAUInitNV VE_ASSERT(_glVDPAUInitNV);_glVDPAUInitNV
typedef void (APIENTRY *glVDPAUFiniNVFunc)();
extern glVDPAUFiniNVFunc _glVDPAUFiniNV;
#define glVDPAUFiniNV VE_ASSERT(_glVDPAUFiniNV);_glVDPAUFiniNV
typedef GLvdpauSurfaceNV (APIENTRY *glVDPAURegisterVideoSurfaceNVFunc)(GLvoid* vdpSurface, GLenum target, GLsizei numTextureNames, GLuint* textureNames);
extern glVDPAURegisterVideoSurfaceNVFunc _glVDPAURegisterVideoSurfaceNV;
#define glVDPAURegisterVideoSurfaceNV _glVDPAURegisterVideoSurfaceNV
typedef GLvdpauSurfaceNV (APIENTRY *glVDPAURegisterOutputSurfaceNVFunc)(GLvoid* vdpSurface, GLenum target, GLsizei numTextureNames, GLuint* textureNames);
extern glVDPAURegisterOutputSurfaceNVFunc _glVDPAURegisterOutputSurfaceNV;
#define glVDPAURegisterOutputSurfaceNV _glVDPAURegisterOutputSurfaceNV
typedef void (APIENTRY *glVDPAUIsSurfaceNVFunc)(GLvdpauSurfaceNV surface);
extern glVDPAUIsSurfaceNVFunc _glVDPAUIsSurfaceNV;
#define glVDPAUIsSurfaceNV VE_ASSERT(_glVDPAUIsSurfaceNV);_glVDPAUIsSurfaceNV
typedef void (APIENTRY *glVDPAUUnregisterSurfaceNVFunc)(GLvdpauSurfaceNV surface);
extern glVDPAUUnregisterSurfaceNVFunc _glVDPAUUnregisterSurfaceNV;
#define glVDPAUUnregisterSurfaceNV VE_ASSERT(_glVDPAUUnregisterSurfaceNV);_glVDPAUUnregisterSurfaceNV
typedef void (APIENTRY *glVDPAUGetSurfaceivNVFunc)(GLvdpauSurfaceNV surface, GLenum pname, GLsizei bufSize, GLsizei* length, GLint* values);
extern glVDPAUGetSurfaceivNVFunc _glVDPAUGetSurfaceivNV;
#define glVDPAUGetSurfaceivNV VE_ASSERT(_glVDPAUGetSurfaceivNV);_glVDPAUGetSurfaceivNV
typedef void (APIENTRY *glVDPAUSurfaceAccessNVFunc)(GLvdpauSurfaceNV surface, GLenum access);
extern glVDPAUSurfaceAccessNVFunc _glVDPAUSurfaceAccessNV;
#define glVDPAUSurfaceAccessNV VE_ASSERT(_glVDPAUSurfaceAccessNV);_glVDPAUSurfaceAccessNV
typedef void (APIENTRY *glVDPAUMapSurfacesNVFunc)(GLsizei numSurfaces, GLvdpauSurfaceNV* surfaces);
extern glVDPAUMapSurfacesNVFunc _glVDPAUMapSurfacesNV;
#define glVDPAUMapSurfacesNV VE_ASSERT(_glVDPAUMapSurfacesNV);_glVDPAUMapSurfacesNV
typedef void (APIENTRY *glVDPAUUnmapSurfacesNVFunc)(GLsizei numSurface, GLvdpauSurfaceNV* surfaces);
extern glVDPAUUnmapSurfacesNVFunc _glVDPAUUnmapSurfacesNV;
#define glVDPAUUnmapSurfacesNV VE_ASSERT(_glVDPAUUnmapSurfacesNV);_glVDPAUUnmapSurfacesNV
typedef void (APIENTRY *glTexImage2DMultisampleCoverageNVFunc)(GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations);
extern glTexImage2DMultisampleCoverageNVFunc _glTexImage2DMultisampleCoverageNV;
#define glTexImage2DMultisampleCoverageNV VE_ASSERT(_glTexImage2DMultisampleCoverageNV);_glTexImage2DMultisampleCoverageNV
typedef void (APIENTRY *glTexImage3DMultisampleCoverageNVFunc)(GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations);
extern glTexImage3DMultisampleCoverageNVFunc _glTexImage3DMultisampleCoverageNV;
#define glTexImage3DMultisampleCoverageNV VE_ASSERT(_glTexImage3DMultisampleCoverageNV);_glTexImage3DMultisampleCoverageNV
typedef void (APIENTRY *glTextureImage2DMultisampleNVFunc)(GLuint texture, GLenum target, GLsizei samples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations);
extern glTextureImage2DMultisampleNVFunc _glTextureImage2DMultisampleNV;
#define glTextureImage2DMultisampleNV VE_ASSERT(_glTextureImage2DMultisampleNV);_glTextureImage2DMultisampleNV
typedef void (APIENTRY *glTextureImage3DMultisampleNVFunc)(GLuint texture, GLenum target, GLsizei samples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations);
extern glTextureImage3DMultisampleNVFunc _glTextureImage3DMultisampleNV;
#define glTextureImage3DMultisampleNV VE_ASSERT(_glTextureImage3DMultisampleNV);_glTextureImage3DMultisampleNV
typedef void (APIENTRY *glTextureImage2DMultisampleCoverageNVFunc)(GLuint texture, GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations);
extern glTextureImage2DMultisampleCoverageNVFunc _glTextureImage2DMultisampleCoverageNV;
#define glTextureImage2DMultisampleCoverageNV VE_ASSERT(_glTextureImage2DMultisampleCoverageNV);_glTextureImage2DMultisampleCoverageNV
typedef void (APIENTRY *glTextureImage3DMultisampleCoverageNVFunc)(GLuint texture, GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations);
extern glTextureImage3DMultisampleCoverageNVFunc _glTextureImage3DMultisampleCoverageNV;
#define glTextureImage3DMultisampleCoverageNV VE_ASSERT(_glTextureImage3DMultisampleCoverageNV);_glTextureImage3DMultisampleCoverageNV
typedef void (APIENTRY *glSetMultisamplefvAMDFunc)(GLenum pname, GLuint index, GLfloat* val);
extern glSetMultisamplefvAMDFunc _glSetMultisamplefvAMD;
#define glSetMultisamplefvAMD VE_ASSERT(_glSetMultisamplefvAMD);_glSetMultisamplefvAMD
typedef GLsync (APIENTRY *glImportSyncEXTFunc)(GLenum external_sync_type, GLintptr external_sync, GLbitfield flags);
extern glImportSyncEXTFunc _glImportSyncEXT;
#define glImportSyncEXT _glImportSyncEXT
typedef void (APIENTRY *glMultiDrawArraysIndirectAMDFunc)(GLenum mode, GLvoid* indirect, GLsizei primcount, GLsizei stride);
extern glMultiDrawArraysIndirectAMDFunc _glMultiDrawArraysIndirectAMD;
#define glMultiDrawArraysIndirectAMD VE_ASSERT(_glMultiDrawArraysIndirectAMD);_glMultiDrawArraysIndirectAMD
typedef void (APIENTRY *glMultiDrawElementsIndirectAMDFunc)(GLenum mode, GLenum type, GLvoid* indirect, GLsizei primcount, GLsizei stride);
extern glMultiDrawElementsIndirectAMDFunc _glMultiDrawElementsIndirectAMD;
#define glMultiDrawElementsIndirectAMD VE_ASSERT(_glMultiDrawElementsIndirectAMD);_glMultiDrawElementsIndirectAMD
typedef GLuint (APIENTRY *glGenPathsNVFunc)(GLsizei range);
extern glGenPathsNVFunc _glGenPathsNV;
#define glGenPathsNV _glGenPathsNV
typedef void (APIENTRY *glDeletePathsNVFunc)(GLuint path, GLsizei range);
extern glDeletePathsNVFunc _glDeletePathsNV;
#define glDeletePathsNV VE_ASSERT(_glDeletePathsNV);_glDeletePathsNV
typedef GLboolean (APIENTRY *glIsPathNVFunc)(GLuint path);
extern glIsPathNVFunc _glIsPathNV;
#define glIsPathNV _glIsPathNV
typedef void (APIENTRY *glPathCommandsNVFunc)(GLuint path, GLsizei numCommands, GLubyte* commands, GLsizei numCoords, GLenum coordType, GLvoid* coords);
extern glPathCommandsNVFunc _glPathCommandsNV;
#define glPathCommandsNV VE_ASSERT(_glPathCommandsNV);_glPathCommandsNV
typedef void (APIENTRY *glPathCoordsNVFunc)(GLuint path, GLsizei numCoords, GLenum coordType, GLvoid* coords);
extern glPathCoordsNVFunc _glPathCoordsNV;
#define glPathCoordsNV VE_ASSERT(_glPathCoordsNV);_glPathCoordsNV
typedef void (APIENTRY *glPathSubCommandsNVFunc)(GLuint path, GLsizei commandStart, GLsizei commandsToDelete, GLsizei numCommands, GLubyte* commands, GLsizei numCoords, GLenum coordType, GLvoid* coords);
extern glPathSubCommandsNVFunc _glPathSubCommandsNV;
#define glPathSubCommandsNV VE_ASSERT(_glPathSubCommandsNV);_glPathSubCommandsNV
typedef void (APIENTRY *glPathSubCoordsNVFunc)(GLuint path, GLsizei coordStart, GLsizei numCoords, GLenum coordType, GLvoid* coords);
extern glPathSubCoordsNVFunc _glPathSubCoordsNV;
#define glPathSubCoordsNV VE_ASSERT(_glPathSubCoordsNV);_glPathSubCoordsNV
typedef void (APIENTRY *glPathStringNVFunc)(GLuint path, GLenum format, GLsizei length, GLvoid* pathString);
extern glPathStringNVFunc _glPathStringNV;
#define glPathStringNV VE_ASSERT(_glPathStringNV);_glPathStringNV
typedef void (APIENTRY *glPathGlyphsNVFunc)(GLuint firstPathName, GLenum fontTarget, GLvoid* fontName, GLbitfield fontStyle, GLsizei numGlyphs, GLenum type, GLvoid* charcodes, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
extern glPathGlyphsNVFunc _glPathGlyphsNV;
#define glPathGlyphsNV VE_ASSERT(_glPathGlyphsNV);_glPathGlyphsNV
typedef void (APIENTRY *glPathGlyphRangeNVFunc)(GLuint firstPathName, GLenum fontTarget, GLvoid* fontName, GLbitfield fontStyle, GLuint firstGlyph, GLsizei numGlyphs, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
extern glPathGlyphRangeNVFunc _glPathGlyphRangeNV;
#define glPathGlyphRangeNV VE_ASSERT(_glPathGlyphRangeNV);_glPathGlyphRangeNV
typedef void (APIENTRY *glWeightPathsNVFunc)(GLuint resultPath, GLsizei numPaths, GLuint* paths, GLfloat* weights);
extern glWeightPathsNVFunc _glWeightPathsNV;
#define glWeightPathsNV VE_ASSERT(_glWeightPathsNV);_glWeightPathsNV
typedef void (APIENTRY *glCopyPathNVFunc)(GLuint resultPath, GLuint srcPath);
extern glCopyPathNVFunc _glCopyPathNV;
#define glCopyPathNV VE_ASSERT(_glCopyPathNV);_glCopyPathNV
typedef void (APIENTRY *glInterpolatePathsNVFunc)(GLuint resultPath, GLuint pathA, GLuint pathB, GLfloat weight);
extern glInterpolatePathsNVFunc _glInterpolatePathsNV;
#define glInterpolatePathsNV VE_ASSERT(_glInterpolatePathsNV);_glInterpolatePathsNV
typedef void (APIENTRY *glTransformPathNVFunc)(GLuint resultPath, GLuint srcPath, GLenum transformType, GLfloat* transformValues);
extern glTransformPathNVFunc _glTransformPathNV;
#define glTransformPathNV VE_ASSERT(_glTransformPathNV);_glTransformPathNV
typedef void (APIENTRY *glPathParameterivNVFunc)(GLuint path, GLenum pname, GLint* value);
extern glPathParameterivNVFunc _glPathParameterivNV;
#define glPathParameterivNV VE_ASSERT(_glPathParameterivNV);_glPathParameterivNV
typedef void (APIENTRY *glPathParameteriNVFunc)(GLuint path, GLenum pname, GLint value);
extern glPathParameteriNVFunc _glPathParameteriNV;
#define glPathParameteriNV VE_ASSERT(_glPathParameteriNV);_glPathParameteriNV
typedef void (APIENTRY *glPathParameterfvNVFunc)(GLuint path, GLenum pname, GLfloat* value);
extern glPathParameterfvNVFunc _glPathParameterfvNV;
#define glPathParameterfvNV VE_ASSERT(_glPathParameterfvNV);_glPathParameterfvNV
typedef void (APIENTRY *glPathParameterfNVFunc)(GLuint path, GLenum pname, GLfloat value);
extern glPathParameterfNVFunc _glPathParameterfNV;
#define glPathParameterfNV VE_ASSERT(_glPathParameterfNV);_glPathParameterfNV
typedef void (APIENTRY *glPathDashArrayNVFunc)(GLuint path, GLsizei dashCount, GLfloat* dashArray);
extern glPathDashArrayNVFunc _glPathDashArrayNV;
#define glPathDashArrayNV VE_ASSERT(_glPathDashArrayNV);_glPathDashArrayNV
typedef void (APIENTRY *glPathStencilFuncNVFunc)(GLenum func, GLint ref, GLuint mask);
extern glPathStencilFuncNVFunc _glPathStencilFuncNV;
#define glPathStencilFuncNV VE_ASSERT(_glPathStencilFuncNV);_glPathStencilFuncNV
typedef void (APIENTRY *glPathStencilDepthOffsetNVFunc)(GLfloat factor, GLfloat units);
extern glPathStencilDepthOffsetNVFunc _glPathStencilDepthOffsetNV;
#define glPathStencilDepthOffsetNV VE_ASSERT(_glPathStencilDepthOffsetNV);_glPathStencilDepthOffsetNV
typedef void (APIENTRY *glStencilFillPathNVFunc)(GLuint path, GLenum fillMode, GLuint mask);
extern glStencilFillPathNVFunc _glStencilFillPathNV;
#define glStencilFillPathNV VE_ASSERT(_glStencilFillPathNV);_glStencilFillPathNV
typedef void (APIENTRY *glStencilStrokePathNVFunc)(GLuint path, GLint reference, GLuint mask);
extern glStencilStrokePathNVFunc _glStencilStrokePathNV;
#define glStencilStrokePathNV VE_ASSERT(_glStencilStrokePathNV);_glStencilStrokePathNV
typedef void (APIENTRY *glStencilFillPathInstancedNVFunc)(GLsizei numPaths, GLenum pathNameType, GLvoid* paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum transformType, GLfloat* transformValues);
extern glStencilFillPathInstancedNVFunc _glStencilFillPathInstancedNV;
#define glStencilFillPathInstancedNV VE_ASSERT(_glStencilFillPathInstancedNV);_glStencilFillPathInstancedNV
typedef void (APIENTRY *glStencilStrokePathInstancedNVFunc)(GLsizei numPaths, GLenum pathNameType, GLvoid* paths, GLuint pathBase, GLint reference, GLuint mask, GLenum transformType, GLfloat* transformValues);
extern glStencilStrokePathInstancedNVFunc _glStencilStrokePathInstancedNV;
#define glStencilStrokePathInstancedNV VE_ASSERT(_glStencilStrokePathInstancedNV);_glStencilStrokePathInstancedNV
typedef void (APIENTRY *glPathCoverDepthFuncNVFunc)(GLenum func);
extern glPathCoverDepthFuncNVFunc _glPathCoverDepthFuncNV;
#define glPathCoverDepthFuncNV VE_ASSERT(_glPathCoverDepthFuncNV);_glPathCoverDepthFuncNV
typedef void (APIENTRY *glPathColorGenNVFunc)(GLenum color, GLenum genMode, GLenum colorFormat, GLfloat* coeffs);
extern glPathColorGenNVFunc _glPathColorGenNV;
#define glPathColorGenNV VE_ASSERT(_glPathColorGenNV);_glPathColorGenNV
typedef void (APIENTRY *glPathTexGenNVFunc)(GLenum texCoordSet, GLenum genMode, GLint components, GLfloat* coeffs);
extern glPathTexGenNVFunc _glPathTexGenNV;
#define glPathTexGenNV VE_ASSERT(_glPathTexGenNV);_glPathTexGenNV
typedef void (APIENTRY *glPathFogGenNVFunc)(GLenum genMode);
extern glPathFogGenNVFunc _glPathFogGenNV;
#define glPathFogGenNV VE_ASSERT(_glPathFogGenNV);_glPathFogGenNV
typedef void (APIENTRY *glCoverFillPathNVFunc)(GLuint path, GLenum coverMode);
extern glCoverFillPathNVFunc _glCoverFillPathNV;
#define glCoverFillPathNV VE_ASSERT(_glCoverFillPathNV);_glCoverFillPathNV
typedef void (APIENTRY *glCoverStrokePathNVFunc)(GLuint path, GLenum coverMode);
extern glCoverStrokePathNVFunc _glCoverStrokePathNV;
#define glCoverStrokePathNV VE_ASSERT(_glCoverStrokePathNV);_glCoverStrokePathNV
typedef void (APIENTRY *glCoverFillPathInstancedNVFunc)(GLsizei numPaths, GLenum pathNameType, GLvoid* paths, GLuint pathBase, GLenum coverMode, GLenum transformType, GLfloat* transformValues);
extern glCoverFillPathInstancedNVFunc _glCoverFillPathInstancedNV;
#define glCoverFillPathInstancedNV VE_ASSERT(_glCoverFillPathInstancedNV);_glCoverFillPathInstancedNV
typedef void (APIENTRY *glCoverStrokePathInstancedNVFunc)(GLsizei numPaths, GLenum pathNameType, GLvoid* paths, GLuint pathBase, GLenum coverMode, GLenum transformType, GLfloat* transformValues);
extern glCoverStrokePathInstancedNVFunc _glCoverStrokePathInstancedNV;
#define glCoverStrokePathInstancedNV VE_ASSERT(_glCoverStrokePathInstancedNV);_glCoverStrokePathInstancedNV
typedef void (APIENTRY *glGetPathParameterivNVFunc)(GLuint path, GLenum pname, GLint* value);
extern glGetPathParameterivNVFunc _glGetPathParameterivNV;
#define glGetPathParameterivNV VE_ASSERT(_glGetPathParameterivNV);_glGetPathParameterivNV
typedef void (APIENTRY *glGetPathParameterfvNVFunc)(GLuint path, GLenum pname, GLfloat* value);
extern glGetPathParameterfvNVFunc _glGetPathParameterfvNV;
#define glGetPathParameterfvNV VE_ASSERT(_glGetPathParameterfvNV);_glGetPathParameterfvNV
typedef void (APIENTRY *glGetPathCommandsNVFunc)(GLuint path, GLubyte* commands);
extern glGetPathCommandsNVFunc _glGetPathCommandsNV;
#define glGetPathCommandsNV VE_ASSERT(_glGetPathCommandsNV);_glGetPathCommandsNV
typedef void (APIENTRY *glGetPathCoordsNVFunc)(GLuint path, GLfloat* coords);
extern glGetPathCoordsNVFunc _glGetPathCoordsNV;
#define glGetPathCoordsNV VE_ASSERT(_glGetPathCoordsNV);_glGetPathCoordsNV
typedef void (APIENTRY *glGetPathDashArrayNVFunc)(GLuint path, GLfloat* dashArray);
extern glGetPathDashArrayNVFunc _glGetPathDashArrayNV;
#define glGetPathDashArrayNV VE_ASSERT(_glGetPathDashArrayNV);_glGetPathDashArrayNV
typedef void (APIENTRY *glGetPathMetricsNVFunc)(GLbitfield metricQueryMask, GLsizei numPaths, GLenum pathNameType, GLvoid* paths, GLuint pathBase, GLsizei stride, GLfloat* metrics);
extern glGetPathMetricsNVFunc _glGetPathMetricsNV;
#define glGetPathMetricsNV VE_ASSERT(_glGetPathMetricsNV);_glGetPathMetricsNV
typedef void (APIENTRY *glGetPathMetricRangeNVFunc)(GLbitfield metricQueryMask, GLuint firstPathName, GLsizei numPaths, GLsizei stride, GLfloat* metrics);
extern glGetPathMetricRangeNVFunc _glGetPathMetricRangeNV;
#define glGetPathMetricRangeNV VE_ASSERT(_glGetPathMetricRangeNV);_glGetPathMetricRangeNV
typedef void (APIENTRY *glGetPathSpacingNVFunc)(GLenum pathListMode, GLsizei numPaths, GLenum pathNameType, GLvoid* paths, GLuint pathBase, GLfloat advanceScale, GLfloat kerningScale, GLenum transformType, GLfloat* returnedSpacing);
extern glGetPathSpacingNVFunc _glGetPathSpacingNV;
#define glGetPathSpacingNV VE_ASSERT(_glGetPathSpacingNV);_glGetPathSpacingNV
typedef void (APIENTRY *glGetPathColorGenivNVFunc)(GLenum color, GLenum pname, GLint* value);
extern glGetPathColorGenivNVFunc _glGetPathColorGenivNV;
#define glGetPathColorGenivNV VE_ASSERT(_glGetPathColorGenivNV);_glGetPathColorGenivNV
typedef void (APIENTRY *glGetPathColorGenfvNVFunc)(GLenum color, GLenum pname, GLfloat* value);
extern glGetPathColorGenfvNVFunc _glGetPathColorGenfvNV;
#define glGetPathColorGenfvNV VE_ASSERT(_glGetPathColorGenfvNV);_glGetPathColorGenfvNV
typedef void (APIENTRY *glGetPathTexGenivNVFunc)(GLenum texCoordSet, GLenum pname, GLint* value);
extern glGetPathTexGenivNVFunc _glGetPathTexGenivNV;
#define glGetPathTexGenivNV VE_ASSERT(_glGetPathTexGenivNV);_glGetPathTexGenivNV
typedef void (APIENTRY *glGetPathTexGenfvNVFunc)(GLenum texCoordSet, GLenum pname, GLfloat* value);
extern glGetPathTexGenfvNVFunc _glGetPathTexGenfvNV;
#define glGetPathTexGenfvNV VE_ASSERT(_glGetPathTexGenfvNV);_glGetPathTexGenfvNV
typedef GLboolean (APIENTRY *glIsPointInFillPathNVFunc)(GLuint path, GLuint mask, GLfloat x, GLfloat y);
extern glIsPointInFillPathNVFunc _glIsPointInFillPathNV;
#define glIsPointInFillPathNV _glIsPointInFillPathNV
typedef GLboolean (APIENTRY *glIsPointInStrokePathNVFunc)(GLuint path, GLfloat x, GLfloat y);
extern glIsPointInStrokePathNVFunc _glIsPointInStrokePathNV;
#define glIsPointInStrokePathNV _glIsPointInStrokePathNV
typedef GLfloat (APIENTRY *glGetPathLengthNVFunc)(GLuint path, GLsizei startSegment, GLsizei numSegments);
extern glGetPathLengthNVFunc _glGetPathLengthNV;
#define glGetPathLengthNV _glGetPathLengthNV
typedef GLboolean (APIENTRY *glPointAlongPathNVFunc)(GLuint path, GLsizei startSegment, GLsizei numSegments, GLfloat distance, GLfloat* x, GLfloat* y, GLfloat* tangentX, GLfloat* tangentY);
extern glPointAlongPathNVFunc _glPointAlongPathNV;
#define glPointAlongPathNV _glPointAlongPathNV
typedef void (APIENTRY *glStencilOpValueAMDFunc)(GLenum face, GLuint value);
extern glStencilOpValueAMDFunc _glStencilOpValueAMD;
#define glStencilOpValueAMD VE_ASSERT(_glStencilOpValueAMD);_glStencilOpValueAMD
typedef GLuint64 (APIENTRY *glGetTextureHandleNVFunc)(GLuint texture);
extern glGetTextureHandleNVFunc _glGetTextureHandleNV;
#define glGetTextureHandleNV _glGetTextureHandleNV
typedef GLuint64 (APIENTRY *glGetTextureSamplerHandleNVFunc)(GLuint texture, GLuint sampler);
extern glGetTextureSamplerHandleNVFunc _glGetTextureSamplerHandleNV;
#define glGetTextureSamplerHandleNV _glGetTextureSamplerHandleNV
typedef void (APIENTRY *glMakeTextureHandleResidentNVFunc)(GLuint64 handle);
extern glMakeTextureHandleResidentNVFunc _glMakeTextureHandleResidentNV;
#define glMakeTextureHandleResidentNV VE_ASSERT(_glMakeTextureHandleResidentNV);_glMakeTextureHandleResidentNV
typedef void (APIENTRY *glMakeTextureHandleNonResidentNVFunc)(GLuint64 handle);
extern glMakeTextureHandleNonResidentNVFunc _glMakeTextureHandleNonResidentNV;
#define glMakeTextureHandleNonResidentNV VE_ASSERT(_glMakeTextureHandleNonResidentNV);_glMakeTextureHandleNonResidentNV
typedef GLuint64 (APIENTRY *glGetImageHandleNVFunc)(GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format);
extern glGetImageHandleNVFunc _glGetImageHandleNV;
#define glGetImageHandleNV _glGetImageHandleNV
typedef void (APIENTRY *glMakeImageHandleResidentNVFunc)(GLuint64 handle, GLenum access);
extern glMakeImageHandleResidentNVFunc _glMakeImageHandleResidentNV;
#define glMakeImageHandleResidentNV VE_ASSERT(_glMakeImageHandleResidentNV);_glMakeImageHandleResidentNV
typedef void (APIENTRY *glMakeImageHandleNonResidentNVFunc)(GLuint64 handle);
extern glMakeImageHandleNonResidentNVFunc _glMakeImageHandleNonResidentNV;
#define glMakeImageHandleNonResidentNV VE_ASSERT(_glMakeImageHandleNonResidentNV);_glMakeImageHandleNonResidentNV
typedef void (APIENTRY *glUniformHandleui64NVFunc)(GLint location, GLuint64 value);
extern glUniformHandleui64NVFunc _glUniformHandleui64NV;
#define glUniformHandleui64NV VE_ASSERT(_glUniformHandleui64NV);_glUniformHandleui64NV
typedef void (APIENTRY *glUniformHandleui64vNVFunc)(GLint location, GLsizei count, GLuint64* value);
extern glUniformHandleui64vNVFunc _glUniformHandleui64vNV;
#define glUniformHandleui64vNV VE_ASSERT(_glUniformHandleui64vNV);_glUniformHandleui64vNV
typedef void (APIENTRY *glProgramUniformHandleui64NVFunc)(GLuint program, GLint location, GLuint64 value);
extern glProgramUniformHandleui64NVFunc _glProgramUniformHandleui64NV;
#define glProgramUniformHandleui64NV VE_ASSERT(_glProgramUniformHandleui64NV);_glProgramUniformHandleui64NV
typedef void (APIENTRY *glProgramUniformHandleui64vNVFunc)(GLuint program, GLint location, GLsizei count, GLuint64* values);
extern glProgramUniformHandleui64vNVFunc _glProgramUniformHandleui64vNV;
#define glProgramUniformHandleui64vNV VE_ASSERT(_glProgramUniformHandleui64vNV);_glProgramUniformHandleui64vNV
typedef GLboolean (APIENTRY *glIsTextureHandleResidentNVFunc)(GLuint64 handle);
extern glIsTextureHandleResidentNVFunc _glIsTextureHandleResidentNV;
#define glIsTextureHandleResidentNV _glIsTextureHandleResidentNV
typedef GLboolean (APIENTRY *glIsImageHandleResidentNVFunc)(GLuint64 handle);
extern glIsImageHandleResidentNVFunc _glIsImageHandleResidentNV;
#define glIsImageHandleResidentNV _glIsImageHandleResidentNV
typedef void (APIENTRY *glTexStorageSparseAMDFunc)(GLenum target, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLsizei layers, GLbitfield flags);
extern glTexStorageSparseAMDFunc _glTexStorageSparseAMD;
#define glTexStorageSparseAMD VE_ASSERT(_glTexStorageSparseAMD);_glTexStorageSparseAMD
typedef void (APIENTRY *glTextureStorageSparseAMDFunc)(GLuint texture, GLenum target, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLsizei layers, GLbitfield flags);
extern glTextureStorageSparseAMDFunc _glTextureStorageSparseAMD;
#define glTextureStorageSparseAMD VE_ASSERT(_glTextureStorageSparseAMD);_glTextureStorageSparseAMD

void glFuncload();

void glFuncUnload();

}

#endif
