<?xml version="1.0" encoding="utf-8"?>
<CodeLite_Project Name="VenusEditor" InternalType="Library">
  <Plugins>
    <Plugin Name="qmake">
      <![CDATA[00020001N0005Debug0000000000000001N0007Release000000000000]]>
    </Plugin>
  </Plugins>
  <Description/>
  <Dependencies/>
  <VirtualDirectory Name="Source Files">
    <File Name="../../../Tools/VenusEditor/VenusEditor.cpp"/>
  </VirtualDirectory>
  <VirtualDirectory Name="Header Files">
    <File Name="../../../Tools/VenusEditor/VenusEditor.h"/>
  </VirtualDirectory>
  <Settings Type="Dynamic Library">
    <GlobalSettings>
      <Compiler Options="" C_Options="">
        <IncludePath Value="."/>
      </Compiler>
      <Linker Options="">
        <LibraryPath Value="."/>
      </Linker>
      <ResourceCompiler Options=""/>
    </GlobalSettings>
    <Configuration Name="Debug" CompilerType="gnu g++" DebuggerType="GNU gdb debugger" Type="Dynamic Library" BuildCmpWithGlobalSettings="append" BuildLnkWithGlobalSettings="append" BuildResWithGlobalSettings="append">
      <Compiler Options="-g;-Wall;-O0;$(VE_MACRO_OS);$(VE_MACRO_CPU);-DVE_DYNAMIC_LIB;-DVE_DEBUG;-DVE_MEM_DEBUG;-fno-exceptions;-fno-rtti" C_Options="-g;-Wall;-O0;$(VE_MACRO_OS);$(VE_MACRO_CPU);-DVE_DYNAMIC_LIB;-DVE_DEBUG;-DVE_MEM_DEBUG" Required="yes" PreCompiledHeader="" PCHInCommandLine="no" UseDifferentPCHFlags="no" PCHFlags="">
        <IncludePath Value="$(VENUS3D_PATH)/SDK/Include"/>
      </Compiler>
      <Linker Options="-Wl,--rpath=$(VENUS3D_PATH)/SDK/Linux/$(PlatformName)/$(Configuration)" Required="yes">
        <LibraryPath Value="$(VENUS3D_PATH)/SDK/Linux/$(PlatformName)/$(Configuration)"/>
        <Library Value="libVePower.so"/>
        <Library Value="libVeMain.so"/>
      </Linker>
      <ResourceCompiler Options="" Required="no"/>
      <General OutputFile="$(IntermediateDirectory)/lib$(ProjectName).so" IntermediateDirectory="../../../Binaries/Linux/$(PlatformName)/$(Configuration)" Command="" CommandArguments="" UseSeparateDebugArgs="no" DebugArguments="" WorkingDirectory="$(IntermediateDirectory)" PauseExecWhenProcTerminates="yes"/>
      <Environment EnvVarSetName="&lt;Use Defaults&gt;" DbgSetName="&lt;Use Defaults&gt;">
        <![CDATA[Configuration=Debug]]>
      </Environment>
      <Debugger IsRemote="no" RemoteHostName="" RemoteHostPort="" DebuggerPath="">
        <PostConnectCommands/>
        <StartupCommands/>
      </Debugger>
      <PreBuild/>
      <PostBuild>
        <Command Enabled="yes">sh ../CopyToolsToSDK.sh $(ProjectName) $(PlatformName) $(Configuration)</Command>
      </PostBuild>
      <CustomBuild Enabled="no">
        <RebuildCommand/>
        <CleanCommand/>
        <BuildCommand/>
        <PreprocessFileCommand/>
        <SingleFileCommand/>
        <MakefileGenerationCommand/>
        <ThirdPartyToolName/>
        <WorkingDirectory/>
      </CustomBuild>
      <AdditionalRules>
        <CustomPostBuild/>
        <CustomPreBuild/>
      </AdditionalRules>
      <Completion EnableCpp11="no">
        <ClangCmpFlagsC/>
        <ClangCmpFlags/>
        <ClangPP/>
        <SearchPaths/>
      </Completion>
    </Configuration>
    <Configuration Name="Release" CompilerType="gnu g++" DebuggerType="GNU gdb debugger" Type="Dynamic Library" BuildCmpWithGlobalSettings="append" BuildLnkWithGlobalSettings="append" BuildResWithGlobalSettings="append">
      <Compiler Options="-O2;-Wall;$(VE_MACRO_OS);$(VE_MACRO_CPU);-DVE_DYNAMIC_LIB;-DVE_RELEASE;-DVE_MEM_DEBUG;-fno-exceptions;-fno-rtti" C_Options="-O2;-Wall;$(VE_MACRO_OS);$(VE_MACRO_CPU);-DVE_DYNAMIC_LIB;-DVE_RELEASE;-DVE_MEM_DEBUG" Required="yes" PreCompiledHeader="" PCHInCommandLine="no" UseDifferentPCHFlags="no" PCHFlags="">
        <IncludePath Value="$(VENUS3D_PATH)/SDK/Include"/>
      </Compiler>
      <Linker Options="-O2 -Wl,--rpath=$(VENUS3D_PATH)/SDK/Linux/$(PlatformName)/$(Configuration)" Required="yes">
        <LibraryPath Value="$(VENUS3D_PATH)/SDK/Linux/$(PlatformName)/$(Configuration)"/>
        <Library Value="libVePower.so"/>
        <Library Value="libVeMain.so"/>
      </Linker>
      <ResourceCompiler Options="" Required="no"/>
      <General OutputFile="$(IntermediateDirectory)/lib$(ProjectName).so" IntermediateDirectory="../../../Binaries/Linux/$(PlatformName)/$(Configuration)" Command="" CommandArguments="" UseSeparateDebugArgs="no" DebugArguments="" WorkingDirectory="$(IntermediateDirectory)" PauseExecWhenProcTerminates="yes"/>
      <Environment EnvVarSetName="&lt;Use Defaults&gt;" DbgSetName="&lt;Use Defaults&gt;">
        <![CDATA[Configuration=Release]]>
      </Environment>
      <Debugger IsRemote="no" RemoteHostName="" RemoteHostPort="" DebuggerPath="">
        <PostConnectCommands/>
        <StartupCommands/>
      </Debugger>
      <PreBuild/>
      <PostBuild>
        <Command Enabled="yes">sh ../CopyToolsToSDK.sh $(ProjectName) $(PlatformName) $(Configuration)</Command>
      </PostBuild>
      <CustomBuild Enabled="no">
        <RebuildCommand/>
        <CleanCommand/>
        <BuildCommand/>
        <PreprocessFileCommand/>
        <SingleFileCommand/>
        <MakefileGenerationCommand/>
        <ThirdPartyToolName/>
        <WorkingDirectory/>
      </CustomBuild>
      <AdditionalRules>
        <CustomPostBuild/>
        <CustomPreBuild/>
      </AdditionalRules>
      <Completion EnableCpp11="no">
        <ClangCmpFlagsC/>
        <ClangCmpFlags/>
        <ClangPP/>
        <SearchPaths/>
      </Completion>
    </Configuration>
  </Settings>
</CodeLite_Project>
